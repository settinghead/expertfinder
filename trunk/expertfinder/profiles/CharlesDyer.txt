chuck dyer nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page dyer biography nbsp information contact information teaching research research projects graduate students professional activities computer vision group personal information department nbsp charles dyer professor computer sciences biostatistics medical informatics research interests computer vision medical image analysis image-based modeling rendering computer science maryland curriculum vitae biography charles dyer professor computer sciences professor biostatistics medical informatics wisconsin madison faculty served chair department computer sciences associate chair received degree computer science maryland degree computer science ucla degree mathematical sciences stanford worked field computer vision thirty years published technical papers research focused shape image representations computer vision prominent contributions topics quadtrees aspect graphs pyramid algorithms scene reconstruction voxel coloring view synthesis object recognition visual exploration heads wisconsin computer vision group dyer fellow institute electrical electronics engineers ieee fellow international association pattern recognition iapr awarded visiting fellowship exeter college oxford associate editor journal machine vision applications associate editor ieee transactions pattern analysis machine intelligence general co-chair computer vision pattern recognition conference program co-chair conference finally member alumni hall fame department computer science maryland nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
contact information charles dyer nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page dyer biography nbsp information contact information teaching research research projects graduate students professional activities computer vision group personal information department nbsp charles dyer professor computer sciences biostatistics medical informatics research interests computer vision medical image analysis image-based modeling rendering office hours fall tuesdays fridays appointment contact information mailing address department computer sciences wisconsin-madison west dayton street madison wisconsin usa office computer sciences building location e-mail dyer wisc telephone web wisc dyer nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
charles dyer teaching nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page dyer biography nbsp information contact information teaching research research projects graduate students professional activities computer vision group personal information department nbsp charles dyer professor computer sciences biostatistics medical informatics research interests computer vision medical image analysis image-based modeling rendering teaching recent courses taught introduction artificial intelligence computer vision science art overseas program florence winter advances science technology italian renaissance overseas program florence winter nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 

charles dyer research nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page dyer biography nbsp information contact information teaching research research projects graduate students professional activities computer vision group personal information department nbsp charles dyer professor computer sciences biostatistics medical informatics research interests computer vision medical image analysis image-based modeling rendering research projects face recognition nigel boston chuck dyer yu-hen students classification nuclear sclerosis slit-lamp photographs shaohua fan chuck dyer quantification correction iris color shaohua fan chuck dyer video-based face recognition guodong guo chuck dyer face expression recognition guodong guo chuck dyer markov information propagation texture synthesis guodong guo chuck dyer camera metric calibration screw-transform manifolds russell manning chuck dyer fast algorithm screw-transform manifold gallery video surveillance monitoring vsam chuck dyer russell manning andrew prock steve seitz scene reconstruction voxel coloring steve seitz chuck dyer dynamic voxel coloring view morphing steve seitz chuck dyer view synthesis image interpolation steve seitz chuck dyer exploring objects controlling point observation kyros kutulakos chuck dyer periodic cyclic motion analysis steve seitz chuck dyer image motion analysis animation control steve seitz chuck dyer vis-ad data visualization based lattices bill hibbard chuck dyer nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
charles dyer professional activities nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page dyer biography nbsp information contact information teaching research research projects graduate students professional activities computer vision group personal information department nbsp charles dyer professor computer sciences biostatistics medical informatics research interests computer vision medical image analysis image-based modeling rendering professional activities honors awards fellow institute electrical electronics engineers fellow international association pattern recognition visiting fellowship exeter college oxford paper award ieee computer vision pattern recognition conference research initiation award national science foundation department administration chair department computer sciences associate chair department computer sciences member finance committee department computer sciences professional societies fellow institute electrical electronics engineers fellow international association pattern recognition member association computing machinery editorial boards associate editor ieee transactions pattern analysis machine intelligence editorial board journal machine vision applications -date subject area editor journal parallel distributed computing professional committees member governing board international association pattern recognition iapr -date chair ieee computer society technical committee pattern analysis machine intelligence vice chair ieee computer society technical committee pattern analysis machine intelligence member conference steering committee ieee computer society technical committee pattern analysis machine intelligence member ieee pattern analysis machine intelligence advisory board member national science foundation advisory committee division information robotics intelligent systems chair member national science foundation review panels -date conference program committees program committee european conference computer vision program committee international conference image analysis processing program committee ieee workshop image video registration program committee european conference computer vision program committee international conference pattern recognition general co-chair computer vision pattern recognition conference program committee international conference intelligent robots systems program committee ieee international conference image processing program committee international conference image analysis processing program committee model-based imaging rendering analysis graphical effects program committee ieee workshop image video registration program committee vision modeling dynamic scenes workshop program committee ieee computer society bioinformatics conference program committee workshop video registration program committee workshop structure multiple images large-scale environments workshops chair computer vision pattern recognition conference program committee workshop multi-view modeling analysis visual scenes program committee international conference computer vision program committee international conference computer vision program committee asian conference computer vision program committee international conference robotics automation program co-chair computer vision pattern recognition conference program committee international conference image processing program committee ieee workshop computer vision program committee international symposium computer vision program committee international computer science conference program committee international conference pattern recognition computer vision image processing conference program co-chair ieee workshop applications computer vision program committee computer vision pattern recognition conference program committee spie conference applications artificial intelligence machine vision robotics program committee ieee workshop directions automated cad-based vision program committee international conference pattern recognition program chair workshop computer architecture pattern analysis machine intelligence program committee workshop computer architecture image database management nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
personal information charles dyer nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page dyer biography nbsp information contact information teaching research research projects graduate students professional activities computer vision group personal information department nbsp charles dyer professor computer sciences biostatistics medical informatics research interests computer vision medical image analysis image-based modeling rendering family photos quotes world place persistence talent common unsuccessful men talent genius un-rewarded genius proverb education world full educated derelicts persistence determination omnipotent calvin coolidge people run race fastest run guts punish exhausting pace end punish steve prefontaine actor double dan woods actor starred canadian series degrassi harrison ford actor starred indiana jones movies running achievements crazylegs prato italy half-marathon madison syttende mai boston marathon mile mile nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
charles dyer nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page dyer biography nbsp information contact information teaching research research projects graduate students professional activities computer vision group personal information department nbsp charles dyer professor computer sciences biostatistics medical informatics research interests computer vision medical image analysis image-based modeling rendering patch-based image correlation rapid filtering g-d guo dyer proc patches workshop abstract pdf bibtex text-to-picture synthesis system augmenting communication zhu goldberg eldawy dyer strock proc aaai integrated intelligence track abstract pdf bibtex segmentation elastographic images coarse-to-fine active contour model liu zagzebski varghese dyer techavipoo hall ultrasound medicine biology abstract pdf bibtex face cyclographs recognition g-d guo dyer computer sciences department technical report wisconsin madison march abstract pdf bibtex learning examples small sample case face expression recognition g-d guo dyer ieee trans systems man cybernetics part cybernetics abstract pdf bibtex linear combination representation outlier detection motion tracking g-d guo dyer zhang proc computer vision pattern recognition conf vol abstract pdf bibtex automated thermal coagulation segmentation three-dimensional elastographic imaging active contour model liu zagzebski varghese dyer techavipoo proc ieee ultrasonics symposium abstract pdf bibtex recognizing faces head rotation g-d guo dyer computer sciences department technical report wisconsin madison abstract pdf bibtex spatial resolution enhancement video images g-d guo dyer computer sciences department technical report wisconsin madison october abstract pdf bibtex automatic system classification nuclear sclerosis slit-lamp photographs fan dyer hubbard klein proc int conf medical image computing computer-assisted intervention miccai lecture notes computer science vol ellis peters eds springer berlin abstract pdf bibtex simultaneous feature selection classifier training linear programming case study face expression recognition g-d guo dyer proc computer vision pattern recognition conf vol abstract pdf bibtex quantification correction iris color fan dyer computer sciences department technical report wisconsin madison december abstract pdf bibtex research calibration minimization manning dyer computer sciences department technical report wisconsin madison february abstract postscript pdf bibtex screw-transform manifolds manning dyer computer sciences department technical report wisconsin madison april abstract postscript pdf bibtex stratified calibration screw-transform manifolds manning dyer proc european conf computer vision abstract postscript pdf bibtex markov information propagation texture synthesis g-d guo dyer computer sciences department technical report wisconsin madison october abstract pdf bibtex evaluation bayes large margin classifiers face expression recognition g-d guo dyer computer sciences department technical report wisconsin madison october abstract pdf bibtex observer motion estimation control optical flow liangyin dyer proc int conf image processing abstract postscript pdf bibtex metric calibration screw-transform manifolds manning dyer proc computer vision pattern recognition conf abstract postscript pdf bibtex affine calibration moving objects manning dyer proc int conf computer vision abstract postscript pdf bibtex versions volumetric scene reconstruction multiple views dyer foundations image understanding davis kluwer boston abstract postscript pdf bibtex perception-based shape modeling curvature shaping liangyin dyer proc int workshop visual form arcelli cordella sanniti baja eds lecture notes computer science springer-verlag abstract postscript pdf bibtex environment map morphing manning dyer computer sciences department technical report wisconsin madison december abstract postscript pdf bibtex affine calibration dynamic scenes manning dyer computer sciences department technical report wisconsin madison march abstract postscript pdf bibtex versions iccv dynamic view interpolation affine reconstruction manning dyer confluence computer vision computer graphics leonardis solina bajcsy eds kluwer dordrecht netherlands abstract postscript pdf bibtex interpolating view scene motion dynamic view morphing manning dyer proc computer vision pattern recognition conf abstract postscript pdf bibtex versions iuw photorealistic scene reconstruction voxel coloring seitz dyer int computer vision abstract postscript pdf bibtex versions cvpr iuw image-based visualization widely-separated views dyer proc image understanding workshop abstract postscript pdf bibtex real-time voxel coloring prock dyer proc image understanding workshop abstract postscript pdf bibtex interpolating view scene motion dynamic view morphing manning dyer proc image understanding workshop abstract postscript pdf bibtex versions cvpr dynamic view morphing manning dyer computer sciences department technical report wisconsin madison september abstract postscript pdf bibtex versions cvpr iuw direct computation differential invariants image contours shading l-y dyer proc int conf image processing abstract postscript pdf bibtex photorealistic scene reconstruction voxel coloring seitz dyer proc computer vision pattern recognition conf abstract postscript pdf bibtex versions ijcv iuw image-based scene rendering manipulation research wisconsin dyer proc image understanding workshop abstract postscript pdf bibtex view morphing uniquely predicting scene appearance basis images seitz dyer proc image understanding workshop abstract postscript pdf bibtex view-invariant analysis cyclic motion seitz dyer int computer vision abstract postscript pdf bibtex cyclic motion analysis period trace seitz dyer motion-based recognition shah jain eds kluwer boston abstract postscript pdf bibtex view morphing seitz dyer proc siggraph abstract postscript pdf bibtex image-based scene representation view morphing seitz dyer proc int conf pattern recognition vol track computer vision abstract postscript pdf bibtex shape recovery stationary surface contours controlled observer motion l-y dyer advances image understanding festschrift azriel rosenfeld ieee computer society press los alamitos abstract postscript pdf bibtex physically-valid view synthesis image interpolation seitz dyer proc workshop representation visual scenes abstract postscript pdf bibtex complete scene structure point correspondences seitz dyer proc int conf computer vision abstract postscript pdf bibtex recovering shape purposive viewpoint adjustment kutulakos dyer int computer vision abstract postscript pdf bibtex versions cvpr global surface reconstruction purposive control observer motion kutulakos dyer artificial intelligence abstract postscript pdf bibtex versions cvpr occluding contour detection affine invariants purposive viewpoint control kutulakos dyer proc computer vision pattern recognition conf abstract postscript pdf bibtex global surface reconstruction purposive control observer motion kutulakos dyer proc computer vision pattern recognition conf abstract postscript pdf bibtex versions building global object models purposive viewpoint control kutulakos seales dyer proc cad-based vision workshop abstract postscript pdf bibtex versions spie provable strategies vision-guided exploration dimensions kutulakos dyer lumelsky proc ieee int conf robotics automation abstract postscript pdf bibtex detecting irregularities cyclic motion seitz dyer proc workshop motion non-rigid articulated objects abstract postscript pdf bibtex affine invariant detection periodic motion seitz dyer proc computer vision pattern recognition conf abstract postscript pdf bibtex interactive visualization earth space science computations hibbard paul battaiola santek m-f voidrot-martinez dyer computer july abstract postscript pdf bibtex lattice model data display hibbard dyer paul proc 
visualization abstract postscript pdf bibtex global surface reconstruction purposive viewpoint adjustment kutulakos dyer proc computer vision pattern recognition conf abstract postscript pdf bibtex vision-guided exploration step general motion planning dimensions kutulakos lumelsky dyer proc ieee int conf robotics automation abstract postscript pdf bibtex computing spatiotemporal relations dynamic perceptual organization allmen dyer computer vision graphics image processing image understanding abstract postscript pdf bibtex versions dynamic shading motion parallax qualitative shape waldon dyer proc ieee workshop qualitative vision abstract postscript pdf bibtex scale space aspect graph eggert bowyer dyer christensen goldgof ieee trans pattern analysis machine intelligence abstract postscript pdf bibtex versions cvpr building global object models purposive viewpoint control kutulakos seales dyer proc spie sensor fusion abstract postscript pdf bibtex versions cbvw global surface reconstruction purposive control observer motion kutulakos dyer computer sciences department technical report wisconsin madison april abstract postscript pdf bibtex versions cvpr recovering shape purposive viewpoint adjustment kutulakos dyer proc computer vision pattern recognition conf abstract postscript pdf bibtex versions ijcv object exploration purposive dynamic viewpoint adjustment kutulakos dyer lumelsky computer sciences department technical report wisconsin madison november abstract postscript pdf bibtex scale space aspect graph eggert bowyer dyer christensen goldgof proc computer vision pattern recognition conf abstract postscript pdf bibtex versions pami viewpoint occluding contour seales dyer computer vision graphics image processing image understanding abstract postscript pdf bibtex occlusion-based representation shape viewpoint recovery seales dyer proc european conf artificial intelligence abstract postscript pdf bibtex display scientific data structures algorithm visualization hibbard dyer paul proc visualization abstract postscript pdf bibtex computing spatiotemporal relations dynamic perceptual organization allmen dyer computer sciences department technical report wisconsin madison december abstract postscript pdf bibtex versions cvgip recovering shape purposive viewpoint adjustment kutulakos dyer computer sciences department technical report wisconsin madison august abstract postscript pdf bibtex versions ijcv cvpr nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
charles dyer graduate students nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page dyer biography nbsp information contact information teaching research research projects graduate students professional activities computer vision group personal information department nbsp charles dyer professor computer sciences biostatistics medical informatics research interests computer vision medical image analysis image-based modeling rendering academic genealogy descendants math genealogy project descendants genealogy project descendants tree advisor azriel rosenfeld june descendants advisor azriel rosenfeld current graduate students mohamed eldawy gary pack graduates guodong guo gdguo nccu dissertation face expression iris recognition learning-based approaches current position assistant professor north carolina central shaohua fan shaohua wisc dissertation sequential monte carlo methods physically based rendering co-advisor stephen chenney current position quantitative researcher investment bank york russell manning rmanning wisc dissertation screw-transform manifolds camera calibration liang-yin yuly wisc dissertation active surface modeling perception-based differential geometric primitives current position video scientist objectvideo reston gareth bestor bestorga ibm dissertation recovering feature observer position projected error refinement current position software engineer ibm poughkeepsie adjunct assistant professor vassar college steven seitz seitz washington dissertation image-based transformation viewpoint scene appearance current position associate professor washington seattle william hibbard whibbard macc wisc dissertation visualizing scientific computations system based lattice-structured data display models current position scientist space science engineering center wisconsin madison kiriakos kutulakos kyros toronto dissertation exploring three-dimensional objects controlling point observation current position associate professor toronto mark allmen mark allmen perceptek-robotics dissertation image sequence description spatiotemporal flow curves motion-based recognition current position scientist perceptek littleton brent seales seales netlab uky dissertation appearance models three-dimensional shape machine vision graphics current position associate professor kentucky harry plantinga hplantin calvin dissertation asp continuous viewer-centered object representation computer vision current position associate professor calvin college charles stewart stewart rpi dissertation connectionist models stereo vision current position professor rensselaer polytechnic institute bradley kjell kjell ccsu dissertation oriented edge separation texture measures current position associate professor central connecticut state nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
wisconsin computer vision group wisconsin madison computer vision group conducting research designing implementing experimenting important components computer vision systems includes modules image analysis scene understanding areas image-based modeling analysis recognition rendering medical image analysis motion analysis three-dimensional shape representation recognition image-based representations addition study methods vision images video sequences specific image-guided tasks areas medicine opthalmology pediatrics psychiatry robotics vision motion planning unknown environments visualization visualizing user-defined data types interactively steering visual experimentation algorithm development information contact professor charles dyer department computer sciences wisconsin-madison west dayton street madison telephone department e-mail dyer wisc web wisc dyer group members chuck dyer yu-chi lai gary pack affiliated interests andy alexander medical physics amir assadi mathematics nigel boston mathematics rick cai psychology moo chung statistics nicola ferrier mechanical engineering michael gleicher computer sciences bill hibbard space science engineering center hen electrical computer engineering rock mackie medical physics robert nowak electrical computer engineering terry oakes waisman lab brain imaging behavior research projects face recognition nigel boston chuck dyer yu-hen students classification nuclear sclerosis slit-lamp photographs shaohua fan chuck dyer quantification correction iris color shaohua fan chuck dyer video-based face recognition guodong guo chuck dyer face expression recognition guodong guo chuck dyer markov information propagation texture synthesis guodong guo chuck dyer camera metric calibration screw-transform manifolds russell manning chuck dyer fast algorithm screw-transform manifold gallery video surveillance monitoring vsam view morphing view synthesis image interpolation exploring objects controlling point observation periodic cyclic motion analysis image motion analysis animation control deformable contours modeling extraction detection classification vis-ad data visualization based lattices honors awards group members alumni paper award european conference computer vision hasinoff kutulakos confocal stereo proc european conf computer vision marr prize international conference computer vision seitz space stereo images proc int conf computer vision marr prize international conference computer vision kutulakos seitz theory shape space carving proc int conf computer vision revised version int computer vision paper award computer vision pattern recognition conference stewart roysam robust hierarchical algorithm constructing mosaic images curved human retina proc computer vision pattern recognition conf ii- iibest paper award computer vision pattern recognition conference kutulakos dyer occluding contour detection affine invariants purposive viewpoint control proc computer vision pattern recognition conf vision robotics seminar recommended courses alumni computer vision group mark allmen mallmen diamondbacksystems net marijke augusteijn mfa uccs gareth bestor bestorga ibm roland chin chin ust karey gale karey gale mediawaresolutions bill hibbard whibbard macc wisc seng-beng sengho ibm net torsten ihle ihle iki inf tu-dresden mike james michael james dataconnection brad kjell kjell ccsua ctstateu matt korn korn aol kyros kutulakos kyros rochester kok-fung lai kflai iti gov yuhua luo dmilyu uib russell manning rmanning wisc kathleen marty tamara miller millert berkeley harry plantinga hplantin calvin brent seales seales dcs uky steve seitz seitz washington katrin stark stark iki inf tu-dresden chuck stewart stewart rpi gilbert verghese verghese vis utoronto liang-yin yuly wisc links uw-madison robotics group machine learning group group graphics group qualifying exam department department technical reports graduate school computer vision robotics visualization computer vision resources cmu imaging resources computer vision conference information vision image processing archive vision-list digest computer vision search index cmu computer vision papers search engine mit computer vision search index delft david stork work related david hockney conjecture early renaissance painters optical devices robotics resources computer graphics resources virtual reality resources scientific visualization graphics resources 
introduction artificial intelligence wisconsin madison nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page general info scores date syllabus started e-mail archive readings homework examinations handouts lecture notes demos reading photo gallery courses links nbsp introduction artificial intelligence spring instructor chuck dyer office computer sciences building telephone e-mail dyer wisc office hours tuesdays thursdays appointment teaching assistant yu-chi lai office computer sciences building telephone e-mail yu-chi wisc office hours mondays wednesdays appointment schedule lecture mwf room computer sciences building prerequisite textbook artificial intelligence modern approach edition russell norvig prentice hall englewood cliffs grading midterm exam final exam homework assignments note typically final grades distributed approximately recent semesters taught interpret rough guidelines scores cluster differently semester semester median student grade low high percentiles refer ranking class based final weighted score top class examinations midterm wednesday march room final monday room homework assignments homework assignments include written problems programming java accounts provided computer science department instructional unix workstations located rooms late penalties assignments due class due date day late defined -hour period noon noon day weekday weekend result total points assignment deducted assignment due wednesday handed wednesday thursday penalty deducted days late days late homework turned days late total free late days semester penalty academic integrity examinations programming assignments written homeworks individually cheating plagiarism dealt accordance procedures academic misconduct guide code programming assignments developed groups code shared encouraged discuss peers tas instructor ideas approaches techniques broadly level detail specific implementation issues questions instructor act web page http wisc dyer class e-mail alias compsci lists wisc class e-mail archive nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
computer vision wisconsin madison nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page general info final grades syllabus readings homework projects lecture notes examinations handouts computers software supplementary reading class photo gallery courses links vision demos e-mail archive e-mail class list nbsp computer vision fall instructor chuck dyer office computer sciences building telephone e-mail dyer wisc office hours mondays wednesdays appointment teaching assistant yu-chi lai office computer sciences building telephone e-mail yu-chi wisc office hours tuesdays thursdays appointment description introduction basic concepts computer vision introduction low-level image analysis methods including image formation edge detection feature detection image segmentation image transformations warping morphing mosaics image synthesis methods reconstructing three-dimensional scene information techniques depth stereo structure motion shape shading motion video analysis three-dimensional object recognition schedule tuesdays thursdays engineering hall prerequisites calculus linear algebra grading exam homework assignments project textbook computer vision modern approach forsyth ponce prentice hall upper saddle river readings collection additional readings journals conference proceedings online web page wisc dyer html class e-mail list compsci lists wisc class e-mail archive nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
science art winter 
advances science engineering italian renaissance winter 
real-time voxel coloring real-time voxel coloring investigators andrew prock chuck dyer related photorealistic scene reconstruction voxel coloring seitz dyer --in proc cvpr real-time voxel coloring prock dyer --in proc iuw abstract real-time voxel coloring techniques constructing three-dimensional scene models two-dimensional images slow unsuitable interactive real-time applications research explore methods enhancing performance voxel coloring reconstruction method approach texture mapping leverage hardware acceleration approach spatial coherence coarse-to-fine strategy focus computation filled parts scene space finally multi-resolution method extended time enhance performance dynamic scenes original voxel coloring algorithm designed static scenes producing output quickly priority voxel coloring dynamic scenes key elements changed original approach algorithmically voxel coloring recast advantage spatial temporal coherence experimentally amounto input data reduced significantly contemplate implementing voxel coloring real-time modern desktop workstations significant change development coarse-to-fine multiresolution approach voxel coloring speeds performance dramatically coarse-to-fine processing oct-tree methods common coarse-to-fine processing volumes similar technique voxel coloring decomposing large voxels smaller voxels coloring subdivided set voxels computation focuses significant portions scene voxel coloring depends statistical methods direct decomposition work correctly voxels empty resolution subvoxels colored higher resolution problem illustrated figure compensate abundance false negatives algorithm performs nearest neighbor search augment set voxels colored search relies high degree spatial coherence assumed small details high spatial frequency occur close details detected coarse resolution figure illustrates augmentation process iteration depending final resolution scene speedups vary times original algorithm higher final resolution greater speedup scene colored consisted images radially figure image resolution images manually segmented figure illustrates coarse-to-fine process resolution increases doubling iteration chart left performance gain coarse-to-fine processing illustrated included timings prewarping image eliminate radial distortion dynamic scene processing experiment investigate dynamic scene processing staging area built data capture cameras collect data camera mounted corner area calibrated planar implementation tsai algorithm walls staging area covered blue matte paper fascilitate automatic segmentation scene reconstructtions created serially off-line redisplayed movie finally verstion voxel coloring takes advantage temporal coherence developed process illustrated mpegs dynamic voxel coloring mpegs input sequence made frames cameras cameras place ceiling corners room background covered blue matte paper fascilitate segmentation resolution input images mpeg shows stream input camera turn voxel coloring makes occlusion information built scene traversal mpeg shows image projected layer turn note occluded pixels image colored black mpeg progresses occluded pixels accounted scene space contribute reconstruction static colorings created sets input frames mpeg shows static coloring scene resolution voxels notice reconstruction hollow note photo realism limited resolution input images head roughly high mpeg displays colorings sequence motion subject time adds great deal realism visualization smaller movie final mpeg shows voxel coloring algorithm running sequence frames displaying output interactivly frame reconstructed half sgi achieve real-time performance resolution scene reduced voxels dynamic voxel coloring coming 
wisconsin darpa vsam project steerable gaze control video-based virtual surveillant principal investigator chuck dyer department computer sciences wisconsin-madison west dayton street madison telephone e-mail dyer wisc web wisc dyer technical area video surveillance monitoring vsam technical staff russ manning andrew prock project goals goal project enable rapid photorealistic scene visualization real environments urban areas battlefields approach image-based input set imagery auxiliary data sources terrain data site models encompass primary types visualizations scene viewing moving virtual camera order view real environment user-selected viewpoints scene modification making virtual scene visualizing effects arbitrary viewpoints visual simulations real environments order accomplish objective developing methods rapidly combining set images real environment video source multiple views general multiple cameras widely distributed environment output set images viewed person input image understanding algorithms visualization processing focused producing photorealistic images views smooth sequences views main emphasis image appearance surface reconstruction model building military relevance military relevance effort includes activities customers intelligence analysts special forces operators combat engineers scientists battlefield facility visualizations walkthroughs flybys mission rehearsal mission planning site analysis treaty monitoring accident analysis view customization correction normalization enhanced human automated analysis visualization simulated modifications real environment remodel demolish move overlay enhancing visual thinking tasks raw sensor data matched intended tasks require views scene optimal views task captured sensor time-shared multiple single mission slewing multiple targets interleaving target tracking systematic scanning environment reasons advantageous synthesize virtual video tuned operator viewing preferences task-specific targets activities enhancing capabilities monitoring comprehending areas interest assessing objects dispositions technical approach approaches researched called view morphing method view interpolation uncalibrated views called voxel coloring method combining widely-separated views view morphing approach image morphing techniques generate compelling transitions images differences object pose viewpoint unnatural distortions image morphs difficult correct manually basic principles projective geometry developed simple extension image morphing correctly handles projective camera scene transformations technique called view morphing works prewarping images prior computing morph postwarping interpolated images knowledge shape required technique applied photographs drawings rendered scenes ability synthesize viewpoint image structure affords wide variety interesting effects simple image transformations figure shows result view morphing input images left object viewpoints middle image synthesized view morphing algorithm view sequence in-between views mpeg showing impression smooth motion depth created physically moving virtual camera results view morphing predator views shows view morphing applied images predator unmanned air vehicle surveillance monitoring applications input view synthesized view input view images left input images center image synthetic view produced view morphing click image larger version entire sequence synthesized views mpeg input views shows smooth transition produced algorithm original input video sequence mpeg input images provided shows approach synthesize views comparable photorealistic quality original images noted view morphing assumes scene points visible input images features edges fade input images note special processing account moving objects original scene vehicle moving road position input images results show vehicle fading positions synthesized view dramatically views original video sequence restriction method view morphing potentially generate views vary significantly view original video view morphing single image scenes approximate bilateral symmetry view morphing applied single image create interpolations show object rotating depth image leonardo vinci mona lisa original mirror reflection image inputs view morphing producing front-facing view face torso perfectly symmetric output image sequence conveys convincing facial rotation resolutions mona lisa mona lisa reflection high resolution mpeg movie frames low resolution mpeg movie frames view morphing objects approach image morphing intermediate step view morphing create morphs objects shows input images faces orientation view morphing produces sequence in-between views mpeg simultaneously interpolate shape color pose view morphing dynamic scenes current work focuses extending view morphing handle scenes moving objects static case process starts basis images input image segmented layers representing moving objects sparse point correspondences determined layer layer view morphed separately synthesized layers combined result simultaneous transition viewpoint objects positions examples show early results approach input view synthesized view input view input view synthesized view input view input view synthesized movie input view voxel coloring approach view synthesis virtual camera arbitrary position orientation input views widely-distributed environment difficult problem reasons make challenging method integrate information images significant differences parts scene visible desired results photorealistic views method dense render images accurate texture color information pixel developing approach called voxel coloring reconstructs color radiance surface points unknown scene initially assume static scene lambertian surfaces fixed illumination radiance scene point simply scalar call color coping large visibility images means solving correspondence problem images appearance--a difficult problem traditional methods stereo scene-based approach represent environment discretized set voxels algorithm traverses voxels colors part surface scene advantage approach simple voxel projection determines candidates image pixels difficulty image pixel correspond projecting voxel closer voxel occluding projecting voxel figure red voxel scene projects images blue voxel occludes solve visibility problem introduce geometric constraint input camera positions enables single visibility ordering voxels hold input viewpoint ordinal visibility constraint satisfied scene point contained convex hull input camera centers shown simple camera configurations satisfy constraint left configuration shows downward-facing camera moved degrees object configuration shows rig outward-facing cameras distributed sphere scene reconstruction complicated fact set images consistent rigid scene determining scene spatial occupancy ill-posed problem voxel contained consistent scene contained hand voxel part consistent scenes colors cope problem voxel color invariant respect set images pair voxelizations consistent images color color invariant define voxel coloring set images maximally consistent coloring define complete voxel coloring algorithm initial set colored voxels empty traverse layers foreach ith layer voxels project images visible sufficient correlation pixel colors add results examples voxel coloring algorithm scene toy dinosaur real rose case input images resolution captured rotating object degrees increments degrees front color camera sony xcwith ccd sensor lens positioned approximately horizontally object center vertically base object left image row input images columns show views rendered voxel reconstructions created algorithm results shown scene space decomposition approximately voxels dinosaur rose scene-space resolution dimension voxel colored represent dinosaur represent rose runtime construct representation approximately minutes mhz mips processor sgi indigo workstation contrast low-resolution scene decomposition voxels dinosaur compute colored voxels representing dinosaur colored voxels representing rose click images view larger version toy dinosaur input view output views vrml-capable browser interactively view dinosaur 
reconstruction results vrml model gzip vrml model note vrml model create images shown vrml model voxel resolution dimension voxels scene decomposition order reduce download time required rose input view output views synthetic room scene experiment consisted synthetic room scene textured walls bust beethoven human figure illuminated diffusely images synthesized camera positions inside room optical axes cameras parallel floor room input images voxel coloring algorithm applied reconstruct highly concave scene scene decomposed algorithm voxels resolution partitioning result algorithm coloring voxels representing scene images left views synthesized directly room scene model correspond input images images correspond views synthesized voxel reconstruction produced algorithm views synthesized directly model views produced algorithm performance considerations original voxel coloring algorithm designed static scenes producing output quickly priority voxel coloring dynamic scenes key elements changed original approach algorithmically voxel coloring recast advantage spatial coherence temporal coherence experimentally amount input data reduced significantly contemplate implementing voxel coloring real-time conventional workstations significant change development coarse-to-fine multiresolution approach voxel coloring speeds performance dramatically coarse-to-fine processing octree methods common coarse-to-fine processing volumes similar technique voxel coloring decomposing large voxels smaller voxels coloring subdivided set voxels computation focuses significant portions scene voxel coloring depends statistical methods direct decomposition work correctly voxels empty resolution subvoxels colored higher resolution problem illustrated figure compensate abundance false negatives algorithm performs nearest neighbor search augment set voxels colored search relies high degree spatial coherence assumed small details high spatial frequency occur close details detected coarse resolution figure illustrates augmentation process iteration depending final resolution scene speedups vary times original algorithm higher final resolution greater speedup scene colored consisted images radially figure image resolution images manually segmented figure left illustrates coarse-to-fine process resolution increases doubling iteration graph performance gain coarse-to-fine processing illustrated included timings prewarping image eliminate radial distortion dynamic scene processing experiment investigate dynamic scene processing staging area built data capture cameras collect data camera mounted corner area calibrated planar implementation tsai algorithm walls staging area covered blue matte paper facilitate automatic segmentation scene reconstructions created serially off-line redisplayed movie finally version voxel coloring takes advantage temporal coherence developed process illustrated mpegs dynamic voxel coloring mpegs input sequence made frames cameras cameras place ceiling corners room background covered blue matte paper fascilitate segmentation resolution input images mpeg shows stream input camera turn voxel coloring makes occlusion information built scene traversal mpeg shows image projected layer turn note occluded pixels image colored black mpeg progresses occluded pixels accounted scene space contribute reconstruction static colorings created sets input frames mpeg shows static coloring scene resolution voxels notice reconstruction hollow note photo realism limited resolution input images head roughly high mpeg displays colorings sequence motion subject time adds great deal realism visualization smaller movie final mpeg shows voxel coloring algorithm running sequence frames displaying output interactively frame reconstructed half sgi achieve real-time performance resolution scene reduced voxels talks image understanding workshop presentation vsam demo workshop presentation columbus vsam workshop presentation meeting presentation vsam demo workshop presentation seitz dyer photorealistic scene reconstruction voxel coloring international journal computer vision manning dyer interpolating view scene motion dynamic view morphing proc computer vision pattern recognition conf dyer image-based visualization widely-separated views proc image understanding workshop manning dyer interpolating view scene motion dynamic view morphing proc image understanding workshop prock dyer real-time voxel coloring proc image understanding workshop bestor recovering feature observer position projected error refinement dissertation computer sciences department technical report wisconsin madison august seitz kutulakos plenoptic image editing proc int conf computer vision seitz image-based transformation viewpoint scene appearance dissertation computer sciences department technical report wisconsin madison october seitz dyer photorealistic scene reconstruction voxel coloring proc computer vision pattern recognition conf dyer image-based scene rendering manipulation research wisconsin proc image understanding workshop seitz dyer view morphing uniquely predicting scene appearance basis images proc image understanding workshop seitz dyer photorealistic scene reconstruction voxel coloring proc image understanding workshop seitz kutulakos plenoptic image editing technical report computer science department rochester rochester january seitz bringing photographs life view morphing proc imagina seitz dyer view morphing proc siggraph seitz dyer image-based scene representation view morphing proc int conf pattern recognition vol track computer vision related links chuck dyer home page wisconsin computer vision group vsam home page cmu darpa image understanding program acknowledgment work sponsored part defense advanced research projects agency darpa rome laboratory air force materiel command usaf agreement number disclaimer site darpa-sponsored contractor views conclusions contained website web authors interpreted official policies expressed implied defense advanced research projects agency united states government modified november 
text-to-picture synthesis system augmenting communication xiaojin zhu andrew goldberg mohamed eldawy charles dyer bradley strock department computer sciences wisconsin madison usa jerryzhu goldberg eldawy dyer strock wisc abstract present text-to-picture system synthesizes picture general unrestricted natural language text process analogous text-to-speech synthesis pictorial output conveys gist text system integrates multiple components including natural language processing computer vision computer graphics machine learning present integration framework combines components identifying informative picturable text units searching imageparts conditioned thetext finally optimizing picture layout conditioned text image parts effectiveness system assessed user studies children books news articles experiments show synthesized pictures convey information children stories original artists illustrations information news articles original photos sis great potential augmenting human-computer human-human communication modalities applications education health care introduction picture worth thousand words systems convert general text pictorial representations circumstances replace augment text present text-to-picture ttp synthesis system automatically generates pictures aims convey primary content general natural language text figure shows picture automatically generated ourttpsystem natural language processing computer vision computergraphics tomachinelearning weintegratethesecomponents concatenative synthesizer synergy text unit selection image parts generation layout optimization produces coherent final pictures picturability influence word selection word importance influence layout picture anonymous reviewers constructive comments research supported part wisconsin alumni research foundation copyright association advancement artificial intelligence aaai rights reserved farmer hay goat farmer milk cow figure picture generated ttp system details evaluation metric presented user study experiments show participants descriptionsofttpcollagescontainwordsthatareacloser equivalent match original text descriptions original illustrations photos accompany text ttp applications text interface important application literacy development children learning read language learners pictures text enhance learning mayer application reading aid people learning disabilities brain damage ttp convert textual menus signs safety operating instructions graphical representations importantly ttp output created demand user depend vendor produce eventually person carry pda equipped ttp optical character recognition person generate visual translations needed daily activities ttp naturally acts universal language communication needed simultaneously people speak languages airport public announcements mihalcea leong ttp produce visual summaries rapidly browsing long text documents current work differs previous text-to-scene type systems focus conveying gist general unrestricted text previous systems meant graphics designers alternative layoutofascene size spatial reasoning examples include nalig adorni manzo giunchiglia sprint yamada put clay wilhelms notably wordseye coyne sproat wordseye produce highly realistic scenes utilizing thousands predefined polyhedral object models detailed manual tags deep semantic representations text wordseye works descriptive sentences lawn mower feet tall john pushes lawn mower cat feet john cat feet tall systems include brown chandrasekaran zhang carsim johansson converts special-domain narratives road accidents animated scene icons blissymbols hehner graphic symbol systems create symbol-for-word strings coherent picture conveys global meaning text-to-picture system input text word sequence length concatenative ttp synthesizer natural language processing techniques select keyphrases important words phrases found draw selected keyphrase computer vision techniques find image word picture denote composed output image denote individual constituents finally computer graphics techniques spatially arrange images create output picture integrate components formulate ttp problem finding themostlikelykeyphrasesk imagesi andplacement input text argmaxk implementation placement image specifiedbythecentercoordinates rotation depth incorporated make optimization problem tractable factorize probability approximate joint maximizer maximizers factor selecting keyphrases piece text sentence book question keyphrases selected form picture formally solve subproblem argmaxk approach based extractive picturable keyword summarization thatis text summarization turney mihalcea tarau keywords keyphrases extracted text based lexicosyntactic cues central issue keyword summarization estimate importance lexical units unsupervised learning approach based textrank algorithm mihalcea tarau textrank defines graph candidate words based cooccurrence current text stationary distribution teleporting random walk graph importance measure novelty include special teleporting distribution words graph teleporting distribution based picturability measures probability finding good image word approach selects keyphrases important meaning text easy represent image textrank graph mihalcea tarau define textrank graph individual words ranking words construct final set longer keyphrases nouns proper nouns andadjectives exceptthoseinastoplist areselected candidate words part-of-speech tagger build co-occurrence graph word vertex represent unweighted graph co-occurrence matrix entry term term co-occur window size teleporting distribution based picturability base graph vertex teleporting probability find image word call measure picturability compute logistic regression model picturability logistic regression model trained manually-labeled set words randomly selected large vocabulary annotators independently labeled words word labeled picturable annotator draw find good image word shown image people guess word similar word words labeled non-picturable lack recognizable image dignity werepresentawordusing candidatefeatures derived log-ratios raw counts obtain raw counts web statistics number hits image web page search engines google yahoo flickr response query word perform forward feature selection -regularized logistic regression log-ratio google image search hit count google web search hit count dominated features terms cross-validation log likelihood practical consideration light system request raw web counts decided create model feature intuitively number images web pages good picturability feature measures image frequency respect word frequency resulting picturability logistic regression model exp logparenleftbig parenrightbig log ratio smoothed counts google image hits google web hits smoothing constant prevent counts word banana google image hits web hits find banana meaning banana picturable word hand word bayesian google image hits web hits bayesian indicating picturable compute picturability candidate word textrank graph values normalized form teleporting distribution vector determining final keyphrases obtain ranking words compute stationary distribution teleporting random walk graph-based transition matrix rownormalized co-occurrence matrix teleporting distribution defined computation pagerank interpolation weight set all-ones vector stationary distribution centrality relative importance word graph taking account picturability select words highest stationary probabilities form keyphrases merging adjacent instances selected words long resulting phrase picturability probability greater discard phrases lacking nouns multiple copies phrase phrases subsumed longer phrases end result list keyphrases important representable image finally extracted keyphrase assigned importance score equal average stationary probability words comprising selecting images goal stage find image represent extracted keyphrase algorithm handles keyphrase independently argmaxii image selection module combines sources find image manually labeled clipart library keyphrase found library image search engine computer vision techniques combining sources ensures accurate results common keyphrases exist library good results arbitrary keyphrases focus source image search engines perfect means images returned visually represent keyphrase image returned image search engine good image depict keyphrase approach selecting image search results similar method ben-haim thetop images keyphrase retrieved google image search image segmented 
set disjoint regions image segmentation algorithm felzenszwalb huttenlocher parameters algorithm set average image segmented small number segments over-segmentation object interest region extracted image compute feature vector describe appearance region color histograms shown perform databases arbitrary color photographs deselaers keysers ney compute vector color features figure image selection process retrieved images word pyramids segmentation boundaries overlaid images region closest centroid largest cluster arrow image selected word describe region specifically color histogram luv color space pixels region computed component quantized bins pairs values quantized bins resulting feature vector size feature vectors images clustered feature space assuming regions correspond keyphrase appearances similar expect find compact cluster feature space shift clustering algorithm comaniciu meer partsof image similar regions correspond keyphrase treat largest cluster correspond keyphrase largest cluster found find region feature vector closest centroid cluster image region selected image keyphrase figure shows result algorithm picture layout final stage takes text keyphrases images determines spatial layout images argmaxc create output picture problem composing set images similar problem creating picture collages wang goal create layout helps convey meaning text revealing important objects relations interested handling unrestricted text assume availability semantic knowledge object recognition components relying structure text general layout rules make picture intuitively readable end scale images make roughly size determine locations images define good layout properties minimum overlap overlap images minimized centrality important images center closeness images keyphrases close input text close picture finding positions images formulated optimization problem minimize objective ksummationdisplay ksummationdisplay atotal ksummationdisplay ksummationdisplay ksummationdisplay weights area overlap pictures atotal sum areas images importance keyphrase distance image center picture indicator function defined braceleftbigg closeness constraint violated closeness constraint violated keyphrases close text images touching picture keyphrases close words keyphrase separates input text monte carlo randomized algorithm construct multiple candidate pictures pick minimizes objective function step algorithm constructing candidate picture image selected position picture determined images selected candidate picture complete important image center picture select image add picture make random decision selecting image based importance based obeying closeness constraints select image based importance randomimageisselectedfromtheremainingimages wherethe probability selecting image summation remaining images recall image keyphrase importance choose image based closeness constraints image selected uniformly random remaining images close images local gradient descent move remove overlap images process creating candidate picture repeated large number times picture lowest objective function selected final result branch-and-bound implemented partial picture immediately rejected objective function exceeds picture found figure shows picture layout optimization procedure evaluation metric assess system performance evaluation measure gauge amount information conveyed picture produced user shown generated picture original text asked write meaning picture text usergenerated text automatically compared original iterations objective figure minimum objective function function number candidate pictures generated selected points layout found shown closeness constraints darker images represent important keyphrases large chocolate colored horse trotted pasture user brown horse runs grass figure ttp alignment evaluation text generate picture assumption closer ttp system user correct information picture procedure similar game pictionary key measure similarity function compare shown figure assume ttp system generates picture sentence large chocolate-colored horse trotted pasture evaluation user produces sentence brown horse runs grass note words similar substitutions insertions deletions occur intuitively things simultaneously hand user sentence words sentence important concepts covered captured recall standard rouge lin hovy issucha recall-based measure hand user sentence irrelevant words entire vocabulary perfectly cover captured precision standard bleu measure machine translation papineni precision-based measure recall precision important evaluating ttp systems combine compute standard f-score order compute precision recall handle synonyms define alignment user text address synonym issue defining substitution function takes pair words returns similarity measure substitution functionreturns stem run ran function returns score words synonymous pasture grass mare horse wordnet-based similarity measures exist pedersen patwardhan michelizzi exponentially factor number levels betweenthetwowordsinthewordnetlatticeincreases words levels receive substitution score substitution function greedy alignment algorithm defined reference-user word pairs pair highest substitution score picked pairs words removed procedure repeated word pairs exhausted figure result greedy alignment shown assumed substitution score identical words synonyms substitution score attached word alignment lengths soft precision recall f-score substitution alignment summationtext summationtext figure final f-score note actual evaluation measure ignores stop words sentences experimental results user studies conducted assess ttp system performance scenarios children book illustration news article visual summarization scenario ttp produce pictures represent short texts originate single pages illustrated children books hope ttp-generated pictures convey information content original illustrations presented children book scenario examine ttp ability present visual summary news article wehopetoshowthat details viewer determine main idea article combining photograph ttp-generated composite picture user understand gist article children book illustration user study randomlyselectedtexts large pool children books texts range words span sentences figure shows ttp output produced text note text original illustration pictures ttp illustrations users asked write short text description user text pictures compare ttp picture illustration presenting meaning original story text astute users figure illustration ttp picture present story information describing pair counteract phenomenon displayed ttp-generated pictures random order illustrations differthe girl loved dog girl loved dog soft eyes warm nose big paws girl wished dog figure notethemonkey image obtained image search represents incorrectly keyphrase soft eyes ent random order book illustrations advantage users remembered ttp pictures stories shown mention details explicitly illustrated participants provided short text descriptions ranging words sentences responses ttp picture figure girl pet puts paw nose dog walked girl sniffed dog bit girl nose ran girl nose smelled dog monkey walked girl walked dog hairy man big nose girl monkey nose smells dog paw prints note actual book illustration shows girl sitting sofa hugging large dog responses picture girl giant dog hugged couch tend accurate descriptions differ greatly true text story post-study compared user texts text f-score introduced earlier scatter plot figure shows relationship f-score based ttp pictures x-axis f-score based original illustrations y-axis point represents user score stories half points fall diagonal average individual user differences combining points stories aggregate points fall diagonal ttp helps recreate text cases averaged stories users f-score based ttp pictures times average f-score based hand-drawn illustrations suggesting ttp users picture conveys information text original illustration news article visual summarization inthesecondstudy press news articles words photograph randomly selected domains goal investigate ttp 
ability augment simple news photo information ttp score illustration score ttp score photo score children books news articles figure scatter plots comparing ttp pictures x-axis children book illustrations news photographs y-axis show real photograph photograph ttp-generated picture note long article potentially picturable items keyphrase extraction algorithm selects central text meaning evaluate difference information provided original combined pictures f-score computed user text full article text length full text compared typical user response expect scores low care difference picture sources participants provided user texts figure plots f-score photograph ttp pictures x-axis versus f-score based original photographs y-axis single article points lie diagonal average users aggregate points lie diagonal average f-score based ttp-augmented pictures times average f-score based original news photographs ttp renders visual representation superior conveying news article original photograph expected photos typically show single person scene articles discuss entities ttp pictures capture experiments show ttp system conveys content text generated pictures original illustrations photos accompany text conclusions presented general-purpose text-to-picture synthesis system language processing computer vision graphics machine learning user studies quantitatively demonstrate ttp system ability generate pictures convey gist input text current work step automatically producing pictures realistically depict arbitrary text future work includes incorporating context produce scenes performing deeper semantic analysis depicting actions animation plan investigate severalttpapplications children rehabilitation brain-injured patients adorni manzo giunchiglia natural language driven image generation proc coling ben-haim babenko belongie improving web-based image search content based clustering proc cvpr workshops brown chandrasekaran design considerationsforpictureproductioninanaturallanguagegraphicssystem computer graphics clay wilhelms put language-based interactive manipulation objects ieee computer graphics applications comaniciu andmeer meanshift arobustapproach feature space analysis ieee trans pattern analysis machine intelligence coyne sproat wordseye automatic textto-sceneconversionsystem proc siggraph deselaers keysers ney features image retrieval quantitative comparison proc dagm symposium felzenszwalb andhuttenlocher efficientgraphbased image segmentation int computer vision hehner blissymbolics blissymbolics communication institute johansson berglund danielsson nugues automatic text-to-scene conversion traffic accident domain proc ijcai lin hovy automatic evaluation summaries n-gram co-occurrence statistics proc hltnaacl conf zhang automatic generation computer animation movie animation lecture notes vol berlin springer-verlag mayer multimedia learning cambridge press cambridge mihalcea leong communicating simple sentences pictorial representations proc conf association machine translation americas amta mihalcea tarau textrank bringing order texts proc conf empirical methods natural language processing papineni roukos ward zhu bleu method automatic evaluation machine translation proc acl meeting pedersen patwardhan michelizzi wordnet similarity measuring relatedness concepts proc aaai conf turney technical report erbinstitute information technology national research council canada wang sun quan tang shum picture collage proc computer vision pattern recognition conf yamada yamamoto ikeda nishida doshita reconstructing spatial image natural language texts proc coling vol 
patch-based image correlation rapid filtering guodong guo dept math computer science north carolina central charles dyer computer sciences department wisconsin-madison abstract paper describes patch-based approach rapid image correlation template matching representing template image ensemble patches method robust respect variations local appearance variation partial occlusion scale rectangle filters applied image patch fast filtering based integral image representation method developed feature dimension reduction detecting salient image structures single image experiments variety images show success method dealing variations test images terms computation time approach faster traditional methods orders magnitude times faster fast implementation normalized cross correlation introduction computer vision applications pre-defined template sub-image contained test image template matching techniques involve translation template position test image evaluation measure match template image position common measure compare similarity template image test image sum squared difference ssd defined ssd summationdisplay common measure normalized crosscorrelation ncc ncc defined summationtext fmn radicalbigsummationtext fmn radicalbigsummationtext template image fmn test image region centered major disadvantage ssd ncc measures computational cost template large speed correlation computations critical applications ncc lewis proposed integral image representation developed crow texture mapping compute denominator numerator computed fast fourier transform fft viola jones integral image fast face detection jurie dhome fast template matching tracking schweitzer extended integral image compute algebraic moments approximated image low degree polynomials fast template matching hel-or hel-or walsh-hadamard kernels integral image fast feature extraction matching tao approximated template image linear combination simple binary box features computed efficiently integral image representation matching fast slow learn non-orthogonal subspace based optimized orthogonal matching pursuit method tang tao adopted matching pursuit method search non-orthogonal subspace faster rosenfeld vanderbrug proposed multiresolution scheme template matching result low resolution image refined higher resolutions uenohara kanade matched large set templates test image represented template set pca subspace fft speed correlation previous template matching methods focus speeding computation addressed occlusion problem issue detecting template partially occluded test image variation scale issue template matching practice previous work addressed method handle patterns scaled powers walsh-hadamard kernels ssd matching method deal scale differences handle occlusion problem paper propose approach image correlation robust partial occlusion arbitrary scale change addition fast matching sift method extract sparse set scale-invariant features matching template matching methods pixel patches general template matching important images rich texture information local interest points extraction scheme image pyramid detecting templates multiple scales test image involves computation searching scales pixels patches global template numerous computer vision applications image analyzed patch level individual pixel level patches contextual information advantages terms computation generalization patch-based methods produce results faster pixel-based methods texture synthesis hand computer vision applications require large template represent complete object object recognition instance face templates face face detection face recognition large templates representing object sensitive local variations partial occlusion large templates image represented ensemble patches figure levels methods image correlation image correlation template matching levels approaches pixel level patch level complete template illustrated figure ssd ncc measures template matching work pixel level eqs standard ssd ncc slow robust variations recently proposed methods speed ncc integral images denominator computation deal numerator subspace approximation fft methods sensitive local variations occlusions complete templates main contributions motivated advantages representing image set patches propose patch-based method image correlation main contributions include proposing approach template matching ensemble patches single large template developing method feature selection single image addressing issue robustness image correlation respect appearance variation partial occlusion scale change remainder paper organized section introduces patch-based matching criterion rapid filtering patch section describes simple technique feature selection single template image section discusses robustness method variations experimental results presented section finally conclusions section patch-based correlation template image decomposed set patches patches overlapping nonoverlapping experiments patches nonoverlapping shown figure figure template image figure divided nonoverlapping patches template image represented ptk divided patches similarity template test image defined ksummationdisplay bardbl ptr pfr bardbl pfr patch test image patch ptr template template translated position test image bardbl bardbl norm -norm experiments non-negative smaller similar template test image position definition image correlation problem find minimum objective function argminm question measure similarity patches rapid filtering rectangle filters patch set filters extract features directly raw pixel intensities advantages features raw pixels image correlation feature-based system operates faster pixel-based system features encode image structure information reduce number features making correlation process faster section variety filters filtering patch including gabor filters laplacian-of-gaussian filters choose rectangles filters originally viola jones rapid face detection advantage rectangle filters evaluated quickly simple additions matter big filters based integral image representation figure filters applied image patch sum pixels lie dark rectangles subtracted sum pixels light rectangles filters edge features line features diagonal structures employed types rectangle filters shown figure similar difference apply filters patch complete template image filters encode edge line features horizontal vertical directions diagonal structures images provided filters similarity measure rewritten ksummationdisplay lsummationdisplay bardbl ptr pfr bardbl rectangle filters convolution image structure based feature selection previous section apply rectangle filters patch result number features extracted template image features patches filters suppose template decomposed patches filters applied patch number features number smaller number pixels template image patch-based matching faster pixel-based ssd ncc number extracted features large matching fast problem reduce number features extracted template feature selection classical problem machine learning requires large number training examples class classifiers employed evaluate selected features validation set general template matching practical collect training examples addition template matching based ssd ncc require training examples order select features speeding patchbased image correlation turn template image regions salient image structures play important role flat regions image correlation extract salient regions relate feature selection intuitive detect edges corners involve computations straightforward relate detected edges corners features obtained rectangle filters propose detect salient image structures directly comparing filtered values introduced previous section rectangle filters respond strongly image structures edges lines diagonal structures strong response means large values filtered results filter indices sorted absolute filtered output filter indices sorted absolute filtered output figure filter responses template image figure filter responses template figure heuristic detecting salient image structures supported real data figure illustrate magnitude filtered values sorting descending order extracted templates figure based observation figure choose small number features top image correlation matching faster vtl ptr filtered 
filter patch ptr small number features selected measure vtl max vtl constant control number selected features influences computation time matching robustness patch-based approach image correlation special properties robustness respect variations addition fast computation appearance variation patches processed independently local appearance variation objects test image influence patches causing global effect template matching definition similarity measure local variation extremely large assign smaller weights patches prior knowledge variation instance face objects variation facial expression produces large lower part face smaller weights patches located lower face weighted similarity measure defined ksummationdisplay lsummationdisplay bardbl ptr pfr bardbl partial occlusion partial occlusion issue computer vision applications patch-based correlation method effectively deal partial occlusions idea weighting patches local variations adopted partial occlusion simpler idea similar patches test image matching template assigning specific weights patch denote left parts template assuming occlusion object test image half object find un-occluded part measure similarity part object choose similar part represent similarity re-defined similarity measure min ignore occlusion middle object difficult extend idea presented case summationdisplay ptr lsummationdisplay bardbl ptr pfr bardbl variable scales objects sizes template test images traditional ssd ncc matching scale alter test image sizes matching template make template matching process slower contrast filtering approach evaluated test image scales increasing computation time significantly size test images change computational advantage rectangle filters based integral image representation demonstrated viola jones face detection patch-based method approach easily deal variable scales template matching experiments evaluate patch-based method image correlation conducted experiments variety images experiments patch size chosen template image divided non-overlapping patches size shown figure patches close image boundary template smaller number patches ranges experiments depending size template image filter size chosen figure filters shifted step size pixels patch result filters applied patch template image patches resulting feature dimension select salient features chose number selected features matching fast experiments template translated step size pixel test image gray level intensity values matching color images displayed figure road sign image sub-window main sign cropped shown template patch-based method applied match images correlation result shown figure white box labels position size detected pattern test image correct compared ground truth matching fast computation time table table comparison computation time seconds methods images patch-based method feature selection faster standard normalized cross correlation ncc times faster fast implementation ncc fft numerator integral images denominator f-ncc size test image template experiment symbols occlusion multi-scales ncc f-ncc sign fruit face sign boat figure road sign image size template image matching result patch-based approach figure fruit image sub-window cropped shown template figure shows detected pattern patchbased method detected position ground truth figure fruit image template matching result method experiments figures demonstrate patch-based method works cropped templates experiments verify robustness method respect variations appearance variation figure image face neutral expression figure face window cropped applying patch-based method match face pattern detected correctly shown figure interestingly template matched image smiling face individual detected pattern smiling face shown figure ground truth measuring positional accuracy smiling face visually check matching result accurate experiment shows robustness method local appearance change figure face image template matching result detected face pattern test image smiling face partial occlusion verify robustness occlusion manually erase half road sign figure show figure matching template shown figure figure weights patch partially occluded road sign correctly identified patch-based method shown figure previous methods global template detect occluded pattern reason flexible mechanism deal partial occlusion variable scales image variation scale change object appears sizes images verify robustness method respect image scale change boat template cropped image figure down-sampled factor directions shown figure perform multi-scale search template test image shown figure schemes executed varying figure partially occluded road sign image test template image detected pattern method scales scales power correct position scale found method shown figure scheme set scales factor detected scale figure shows detected pattern note scheme detected scale position size boat pattern slightly ground truth results visually intentionally chose scales search order verify robustness method respect variable scales practice method exhaustively search continuous scales guarantee exact scale test image missed figure boat image template image cropped down-sampled detected pattern power scale search identified pattern set scales factor discussion patch-based image correlation method presented paper applications standard ssd ncc applied object detection recognition tracking single image template fast robust respect types variations interesting application method interactively collect data semi-supervised manner user cropped template matching technique finds similar patterns database cuts user easier manually cropping patterns user collecting training data tasks learning-based vision conclusion presented method fast template matching patch-based approach robust types variations local appearance change partial occlusion scale variation knowledge previous methods address variations template matching rectangle filters applied patch evaluated quickly based integral image representation matching faster traditional approaches feature selection strategy developed based detecting salient image structures encoded naturally rectangle filters experiments variety test images show patch-based correlation method promising fast template matching crow summed-area tables texture mapping computer graphics efros freeman image quilting texture synthesis transfer siggraph pages hel-or hel-or real-time pattern matching projection kernels ieee pami jurie dhome real time robust template matching proc bmvc pages lewis fast template matching vision interface pages lowe distinctive image features scale-invariant keypoints int computer vision rosenfeld vanderbrug coarse-fine template matching ieee trans smc schweitzer bell fast template matching eccv pages tang tao fast multi-scale template matching binary features ieee wacv tao crabb tang non-orthogonal binary subspace applications computer vision int conf computer vision pages turk pentland face recognition eigenfaces proc cvpr pages uenohara kanade fourier karhunenloeve decomposition fast pattern matching large set templates ieee pami vernon machine vision automated visual inspection robot vision prentice hall viola jones rapid object detection boosted cascade simple features cvpr pages 
doi ultrasmedbio tomy wisconsin-madison conventional applied segmentation vector manual medical physicists volumes radiofrequency-induced coagulations automatic algorithm applied elastograms yielded results agreed manual delineation coagulations ultrasound med biol vol copyright world federation ultrasound medicine biology printed usa rights reserved front matter pathology images lesions algorithm successfully applied vivo elastograms e-mail wuliu wisc world federation ultrasound medicine biology key words ablation active contour models breast tumor elasticity imaging elastography gradient vector flow image segmentation multiresolution snakes strain ultrasound introduction image-guided radiofrequency tumor ablation provided effective safe means treat large variety benign malignant conditions holds promise treatment outpatient basis sanctis goldberg ablation interstitial focal ablative therapy electrode tumor heating cauterization tumor ionic agitation rapid vibration ions creates friction heating region-of-interest roi goal tumor ablation complete destruction tumor targets excessive damage surrounding healthy tissue imaging modalities dynamically precisely monitor cellular damage treatment important success ablation therapy goldberg ultrasound commonly modality guiding ablation procedures hepatic tumors goldberg giorgio hansler lesions suboptimally visualized ablation procedures performed computed tomography guidance cha antoch optimize electrode positioning monitor extent coagulation generally real-time monitoring elastography imaging modality based sensitive small elastic modulus kallel potential image differentiate thermal coagulation necrosis healthy surrounding tissues figure shows b-mode elastographic pathologic views typical thermal coagulation conventional b-mode image rf-induced coagulation exhibits hyperechoic hypoechoic regions apparent coagulation site poor contrast extremely difficult interventionist judge adequacy treatment margin delineation uncertain contrast thermal lesion low strain dark region elastogram fig address correspondence liu department medical physics wisconsin-madison ave madison usa e-mail wuliu wisc original contribution segmentation elastographic fine active contour liu james zagzebski udomchai techavipoo departments medical physics radiology biomedical computer engineering received august revised november abstract delineation tant clinical problem addressed produces images local strain small externally thermal coagulations paper presents automated elastographic data obtain area volume information method active contour initialization gradient optimization prior knowledge geometry algorithm shown comparable images coarse-tomodel varghese charles dyer timothy hall engineering computer sciences electrical madison usa final form november coagulation thermal lesion boundaries imporimaging modalities elastography compressions visualization approach thermal coagulations rapidly approach consists coarse-to-fine flow active contour model deformable contour general thermal coagulations performance delineation coagulations elastograms pathologic areas dark solid-line ultrasound medicine biology volume number ablation increase stiffness tissue treated site elastography ophir varghese detects images shown elastography exhibit high coagulation-to-liver contrast rf-induced thermal lesions good correlation pathology varghese liu varghese shi rapidly increasing research environment clinical settings fenster usage applies elastography advantages volumetric data conventional data quantitatively monitoring therapeutic procedures follow-up studies immense quantity data lead problems extracting surfaces volumes data set required manually tracing rf-induced coagulation boundaries requires substantial expertise experience image interpretation time-consuming tedious accurate reproducible fast segmentation techniques desired literature automated segmentation treated sites ablation segmentation techniques images reported applications echocardiographic corsi angelini breast horsch chang prostate data shen gong characteristic artefacts speckle shadowing intensity inhomogeneities low contrast ill-defined boundaries simple image feature-based thresholding edge-detection methods ineffective successful segmentation algorithms reported images based morphologic operations czerwinski gong neural networks binder wavelet fig left b-mode center elastographic freshly excised canine liver solid curves boundary coagulated region exhibits hyperechoic hypoechoic coagulated region low strain manually depicted coagulation boundary coagulated region coagulation necrosis darker zone charring analysis angelini markov random fields haas xiao brusseau gong incorporate preprocessing speckle reduction stick method czerwinski anisotropic diffusion perona malik intensity corrections xiao active contour models kass basis techniques medical image segmentation mcinerney terzopoulos initial contour energy field defined image data contour iteratively deformed desired shape position minimizing energy function energy function defined terms internal energy contour shape continuity smoothness external energy image features intensity gradient intensity possibly user-defined external constraints contours represented explicitly parametric active contours snakes kass implicitly level sets higher dimensional scalar function taking account intrinsic geometry contour geometric active contour based contour evolution methods osher sethian parametric sebbahi chang geometric pathak corsi active contour models segmentation magnetic resonance imaging mri images work applies parametric active contour model us-based elastography variant active contours called gradient vector flow gvf snakes introduced prince improve performance contour segmentation gvf active contour larger capture range sensitive contour initialization exhibits convergence boundary concavities convenimages typical thermal coagulation liver defined b-mode image note b-mode boundary difficult delineate region elastogram dotted-line contour fresh pathology photograph shows white area contour outer boundary white region tional snakes technique recently segmenting breast tumors b-mode images energy-minimizing spline snake energy depends contour shape location image elastographic image segmentation liu chang tracking cardiac wall excursions echocardiography sanchez expected superior performance methodology gvf snake chosen segmenting thermal lesions elastograms study previous work techavipoo presented semiautomated segmentation method based simple morphologic operations find papers reporting segmentation elastographic images purpose paper describe fully automated method segment stiff lesions background elastographic data sets cross-sectional area volumetric measurements proposed algorithm based coarse-to-fine transformation gaussian pyramid burt adelson active contour initialization gradient vector flow active contour model deformable contour optimization prior knowledge geometry general thermal coagulations materials methods elastogram production ablation vitro performed specimens freshly excised canine liver tissue refer varghese details total coagulations created scanned measured obtain thermal coagulation area volume aloka ssd aloka tokyo japan real-time scanner -mm -mhz linear-ray transducer band width elastographic data produced acquiring echo data compressions scan planes separated -mm increments general scan planes contained thermal coagulation time-domain cross-correlation analysis echo signals preand postcompression data sets image plane performed window length overlap data segments compute tissue displacements axial strain estimated squares strain estimator kallel ophir kernel size scans liver specimens fixed formalin solution weeks sliced -mm intervals tissue slices transparent film photographically scanned fixed gross-pathology images obtain volume estimations thermal coagulation automated segmentation gradient vector flow snake algorithm kass cootes automatic segmentation thermal lesions snake defined construct contour thermal lesion circular spline central image data set energy minimized spline deformation local minima energy correspond desired image properties contour defined parametrically normalized arc length contour energy functional minimized kass total ext sum internal energy snake term caused bending external energy term based image properties govern relative influence terms continuity smoothness snake minimizing total solving euler equation kass application constants edge primes derivatives lesion boundary closed circular-like contour external energy thermal 
coagulation segmentation based edge features image ext edge grey level elastogram image blur function perpendicular contour orientation euler equation viewed force balance equation int ext internal force int discourages stretching bending external potential force ext pulls snake desired image edges thermal lesions homogeneous regions image ext force drives snake desired boundary overcome gradient vector flow gvf snake method prince defines external force field vector field minimizes energy functional edge edge dxdy regularization parameter controlling trade-off term term integrand depends noise scales tracing boundary detected coarse resolution highest resolution yields accuultrasound medicine biology volume number image partial derivatives respect homogeneous region term dominates slowly varying field region close object boundary term dominates minimized setting edge written potential force traditional snake starts force equalization function replaces term edge eqn note eqn eqn calculate calculated treating function time solving diffusion equations iteratively discussed prince computing snake solved perturbation iteration methods discussed kass contour initialization critical step snake algorithm initial contour generally close desired contour avoid trapped local minimum energy function correspond true object boundary interactive algorithms generally image-specific initialization yezzi corsi horsch wolf fenster downey lin interactive correction results koning wolf procedures start placing initial points contour close desired feature operators corsi fenster downey lin initial seed yezzi horsch wolf images distinct regions manual initialization substituted initial curvedetection scheme make segmentation fully automated tumor boundary breast image detected automatic thresholding morphologic operations boundary blood arterial wall computed separating regions statistical properties image texture chang shen gvf snakes larger capture range traditional snakes initialization contour critical successful segmentation relax initialization constraint coarse-to-fine segmentation approach single choice resolution generally produce good segmentation coarse level coagulation boundary accurately delineated smoothing reduces shape detail hand fine resolution representations edges jagged spurious boundaries multiresolution approach boundaries detected range rate spatial localization flowchart segmentation process presented fig accomplish multiresolution approach gaussian pyramid burt adelson constructed hierarchically convolving original image spatial gaussian kernel smoothing gaussians low pass filters resampling level pixel level weighted average pixel values lower level level pyramid represents image times lower resolution image level neighboring pixels upper-level image independent subsampling reduces correlation snake algorithm applied level level starting lowest resolution image pyramid interpolating result level initial contour higher resolution level steps ensure initial contour inside coagulation mechanism initialized partially coagulation area attracted edges image coagulation boundary spurious edges coagulation area distal side coagulation signal-to-noise ratio low elastogram shadowing effect final contour image plane output snake applying interpolated result highest resolution image pyramid achieve fully automatic segmentation shown fig template matching coarse level gaussian pyramid performed determine initial contour snake template matching low-resolution image fast immune noise thermal coagulations stiffer surrounding tissue show dark regions elastogram light background prior knowledge thermal coagulation spherical ellipsoidal shape ablation technique tissue response heating circular disks variable sizes outer ring area central disk trial templates goals find location size template matched elastogram image matching position defined normalized cross-correlation template image maximum simple disk template homogeneous region elastogram image yield high correlation template disk-annulus template avoids complication chose circular template ellipsoidal template based prior knowledge lesion shapes stated number degrees freeelevational separation elastograms compromise dictated acquire preand elastographic image segmentation liu dom computation time template matching saved losing performance fast algorithm based fast fourier transform compute cross-correlation figure matching templates data sets study -mm fig flowchart segmentation process matching templates area outer ring equals area circular disk postcompression data sets manual translation system desire experiment statistically significant number thermal lesions plane-to-plane image features sufficiently consistent terms edges lesions warrant full active surface simple interpolation elevational direction introduce artifacts data essentially reconstructed slices algorithm applied repeatedly sequence images starting central plane data set moving adjacent planes number levels gaussian pyramid central slice determined initial estimate lesion size pixels template-matching result number depends resolution image size coagulations wanted lesion radius represented pixels top level lowest resolution pyramid ensure edge information sufficient detail detected active contour plane central initial lesion location geometry number levels estimated processed adjacent plane gaussian blurring kernel size pixels larger higher resolution levels pyramid results figure shows performance active contour method resolution levels cases elastographic data rightmost images original elastograms level gaussian pyramid highest resolution leftmost images level images level level images higher level images rescaled size original images display image dashed line represents initial contour solid line shows computed contour lowest resolution level snake initialized template matching mentioned previous section note initial contours circles matching circle initialization circle center center matching circle radius radius matching circle approach ensured initial contour inside coagulation deformed snake computed lowest level interpolated level shrunk serve initial guess level continued recursively level reached notice fig snake gradually refined finer scales ultrasound medicine biology volume number boundary shape level generally remained similar levels give performance initial contours data sets randomly selected ablation temperatures yielding coagulations sizes thermal lesions elastographic images data sets segmented sized initial contours comfig performance active contour method panel bottom panel elastographic pyramid highest resolution left level images rescaled size original images display purposes solid line table extent overlap areas volumes thermal segmented automatically initial contour radius central slice area overlap average volume overlap average pared results radius initial contour template size yields maximum correlation image slices results comparison listed table extent overlap areas volumes thermal lesions segmented manually segmented automatically shown sized initial contours overlap computed overlap manual automated manlevels cases top panel middle original elastograms level gaussian level level images higher level images image dashed line initial contour contour lesions elasticity images segmented manually sized initial contours resolution data center computed elastographic image segmentation liu ual automated represent intersection union table shows radius initial contour reduced performance started worse initial contours greater size results similar difference random test cases data sets reason discussed steps reliable detection coagulation boundary obtained fig ideal case automated segmentation traced stiffer region elastogram accurately figure shows difficult regions segment caused fig typical automated segmentation result images level images shown automated segmentation area coagulation method sufficiently robust find desired contour agrees manual segmentation experimental images similar fig small percentage images fig yielded results manual segmentation snake stop weak 
edge coagulation proceeded farther finer resolution images result improved expected depending image quality unsatisfactory slices set elastograms data set sufficient information estimate lesion volume figure typical automated segmentation result data set b-mode slice volume shown contours results elastography ultrasound medicine biology volume number data set fig presents b-mode images level images shown fig slice volume shown contours segmentation results result shows selecting initial contour central slice algorithm successfully segmented coagulation remaining slice figure showing method desirable results difficult case tests parameters algorithm chosen applying algorithm training set thermal coagulations acquired visually judging desirability final contours set parameters remaining coagulations eqn eqn observed data final contours sensitive selection parameter values long neighborhood values mentioned figure surface reconstruction results thermal coagulations problem surface reconstruction series image slices lack information adjacent planes effective interpolation method data desired reconstruction automatic segmentation ultimate goal manual tracing commonly clinics considered accurate reproducible segmentation method problems based thermal coagulations average area overlap central slice elastograms results image plane average volume overlap segmented coagulations figure shows scatterplot coagulation volume measurements comfig automated segmentation paring manually delineated volumes automatically segmented volumes highly correlated correlation coefficient indicating automatically segmented results good assume manual depiction standard figure displays scatterplots coagulation volume measurements comparing manual automated elastography volumes fixed tissue pathology manually depicted medical physicist correlation coefficient manually delineated elastography volumes pathology volumes automated elastography volumes pathology volumes elastography slightly underestimate actual coagulation size found gross pathology liu high correlation demonstrates elastograms valuable result elastography data set fig reconstructed thermal coagulation surface elastographic image segmentation liu coagulation observation results fig support contention proposed segmentation algorithm successfully application discussion segmentation algorithm option allowing users examine automated segmentation results edit unsatisfactory parts interactively physicians automated segmentation tool obtain diagnostically information quickly accurately cases allowing full control results goal segment rapidly accurately seeking user interaction interactive correction automated-manual correlation analysis algorithm implemented matlab version mathworks natick usa takes tens seconds process image slices -ghz -gb ram computer running windows computationally intensive parts written incorporated matlab data sets computation time data set segmentation minimum maximum execution times combined close correspondence manual automated segmentation results demonstrates automated algorithm provide quantitative thermal coagulation segmentations comparable obtained manual delineation results presented automated segmentation vitro ablation specimens similar refig coagulation volumes obtained manual depiction volumes computed automated segmentation squares fit line equal size fig coagulation volume measurements comparing manual automated elastography volumes volumes obtained fixed tissue pathology fig examples automated segmentation thermal coagulations created pig liver vivo real-time segmentation ultrasound medicine biology volume number sults expected vivo conditions illustrate vivo elastograms thermal coagulations pig liver test algorithm varghese images acquired tested time results promising shown fig elastogram image quality lower image quality vitro studies presented caused part probe compressor external plate compressor study boundary depiction agree traced manually potentially significant application segmentation algorithm real-time breast elastography real-time elasticity imaging system developed zhu hall hall side-by-side synchronous b-mode elasticity images frame rate high control boundary conditions freehand deformation consistently obtain high-quality elasticity images preliminary clinical trials system demonstrated elasticity imaging information diagnosing solid breast tumors regner diagnosis breast cancer made extent disease assessed treatment planning prognosis evaluation efficacy preoperative chemotherapy kepple studies demonstrated b-mode ultrasonic imaging underestimate preoperative size tumor compared pathology measurement pritt recent work hall regner shown size breast tumor larger elasticity images shown mode images reasonable hypothesis tumor size elasticity images accurate fig side-by-side left synchronous vivo automated lesion representation measured pathology automated detection tumor margin breast elastography desired diagnostic preliminary segmentation result proposed algorithm shown fig computer-generated contour successfully delineated breast lesion suggesting feasible approach coarse-to-fine active contour method effective segmenting regions images regular well-circumscribed single margins clinical cases exhibit degree regularity examples include speculated breast masses hall thermal coagulations created multiple probes lee coagulations formed large blood vessels worthwhile investigate alternative segmentation methods watershed transformation level sets watershed transformation beucher lantuejoul region-segmentation method topographic hydrology concepts points drain common catchment basin part watershed morphologic multiresolution methods applied reduce oversegmentation characteristic algorithm level sets osher sethian refer contour evolution method defines problem higher dimension handle features active contour method difficulties including self-intersecting contours topology watershed transformation levels sets applied segmenting structures b-mode images krivanek sonka huang chen angelini moon role elastographic image segmentation topic future work b-mode elasticity images human breast result elasticity image summary fenster downey cardinal three-dimensional ultrasound imaging phys med biol elastographic image segmentation liu automated segmentation thermal coagulations viewed elastograms achieved active contours scheme involving coarse-to-fine method active contour initialization gradient vector flow active contour model deformable contour optimization prior knowledge geometry general thermal coagulations yields contour results comparable manual delineation algorithm suitable evaluating performance vivo applications elastography acknowledgements research supported part whitaker foundation grant rg- national institutes health grants angelini homma pearson holmes laine segmentation real-time three-dimensional ultrasound quantification ventricular function clinical study left ventricles ultrasound med biol angelini laine takuma holmes homma volume quantification spatiotemporal analysis real-time echocardiography ieee trans med imaging antoch kuehl vogt debatin stattaus volume imaging optimal placement radiofrequency ablation probes liver lesions vasc interv radiol beucher lantuejoul watersheds contour detection international workshop image processing real time edge motion detection estimation rennes france binder sussner moertl artificial neural networks spatial temporal contour linking automated endocardial contour detection echocardiograms approach determine left ventricular contractile function ultrasound med biol brusseau korte mastik schaar van der steen fully automatic luminal contour segmentation intracoronary ultrasound imaging statistical approach ieee trans med imaging burt adelson multiresolution spline application image mosaics acm trans graphics cha lee gurney versus sonography monitoring radiofrequency ablation porcine liver ajr roentgenol chang moon segmentation breast tumor three-dimensional ultrasound images three-dimensional discrete active contour model ultrasound med biol chang tseng chen moon snake margin evaluation malignant breast tumor excision mammotome ieee trans inf technol biomed cootes hill taylor haslam active models locating structure medical images image vision comput corsi saracino sarti lamberti left ventricular volume estimation real-time three-dimensional echocardiography ieee trans med imaging czerwinski jones brien detection lines boundaries speckle images application medical ultrasound ieee trans med imaging sanctis goldberg mueller percutaneous treatment hepatic neoplasms review current techniques cardiovasc intervent 
radiol fenster downey three-dimensional ultrasound imaging quantifying organ pathology volumes anal bioanal chem giorgio tarantino stefano percutaneous sonographically guided saline-enhanced radiofrequency ablation hepatocellular carcinoma ajr roentgenol goldberg charboneau dodd iii image-guided tumor ablation proposal standardization terms reporting criteria radiology goldberg gazelle mueller thermal ablation therapy focal malignancy unified approach underlying principles techniques diagnostic imaging guidance ajr roentgenol gong pathak haynor cho kim parametric shape modeling deformable superellipses prostate segmentation ieee trans med imaging haas ermert holt segmentation intravascular ultrasonic images based random field model ultrasound med biol hall zhu spalding vivo real-time freehand palpation imaging ultrasound med biol hansler neureiter wasserburger percutaneous usguided radiofrequency ablation perfused needle applicators improved survival tumor model rabbits radiology horsch giger venta vyborny computerized diagnosis breast lesions ultrasound med phys huang chen watershed segmentation breast tumor sonography ultrasound med biol kallel ophir least-squares strain estimator elastography ultrason imaging kallel ophir magee krouskop elastographic imaging low-contrast elastic modulus distributions tissue ultrasound med biol kass witkin terzopoulos snakes active contour models int comput vision kepple van zee dowlatshahi minimally invasive breast surgery coll surg koning dijkstra von birgelen advanced contour detection three-dimensional intracoronary ultrasound validation vitro vivo int cardiovasc imaging krivanek sonka ovarian ultrasound image analysis follicle segmentation ieee trans med imaging lee haemmerich wright multiple probe radiofrequency ablation pilot study animal model vasc interv radiol lin duncan combinative multi-scale level set framework echocardiographic image segmentation med image anal liu techavipoo varghese elastographic versus x-ray imaging radio frequency ablation coagulations vitro study med phys mcinerney terzopoulos deformable models medical image analysis survey med image anal moon chang chen chen chen solid breast masses classification computer-aided analysis continuous images obtained probe compression radiology ophir cespedes ponnekanti yazdi elastography quantitative method imaging elasticity biological tissues ultrason imaging osher sethian fronts propagating curvature-dependent speed algorithms based hamilton jacobi formulations comput phys pathak chalana kim interactive automatic fetal head measurements ultrasound images multimedia computer technology ultrasound med biol perona malik scale-space edge detection anisotropic diffusion ieee trans pattern anal machine intell pritt ashikaga oppenheimer weaver influence breast cancer histology relationship ultrasound pathology tumor size measurements mod pathol regner hesley hangiandreou ultrasound strain imaging evaluation breast lesions clinical experience multiple observers radiology press sanchez zapata ruiz active contour model algorithm tracking endocardiac boundaries echocardiographic sequences crit rev biomed eng sebbahi herment cesare mousseaux multimodality cardiovascular image segmentation deformable contour model comput med imaging graph shen zhan davatzikos segmentation prostate boundaries ultrasound images statistical shape model ieee trans med imaging techavipoo varghese zagzebski chen liu semiautomated thermal lesion segmentation three-dimensional elastographic imaging ultrasound med biol varghese shi elastographic imaging thermal lesions liver in-vivo diaphragmatic stimuli ultrason imaging varghese ophir konofagou kallel righetti tradeoffs elastographic imaging ultrason imaging varghese techavipoo liu elastographic measurement area volume thermal lesions resulting radiofrequency ablation pathologic correlation ajr roentgenol varghese zagzebski lee elastographic imaging thermal lesions liver vivo radiofrequency ablation preliminary results ultrasound med biol wolf hastenteufel simone ropes semiautomated segmentation method accelerated analysis three-dimensional echocardiographic data ieee trans med imaging xiao brady noble zhang segmentation ultrasound b-mode images intensity inhomogeneity correction ieee trans med imaging prince snake shapes gradient vector flow ieee trans image process yezzi kichenassamy kumar olver tannenbaum geometric snake model segmentation medical imagery ieee trans med imaging zhu hall modified block matching method real-time freehand strain imaging ultrason imaging ultrasound medicine biology volume number 

ieee transactions systems man cybernetics part cybernetics vol june learning examples small sample case face expression recognition guodong guo charles dyer fellow ieee abstract example-based learning computer vision difficult large number examples represent pattern object class situations learning small number samples practical study issue task face expression recognition small number training images expression considered technique based linear programming feature selection classifier training introduced pairwise framework feature selection classes simultaneously presented experimental results compare method simplified bayes classifier support vector machine adaboost finally algorithm analyzed categorization algorithms learning examples small sample case index terms adaboost bayes decision face expression recognition feature selection large margin classifiers learning linear programming gabor wavelets small sample case statistical learning support vector machine introduction xample-based learning computer vision pattern recognition important problem easy collect large number examples represent pattern object class learning small sample case practical interest reason difficulty collecting image data object face recognition face expression recognition fer easy collect database large number images individual expression recently approaches training face recognition image retrieval user give positive negative examples based relevance feedback impractical expect user provide large number images difficult collect training data cover cases instance face recognition factors including illumination expression pose facial hair eye glasses age influence image face practical collect images covering situation learning small incomplete set samples essential issue computer vision paper fer task study problem manuscript received july revised april work supported national science foundation nsf grant iisand wisconsin paper recommended associate editor bhanu authors computer sciences department wisconsin-madison madison usa digital object identifier tsmcb face expression recognition fer computer applications human behavior understanding perceptual user interfaces interactive computer games automatic fer system step face detection localization cluttered scene relevant features face extracted finally expression classified based extracted features unlike face recognition fer focuses discern expressions individuals people show expression ways fer problem challenging versions fer problem depending image sequence input dynamic characteristics expressions analyzed single image input expressions distinguished based static differences review approaches fer interested fer single images previous work padgett cottrell pixel blocks feature regions represent expressions cottrell metcalfe principal component analysis feed-forward neural networks rahardja pyramid structure neural networks lanitis parameterized deformable templates represent face expressions lyons zhang demonstrated advantages gabor wavelet coefficients code face expressions paper gabor filters facial feature extraction major focus evaluation methods fer recently large margin classifiers support vector machines svms adaboost studied machine learning community solving vision problems interested fer learning small sample case knowledge time large margin classifiers evaluated fer feature selection pattern recognition goal feature selection preprocess image data obtain small set important properties retaining salient characteristics data benefits feature selection reduce recognition time reducing amount data analyzed cases produce classification accuracy due finite sample size effects feature selection methods involve evaluating feature subsets criterion probability error difficulty approach applied real ieee ieee transactions systems man cybernetics part cybernetics vol june problems large feature dimensionality high computational complexity involved searching exponential space feature subsets jain zongker evaluated search algorithms feature subset selection found sequential forward floating selection sffs algorithm proposed pudil performed sffs time consuming number features large vailaya sffs method select features two-class problem reported sffs required days computation time issue feature selection methods curse dimensionality problem feature selection number features large number samples small situation common computer vision tasks object recognition tens training samples images object hundreds candidate features extracted image problem determining features select data set traditional feature selection methods address problem require user choose number features parameter set sound basis adaboost method formulated tieu viola image retrieval heuristically select subset features learning classifier svm select features standard dual formulation simplified bayes classifier feature selection heuristic assuming features independent classes covariance matrix order simplify density estimation problem class small sample case heuristic strategy adaboost simplified bayes classifier solve feature selection problem introduce algorithm based linear programming address feature selection problem simultaneously classifier training heuristics simplified bayes classifier adaboost organization paper section gabor filter bank design feature extraction methods section iii representative classifiers presented section introduces algorithm called fslp analyzes select features sound basis section argue pairwise feature selection framework superior selection classes presenting experimental results section give general analysis learning techniques section vii facial feature extraction fer common detect fiducial points compute features points image set fiducial points detected marked face image approaches facial feature extraction geometric positions fiducial points gabor filter coefficients fiducial points adaboost method meta-algorithm classification regression adaptively boosts series weak-learners make final decision variant adaboost lets weak-learner work single feature feature selection refer variant adaboost paper fig filter set spatial-frequency domain total gabor filters shown half-peak magnitude shown filter coefficients characterize face expressions geometric positions study gabor filtering facial feature extraction gabor filter bank two-dimensional gabor function fourier transform written frequency sinusoidal plane wave -axis space constants gaussian envelope axes filtering signal basis localized frequency characterization filters arbitrary orientations obtained rigid rotation coordinate system rotation angle earlier applications gabor filtering face recognition face expression classification investigators varied scale orientation filters gaussian envelope parameter fixed methodology questionable area energy distribution filters varies scale gaussian envelope vary filter size designed gabor filter bank based filters perviously texture segmentation image retrieval guo dyer learning examples small sample case fer fig thirty-four fiducial points face image gabor filter bank designed cover entire frequency spectrum words gabor filter set constructed half-peak magnitude filters frequency spectrum touch results formulas compute filter parameters denote lower upper center frequencies interest indices scale orientation number orientations number scales experiments scales orientations halfpeak support gabor filter bank shown fig differences strength responses image regions key multichannel approach face image analysis feature extraction gabor filtering amplitude values selected fiducial points face images features automatically extracting points open problem order focus study classifier performance manually marked fiducial points image typical positions fiducial points shown fig face image extracted feature vector dimension scales directions gabor filtering fer system approach fer summarized fig input face image convolved gabor filters results filtered images amplitude filtered image selected fiducial points feature values feature vector ieee transactions systems man cybernetics part cybernetics vol june fig framework fer system dashed blocks 
represent operations solid blocks filtered images feature vector class labels classification classifiers learning stage classifiers perform feature selection iii classifiers section standard classifiers fer bayes classifier optimal probability distribution class bayes classifier small sample case make assumptions simplify density estimation problem training data call simplified bayes classifier paper classifier svm adaboost method recall variant adaboost called large margin classifiers machine learning community remainder section relevant details classifiers reviewed algorithm based introduced section simplified bayes classifier bayes classifier yields minimum error rates underlying probability density function pdf posteriori probability pattern belonging class bayes rule priori probability conditional probability density function mixture density maximum posteriori map decision bayes classifier two-class multiclass classifications fer training images expression reliably estimate conditional density function fig classification classes hyperplanes arbitrary hyperplanes optimal separating hyperplane largest margin identified dashed lines support vectors class compromise assume within-class densities modeled normal distributions within-class covariance matrices identical diagonal liu wechsler simplification face recognition evaluate approach problem fer parameters normal distributions estimated represents samples class feature dimension component estimated sample variance one-dimensional feature subspace element sample element number classes support vector machine set training vectors belonging separate classes find hyperplane separate data fig shows hyperplanes shown fig maximizes margin distance hyperplane nearest data point class linear classifier called optimal separating hyperplane osh solution optimization problem svms saddle point lagrange functional guo dyer learning examples small sample case fer lagrange multipliers classical lagrangian duality enables primal problem transformed dual problem subject easier solve solution support vectors solve nonseparable problem cortes vapnik introduced slack variables penalty function measure misclassification error solution identical separable case modification lagrange multipliers choice critical practice experiments details nonseparable case svms realize nonlinear discrimination kernel mapping samples input space separated linear hyperplane linearly separated nonlinearly mapped feature space note feature space svms image feature space kernel functions previously nonlinear mapping gaussian radial basis function grbf commonly experiments grbf kernel form parameter width gaussian function kernel function svm classifier adaboost boosting method combining collection weak classification functions weak learners form stronger classifier adaboost adaptive algorithm boosts sequence classifiers weights updated dynamically errors earlier learning adaboost belongs class large margin classifiers original adaboost method works features tieu viola adapted adaboost algorithm image retrieval face detection single feature time weak learner threshold separate classes computed midpoint classes dimension rounds boosting features selected weak classifiers tieu viola adaboost algorithm adaboost algorithm input training examples number iterations initialize weights train hypothesis feature error choose update classified correctly incorrectly normalize weights distribution output final hypothesis discrimination feature selection linear programming contrast methods section deal classification problem introduce algorithm based address feature selection classifier training simultaneously analyze technique circumvents curse dimensionality problem feature selection small sample case important result note standard svm feature selection simplified bayes adaboost methods choose features heuristically determine section details formulation early technique address pattern separation problem robust technique proposed deal linear inseparability recently framework extended cope feature selection problem briefly describe formulation sets points seek linear function function determines plane normal separates points set points represented matrix set points represented matrix normalization satisfy ieee transactions systems man cybernetics part cybernetics vol june vector dimension practically overlap classes minimize norm average error denotes vector components main reasons choosing -norm easy formulate linear program theoretical properties make computationally efficient -norm sensitive outliers occurring underlying data distributions pronounced tails equation modeled robust linear programming rlp problem minimizes average sum misclassification errors points bounding planes represents transpose problem solves classification problem feature selection problem feature selection strategy integrated objective function order simultaneously select subset features feature selection defined suppressing components normal vector separating plane needed obtain acceptable discrimination sets accomplish extra term added objective function reformulating components equal components nonzero components equal components count nonzero elements vector key integrating feature selection classifier training problem balances error discrimination sets number nonzero elements element feature removed features nonzero components normal selected optimization bradley mangasarian developed method called feature selection concave minimization fsv deal term objective function introduced variable eliminate absolute term replacing adding constraint models vector step function discontinuous concave exponential approximate order smooth solution required introduction additional parameter alternatively computing concave exponential approximation simple term parameter component-wise absolute produces formulation call feature selection linear programming fslp fslp formulation slightly fsv method fslp simpler optimize easier analyze relation margin noted normal separating hyperplane small number nonzero components large number components experiments features components normal vector discarded nonzero components avoiding curse dimensionality authors address curse dimensionality issue focused developing fsv method smooth solution explicitly connected margin analysis experiments data sets number examples larger number feature dimensions show fslp method related margin maximization makes avoid curse dimensionality problem term objective function absolute normal due constraint minimize objective function requires minimizing term means minimizing -norm normal minimizing equivalent maximizing objective function maximizes recall bounding hyperplanes discriminating hyperplane midway hyperplanes distance point hyperplane defined point bounding hyperplanes satisfies guo dyer learning examples small sample case fer minimum distance bounding hyperplanes defined margin similar developing svms -norm nonincreasing monotonic equivalent -norm convex maximizing approximately maximize result term objective function effect maximizing margin maximizing margin circumvent curse dimensionality problem svms classify data high-dimensional feature spaces fslp method similar advantage incorporates feature selection process based margin size fact term objective function disappears case classification performance worsens experiments remaining terms property maximizing margin item encodes classification error rate leads overfitting small sample case term effects feature selection margin maximization effects inseparable feature selection fslp based maximizing margin heuristics curse dimensionality problem occurs computer vision tasks number training examples smaller feature dimension analysis fslp circumvents problem important result demonstration property shown empirically section airwise feature selection multiclass classification problem typical strategy select fixed subset features class discriminate classes simple strategy optimal discriminating classes intuitively features distinguish letter differ features distinguishing features selected classes simultaneously problems occur complex select features separate class classes approach works number selected features large strategy select feature subset pair classes pairwise feature selection multiclass classification problems computer vision face recognition basic idea pairwise feature selection choose relevant features pair classes original high-dimensional data feature index table created stored pair classes feature selection 
method -class classification problem pairs system store table items item array indices features selected pair classes suppose original feature dimension average number features pairs number features selected traditional techniques relation system stores integers index features recognition features pairwise comparison framework binary tournament scheme features traditional feature selection schemes matter size hand one-versus-the-remaining scheme recognition features note pairwise feature selection framework one-versus-the-remaining recognition scheme requirement pairwise feature selection space store index table note feature indices classes indices classes partially overlap pairwise feature selection count number occurrence feature pairs research simplified bayes classifier adaboost fslp pairwise feature selection shown experiments features selected pairs top discriminating features simplified bayes classifier training adaboost features selected classification error weak learner previous step svms feature selection trivial general framework pairwise feature selection work problem select features svms pair classes ranking strategy simple select features svms reason difference optimization criterion svms versus methods bayes classifier study features svms training classification fslp technique automatically determine number features select pair classes heuristics bayes classifier adaboost determine number features feature selection difficult case small number examples bias contrast fslp method select features maximizing margin circumventing curse dimensionality problem expression recognition experiments section experimentally compare methods fer case small number training images expression face expression database face expression database experiments images ten japanese women person images expressions neutral happy sad surprise anger disgust fear image size traditional techniques feature selection choose features discriminate classes return number features class computations recognition scheme pairwise computations recognition one-versus-the-remaining ieee transactions systems man cybernetics part cybernetics vol june fig images face expression database left angry disgust fear happy neutral sad surprise table comparison recognition accuracy number features bayes classifier feature selection bayes bayes pairwise-greedy feature selection bayes adaboost linear svm l-svm nonlinear svm nl-svm fslp pixels examples shown fig information database image collection data description human ranking database experimental results experimental procedure tenfold cross-validation deal small sample size database divided randomly ten roughly equal-sized parts data parts training classifiers part testing procedure repeated ten times part test set standard methodology machine learning bayes classifier adaboost adaboost method adapted viola solving computer vision problems image retrieval face detection greedy strategy select features learning phase greedy feature selection bayes classifier assuming feature independence incrementally adding discriminating features fig shows recognition performance adaboost bayes classifiers function number features selected features sufficient algorithms performance adaboost algorithm improve features added bayes classifier reached performance features performance deteriorated slightly features recognition accuracy bayes classifier shown table features overfitting training data problem bayes method feature selection adaboost method peak performance fig recognition accuracies bayes classifier adaboost function number features selected features table pair classes shown fig features slightly lowered recognition accuracy summary adaboost bayes classifiers combined greedy feature selection strategy selected large number features recognition accuracies low fslp svm fslp algorithm found parameter set small experiments larger number slightly worsen performance fslp balances error minimization margin maximization order accomplish feature selection guo dyer learning examples small sample case fer table performance fslp compared linear svm l-svm grbf nonlinear svm nl-svm tenfold cross-validation average number selected features ave pairwise classifier total number selected features total pairs shown addition number errors test examples run classifier training open problem set automatically training data make system completely automatic solve -expression classification problem simple binary tree tournament scheme pairwise comparisons experimental results fslp method shown table feature selection performed pair classes resulting total pairs -expression classification problem column table shows number selected features average pairwise classifiers ranging ten runs average number features selected ten runs sparse set features automatically selected original features extracted face image demonstrates fslp significantly reduce number feature dimensions user interaction column table shows total number features selected fslp pairwise classifiers test set features discriminating pair angry happy separating pair angry sad number features selected pairs larger pair instance features selected pairwise classifiers set number smaller features hand frequency occurrence features pairs classes variable shown histogram fig note features frequently times pairs discriminative pairs classes feature pairs column table lists number classification errors test examples fslp data set average ten runs svms give high recognition accuracy large number training examples provided interested performance small sample case clasfig histogram frequency occurrence features training set pairwise fslp classifiers sification errors linear nonlinear svms features shown columns table nonlinear svm grbf kernel empirically set width parameter maximum error fslp ten runs larger errors linear svms nonlinear svms average number errors ten runs similar fslp linear svm errors nonlinear svm errors recognition accuracies methods table comparable notice average number features selected fslp svms computation time fslp short training recognition phases run times minutes train classifiers linux machine -ghz pentium processor matlab implementation cplex recognition accuracy svms comparable fslp major weakness svms high computational cost precludes real-time applications addition svms formulated quadratic programming problem difficult svms feature selection directly researchers proposed approximations svm feature selection training svm training set computing approximations reduce number features two-step approach guarantee selection feature subset finally svm approximations determine automatically features contrary fslp addresses issues comparison previous approaches face expression database compared recognition performance previously published results neural network recognition accuracy problematic images database discarded accuracy result linear discriminant analysis lda reported included people face images images conclusion ieee transactions systems man cybernetics part cybernetics vol june fslp comparable results neural network lda methods fslp select small number features automatically summary based experiments presented conclusions made simplified bayes classifier adaboost method perform small sample case svms solve recognition problem feature selection capability flsp algorithm efficiently solve feature selection classifier training problems simultaneously general analysis algorithms section vii discussion based experimental results section present general analysis learning small number examples fslp svms high recognition accuracy adaboost simplified bayes classifiers gave lower accuracy lower difference answer question divide algorithms broad categories probability distribution based methods including simplified bayes classifier adaboost marginbased methods fslp svms general adaboost called large margin classifier machine learning probability distribution adaboost sensitive number examples categorization reflects large difference experimental results small sample case probability distribution based learning bayes classifier estimate probability distribution class small sample case hard impossible small number examples span 
underlying distribution unseen examples estimated probability distribution biased real consequence low accuracy occur simplified bayes decision assumes independent gaussian distributions simplified problem class density estimation experiments estimation biased problem overfitting pairwise feature selection framework improves classification accuracy extent adaboost technique combine weak learners work distributions training examples theoretically requirement adaboost weak learner performance algorithm detail probability distribution round distribution updated round error rate round small sample case small number examples distributed general positions biased positions unseen examples estimated error rate biased error rate estimated large number examples distribution biased bias accumulate round result achieve original goal boosting focuses hard general examples extreme case small number examples completely separated classes add outliers overlap classes adaboost concentrate hard outliers successive boosting rounds result final classifier biased outliers contrary margin-based svms fslp deal outliers slack variables margin definitions adaboost svm adaboost margin defined margin adaboost biased small sample case biased estimation note adaboost good performance large number examples contrast margin svm defined linear combination support vectors margin svm relation probability distribution error rate experiments accuracy adaboost low similar simplified bayes classifier decision feature dimension similar weak learner adaboost demonstrates adaboost work small sample case fact observed performance adaboost lower svm image retrieval relevance feedback learning problem small number samples based discussion bayes adaboost methods probability distribution based learning schemes probability estimation sensitive number examples precisely distribution examples methods general solve learning problem small sample case margin-based learning svms well-known margin-based discrimination svms applied vision problems face detection large number examples provided training experiments demonstrate good generalization ability small sample case maximizing margin sensitive number training examples nonparametric characteristic reader find analysis generalization capability svms additional experiments small sample case fslp algorithm maximizes -norm margin approximates -norm margin svms earlier fslp select features avoid curse dimensionality problem small sample case section svms fslp algorithm maximizes margin insensitive number examples contrast probability estimation based methods guo dyer learning examples small sample case fer fslp method similar svms maximize margin fslp formulated directly primal problem -norm resulting problem svms transformed dual problem -norm resulting quadratic programming problem direct solution svms dual variables defining support vectors difference fslp solve feature selection problem discrimination function svms short margin-based learning sensitive number examples perform small sample case fslp method deal feature selection problem viii concluding remarks paper classification methods compared case small number training examples class probability distribution based learning methods simplified bayes classifier adaboost solve problem margin-based methods fslp svms accurately solve recognition problem small sample case fslp address feature selection problem avoiding curse dimensionality major contributions systematic evaluation popular methods machine learning vision problem small sample case introduction algorithm called fslp analysis feature selection classifier training circumventing curse dimensionality problem analysis expected relative performance algorithms learning small sample case classification task acknowledgment authors mangasarian wright linear programming technique lyons providing face expression database support national science foundation wisconsin gratefully acknowledged bennett mangasarian robust linear programming discrimination linearly inseparable sets optimiz meth softw vol bradley mangasarian feature selection concave minimization support vector machines proc int conf machine learning cortes vapnik support vector networks mach learn vol cottrell metcalfe face gender emotion recognition holons adv neural inform process syst daugman uncertainty relation resolution space spatial frequency orientation optimized tow-dimensional visual cortical filters opt soc amer vol duin classifiers empty spaces proc int conf pattern recognit vol freund schapire decision-theoretic generalization online learning application boosting comp syst sci vol fukunage introduction statistical pattern recognition york academic guo dyer simultaneous feature selection classifier training linear programming case study face expression recognition proc cvpr vol jun guo jain zhang learning similarity measure natural image retrieval relevance feedback proc cvpr vol guo chan face recognition support vector machines image vis comput vol guo zhang pairwise face recognition proc iccv vol jain farrokhnia unsupervised texture segmentation gabor filters pattern recognit vol jain zongker feature selection evaluation application small sample performance ieee trans pattern anal mach intell vol feb lades vorbruggen buhmann lange von der malsburg wurtz konen distortion invariant object recognition dynamic link architecture ieee trans comput vol mar lanitis taylor cootes automatic interpretation coding face images flexible models ieee trans pattern anal mach intell vol jul liu wechsler probablistic reasoning models face recognition proc cvpr lyons akamatsu kamachi gyoba coding facial expressions gabor wavelets proc ieee int conf automatic face gesture recognition lyons budynek akamatsu automatic classification single facial images ieee trans pattern anal mach intell vol dec mangasarian linear nonlinear separation patterns linear programming oper res vol manjunath texture features browsing retrieval image data ieee trans pattern anal mach intell vol aug martinez recognizing imprecisely localized partially occluded expression variant faces single sample class ieee trans pattern anal mach intell vol jun osuna freund girosi training support vector machines application face detection proc computer vision pattern recognition conf padgett cottrell identifying emotion static images proc joint symp neural computation vol pantie rothkrantz automatic analysis facial expressions state art ieee trans pattern anal mach intell vol dec pudil novovicova kittler floating search methods feature selection pattern recognit lett vol rahardja sowmya wilson neural network aproach component versus holistic recognition facial expressions images spie proc intelligent robots computer vision algorithms techniques vol rockafellar convex analysis princeton princeton univ press schapire freund bartlett lee boosting margin explanation effectiveness voting mehtods annal statist vol tieu viola boosting image retrieval proc computer vision pattern recognition conf vol vailaya semantic classification image database dissertation michigan state univ east lansing vapnik statistical learning theory york wiley viola jones rapid object detection boosted cascade simple features proc cvpr vol weiss kulikowski computer systems learn san mateo morgan kaufmann weston feature selection svms adv neural inform process syst vol wiskott fellous kruger von der malsburg face recognition elastic bunch graph matching ieee trans pattern anal mach intell vol jul zhang feature-based facial expression recognition sensitivity analysis experiments multi-layer perceptron int pattern recognit artif intell vol zhang lyons schuster akamatsu comparison geometry-based gabor-wavelets-based facial expression recognition multi-lyaer perceptron proc ieee int conf automatic face gesture recognition ieee transactions systems man cybernetics part cybernetics vol june guodong guo received degree automation tsinghua beijing 
china degree pattern recognition intelligent control institute automation chinese academy sciences research assistant computer sciences department wisconsin-madison uw-madison visiting researcher inria sophia antipolis france ritsumeikan japan nanyang technological singapore worked microsoft research china year moved uw-madison research interests include computer vision machine learning multimedia information retrieval face recognition image analysis published technical papers areas charles dyer received degree mathematical sciences stanford stanford degree computer science ucla degree computer science maryland college park assistant professor department electrical engineering computer science illinois chicago faculty wisconsin madison professor computer sciences professor biostatistics medical informatics worked field computer vision years published technical papers research focused shape image representations computer vision contributions topics quadtrees aspect graphs pyramid algorithms image-based modeling rendering object recognition motion analysis dyer general co-chair computer vision pattern recognition conference awarded visiting fellowship exeter college oxford oxford fellow iapr 
linear combination representation outlier detection motion tracking guodong guo charles dyer wisconsin-madison computer sciences department madison gdguo dyer wisc zhengyou zhang microsoft research microsoft redmond zhang microsoft abstract paper show ullman basri linear combination representation originally proposed alignment-based object recognition outlier detection motion tracking affine camera task realized image frames feature trajectories methods developed call linear combination frames linear combination trajectories robust estimation linear combination coefficients support vector regression svr algorithm compared ransac method svr based quadratic programming optimization efficiently deal percent outliers delivers consistent results ransac experiments linear combination representation svr straightforward manner previous factorization-based subspace separation methods experimental results presented real video sequences demonstrate effectiveness svr approaches including quantitative comparison svr ransac introduction robust tracking feature points image sequences great importance tasks video sequence alignment structure motion motion segmentation order obtain good results motion-based vision tasks feature trajectory outliers detected removed tracked features typically types errors location errors location feature distorted assumed exhibit gaussian behavior false matches mismatch features features originating scene points part trajectory kind error addressed rank constraint long location error big kind error accomodated estimation method small number false matches completely spoil estimation process final result useless demonstrated experiments torr proposedsome methodsfor outlierremovaland motion analysis based affine fundamental matrix affine trifocal tensor recently methods developed remove outliers video sequence based factorization methods approaches measured subspace distance based rankproperty observations claiming location errors outliers inflate rank subspace separation deal multiple motions increasing rank number motions user approach incorporated iterative weighting mechanism robust statistics factorization method works percentage outliers low m-estimator low break point recent work dealt missing features approaches based factorization method subspace separation factorize big matrix impose restrictive limitations paper show outlier detection point feature trajectories differentformulationcan employed results improvements existing methods linear combination images representation proposed ullman basri alignment-based object recognition detect outliers relation holds motion trajectories based ideas develop methods frame-based trajectory-based approach linear regression factorize large matrix impose restrictive limitations parameters involved regression linear combination representation directly advantage support vector regression svr deal high percentage outliers slack variables major contributions paper showing linear combination representations effectively outlier detection removal motion tracking designing algorithms eliminate outliers image sequences support vector regression automatic threshold selection cope high percentage outliers deliver consistent results ransac taking simpler approach parameters estimate factorizing large matrix imposing restrictive limitations subspace separation involving parametersas affine trifocal tensor paper organized section linear combination representations svr presented key issues discussed section methods developed section svr ransac robust regression section performance measure proposed evaluate outlier detection results proposed methods evaluated experimentally section linear combination representations suppose feature points tracked frames image sequence producing sequence image coordinates trajectory matrix coordinates row frame column feature trajectory similarly coordinates measurement matrix built combining bracketleftbig bracketrightbig ullman basri showed image affine camera represented linear combination model images property alignment-based object recognition weinshall tomasi observed arbitrary affine camera motion image trajectories scene point linear combinations trajectories points property invariant shape modeling image sequences terms measurement matrix ullman basri linear combination result represented andx coordinates point frames andl linear combination coefficients translation sequence similarly coordinates note coefficients coordinatesare necessarily call approach linear combination frames contrast weinshall tomasi result represented respect columns measurement matrix andx coordinates trajectories andl linear combination coefficients similarly coordinates coefficients coordinates matter outlier detection call approach linear combination trajectories machline discussed distinction row space column space measurement matrix based subspace analysis called bracketleftbig bracketrightbig trajectory matrix flow-field matrix underlying basis linear combination representations subspace analysis rankconstraint general affine motion rankwhen translation removed linear combination formulation svr techniques directly subspace factorization-based method support vector regression linear support vector regression svr estimate linear combination coefficients eqs simply describe basic theory svr show illustrate important issues basic theory problem approximating set data linear function optimal regression function min bardbl bardbl summationtext epsilon subject epsilon figure svr real data epsilon epsilon note support vectors marked circles true outliers case constant determines trade-off flatness data deviations slack variables cope infeasible constraints optimization problem epsilon -insensitive loss function epsilon braceleftbigg epsilon epsilon primal problem solved easily dual formulation resulting final solution summationdisplay lagrange multipliers determined plugging details toy illustrate svr idea toy points line remaining outliersdistributed sides line data outliers svr algorithm implemented gunn user interface linear kernel epsilon result shown fig observe line correctly estimated high percentage outliers hand observe svr returns support vectors input data close boundaries dashed lines outliers original data simply classify support vectors svs outliers increasing epsilon drag closest support vectors inside dashed boundaries outliers data returned support vectors increase epsilon gradually svs returned true outliers show fig worse slope line changed significantly demonstrates large epsilon good idea degrade model structure based experiment observe svr technique potentially deal data high percentage outliers classifying support vectors outliers workable large epsilon good idea svr small epsilon preferable large number outliers present result observations small fixed epsilon svr experiments knee pointof residuals section automatically choose threshold separate outliers inliers svr two-view affine matching iteratively changed epsilon big small classified svs outliers shown experiment figure approach misclassifies outliers big epsilon change underlying structure changing epsilon iteratively computationally expensive svr optimization executed epsilon linear combination representation eqs output variable regression standard svr code svm light experiments automatic threshold determination svr measure regression residual input data sort descending order typically curve sorted residuals shown fig obtained experiments section residual big outliers small inliers knee point curve marked circle fig point derivative attains maximum knee point threshold bigger pre-set epsilon svr svm regression residuals sorted knee point red circled feature point index regression residual figure svr residual curve sorted descending order computed knee point marked circle svr ransac svr method employs input points simultaneously epsilon -insensitiveloss functionproposedby vapnik approximation huber loss function m-estimators obtain sparse set support vectors m-estimator low break point robust regression svr hand introduce slack variables cope infeasible constraints dealing outliers extent slack variables quadratic programming svr potential deal high percentage outliers theoretical properties break point svr part evaluation svr outlier detection compare performance standard methods robust regression ransac random sample consensus small number randomly selected points estimate underlying model remaining 
points verification process iterates times model largest support input points selected model break point ransac knowledge previous comparison svr ransac conceptually experimentally compare linear combination approaches experimentally approaches shown section linear combination relation satisfied frames trajectories measurement matrix false matches factorize structure motion estimation practice outliers affect solution goal detect outliers based linear combination representation image sequences captured affine camera methods outlier detection based linear combination representations presented processes image frames operates point trajectories call linear combination frames flc linear combination trajectories tlc robust regression svr compared ransac linear combination frames flc image sequence requires dividing sequence groups images consecutive frames group sequentially flc method consecutive group frames case exist movement images coefficients estimated contrast large temporal separation frames make computation robust linear equations frames independent based considerations divide image sequence sections overlap section aboutthe length sequentially extract frame section constitute group frames assuming section frames four-frame groups flc computations four-frame group svr ransac algorithm details estimate linear combination coefficients classify trajectories inliers outliers dealing coordinates separately eqs inlier sets outlier sets true inliers set outliers set points satisfy linear combination relation coordinate flc scheme applied sequentially groups flc carried one-by-one sequence four-frame groups inliers current group group number inliers decreases monotonically conversely number outliers increases group processed summary flc algorithm outlier removal consists steps divide image sequence non-overlapping sections length sequentially choose frame section construct group frames svr ransac estimate linear combination coefficients selected frames determine inliers outliersbasedonthe frames marktheinliersandgoto step group frames frames processed report inliers outliers sequence linear combination trajectories addition working image frames linear combination relation holds point trajectories eqs show remove outliers linear combination point trajectories presenting algorithm properties shown property inlier trajectories satisfy linear combination relation eqs elements frame satisfy eqs coefficients proof trajectory column vector sotherelation vectors form satisfied element vectors frame number vector property inlier trajectories elements single frame satisfy linear combination relation eqs trajectories satisfy eqs coefficients proof trajectory column vector relation element satisfied vectors element vector property inlier trajectories unknown trajectory set linear combination coefficients elements trajectories satisfy relation eqs trajectory outlier proof corollary property trajectory inlier elements satisfy linear combination relation coefficients properties ransac regression orderto verifywhether trajectoryis inlier outlier property compute coefficients trajectories svr data trajectories tlc scheme characterizes trajectories time two-step procedure developed process trajectories step selects trajectories basis step basis verify remaining trajectories step select basis randomly select trajectories compute linear combinationcoefficients note coefficientsfor coordinates computed separately relation checked element trajectories residual element calculated maximum recorded selected trajectories process repeated times group trajectories smallest residual selected basis improve stability divide points frame quadrants randomly select point quadrant step verify remaining trajectories basis chosen check trajectories randomly replace trajectory basis trajectory re-compute linear combination coefficients coefficients re-estimate residual element maximum residualis small trajectory inlier outlier threshold automatically determined knee point shown fig remaining trajectories verified order detect outliers characteristics methods flc image sequence divided sections four-frame groups constructed expected detect outliers trajectories analyzed groups number inlier trajectories decreases gradually group computation benefit exist large number outliers flc scheme works frames time parameters estimate note eqs deal coordinates independently benefit flc representation contrary affine trifocal tensor frames parameters estimate constraints wellknown parameters estimate susceptible random sampling type methods median squares lmeds ransac instability two-view affine geometry parameters estimate larger case affine point transfer correspondence images established point image computed transfer flc finally flc easy understand simple implement tlc two-step procedure presented step finds trajectories satisfy relation case high percentage outliers step simplifies problem capable finding good trajectories step find inliers trajectories verify trajectories based relation two-step approach simplifies problem outlier detection incrementally testing trajectory trajectories considered formulation subspace separation svr deal large number outliers finally linear combination representation unified framework image frames point trajectories similar manner quantitative performance evaluation previouswork inlier featuretrajectories displayed visual inspection input process factorization method structure motion evaluate results outlier removal quantitative performance measure outlier detection problem classification problem database feature matches labelled inliers outliers measure classification performance quantitatively computing false positive false negative rates false positives inliers incorrectly classified outliers false negatives measure outliers incorrectly classified inliers experiments tested linear combination methods outlier detection video sequences space limits sequences reported sequence feature points detected tracked klt tracker flc tlc algorithms applied measurement matrix sequence hotel frames size frames length unlike subspace separation approach requires sparse sampling images consecutive images in-plane in-depth rotations image coordinates normalized frame tracked points red dots electronic version shown fig trajectories shown features detected tracked frames outliers visually labelled ground truth inliers outliers determined flc ransac shown fig results tlc ransac shown fig results flc svr shown fig results tlc svr fig flc ransac approach detected outliers tlc ransac found outliers flc svr tlc svr returned outliers ground table performance evaluation approaches stands flc ransac tlc ransac flc svr tlc svr seq measure hotel ball frame number camera roll degrees frame number camera pitch degrees frame number camera yaw degrees frame number camera roll degrees frame number camera pitch degrees frame number camera yaw degrees figure camera motion roll pitch yaw columns estimation hotel sequence computed factorization method truth rates table observe approach detected true outliers svr gave results ransac frame-based trajectory-based versions verify correctness inliers factorization method compute motion outlier removal row fig trajectories resulting motion noticeably noisy smooth motion curves computed inliers detected flc svr shown row fig results tlc svr ransac identical shown notice pitch values outlier removal figure demonstrates outlier removal essential motion estimation experiment ping-pong ball sequence frames size large in-depth rotation sequence features tracked frames outliers ground truth image tracked points red dots shown fig trajectories shown flc ransac methoddetected outliersshown fig inliers tlc ransac method returned outliers shown fig flc svr tlc svr methods detected outliers shown fig rates method table svr flc tlc ransac flc tlc experiment svr consistently gave equal results ransac sequences number outliers small investigate future potential svr sequences large number outliers ransac smallest number points required threshold classify point set trial error fitting error defined maximum residual linear combination finally methods extended outlier correction investigated concluding remarks 
representation detecting eliminating outlier trajectories point features image sequences assuming affine camera model methods developed based linear combination idea frame-based trajectory-based robust estimation support vector regression compared ransac flc tlc methods detected removed outliers completely real video sequencesand svr gave slightly results ransac terms false positive rates svr approach simple parameters estimate robust slack variables factorizing large matrix imposing limitations subspace separation involving parameters affine trifocal tensor aanas fisker astrom carstensen robust factorization ieee trans pattern analysis machine intell caspi irani alignment non-overlapping sequences proc int conf computer vision christy horaud euclidian shape motion multiple perspective views affine iteration ieee trans pattern analysis machine intell fischler bolles random sample consensus paradigm model fitting applications image analysis automated cartography comm acm gunn support vector machines classification regression technical report image speech intelligent systems research group southampton hartley schaffalitzky powerfactorization approach affine reconstruction missing uncertain data proc australia-japan advanced workshop computer vision hartley zisserman multiple view geometry computer vision cambridge press huynh hartly heyden outlier correction image sequences affine camera proc int conf computer vision huynh heyden outlier detection video sequences affine projection proc conf computer vision pattern recognition jacobs linear fitting missing data applications structure-from-motion characterizing intensity images proc conf computer vision pattern recognition joachims making large-scale svm learning practical advances kernel methods support vector learning schlkopf burges smola mit press machline zelnik-manor irani multi-body segmentation revisiting motion consistency proc workshop vision modelling dynamic scenes mundy zisserman appendix projective geometry machine vision geometric invariance computer vision mit press cambridge mass reid murray active tracking foveated feature clusters affine structure int computer vision shi tomasi good features track proc conf computer vision pattern recognition sugaya kanatani outlier removal motion tracking subspace separation ieice trans inf syst tomasi kanade shape motion image streams orthography factorization method int computer vision torr motion segmentation outlier detection phd thesis department engineering science oxford ullman basri recognition linear combination models ieee trans pattern analysis machine intell vapnik statistical learning theory john wiley york weinshall tomasi linear incremental acquisition invatiant shape models image sequences ieee trans pattern analysis machine intell zhang deriche faugeras luong robust technique matching uncalibrated images recovery unknown epipolar geometry artificial intelligence zhu wang lin levinson tracking object svm regression proc conf computer vision pattern recognition initial trajectories tracked klt inlier trajectories outlier trajectories inlier trajectories outlier trajectories inlier trajectories outlier trajectories inlier trajectories outlier trajectories figure frame klt tracked trajectories hotel sequence inliers outliers computed flc ransac inliers outliers tlc ransac inliers outliers flc svr inliers outliers tlc svr initial trajectories tracked klt inlier trajectories outlier trajectories inlier trajectories outlier trajectories inlier trajectories outlier trajectories inlier trajectories outlier trajectories figure frame klt tracked trajectories ping-pong ball sequence inliers outliers computed flc ransac inliers outliers tlc ransac inliers outliers flc svr inliers outliers tlc svr 
automated thermal coagulation segmentation three-dimensional elastographic imaging active contour model liu zagzebski varghese dyer techavipoo department medical physics department radiology department biomedical engineering department computer sciences department electrical computer engineering wisconsin-madison madison usa wuliu wisc abstract delineation rf-ablator induced coagulation thermal lesion boundaries important clinical problem addressed conventional imaging modalities automation process desirable elastography estimates images local strain small externally applied quasi-static compressions visualization thermal coagulations studies demonstrated coagulation volumes computed multiple planar slices region interest accurate volumes estimated assuming simple shapes incorporating single orthogonal diameter estimates paper presents automated segmentation approach thermal coagulations three-dimensional elastographic data obtain area volume information approach consists coarse-to-fine method active contour initialization gradient vector flow active contour model deformable contour optimization prior knowledge geometry general thermal coagulations performance proposed algorithm shown comparable manual delineation medical physicists rf-induced coagulations correlation coefficient coagulation volume autosegmented elastography manually-delineated pathology keywords-elastography image analysis radiofrequency ablation segmentation strain ultrasound introduction radiofrequency tumor ablation provided effective safe means treat large variety benign malignant conditions holds promise treatment outpatient basis ablation interstitial focal ablative therapy electrode tumor heating cauterization tumor ionic agitation rapid vibration ions creates friction heating region interest imaging modalities dynamically monitor irreversible cellular damage evolution treatment important success ablation therapy ablative therapy guided ultrasound suitable real-time monitoring coagulation tissue-background contrast poor b-mode images ablation increases stiffness tissue treated site elastography detects images local strain small externally applied quasi-static compression local tissue displacements estimated normalized time-domain cross-correlation gated preand post-compression radiofrequency echo signals gradient tissue displacement axial direction estimate local tissue strain elastography sensitive small elastic modulus potential image differentiate thermal coagulation necrosis normal surrounding tissue three-dimensional images multiplanar reconstruction shaded surface processing volumetric processing meaningful representations underlying data set planar images shown elastography exhibits high coagulation-toliver contrast good correlation pathology performs conventional elastography promising tool visualization ablation therapy thermal coagulations manual delineation boundaries multiple planar two-dimensional images tedious labor intensive automatic extraction lesion boundaries attractive remove subjectivity reduce assessment time automatic semiautomatic segmentation imaging modalities addressed elastographic depiction structures methods reported literature automatic segmentation elastographically delineated boundaries simple threshold method segment lesion tissue-background semiautomated segmentation regions treated high-intensity focused ultrasound previous semi-automated algorithm delineating rf-induced thermal coagulations work supported part whitaker foundation grant rg- start-up funds awarded varghese wisconsinmadison nih grant -eb ieee ieee international ultrasonics ferroelectrics frequency control joint anniversary conference ieee ultrasonics symposium elastograms based thresholding morphologic operations figure ultrasonic left elastographic center pathological views typical thermal coagulation figure shows ultrasonic elastographic pathological views slice typical thermal coagulation elastographic image pre-processed image enhancement techniques purpose work paper propose fully automated method segment stiff lesion central darker circular area background elastograms segmented regions measuring cross-sectional areas volumes proposed algorithm based coarse-to-fine method active contour initialization gradient vector flow active contour model deformable contour optimization prior knowledge geometry general thermal coagulations material methods data acquisition ablation vitro performed specimens freshly excised canine liver tissue approximate dimensions thickness rita model khz generator rita medical system mountain view usa starburst multi-tined expandable electrodes ablation procedures electrode consisted long -gauge stainless steel shaft insulated tip thin plastic layer sharp tines diameter deployed retracted manually electrode inserted liver specimen tines carefully deployed provide active lengths addition active tip shaft tines deployed umbrella configuration -degree intervals central tine foil ground pad attached bottom surface liver specimen ablation target tissue performed -watt power level setting min duration target temperatures reached create coagulations volumes fortyfour coagulations created scanned measured obtain thermal coagulation area volume ablated liver specimen cooled room temperature electrode inscribing fiducial markers encased gelatin block thickness subsequent imaging day procedure gelatin block liver specimen removed mold apparatus elastographic imaging room temperature aloka ssd aloka tokyo japan realtime ultrasound scanner -mhz linear array transducer bandwidth manually translating gelatin block parallel scan plane repeating data acquisition steps plane elastographic data acquired distance planes elevational resolution slightly larger precisely controlled precision linear stage general slices acquired phantom slices contained thermal coagulation time-domain cross-correlation analysis echo signals preand post-compression data sets compression performed window length overlap data segments compute tissue displacements axial strain estimated squares strain estimator kernel size ultrasound scans liver specimens fixed formalin solution weeks sliced intervals tissue slices transparent film photographically scanned fixed gross-pathology images obtain volume estimations thermal coagulation segmentation active contour algorithm aka snakes well-known technique detecting object boundary snake defined energy-minimizing spline snake energy depends shape location image constructing contour object boundary generally place initial spline snake image energy minimized spline deformation local minima energy correspond desired image properties snake defined parametrically normalized arc length contour energy functional minimized written int dssxedssxedssxedssxee conimagetotal int internal energy snake due bending image measures image forces con describes external constraint forces internal spline energy written suppresssuppress int sdxdsdsdxse suppressand suppressspecify elasticity suppressand stiffness suppressof snake image forces image arrowhookleft derived image data snake lies important features snake attracted line edge endpoint functions total image energy expressed weighted combination features gradient vector flow gvf defines external force details improves performance conventional snakes gvf active contours larger capture range sensitive contour initialization exhibits convergence boundary concavities gvf snakes larger capture range traditional snakes initialization contour critical successful segmentation study relax initialization constraint coarse-to-fine approach ieee ieee international ultrasonics ferroelectrics frequency control joint anniversary conference ieee ultrasonics symposium ogr ume oma elastography volume manual togr aph ume anual fresh pathology volume togr aph ume omated fresh pathology volume gaussian pyramid constructed input image snake algorithm applied level level interpolating result level initial contour lower level level represents image times lower resolution lateral vertical directions neighboring pixels upper lever image independent subsampling reduces correlation achieve automatic segmentation template matching coarse level gaussian pyramid performed determine initial contour snake template matching low-resolution image fast immune noise prior knowledge thermal coagulation spherical ellipsoidal shape circular disk ring template goal find dark region light background matching position defined normalized cross-correlation maximum fast algorithm based fft template matching segmentation spatial resolution anisotropic simple extension active contours active surfaces provide good result simple interpolation elevational direction introduce artifacts data essentially reconstructed slices algorithm proposed applied repeatedly sequence images apply algorithm central plane data 
apply algorithm adjacent planes initial lesion location geometry current plane estimated processed adjacent plane iii results figure typical automated segmentation result data set slice shown parameters algorithm chosen applying algorithm thermal coagulations set parameters remaining coagulations figure segmentation thermal coagulation elastographic data set red contours segmentation results figure coagulation volumes obtained manual depiction versus automated segmentation solid line least-squares fit dotted line line equal size figure coagulation volume measurements comparing manual top automated bottom elastography volumes volumes obtained fixed tissue pathology ieee ieee international ultrasonics ferroelectrics frequency control joint anniversary conference ieee ultrasonics symposium evaluate segmentation result overlap manual segmentation automated segmentation defined overlap manual automated manual automated represent intersection union based thermal coagulations average area overlap central slice elastograms results image plane average volume overlap segmented coagulations figure shows scatter plot coagulation volume measurements comparing manually delineated volumes automatically segmented volumes highly correlated correlation coefficient indicating automatically segmented results good assume manual depiction standard figure displays scatter plots coagulation volume measurements comparing manual automated elastography volumes fixed tissue pathology manually depicted medical physicist correlation coefficient manually delineated elastography volumes pathology volumes automated elastography volumes pathology volumes elastography slightly underestimate actual coagulation size found gross pathology discussion conclusion results presented automated segmentation vitro ablation specimens similar results expected vivo conditions due close correspondence manual automated segmentation results prove vivo elastograms thermal coagulations pig liver test algorithm images acquired time results promising shown figure close correspondence manual automated segmentation results demonstrates automated algorithm provide quantitative thermal coagulation segmentations comparable obtained manual delineation figure automated segmentation thermal coagulation created pig liver vivo goldberg gazelle mueller thermal ablation therapy focal malignancy unified approach underlying principles techniques diagnostic imaging guidance ajr roentgenol vol goldberg charboneau dodd dupuy gervais gillams kane lee livraghi mcgahan rhim silverman solbiati vogl wood image-guided tumor ablation proposal standardization terms reporting criteria radiology vol sanctis goldberg mueller percutaneous treatment hepatic neoplasms review current techniques cardiovasc intervent radiol vol varghese ophir konofagou kallel righetti tradeoffs elastographic imaging ultrason imaging vol ophir cespedes ponnekanti yazdi elastography quantitative method imaging elasticity biological tissues ultrason imaging vol kallel ophir magee krouskop elastographic imaging low-contrast elastic modulus distributions tissue ultrasound med biol vol fenster downey cardinal three-dimensional ultrasound imaging phys med biol vol varghese zagzebski lee elastographic imaging thermal lesions liver vivo radiofrequency ablation preliminary results ultrasound med biol vol varghese shi elastographic imaging thermal lesions liver in-vivo diaphragmatic stimuli ultrason imaging vol liu techavipoo varghese zagzebski chen lee elastographic versus x-ray imaging radio frequency ablation coagulations vitro study med phys vol righetti kallel stafford price krouskop hazle ophir elastographic characterization hifu-induced lesions canine livers ultrasound med biol vol techavipoo varghese zagzebski chen liu semiautomated thermal lesion segmentation three-dimensional elastographic imaging ultrasound med biol vol burt adelson multiresolution spline application image mosaics acm trans graphics vol prince snake shapes gradient vector flow ieee trans image processing vol kallel ophir least-squares strain estimator elastography ultrason imaging vol cootes hill taylor haslam active models locating structure medical images image vision computing vol kass witkin terzopoulos snakes active contour models international journal computer vision vol ieee ieee international ultrasonics ferroelectrics frequency control joint anniversary conference ieee ultrasonics symposium 


automatic system classification nuclear sclerosis slit-lamp photographs shaohua fan charles dyer larry hubbard barbara klein shaohua dyer wisc hubbard ophth wisc kleinb epi ophth wisc department computer science department ophthalmology visual sciences wisconsin-madison usa abstract robust automatic system developed detect visual axis extract important feature landmarks slit-lamp photographs objectively grade severity nuclear sclerosis based intensities landmarks linear regression select features play important roles classification fit linear grading function evaluated grading function human grades error bounds ground truth grades compared machine grades human grades expected automatic system significantly speeds process grading grades computed consistent reproducible machine grading time image seconds pentium iii mhz machine human grading takes minutes statistical results show predicted grades system reliable testing set images correct grading defined tolerance grade level difference human grade automated system grading accuracy based areds grading scale introduction cataract clouding opacity eye lens vision problems nuclear sclerosis important type age-related cataract traditionally degree nuclear sclerosis evaluated trained human grader based comparison photograph graded series standard photographs called standards grading system integer scale decimal scale grading systems integer scale include lens opacities classification system locs i-ii system wisconsin system adaptation age-related eye disease study areds system wilmer system cooperative cataract epidemiology study group ccesg system oxford system decimal scale grader places photo adjacent standards assigns grade decimal interval decimal scale cataract grading systems include locs iii system wisconsin areds lens grading protocol simplified cataract grading system world health organization cataract grading group subjective systems number disadvantages subjective process method shows large variability graders people dennis hafford jane armstrong providing assistance slitlamp photographs grace wahba discussions statistical analysis methods nicola ferrier early collaborative discussions feature detection methods xin programming support national eye institute national institutes health grant nos -ey- eyis gratefully acknowledged spectral sensitivity grader time method manual process time-consuming commonly utilized traditional method limited capacity account variability inherent taking developing photographs exposure development time hard reliably measure cataract severity change time attempts computerized cataract detection recently fully automatic objective nuclear sclerosis grading system based slit-lamp photographs goal work automate process provide objective repeatable grading system nuclear sclerosis evaluation slit-lamp images slit-lamp image eye system automatically extract feature landmarks image classify level nuclear sclerosis based intensities landmarks materials photography protocol topcon sle slit-lamp nuclear sclerosis photographs process vertical slit beam light shone lens nucleus angle visual axis pupil dilated pharmacologically obliquelyilluminated lens photographed camera situated visual axis result approximates cross-section lens depicting backscatter beam travels lens nucleus anterior posterior slit lamp photographs acquired color slide transparences ektachrome film slides digitized nikon coolscan slider scanner project areds grading system decimal scale images project images originally beaver dam eye study bdes separated groups standard set includes base images areds grading system images images compared grading sample set images graded grades double-checked grades images accurate consistent sample set includes images graded double-checking sample set includes images human grades sample set sample set poor-quality images rotated blurred scaled images automatically detected pulled human grading sample set images kind sample set bad images image processing feature detection fig feature landmarks slit-lamp image fig visual axis detection based circle model images corneal bow leftmost bright vertical curve image tracing left image corneal bow dark anterior chamber leading edge anterior cortex bright vertical curve important features images shown fig detecting visual axis identifying ocular landmark features visual axis anterior-posterior line bisects nucleus horizontally measure degree nuclear sclerosis based luminance values trace reliable placement visual axis critical feature extraction analysis edges corneal bow anterior cortex reliable features image degree sclerosis selected features identifying location visual axis cases corneal bow anterior cortex symmetric respect visual axis noise existed edges modeled arcs circles arc circle calculate center circle based curvature calculating center points circles defined corneal bow anterior cortex line connecting center points good approximation visual axis fig canny edge detection algorithm detect edge points input slitlamp image extracted edges corneal bow anterior cortex based relative locations image explicitly fitting circles based edge data problematic amount image noise problem keyhole artifact anterior chamber reflection apparatus artifact appears image location anterior chamber varies image image result detect anterior cortex edge find edge points keyhole eliminated problem locating keyhole matched filter technique keyhole detected edge points belonging keyhole avoided searching anterior cortex edge problem exists cases keyhole overlays anterior cortex problem poor-quality images include blurred rotated scaled improperly cropped images problems make automatic process fail detect proper edges estimated visual axis poor order reliably detect visual axis automatically determine visual axis detected developed voting scheme obtain confidence level indicating correctness visual axis voting scheme essentially combines monte carlo-like approach robust estimation technique voting algorithm works assume edge arc extracted circle model fits arc method estimate center circle randomly select widely-separated points arc points identify longest chords pairs points compute lines perpendicular chords find intersections lines arc perfectly circular lines intersect point intersections compute centroid intersections location estimated center circle circle center corneal bow found rounds round repeating steps times sets edge points time approximate center obtained circle averaging center point estimates center circle based selected sets points note round exist outliers circle center approximation round repeat steps round approximated center eliminate outliers centers distance larger threshold average center points outliers round denote centroid points round process produces robust estimate center high percentage outlier edge points algorithm applied estimate center circle anterior cortex iteration round approximate center circle anterior cortex connect center form visual axis line line fixed point one-dimensional array record orientation lines iterations histogram orientations evidence location line highest consensus distribution orientations measure uncertainty fig fig voting scheme visual axis detection summary algorithm automatically detect visual axis slit-lamp image step monte carlo simulation randomly choose set widely-separated edge points calculate center circle estimated points step voting visual axis detection repeat step times corneal bow edge points rounds throw center point outliers round average remaining center points center point corneal bow center point point defines visual axis repeat step times anterior cortex edge points rounds throw center point outliers round iteration round compute line connecting calculated center point histogram orientations estimated visual axis lines iii select line 
orientation occurs highest frequency histogram visual axis approach efficient robust image noise iteration points computing center circle fit points fast true monte carlo approach requires criterion evaluate results iteration measure accumulating estimates taking votes maintains benefits randomization statistically obtain valid solutions time iterations enable eliminate image noise arcs fit erroneous data produce centers distributed large area arcs true circle agree determine consensus center distribution centers determine level uncertainty fig fig visual axis orientation voting histograms images line orientation histogram image line orientation histogram image single sharp peak iterations agreed line location broader histogram lack consensus difficulty ascertaining correct line location visual axis detected linear densitometric track visual axis performed one-dimensional intensity profile make values profile robust narrow band centered visual axis average pixels vertical direction band point visual axis based intensity profile original image edge image landmark features detected reliably conventional image processing methods construct regression features landmark features extracted photograph landmark intensity pixels pixel wide pixel high rectangle centered point recorded based expert knowledge features chosen significant anterior lentil sulcus posterior lentil posterior lamella variable names antelen sulcus postlen postlam features highly correlated selected considered negligible effect grading human grading procedure trend intensity change anterior lentil posterior lamella visual axis plays important role composite features defined ratio intensity anterior lentil posterior lentil ratioalpl ratioalplnorm features considered standard deviation intensity neighborhood sulcus order account effect intensity center lens eye image narrow black strip sulcus defined low degree nuclear sclerosis areas interest size defined pixel pixel rectangle centered sulcus feature sulstdsmall intensity standard deviation pixels small rectangle feature sulstdlarge intensity standard deviation pixels big rectangle intuitively ratio sulstdsmall sulstdlarge defines feature ratiosulstd small narrow black strip exists sulcus summary features computed image represent information grading data analysis results built grading function steps standard set sample set training data select important features grading standard set train grading function defined important features selected step strictly speaking ground truth data standards grades assigned standards definition grades images estimate parameters grading function variables grades images sample set checked grading accurate consistent treated ground truth due limitations human grading scores provided good approximation correct grades reasonable data determine important features affecting grading important features identified standards determine parameters combining features tested grading function sample set sample set testing data feature selection decide candidate features important grading linear regression model features fit training data standard set sample set table shows coefficients model p-values features constant term table coefficients linear model features estimate antelen sulcus sulstdsmall sulstdlarge postlen postlam ratioalpl ratioalplnorm ratioalpostlam ratiosulstd intercept features p-values considered significantly important grading features sulcus ratioalplnorm consistent experts knowledge intensity sulcus good indicator general brightness image images eyes nuclear sclerosis tend brighter feature ratioalplnorm intensity change anterior lentil posterior lentil higher ratioalplnorm higher degree nuclear sclerosis eye normalized ratio ratioalplnorm sensitive image noise due variations exposure time development time compared un-normalized ratioalpl improvement evident fact ratioalplnorm lower p-value ratioalpl features designed detect strip sulcus sulstdsmall sulstdlarge ratiosulstd low p-values difficulty identifying information model fitting accuracy evaluation significant level codes important features classifier determined linear grading function features fit standards evaluate grading function predicts grades testing data computed decimal grades converted scale areds system rounding grade nearest difference human grades computed grades quantized groups intervals histogram grading differences good indicator close machine grading human grading grading function linear combination features sulcus ratioalplnorm defined grade sulcus ratioalplnorm table shows computed grades close real values standards table computed grades standards standard computed grade fig residuals fitted plot q-q plot fig histogram grading differences human grades computed grades normal q-q plot fig shows residuals close distributed plot residuals grades show trends patterns residuals visually verifying linear model grades testing images predicted grading function fig shows images machine graded grade human grade population image grade difference images grade difference human grading grade fluctuation common regarded acceptable concluding remarks system developed automatically detects visual axis extracts features slit-lamp photographs expert knowledge linear regression model define select important features nuclear sclerosis grading important features chosen linear grading function fit standards evaluated based human grading linear grading function achieved grading accuracy grade areds grading system testing data adding important features anterior lentil posterior lentil grading function slightly reduce residual standard error prediction test cases similar classification accuracy achieved grading function fewer features preferred advantage simpler robust image noise image processing errors interesting point achieved classification result standards training data evidence linear grading function features sulcus ratioalplnorm largely captures relationship severity nuclear sclerosis image function analytical form unknown parameters determined good samples explain standards results good grading function evaluate classification accuracy human graders machine grades acceptable step automatically grade images sample set human experts evaluate images tested include standards exposure development times follow-up images individuals time selecting important features critical modeling grading function worth complex feature selection methods likelihood basis pursuit lbp possibility non-linear grading functions age-related eye disease research group age-related eye disease study areds system classifying cataracts photographs areds report ophthalmol canny computational approach edge detection ieee transactions pattern analysis machine intelligence vol chylack leske sperduto khu mccarthy lens opacities classification system arch ophthalmology chylack leske mccarthy khu kashiwagi sperduto lens opacities classification system arch ophthalmology chylack wolfe singer mccarthy carmen rosner quantitating cataract nuclear brunescence harvard locs system optometry vision science vol fischler bolles random sample consensus paradigm model fitting application image analysis automated cartography comm acm klein klein linton magli neider assessment cataracts photography beaver dam eye study ophthalmology robman mccarty garrett stephenson thomas mcneil taylor comparison clinical digital assessment nuclear optical density ophthalmic research sasaki sakamoto fujisawa kojima shibata grading system nuclear cataracts alternative japanese cooperative cataract epidemiology study group grading system cataract epidemiology sparrow brown shun-shin bron oxford modular cataract image analysis system eye thylefors chylack konyama sasaki sperduto taylor west simplified cataract grading system ophthalmic epidemiology west rosenthal newland taylor photographic techniques grade nuclear cataracts invest ophthalmol vis sci zhang wahba lin voelker ferris klein klein variable selection model building likelihood basis pursuit dept statistics uwmadison 
simultaneous feature selection classifier training linear programming case study face expression recognition guodong guo charles dyer computer sciences department wisconsin-madison madison gdguo dyer wisc abstract linear programming technique introduced jointly performs feature selection classifier training subset features optimally selected classifier traditional classification methods computer vision two-step approach feature selection classifier training feature selection hoc heuristics requiring timeconsuming forward backward search process difficult determine features features steps separated linear programming technique paper call feature selection linear programming fslp determine number features features resulting classification function based recent results optimization analyze fslp avoid curse dimensionality problem based margin analysis demonstration performance fslp technique computer vision tasks apply problem face expression recognition recognition accuracy compared results support vector machines adaboost algorithm bayes classifier introduction goal feature selection computer vision pattern recognition problems preprocess data obtain small set important properties retaining optimal salient characteristics data benefits feature selection reduce recognition time reducing amount data analyzed cases produce classification accuracy due finite sample size effects feature selection methods involve evaluating feature subsets criterion probability error difficulty approach applied real problems large feature dimensionality high computational complexity involved searching exponential space feature subsets heuristic techniques developed circumvent problem branch bound algorithm assumption feature evaluation criterion monotonic greedy algorithms sequential forward backward search commonly algorithms limited monotonicity assumption sequential floating search provide results cost higher search complexity jain zongker evaluated search algorithms feature subset selection found sequential forward floating selection sffs algorithm proposed pudil performed sffs time consuming number features large vailaya sffs method select features two-class problem reported sffs required days computation time issue feature selection methods curse dimensionality problemof feature selection number features large number samples small situation common computer vision tasks object recognition tens training samples images object hundreds candidate features extracted image difficult problem determining features select data set traditional feature selection methods address problem require user choose number features parameter set sound basis recently approach feature selection proposed machine learning community called feature selection concave minimization fsv basic idea jointly combine feature selection classiproceedings ieee computer society conference computer vision pattern recognition cvpr ieee fier training process linear programming technique results method number features features classification function method complete optimal solution order evaluate method problems computer vision pattern recognition paper investigates performance face expression recognition problem testbed features extracted face image database evaluate small subset features automatically selected losing discrimination accuracy success task encourage future object recognitionproblems applications including perceptual user interfaces human behavior understanding interactive computer games feature selection linear programming fslp formulation presented section analyze formulation avoid curse dimensionality problem section describe face expression recognition problem feature extraction method section fslp method experimentally evaluated section results compared support vector machines adaboost bayes classifier linear programming formulation early linear programming technique address pattern separation problem robust technique proposed deal linear inseparability recently framework extended cope feature selection problem briefly describe formulation sets pointsa andb seek linear function andf function prime determines plane prime normal separates points set points represented matrix set points represented matrix normalization satisfy vector dimension practically overlap classes minimize norm average error min min bardbl bardbl bardbl bardbl denotes vector components max main reasons choosing -norm easy formulate linear program theoretical propertiesthat make computationally efficient -norm sensitive outliers occurring underlying data distributions pronounced tails modeled so-called robust linear programming rlp problem min prime prime subject minimizes average sum misclassification errors points bounding planes prime prime prime represents transpose problem solves classification problem feature selection problem feature selection strategy integrated objective function order simultaneously select subset features feature selection defined suppressing components normal vector separating plane needed obtain acceptable discrimination sets accomplish introduced extra term objective function reformulating min parenleftbig prime prime parenrightbig prime subject components equal components nonzero components equal components prime count nonzero elements vector key integrating feature selection classifier training process result problem balances error discrimination sets andb prime prime number nonzero elements prime element feature removed features nonzero components normal selected linear programming optimization method called feature selection concave minimization fsv developed deal term objective function introduced variable eliminate absolute term replacing prime prime adding constraint models vector step function prime discontinuous concave proceedings ieee computer society conference computer vision pattern recognition cvpr ieee exponential approximate order smooth solution required introduction additional parameter alternatively computing concave exponential approximation simple term prime parameter thisproduces final formulation call feature selection linear programming fslp min parenleftbig prime prime parenrightbig prime subject fslp formulation slightly fsv method fslp simpler optimize easier analyze relation margin section noted normal separating hyperplane small number non-zero components large number components experiments features components normal vector discarded non-zero components result user-specified parameter required system features avoiding curse dimensionality authors address issue curse dimensionality focused developing fsv method smooth solution explicitly connected margin analysis experiments data sets number examples larger number feature dimensions show fslp method related margin maximization makes avoid curse dimensionality problem term prime objective function absolute normal due constraint minimize objective function requires minimizing term prime prime summationdisplay summationdisplay bardbl bardbl means minimizing bardbl bardbl -norm normal minimizing bardbl bardbl equivalent maximizing bardblwbardbl objective function maximizes bardblwbardbl recall bounding hyperplanes prime prime discriminating hyperplane midway hyperplanes prime distance point hyperplane defined prime bardblwbardbl prime point bounding hyperplanes satisfies bardblwbardbl minimum distance bounding hyperplanes bardblwbardbl defined margin similar developing svms p-norm non-increasing monotonic bardbl bardbl bardbl bardbl equivalent bardbl bardbl bardbl bardbl p-norm bardbl bardbl convex maximizing bardblwbardbl approximatelymaximize bardblwbardbl result term prime objectivefunction effect maximizing margin maximizing margin circumvent curse dimensionality problem support vector machines classify data high-dimensional feature spaces fslp method similar advantage incorporates feature selection process based margin size fact term objectivefunction disappears case classification performance worsens describe case section formally remaining terms property maximizing margin term prime hastwo effects feature selection margin maximization curse dimensionality problem occurs computer vision tasks analysis fslp circumvents problem important result demonstration property shown empirically section face expression recognition face expression recognition active research area computer vision recent review methods face expression recognition paper investigate face expression recognition static images gabor filters facial feature extraction researchers demonstrated advantages gabor wavelet coefficients code facial expressions 
two-dimensional gabor function fourier transform written exp bracketleftbigg parenleftbigg parenrightbigg jwx bracketrightbigg exp braceleftbigg bracketleftbigg proceedings ieee computer society conference computer vision pattern recognition cvpr ieee frequency sinusoidal plane wave x-axis space constants gaussian envelope axes filtering signal basis localized frequency characterization filters arbitrary orientation obtained rotation x-y coordinate system experiments input face image convolved gabor filters scales orientations resulting filtered images amplitudes filtered image selected fiducial points feature vectors face image extracted feature vector length fiducial points typical positions fiducial points shown figure figure fiducial points face image experimental evaluation face expression database face expression database experiments images japanese women personhas fourimages expressions neutral happy sad surprise anger disgust fear image size pixels examples shown figure information database image collection data description human ranking database experimental results experimental procedure -fold crossvalidation database images database divided randomly ten roughly equal-sized parts data parts training classifiers part testing repeated procedure ten times part test set experimentally found parameter set small experiments solve -expression classification problem simple binary tree tournament scheme pairwise comparisons table performance fslp compared linear svm l-svm grbf non-linear svm nl-svm -fold cross-validation average number selected features ave pairwise classifier total number selected features total pairs shown addition number errors test examples run test ave total fslp l-svm nl-svm set set set set set set set set set set ave experimental results fslp method shown table feature selection performed pair classes resulting total pairs -expression classification problem secondcolumnin table shows number selected features average pairwise classifiers ranging ten runs average number selected features ten runs sparse set features automatically selected features extracted face image demonstrates fslp significantly reduce number feature dimensions user interaction proceedings ieee computer society conference computer vision pattern recognition cvpr ieee figure images face expression database left expressions angry disgust fear happy neutral sad surprise index selected features total number occurences selected feature statistics selected features pairwise classifiers figure histogram frequency occurrence features training set pairwise fslp classifiers column table shows total number features selected fslp pairwise classifiers test set features discriminating pair angry happy separating pair angry sad number features selected pairs larger pair instance selected features pairwise classifiers set number smaller features hand frequency occurrence features pairs classes variable shown histogram figure column table lists number classification errors test examples fslp data set average runs comparison svms order verify fslp method good performance terms recognition accuracy compared methods support vector machines give high recognition accuracy practice compared fslp svms classification errors linear non-linear svms features selection run shown columns table non-linear svm grbf kernel experimentally set width parameter maximum error fslp runs larger errors linear svms non-linear svms average number errors runs similar fslp linear svm errors non-linear svm errors recognition accuracies methods table comparable notice average number features selected fslp svms computation time fslp fast training recognition phases run times minutes train classifiers linux machine ghz pentium processor matlab implementation cplex standard linear programming optimization proceedings ieee computer society conference computer vision pattern recognition cvpr ieee recognition accuracy svms comparable fslp major weakness svms high computational cost precludes real-time applications addition svms formulated quadratic programming problem difficult svms feature selection directly researchers proposed approximations svm feature selection training svm training set computing approximations reduce number features two-step approachcannot guaranteeselection feature subset finally svm approximations determine automatically features contrary fslp addresses issues number features selected recognition accuracy face expression recognition adaboost bayes classifier figure recognition accuracies bayes classifier adaboost function number features selected comparison adaboost bayes main goals evaluation fslp feature selection process compared method greedy heuristic methods feature selection adaboost method greedy strategy select features learning phase greedy feature selection bayes classifier assuming feature independence incrementally adding discriminating feature figure shows recognition performance adaboost bayes classifiers function number features selected clear features sufficient algorithms bayes classifier reached performance features performancedeteriorated slightly features recognition accuracy bayes classifier shown table features overfitting training data problem bayes method feature selection simple greedy method give bayes accuracy adaboost method peak performance features table pair classes shown figure features slightly lowered recognition accuracy summary adaboost bayes classifiers combined greedy feature selection strategy larger number features fslp recognition accuracies worse fslp comparison neural nets lda compared recognition performance fslp published methods database neural network recognition accuracy problematic images database discarded accuracy result linear discriminant analysis lda reported included people sface imagesand images conclusion fslp comparable results neural network lda methods fslp optimally selects small number features automatically important real-time applications concluding remarks paper introduced linear programming technique called fslp accomplishing jointly-optimal feature selection classifier training demonstrated performance face expression recognition main properties technique make advantageous existing methods fslp determine features automatically user interaction fslp high recognition performance comparable linear svms non-linear svms neural networks lda adaboost bayes classifiers fslp avoids curse dimensionality problem occurs amount training data small fslp feature selection fast compute acknowledgments authors olvi mangasarian steven wright linear programming technique lyons providing face expression database support nsf grant iisis gratefully acknowledged proceedings ieee computer society conference computer vision pattern recognition cvpr ieee table comparison recognition accuracy number features bayes classifier feature selection bayes bayes pairwise-greedy feature selection bayes adaboost linear svm l-svm non-linear svm nl-svm fslp bayes bayes adaboost l-svm nl-svm fslp accuracy features bartlett viola sejnowski larsen hager ekman classifying facial action advances neural information processing systems touretzky etal eds mit press cambridge mass bennett mangasarian robust linear programming discrimination linearly inseparable sets optimization methods software vol bradley mangasarian feature selection concave minimization support vector machines proc int conf machine learning brank grobelnik frayling mladenic feature selection linear support vector machines microsoft technical report msr-tr- june daugman uncertainty relation resolution space spatial frequency orientation optimized tow-dimensional visual cortical filters optical society america devijver kittler pattern recognition statistical approach prentice hall englewood cliffs freund schapire decision-theoretic generalization online learning application boosting comp sys sci fukunage introduction statistical pattern recognition academic press york jain zongker feature selection evaluation application small sample performance ieee trans pattern analysis machine intelligence liu wechsler probablistic reasoning models face recognition proc computer vision pattern recognition conf lyons akamatsu kamachi gyoba coding facial expressions 
gabor wavelets proc int conf automatic face gesture recognition lyons budynek akamatsu automatic classification single facial images ieee trans pattern analysis machine intelligence mangasarian linear nonlinear separation patterns linear programming operations research mitra murthy pal unsupervised feature selection feature similarity ieee trans pattern analysis machine intelligence osuna freund girosi training support vector machines application face detection proc computer vision pattern recognition conf pantie rothkrantz automatic analysis facial expressions state art ieee trans pattern analysis machine intelligence pontil verri support vector machines object recognition ieee trans pattern analysis machine intelligence pudil novovicova kittler floating search methods feature selection pattern recognition letters rockafellar convex analysis princeton press princeton jersey tieu viola boosting image retrieval proc computer vision pattern recognition conf vol vailaya semantic classification image database thesis michigan state vapnik statistical learning theory john wiley york weston mukherjee chapelle pontil poggio vapnik feature selection svms advances neural information processing systems vol zhang feature-based facial expression recognition sensitivity analysis experiments multi-layer perceptron int pattern recognition artificial intelligence zhang lyons schuster akamatsu comparison geometry-based gabor-wavelets-based facial expression recognition multi-layer perceptron proc int conf automatic face gesture recognition proceedings ieee computer society conference computer vision pattern recognition cvpr ieee 
research calibration minimization russell manning charles dyer department computer sciences wisconsin madison wisconsin technical report february abstract paper present metric camera self-calibration algorithm require global minimization error function produce legal solutions three-camera self-calibration problem single pass contrast virtually previous self-calibration algorithms rely nonlinear global optimization special assumptions made camera motion key drawback global-optimizationbased methods nontrivial error functions run indefinitely algorithm produces solutions quickly fixed amount time arguably fastest self-calibration algorithm existence addition algorithm makes determine experimentally number solutions three-camera self-calibration problem upper-bound schaffilitzky experiments show number typically finally algorithm runs quickly requires theoretical minimum camera views conjunction ransac great robustness noise views work partially sponsored national science foundation grant iisand defense advanced research projects agency darpa rome laboratory air force materiel command usaf agreement number introduction camera device creates -dimensional representations -dimensional world function maps -dimensional world coordinates -dimensional image coordinates camera calibration camera calibration autocalibration process determining calibration function directly views captured camera special knowledge scene pre-measured calibration target typically calibration point correspondences determined views fundamental matrices trilinear tensors found components calibration determined existing self-calibration algorithms employ global minimization nonlinear error function search calibration nonlinear optimization general problematic paper introduce self-calibration algorithm rely minimization directly finds legal calibrations set views assume pinhole model camera works provided lens distortion effects small corrected preprocessing pinhole model camera calibration components internal calibration external calibration horn internal calibration consists invertible upper-triangular matrixk additional restrictions zero-skew assumption thatk form camera general pinhole camera external calibration camera position space location camera optical center camera orientation rotation relative fixed coordinate system main concern determining internal calibration matrix algorithm determines external calibration by-product camera orientations determined simultaneously internal calibration represent mutual fit determined separately addition assuming general pinhole camera model assume camera views internal calibration typically situation arises context single camera undergoing motion focal length remains constant camera views produced called monocular image sequences refer fundamental matrices arising pairs views sequences monocular fundamental matrices potentially approximate monocular image sequence produced series distinct cameras instance model assuming consistent manufacturing process zoomed zoomed maximum level produce consistent focal lengths relevant situations forest sensors concept previous self-calibration algorithms general pinhole cameras utilized global minimization nontrivial error function search calibration trend began selfcalibration algorithm kruppa constraints basis error function researchers approach hartley heyden astrom triggs pollefeys van gool lourakis deriche fitzgibbon zisserman context autocalibration multiple moving objects note methods place restrictions internal parameters camera motions linear quasi-linear assuming fully-general pinhole cameras section discuss pros cons global minimization search technique begin introducing non-minimization-based method optimization limitations field artificial intelligence devoted search techniques common search techniques machine vision nonlinear optimization continuous error function great benefit standardization making search phase algorithm immediately understandable importantly machine vision algorithms draw techniques entire field numerical optimization levenberg-marquardt algorithm well-recognized simply figure optimization examples figure curve-intersection problem phrasing problem terms global optimization panacea finding global minimums functions fig fig functions simple task nonlinear optimizer local gradients lead straight global minimum task harder functions case nonlinear minimizer stuck meaningless local minimums locate hidden valley global minimum one-dimensional function finite domain problem easy overcome standard approach simple implement choose random starting location apply nonlinear minimizer local minimum reached repeat process good minimum found impossible priori global minimum number times process repeated related size attraction basin global minimum relative size search space attraction basin local minimum simply set points chosen nonlinear minimizer converge real problems attraction basin global minimum small relative search space size situation worse higher-dimensional search spaces likelihood success depends volume attraction basin versus volume search space troubling problem arises error function consideration global minimum repeat nonlinear optimization process global minimums located process indefinitely depending small attraction basins priori global minimums supposed exist algorithm stop arbitrarily minimums found finally task illustrated fig figure portrays parametric curves single variable task determine curves intersect arbitrary number intersection points curves one-dimensional exist two-dimensional search space assume mutual-intersection points discrete possibility overlapping curve segments standard error-minimization approach define two-dimensional error function representing distance points curves iff represent position search space curves intersect due numerous misses curves error function shape function fig applying nonlinear optimization methods find global minimums problems discussed earlier completely unknown priori global minima problem meaning search process clear stopping point approach optimization problem simply sketch curves search space find intersection points sketches directly intuition illustration fig mutual intersection point pops instantly sketch approximate surface curve created sampling underlying parameters parameters regular intervals connecting images successive samples line segments illustrated fig mutual-intersection points found close approximation depending sample rate underlying parameters intersecting piecewiselinear approximate surfaces process added benefit determining mutual-intersection points depending granularity approximate surfaces desired approximate intersection points refined nonlinear minimization sense surface-fitting approach serves locate attraction basins global minima show section sketching surfaces leads fast robust technique calibration solving manifold-intersection problems general presenting self-calibration algorithm background material introduced background material stratified self-calibration pinhole cameras view scene create arbitrary coordinate system choosing orthonormal basis rfractur point space serve origin camera matrix coordinate system position coordinate system projected position camera image plane relationship symbol denotes equality nonzero scale factor note homogeneous coordinates invertible matrix relationship holds matrices called projective reconstruction original camera matrices matrices functionally equivalent original camera matrices represented alternative projective basis consists three-dimensional rotation translation scaling form rfractur reconstruction termed metric rfractur latticetop xprime yprime zprime latticetop xprime yprime zprime rfractur fix plane infinity reconstruction called affine affine transformation note hierarchy emerges metric reconstructions affine affine reconstructions projective metric reconstructions hardest obtain conversely projective reconstructions easiest obtain stratified self-calibration paradigm stages algorithm projective reconstruction camera matrices made directly camera views projective reconstruction upgraded affine determining special vector rfractur affine reconstruction upgraded metric knowledge specific scene measurements metric reconstruction achieved assuming monocular image sequence step accomplished linear algorithm finding step monocular image sequences subject paper covered screw-transform manifolds key algorithm screw-transform manifolds explicitly define surface vector needed upgrading projective reconstruction affine algorithm fig shows monocular fundamental matrix define mapping rfractur rfractur rfractur fills role physically-realizable monocular image sequence fundamental matrix views sequence physically-realizable monocular image sequences fundamental matrix pair views exist rfractur fills role noted claims formally proven stand conjecture 
specific derivation experimental evidence suggest true modulus-constraint manifold type screw-transform manifold stratified calibration generated monocular fundamental matrix set rfractur rfractur parameterization coordinate system provided set mapping term screw transform refers fact directly related underlying screw transformation pair views derived problem consideration monocular image sequence find vector upgrade projective reconstruction affine claims member set rfractur fundamental matrices arising pairs views sequence find determining mutual intersection point series manifolds rfractur directly analogous fig section visualization manifold intersection process provided fig surface-fitting surfit algorithm manifold intersection section shown calibration monocular image sequences determining mutual intersection point series manifolds present fast reliable algorithm determining mutual intersection points method applied general manifold-intersection problems concentrate specific application calibration figure modulus-constraint manifolds approximated piecewise-linear surfaces main figure shows intersecting manifolds analogous fig inset shows manifold algorithm conceptually simple create piecewise-linear approximation manifold find mutual intersection points approximate surfaces directly term surface-fitting surfit algorithm makes approach explicit representation screw-transform manifold provided function error functions kruppa constraints implicitly define set solutions set zeros function create piecewise-linear approximation restrict range underlying parameters lie scaled fig kappa theta denote conversion functions parameters restricted step create grid vertices manifold surface samples restricted range psuedocode task fig representative output shown fig dividing grid square triangles end result triangle mesh forming piecewise-linear approximation surface rfractur input fundamental matrix integer sampling rate output piecewise-linear surface approximating modulus-constraint manifold function createsurface grid array -vectors grid psi theta kappa return triangles induced grid figure createsurface function utilize intersect approximate surfaces surfaces twodimensional exist three-dimensional space takes intersection surfaces arrive set distinct points noise original data due approximate nature piecewise-linear surfaces intersection surfaces empty case intersecting surfaces triangles rfractur intersect point intersect point triangle repositioned slightly screw-transform manifolds smooth relative sample rate piecewise-linear approximations good noise levels original data small expect mutual intersection points returned surfit algorithm close true mutual intersection points experimental evidence section case sample rate number triangles approximate surface increases noise levels fall surfit converge true solution fig goal find mutual intersection points approximate manifolds naively task impossible assuming grid approximate manifold experiments section triangles manifold triplet triangles surface tested mutual intersection leading tests work stages finding pairs triangles surface surface intersect testing intersecting pair triangle surface fig note operation associative matter surfaces start results approach tests sample rate case input surfaces represented collections triangles output set mutual intersection points surfaces function mutualintersections triangles triangles triangles pairwise set triangle pairs pairwise foreach triangles foreach triangles intersect pairwise pairwise mutual set points mutual foreach triangles foreach pairwise intersect mutual mutual intersection point return mutual figure mutualintersections function improve number greatly bounding boxes specifically bounding box determined clumps nearby triangles approximate surface intersecting surface surface bounding boxes compared determine triangle clump surface possibly intersect triangle clump surface bounding boxes intersect triangle-triangle intersection tests performed pair triangles drawn clumps vast majority bounding box tests yield intersection greatly improving speed choosing size bounding-box clump important box large bounding-box intersection tests succeed leading triangle intersection tests extreme case clump size equals entire approximate surface case gained extreme clump consisting triangle case bounding box tests faster triangle-intersection tests grids tested variety clump sizes speed settled clump size grid squares consisting triangles worst case bounding-box intersection tests rfractur floating-point comparisons process short circuit failed test found bounding-box test roughly floating-point comparisons average intersection process grids gridsquare clump size reduces bounding-box intersections requiring average floating-point comparisons tests typically generated small number triangle-triangle intersection tests run time surfit algorithm extremely fast fig note order bounding boxes work effectively search space normalized beginning algorithm fig approximate surfaces separated normalized search space surfaces coincided roughly xy-plane xz-plane yz-plane ability normalize search space made explicit form manifold surfaces great strength approach intersection process started non-negligible preprocessing cost generating approximate manifold surface psuedocode fig mhz pentium seconds generate grid point grid means run time seconds grid preprocessing time proportional square sampling rate tests synthetic data benefits sample rates samples high sample rates produce piecewise-linear surface closely approximates screw-transform manifold rfractur question overfitting arises due noise original data rfractur approximation true screw-transform manifold arising original cameras fundamental matrices determined original monocular image sequence robust statistical technique ransac employed utilize extra information eliminate outlying fundamental matrices full surfit algorithm ransac fig note starting main ransac loop approximate screw-transform manifold surface generated fundamental matrix pass ransac loop manifolds drawn manifolds mutual intersection points determined regenerate chosen approximate surfaces pass ransac fundamental matrices iterations ransac performed total run time input set fundamental matrices fmats integer sampling rate srate output affine calibration point function surfit fmats srate surfaces set approximate manifolds surfaces foreach fmats surfaces surfaces createsurface srate bestgoodness begin ransac loop choose surfaces mutual mutualintersections foreach mutual bestgoodness goodness bestgoodness bestgoodness goodness bestintersection return bestintersection figure surfit ransac median error frobenius noise pixels median error noise views wide lens medium object views medium lens large object views wide lens medium object figure relationship noise error data sets fraction trials error frobenius distribution error views pixels noise figure error distribution surface-fitting algorithm applied synthetic data noise radius pixels experimental results experiments real simulated data performed answer questions surfit work noise-free data algorithm correct performance degrade noise increases fast surfit run views improve results points contained mutual intersection modulus-constraint manifolds method paper work views real camera necessarily follow pinhole model reconstruction questions investigated synthetic data synthetic images dimension pixels timings performed mhz pentium error measure frobenius norm calculated true internal calibration matrices normalized answer algorithm correctness question answered graphs fig fig fig shows error decreasing noise decreases indicating surfit work perfectly absence noise graph noise reaching pixels error rises -camera wide-field-of-view case indicating surfit combined ransac performs presence noise fig shows distribution calibration error hundred trials pixels added noise medium-size field view showing strong clustering small errors answer algorithm speed stratified self-calibration algorithm stages requiring time perform research involves stage projective reconstruction upgraded affine give run times part implementation per-surface running time preprocessing phase approximate fraction trials time sec iteration time ransac iteration views wide lens medium object figure distribution run times fraction trials mutual intersection points distribution mutual intersection points figure distribution number 
mutual intersection points modulus-constraint manifolds surfaces generated section remaining phase algorithm takes appreciable time ransac loop number ransac iterations vary depending fundamental matrices give timings individual iterations fig histogram shows typical iterations seconds camera views calibration fundamental matrices ransac iterations expect run time seconds answer advantage extra views views improve calibration question answered fig generate graph hundreds trials run noise radius chosen randomly pixels data sets cameras set cameras -camera data sets differed field view retinal object size data set graph shows median error trial noise radius range pixels pixels graph shows views produces notably results views ceteris paribus shows wide field view greatly lowers error medium-size field view improvement arises wider field view produces fundamental matrix calculation calibration technique relies fundamental matrices answer number mutual intersection points question answered fig figure shows distribution number mutual intersection points found trials data set cameras noise roughly field view samples samples extremely high sampling rate approximate surfaces close match true manifolds graph shows roughly trials yielded mutual intersection points roughly found intersection point due finite granularity surfaces fitted manifold trials yielded mutual intersection points results suggest -view calibration problem solutions cameras general arrangement figure reconstruction real camera views original views black borders answer performance real cameras side benefit recovering metric reconstruction camera matrices calibration ability perform metric scene reconstruction feature-point correspondences applied techniques paper build model real scene photographs original photographs views scene reconstruction shown fig note roundness globe perpendicularity walls cardboard box closely-spaced views perform scene reconstruction result good concluding remarks paper introduced algorithm metric calibration general pinhole camera fixed internal parameters unlike previous solutions problem algorithm rely global minimization error function approach general purpose applicable wider range problems camera calibration additionally algorithm operate theoretical minimum camera views produce legal solutions three-view self-calibration problem single pass properties important consequences algorithm works quickly deterministically combined ransac robustness noise experimentally determine legal solutions exist calibration views important open question stratified calibration discussed paper general method determining manifold intersection points applied problem direct calibration initial projective reconstruction created remains future research beardsley torr zisserman model aquisition extended image sequence proc european conference computer vision pages faugeras dimensions uncalibrated stereo rig proc european conference computer vision pages faugeras luong geometry multiple images mit press cambridge massachusetts faugeras luong maybank camera self-calibration theory experiments proc european conference computer vision pages fischler bolles random sample consensus paradigm model fitting applications image analysis automated cartography communications acm june fitzgibbon zisserman multibody structure motion reconstruction independently moving objects proc european conference computer vision pages springer-verlag june grimson viola faugeras lozano-perez poggio teller forest sensors proc image understanding workshop pages hartley self-calibration multiple views rotating camera proc european conference computer vision pages hartley zisserman multiple view geometry cambridge press york hartley euclidean reconstruction uncalibrated views zisserman forsyth editors applications invariance computer vision lncs pages springer-verlag heyden astrom euclidean reconstruction constant intrinsic parameters proc int conf pattern recognition pages horn relative orientation int computer vision jan lourakis deriche camera self-calibration kruppa equations svd fundamental matrix case varying intrinsic parameters technical report inria march manning dyer stratified calibration screw-transform manifolds proc european conference computer vision volume pages pollefeys koch gool self-calibration metric reconstruction spite varying unknown internal camera parameters proc sixth int conf computer vision pages pollefeys van gool stratified approach metric self-calibration proc computer vision pattern recognition conf pages schaffalitzky direct solution modulus constraints proceedings indian conference computer vision graphics image processing bangalore pages triggs autocalibration absolute quadric proc computer vision pattern recognition conf pages 

screw-transform manifolds russell manning charles dyer department computer sciences wisconsin madison wisconsin technical report april abstract paper describes mathematical theory screw-transform manifolds camera calibration camera xed internal parameters views scene locations physical transformation moves camera rst location location equivalent screw transformation fundamental matrix views representation terms screw transformation fundamental matrix generated cameras undergoing screw transformations set cameras generate fundamental matrix screw-transform manifold fundamental matrix screw-transform manifold generated directly fundamental matrix varying parameters underlying screw transformation fundamental matrices generated camera screw-transform manifold arising fundamental matrices camera nding mutual intersection point manifolds original camera recovered forms technique calibration describe types screw-transform manifolds kruppa-constraint manifolds modulus-constraint manifolds rst type generated directly fundamental matrices three-dimensional manifolds embedded ve-dimensional space making dif cult type simpler two-dimensional manifolds embedded three-dimensional space require initial projective reconstruction cameras desirable attain calibration describe algorithms nding mutual intersection point set manifolds provide extensive experimental results performance algorithms work partially sponsored national science foundation grant iisand defense advanced research projects agency darpa rome laboratory air force materiel command usaf agreement number introduction world physical dimensions cameras capture two-dimensional representations function converts three-dimensional world coordinates two-dimensional image coordinates camera called camera calibration knowledge function number tasks scene reconstruction mosaicing lighteld rendering determination ego motion standard methods camera calibration involve viewing special premeasured calibration targets camera observing d-tod correspondences arise calibrate group cameras directly information contained camera views knowledge measurements scene process calibration autocalibration underlying purpose paper discuss methods camera calibration utilize screwtransform manifolds brie screw-transform manifold set legal camera calibrations pair views coordinate system manifold provided parameters underlying screw transformation views achieve goals paper self-calibration algorithms utilizing screw-transform manifolds presented accompanied extensive experimental results mathematics screw-transform manifolds developed detail early research camera calibration produced simple direct method features distinguished marks surface three-dimensional coordinates projected camera image plane correspondences three-dimensional coordinates two-dimensional projected images camera calibration function determined directly solving linear system obvious drawback accurately measuring three-dimensional coordinates feature slight variation method involves separating camera calibration parts internal external calibration term refers internal properties camera focal length radial lens distortion refers camera position orientation space internal calibration determined single time advance external calibration determined repeatedly camera moves scene determination robust information recovered view consistent internal calibration enforced process stage approach camera calibration presents dif culties feature points predetermined spacial locations camera internal calibration change stage calibration negating rst stage address problems faugeras introduced technique camera calibration camera calibration means calibration features predetermined locations space typical self-calibration algorithm fundamental matrices pairs views place constraints camera calibration determined satisfy constraints simultaneously fundamental matrices determined directly point correspondences pairs views methods determination planar homographies speci three-dimensional information required means camera calibration scene geometry recovered unknown scale factor initial papers faugeras luong maybank inspired alternative self-calibration methods nements pollefeys good chronology restate rst calibration algorithm refer kruppa-constraint method proved dif cult practice experience suggests reasons kruppa-constraint method derives camera calibration nonlinear minimization error function ideal noiseless case error function perfect nding global minimum true camera calibration requires starting minimization process close global minimum attributed presence local minima small attraction basin global screw axis rotation translation rotation translation figure screw transformation rigid-body motion decomposed purely rotational component purely translational component form screw transformation components composed order recreate original motion minimum presence noise error function induced kruppa constraints perfectly correct global minimum true solution indicating inherent numerical instability function case machine vision noise inherent problem researchers sought additional constraints calibration provide increased robustness observed cameras projective basis share plane nity calibration performed keeping cameras projective basis mutually-consistent internal calibration found ensured mutually-consistent plane nity cameras rationale method pollefeys van gool experimental evidence suggests improved stability kruppa-constraint method refer method pollefeys van gool modulus-constraint method previously algorithms calibration published general cameras undergoing general motions calibration special circumstances kruppa-constraint method modulus-constraint method discussed paper methods chosen prime examples fundamentally approaches calibration kruppa-constraint method perform direct calibration modulus-constraint method perform strati calibration direct calibration set fundamental matrices arising camera xed internal parameters provided input camera determined directly strati calibration projective reconstruction camera matrices provided input note method requires information rst projective camera matrices pairwise fundamental matrices kruppa-constraint method rst calibration algorithm simple describe performance appears worse modulus-constraint method approach calibration screwtransform manifolds direct strati calibration theoretical connection approaches remainder paper discuss mathematics screw-transform manifolds sections section appendix appendix present general-purpose algorithms intersecting manifolds section conjunction screw-transform manifolds yield calibration show pairwise motions camera classi results theory screw-transform manifolds section section provide extensive experimental results intersection algorithms sections discuss important implementation issues algorithms appendix screw transformation views shown chasles apparently earlier cauchy mozzi rigid object arbitrarily moved location movement object represented screw transformation means exists line space called screw axis rotation screw axis translation parallel screw axis mathematical-style notation intended convey concept informally thought matrices representing rigid transformations homogeneous coordinate system fig sample screw transformation term screw transformation refers screw turns moves parallel axis camera xed internal parameters captures views scene exists screw transformation moves camera rst viewing location orientation screw transformation ning world coordinate system cameras coordinate system chosen z-axis equal screw axis position equal optical center rst camera view letting upper-triangular matrix denote camera xed internal parameters camera matrices views written coordinate system letters refer rst view matrix rotation matrix representing tilt camera relative coordinate system matrix cos sin sin cos note parameters screw transformation amount translation parallel screw axis amount rotation screw axis distance optical center view screw axis basic unit measurement coordinate system amount screw translation terms units camera matrices arise alternative scenario camera motionless scene undergoes transformation equal opposite original camera motion physically occurs camera mounted position scene viewed rests rising turntable rotation axis equal z-axis rising turntable turntable rotates axis moves parallel axis refer alternative interpretation rising-turntable formulation viewing scenario refer duality interpretation camera relativism fundamental matrix views derived directly camera matrices section resulting fundamental matrix terms underlying screw transformation sin cos cos jhj sin jhj -tuple conveniently formally refer view-capturing scenario fma denote fundamental matrix arising scenario hin denote krk called relative calibration arising scenario homography induced plane nity note fma hin calculated directly rst knowledge 
question sections information knowledge knowledge -tuple provide question interest found directly pairs views identifying feature-point correspondences information internal relative calibration found directly camera views upgrading weak calibration fundamental matrix views views weakly calibrated stronger forms calibration calibration knowledge relative calibration views metric calibration knowledge internal calibration camera term monocular fundamental matrix describe fundamental matrix arising views camera xed internal parameters goal section show monocular fundamental matrix upgraded metric calibration knowledge real numbers related underlying screw decomposition camera motion choice real numbers lead legal metric calibrations clear weak calibration immediately upgraded information importantly parameterization real numbers leads method calibration section parameterizing rising-turntable scenarios rising-turntable scenario fundamental matrix fma scenarios give rise fundamental matrix fma fma set scenarios consistent fundamental matrix consce fma letting denote mapping algorithm fig xed conjecture consce exists triplet real numbers statement presented conjecture theorem extremely dif cult prove formally con dence conjecture true reasons algorithm invertible matrix left epipole fsm fsh find unique null eigenvector fsh fah note unknown scalar determined step solve over-determined system fsh cos cos sin extract eigenvector step perform decomposition recover figure algorithm mapping scenario consce consistent monocular fundamental matrix underlying motion assumed general alternative motions section fig fig algorithm perform steps algorithm fig algorithm fig figure algorithm mapping hin scenario consce consistent monocular fundamental matrix underlying motion assumed general step algorithm derived mathematically step-by-step derivation appendix computer experiments consistent conjecture assuming conjecture true isolated special cases function represents parameterization set consce member consce triplet real numbers section shown parameterization leads screw-transform manifolds method calibration note algorithm nes camera undergoes general motion meaning screw axis intersect optical center additional nontrivial motions occur leads nition cases called turntable motion transfocal motion discussed section parameterizing relative calibration previous section introduced set consce rising-turntable scenarios sharing fundamental matrix scenario consce relative calibration set relative algorithm invertible matrix left epipole solve system null eigenvector cos xqy yqx xqz zqx determined step figure algorithm determining calibrations consistent ned conhin fhin consce letting denote mapping algorithm fig xed conjecture conhin exists pair real numbers present statement conjecture theorem extremely dif cult prove formally conjecture true algorithm deduced mathematically appendix appendix computer experiments consistent validity function function represents parameterization set conhin case relative calibration consistent fundamental matrix corresponds pair real numbers section function modulus-constraint manifold earlier function kruppa-constraint manifold screw-transform manifolds calibration fundamental matrix views limited information camera calibration section describe existing self-calibration methods converting information metric calibration show parameterizations section induce objects called screw transform manifolds lead algorithms calibration kruppa-constraint manifold rst published self-calibration method based kruppa constraints scenario fma hin epipole viewed camera observed fkk krk krk equation places constraints determined directly camera views determined monocular fundamental matrices determined found cholesky decomposition notice technique metric calibration internal calibration matrix found immediately weak calibration fundamental matrices rst determining calibration refer style calibration direct calibration contrast strati approach section notation kma frob frob frobenius norm section nition frobenius norm normalize matrix reduce dimensionality internalcalibration search space matrix recovered scale factor self-calibration algorithm conkma fkma consce mapping conkma kma note conkma immediately subset easy create injective mapping conkma matrix conkma mapped recovered -vector assuming frob kruppa-constraint manifold ned image mapping refer set parameterization manifold attempt formally prove properties manifold empirically term manifold good descriptor steps ning algorithm continuous places set mapping referred coordinate system manifold calibration kruppa-constraint manifolds camera xed internal calibration capture series views assume pairs views overlap suf ciently determine fundamental matrices camera relativism view pair equivalent rising turntable scenario fma conjecture manifold words found intersecting kruppa-constraint manifolds arising pairwise fundamental matrices domain three-dimensional range ve-dimensional kruppaconstraint manifold three-dimensional manifold ve-dimensional space manifold removes degrees uncertainty location intersection manifolds yields zero-dimensional space disjoint union points work modulus constraint pollefeys van gool showed fundamental matrices points satisfy modulus constraints imposed fundamental matrix section schaffalitzky reduced upper bound point screw-transform manifold satis modulus constraint imposed fundamental matrix generating manifold size set mutual intersection points experimental evidence suggests size smaller section observations presented form basis self-calibration algorithm capture views pairwise fundamental matrices views determine kruppa-constraint manifolds fundamental matrices mutual intersection point manifolds dif cult part ciently nding mutual intersection point algorithms task presented section strati calibration modulus constraint section strati approach calibration internal camera parameters determined stages speci cally initial weak calibration determined upgraded calibration nally converted metric calibration views scene captured camera xed internal parameters camera moved scene views related solely rotations translations camera matrices views written kri matrix rotation matrix choosing metric coordinate system assume strati self-calibration paradigm rst step nding nding place camera matrices common projective basis initial projective camera matrices labeled related metric camera matrices invertible matrix representing transformation projective basis refer initial set camera matrices common projective basis projective reconstruction scene usual approach obtaining projective reconstruction identify feature points scene visible camera reconstruct features common projective basis fundamental matrices projective camera matrices relating reconstructed features viewed positions camera image planes features implicit part projective reconstruction refer choose projective basis authors shown assumptions form values scalar simply lead scale factors nal metric reconstruction metric reconstruction involves recovering scene scale factor choose convenience stage strati calibration upgrade projective reconstruction reconstruction equivalent nding nal stage upgrade reconstruction metric nding step performed simple solving linear system hard step nding stage pollefeys introduced elegant method determining called modulus constraint notice assumption hik leading krik left-hand side conjugate rotation matrix eigenvalues modulus absolute leads constraints similarly krjr left-hand side conjugate rotation matrix rjr leading additional constraints denote right-hand side replaced generic vector eia eja eia expanding characteristic equation modulus constraint pair leads fourth-order multivariate polynomial components vanishes satis modulus constraint eigenvalues modulus speci form note represents suf cient condition legality conhin fij reverse necessarily true property pairs arg min large single solution special collections views called critical motion sequences solutions mentioned section solved nonlinear minimization techniques modulus-constraint manifolds cameras projective basis initial projective reconstruction section simpler form screw-transform manifold key advantage alternative form longer needed parameterization -dimensional manifolds dimensional space kruppa-constraint manifolds manifolds -dimensional exist -dimensional space cameras projective basis function previous section note unknown determined algorithm instance solve matrices treated column vectors 
null eigenvector found scale factor divide component correct algorithm solved remaining steps algorithm task solve scalar closed-form solution least-squares approach preferable equation solve solved step figure algorithm determining view pair algorithm fig ave denote mapping step-by-step derivation algorithm appendix set vectors consistent fundamental matrix conave fave conhin remember relative calibration views screw decomposition motion views sij kij rij hin sij scale factor conhin fij conave fij method restricting location enumerate relative calibrations consistent fundamental matrix fij vectors set formally set introduced section discussed conhin parameterized real numbers mapping mapping conave ave modulus-constraint manifold ned set parametrization kruppa-constraint manifold attempt formally prove set parameterization form manifold mathematical sense term descriptively fig visualization modulus-constraint manifolds term a-space refers range space fij calibration modulus-constraint manifolds achieved calibration kruppa-constraint manifolds nding mutual intersection point suf cient number manifolds modulus-constraint manifold -dimensional exists -dimensional space figure piecewise-linear approximate surfaces tted modulus-constraint manifolds a-space determining mutualintersection point manifolds makes upgrade projective reconstruction metric reconstruction easily determined inset shows modulus-constraint manifold notice lone discontinuity dimensions grid underlying approximate surface manifold places constraint location manifolds restrict -dimensional set disjoint set points intersecting set manifolds discussed section section self-calibration achieved nding mutual intersection point screw-transform manifolds case kruppa-constraint manifolds mutual intersection point internal calibration matrix unknown scale factor finding mutual intersection point set kruppa-constraint manifolds represents direct self-calibration technique meaning calibration determined immediately fundamental matrices generated pairs views creating initial projective reconstruction cameras upgrading reconstruction case modulus-constraint manifolds mutual intersection point vector upgrade initial projective reconstruction camera matrices determined pairwise relative calibrations upgrading metric reconstruction nding simple matter modulus-constraint manifolds strati self-calibration technique kruppa-constraint manifolds pairwise fundamental matrices required approach initial projective reconstruction cameras required camera matrix projective basis self-calibration approaches mutual intersection screw-transform manifolds set disjoint points special critical-motion sequences involved cases set mutual intersection points eliminate incorrect points criteria additional screw-transform manifolds utilized manifolds incorporated set mutual intersection points grows smaller correct self-calibration remains note exit coincidental manifolds cases algorithm surface fitting goal find mutual-intersection points set manifolds preconditions nite number mutual intersection points parameterization manifold nite search range determined parameter manifold approximate piecewise-linear surface section denote set approximate surfaces pick surfaces find set mutual intersection points section determine surfaces repeat step xed number times suf ciently good standard ransac protocols determine loops return mutual intersection point largest number surfaces figure manifold intersection algorithm surface tting ransac periments suggest nding mutual intersection point modulus-constraint manifolds suf cient restrict set points section key task creating cient fast robust algorithm nding mutual intersection manifolds experimented approaches surfacetting technique voting algorithm monte-carlo markov-chain scheme approach brie summarized details voting algorithm found appendix note approach kruppa-constraint manifolds modulus-constraint manifolds general-purpose algorithms determine mutual-intersection points set manifolds irrelevant direct strati calibration performed surface tting direct approach solving intersection problem approximate piecewise-linear surface screw-transform manifold mutual intersection points approximate surfaces method involves imposing coordinate grid manifold fig visualization feasible range determined underlying screw-transform parameter underlying parameter represents screw rotation range range bounded large positive negative values suf cient nite range parameter decided treat parameter real number range grid imposed manifold obvious pseudocode modulus-constraint manifold case grid array -vectors grid psif theta kappa psif denotes function theta kappa denote predetermined conversion functions desired range kruppa-constraint manifold grid array -dimensional -vectors additional conversion function gamma loop grid established grid square cube divided triangles tetrahedrons square delimited grid grid triangles vertex sets grid grid grid grid grid grid set triangles tetrahedrons forms desired piecewise-linear surface approximation manifold surface approximations established case intersecting manifolds process steps rst pairs intersecting triangles manifolds determined triangle pairs tested intersection triangle manifold pseudocode pairwise set triangle pairs pairwise foreach triangles foreach triangles intersect pairwise pairwise mutual set points mutual foreach triangles foreach pairwise intersect mutual mutual intersection point trianglesiis set triangles forming approximation manifold intersectis boolean function indicating triangles intersect simple algorithm made cient data structures bounding boxes quickly eliminate cases triangles intersect manifolds successive loops pare set mutual presence noise set manifolds well-de ned mutual intersection point note noise level small set manifolds true mutual intersection points albeit incorrect locations observation generally good practice dealing noisy data make extra manifolds manifolds minimum combining ransac triangle-based intersection algorithm ransac feasible surfacetting intersection algorithm runs quickly section manifolds drawn set manifolds random sample meaning small number draws con dent result complete ransac-style surfacetting manifold-intersection algorithm shown fig general approach outlined section works extremely practice experiments section demonstrate drawbacks algorithm stem process sketching manifold tting approximate surface grid takes amount memory hold amount time sketch amount memory time required proportional square resolution variable rst pseudocode modulus-constraint manifolds cube resolution kruppa-constraint manifolds experiments suggest resolution bare minimum usable results higher resolutions produce ner results voting-based algorithm section present voting scheme determining intersection points manifolds voting scheme thought hough transform calibration approach strengths presence noisy data hough transform large numbers inliers consistently vote correct answer small numbers outliers vote random incorrect answers correct answer receive support answer data simultaneously unlike ransac-based approaches minimal subset data considered single iteration drawback large memory requirement storing votes length time algorithm run reliable winner emerge voting process crucial drawback coarse resolution voting grid wrong area search space correct early stages voting algorithm misdirecting entire search process m-dimensional manifold k-dimensional space set mutual intersection points assume manifolds point common meaning jqj goal element assume hypercube identi mutual intersection points search region idea voting scheme uniformly divide search region equal-size hypercubes called voting voxels count manifolds intersect voxel voxel member receive maximum number votes votes voxel search region entire voting process repeated place refer reduction search space size zoom-in step iteration search region smaller mutual intersection point directly determined linear intersection method discussed practice directly count manifolds intersect voting voxel counting process statistically approximated voting points randomly generated manifold ideally forming uniform sampling manifold voxel points manifold receives vote manifold note voxel allowed vote manifold voxel receives votes labeled safe volume voxel search region region half size centered centroid votes received neighbors full algorithm fig sample points generated manifold randomly selecting underlying coordinates step algorithm case direct calibration kruppa-constraint manifolds real 
numbers chosen random predetermined range sample point algorithm continues search region smaller smaller simply picking parameters random cient sample point lie reduced search region underlying parameters restricted range correspond points reduced search region range determined set sample points lie current search region discussion range dithering appendix note process sampling manifold based underlying parameters sampling small region manifold restricting range parameters made existence parameterization search region smaller manifolds continue intersect linear search region inherent property manifolds stemming fact manifolds smooth derivatives search region reduced size times search algorithm attempt hyperplane sample points manifold lie good achieved manifolds desired point intersection determined step algorithm voting goal find member set mutual-intersection points set manifolds members m-dimensional manifolds preconditions jqj parameterization manifold nite search range determined parameter choose volume members partition equally-sized voting voxels k-dimensional hypercubes ner subdivision slows algorithm improves success real data noise voxels large manifolds close intersecting manifold randomly select point serve coordinates calculate point manifold determine voxel vote cast provided manifold voted repeat step voxel receives votes fraction maximum number votes zoom step volume half size centered winning voxel return step smaller volume place manifolds generated sample points search region eliminated future consideration algorithm continues suf cient resolution reached manifolds approximately linear current search region figure voting-based manifold intersection algorithm hough transform calibration intersecting hyperplanes manifolds approximated hyperplanes hyperplane ned normal vectors nik point lying hyperplane mutual intersection point determined immediately nij series equations linear system ntk nnk experiments kruppa-constraint manifolds typically zoom-in steps manifolds suf ciently linear directly case direct calibration kruppa-constraint manifolds choosing initial search region easy internal calibration upper-triangular matrix scale factor irrelevant assumed matrix frobenius norm equal largest search space internal calibration matrices identi hypercube point region corresponds upper-triangular matrix modulus-constraint manifolds a-space empirical evidence suggests close provided initial projective reconstruction chosen properly implementation searches initial projective reconstruction fairly rounded meaning standard deviation position scene point centroid scene direction principle component assuming close initial search region chosen small larger initial choice fails figure state mcmc search space represents position manifolds integers manifold gure shows quadruple mapped position manifold converted range position upper triangle lattice square colored gray triangles handled separately lattice point lives lattice square skew quadrilateral formed non-coplanar triangles real applications manifolds intersect single well-de ned point noise self-calibration algorithms deal fact explicitly calculate manifolds voting algorithm advantage small region intersected manifolds provide measure con dence region true solution manifolds region smaller reliable solution importantly voting algorithm inherently robust outliers fundamental matrix severely incorrect outlier generate manifold sporadically intersects screw-transform manifolds consideration votes generated manifold coincide votes generated inlying manifolds erroneous manifold uence zooming-in process algorithm zoom-in steps incorrect manifold reduced search region dropped consideration monte-carlo markov-chain approach strictly speaking monte-carlo markov-chain mcmc algorithms calculate estimates expected values search global extrema section abuse mcmc technique mutual-intersection point manifolds process equivalent searching global maximum inverse-distance function mcmc ciently search global maximum stochastic process underlying mcmc spend running time states high likelihood case states high likelihood mutual intersection points manifolds algorithm stumble mutual-intersection points close small amount time present algorithm context nding mutual-intersection points set modulusconstraint manifolds algorithm kruppa-constraint manifolds discussed section approach grid rst laid manifold section portrayed fig grid size state state space form entries integers state positions manifold intersect entries eld stochastic optimization monte carlo methods including mcmc-based techniques simulated annealing genetic algorithms position manifold shown fig numbers lattice point grid manifold thought lattice position numbers sub-lattice position represent position triangles shown fig triangles cover lattice square metropolis algorithm exploring state space algorithm state assigned likelihood highest likelihoods belonging mutual intersection points highest likelihoods belonging states close mutual intersection points accomplished easily inverse mutual distance likelihood dist dist dist distij means euclidean distance points manifolds state represents simply small number prevent division power factor uences search process small difference likelihood states making search process undirected large search process trapped local maxima taking long time continue exploring regions state space choice critical making usable algorithm converges reasonable number iterations note theory mcmc algorithms global maximum eventually found choice state eventually visited metropolis algorithm proceeds random starting state state satisfactory max iterations performed begin random state comments random real number range begin begin state end end end approach picking state coarse search simultaneously critical making working algorithm random real number range random integer integers chosen randomly set nonzero begin mod mod end begin mod mod end test true modi coarse-level search performed modi ne-level search performed avoid trapped local maximum state occasionally chosen state space random adding step makes clear state space fully connected required mcmc algorithms theory resolution grid increased make coarse-level search equivalent ne-level search time memory constraints prevent manifold grids arbitrary resolution main loop repeated set number iterations state found suf ciently close mutual intersection point end iterations state determined state represents positions manifold position triangle fig nish algorithm mutual intersection point triangles found mutual intersection point contained triangles algorithm failed restarted random state triangles mutual intersection point algorithm succeeded result zoom-in step performed algorithm repeated ner grid centered approximate mutual intersection point experiments zoom-in step proven unnecessary piecewise-linear approximation screw-transform manifold grid represents suf ciently good make working higher resolution unnecessary algorithm parameters chosen experimentation factors number iterations likelihood choosing random balance factor coarse search experiments typically values equal balance coarse search section discussion number mcmc iterations perform mcmc approach easily modi work kruppa-constraint manifolds kruppaconstraint manifolds -dimensional state space requires extra parameters manifold coarse-level search ne-level search states form entries integers algorithm works obvious modi cations required extra parameters nal state found algorithm represent position manifold position lie tetrahedron triangle -dimensional search space tetrahedrons intersect single point mutual intersection points manifolds close approximation tetrahedrons intersect algorithm restarted random starting state note manifolds intersect place algorithm return mutual intersection point true voting algorithm section experimental evidence suggests modulus-constraint manifolds intersect locations section algorithm rerun intersection points found represents obvious inef ciency strength surfacetting algorithm section nds mutual intersection points single pass non-general camera motions section screw decomposition categorize pairwise motion camera categories arise cases called general motion turntable motion transfocal motion classification 
pairwise camera motions screw axis location classification motion pure translation optical center unifocal motion optical center turntable motion optical center transfocal motion optical center general motion table pairwise camera motion belongs categories table screw-transform manifolds general motion case presented section remaining cases discussed conclude section theorem simple test differentiating motion case classifying pairwise camera motions pairwise camera motion rigid-body transformation takes camera position orientation camera internal parameters unchanged table shows partition pairwise camera motions categories based screw decomposition elements decomposition amount rotation amount translation location screw axis element binary question resolved determined nonzero indicating rotation translation determined screw axis intersects optical center camera views categories table previously labeled investigated context calibration authors partition natural translational motion rst cases studied simplicity reconstruction case call unifocal motion meaning rotation camera optical center studied extensively mosaicing hartley showed metric calibration achieved unifocal motion authors mcmillan davis unifocal motion self-calibrate simpli camera models creating mosaics turntable motion investigated calibration context actual turntables arising planar motion knowledge case call transfocal motion speci cally identi investigated trivial case motion remaining motions termed general self-calibration papers require camera change location rotate papers simultaneously cover general motion turntable motion transfocal motion show section transfocal motion information calibration cases make degenerate case earlier calibration methods collections camera motions called critical arbitrary rigid-body transformations called displacements terminology kinematics algorithm sin fsm cos sin fsh null eigenvector find fact cos arbitrary scale factors rows denotes rotation matrix rotation axis angle rotation note related amount screw translation case perform decomposition recover figure algorithm mapping scenario consistent monocular fundamental matrix arising turntable motion algorithm perform steps algorithm fig algorithm fig figure algorithm mapping hin scenario consistent turntable motion assumed motion sequences information metric coordinate frame uniquely identi critical motion sequences exist motion categories critical motion sequence consist general motions turntable motions combination turntable motion turntable motion arises translational component screw decomposition screw axis intersect optical center case fundamental matrix formula sin cos jhj note applicable derivation section applicable assuming screw axis intersect optical center true transfocal motion case discussed section note published earlier fitzgibbon zisserman context self-calibration turntable motion proof earliest equation aware obvious turntable motion occur stationary camera views object rotating turntable occur camera translated parallel plane rotating axis perpendicular plane case general motion discussed section screw-transform manifolds arise turntable motion suitable direct calibration strati calibration simply ned algorithm fig ned algorithm fig note replaced symbolic variable parameterizations assumed parameter longer related screw decomposition simply unknown scaling factor treated parameter algorithms section transfocal motion transfocal motion arises screw axis intersects optical center position screw axis means rising-turntable model changed longer assumed rst camera optical center rst camera note assume amount screw translation simply lead scaling factor internal calibration scene reconstruction self-calibration achieved scaling factor suf cient assume screw translation play role equations arising transfocal motion notation describe transfocal motion scenario notation notation section fundamental matrix fma cot jhj derive eqs taking limit scaled works rising-turntable scenario measures amount screw translation multiple distance optical center screw axis making grow equivalent shrinking distance optical center screw axis alternative direct derivation section framework describing screw-transform manifolds transfocal motion general turntable motion extra parameter needed type manifold ned algorithm fig ned algorithm fig nitions leads -dimensional manifold -dimensional search space leads -dimensional manifold -dimensional search space perform direct calibration transfocal motions fundamental matrices needed unclear transfocal motions strati calibration intersection screw-transform manifolds a-space -dimensional manifold smaller entire search space restricted domain intersection manifolds suf ciently restrict location presence noise found complete certainty intersection process improved restricted limited range algorithm deterministically pick arbitrary line serve line denotes rotation matrix rotation axis angle rotation fsh tan fsh figure algorithm mapping transfocal motion scenario consistent algorithm perform steps algorithm fig algorithm fig note step figure algorithm mapping hin transfocal motion scenario consistent intersection algorithms section applied suitable modi cations introduced account increased number parameters tests classifying pairwise camera motions table simple test identifying class pairwise camera motion tests important self-calibration algorithm automatically correct screw-transform manifold alternative calibration method cases translational unifocal motion note class motion matrix fundamental matrix tests performed directly matrices proving correctness tests theorem concept abstract feature points introduced abstract feature point projected location position space camera views determined camera matrix abstract features behave real feature points exist information provide invisible camera eld view stating theorem proof information abstract feature points assumed oracle perform tests concept abstract feature points needed avoid situations tests fooled placing photographs views front tests classifying pairwise camera motions classification test degrees freedom notes affine metric motion views identical pure translation cross-product matrix unifocal motion homography exists views ned homography views turntable motion det fse transfocal motion fse general motion det table tests determining category pairwise camera motion belongs point correspondences views camera moving camera simply information perform tests camera featureless room views overlap theorem made correct times visual information practice performing tests requires suf cient visual information tests fooled impossible perform lemma views scene captured arbitrary cameras statements true cameras share optical center exists planar homography mapping view mapping abstract feature point view abstract feature point views induce fundamental matrix cameras optical centers views induce fundamental matrix exist planar homography mapping view proof cameras share optical center case planar homography mapping rst view internal calibration matrices cameras rotation matrix screw decomposition case fundamental matrix ned displacement vector optical centers expressed metric coordinate system express optical centers fundamental matrix ned proving implies assume optical centers differ exists planar homography maps abstract feature points view denote optical centers cameras spacial location abstract feature point point line notation denote projection spacial point rst views note rst view view contradicts existence planar homography maps existence implies optical centers location proving implies lemma fundamental matrix rank proof fundamental matrix ned invertible rank represents cross-product operation rank lemma views captured camera xed internal parameters undergoing turntable general motion underlying screw rotation multiple motion turntable det proof call cameras involved camera camera denote epipole camera camera det null eigenvector examine assume det logic xed-camera rising-turntable formulation optical center origin camera xed position origin viewing scene undergoes screw transformation camera 
denote camera views transformation camera denote camera views transformation vectors denote space spanned line image plane induced space scene point projection camera denoted null space fsub fsh corresponds position view epipolar line view represented hua eai conclude coplanar arbitrary scene point projects line hub eai view equals line hua eai linear combination fqa fub implying lies plane ubi plane hua eai words points project line hua eai view project line view screw transformation planes hua eai identical lies rotation axis happen multiple assume case hua eai represent distinct lines view intersect point scale factor kva point rotation axis space projection screw motion case screw motion translates screw axis xed-camera formulation positions axis line line hua eai line leading conclusion contradiction theorem views scene captured camera xed internal parameters assume amount screw rotation integer denote homography views exists denote fundamental matrix induced views denote left epipole statements true exists identity matrix views identical camera underwent motion exists equal identity matrix camera underwent unifocal motion camera rotated optical center iii exists antisymmetric main diagonal camera underwent translational motion exists fse camera underwent transfocal motion exists fse det camera underwent turntable motion exists det camera underwent general motion proof observe statement theorem well-de ned lemma exists exists motion classes table partition set pairwise camera motions class ned series binary tests claims proven conditions motion class hold underlying motion class conditions distinct motion classes hold simultaneously proof claim motion views identical optical centers equal exists unifocal motion exists lemma translational motion equals left epipole transfocal motion shows fse fsh fsh linearly independent internal calibration matrix invertible turntable general motion lemma establishes det turntable motion det general motion note condition lemma turntable motion cos sin leading fse cos sin jhj fse linearly independent multiple proof claim notation statement hold suf cient show conditions statement met exists iii statement assume exists symmetric antisymmetric main diagonal statement iii implies fse statement immediately follow det finally det statement experimental results surfacetting algorithm experiments real simulated data performed answer questions surfacetting algorithm surfit section algorithm work noise-free data mathematics screw-transform manifolds correct surface tting required mutual-intersection point manifolds performance degrade noise increases fast algorithm run views improve results points contained mutual intersection screw-transform manifolds a-space method work views real camera necessarily follow pinhole model reconstructions explanation fourth question important discussion section questions answered respect surfit sections similar questions respect mcmc-based algorithm section answered section experimental results voting algorithm section manning dyer presenting surfit experimental results discuss section synthetic data sets generated introduce error measure experiments introduce nomenclature describing synthetic data set figure randomly-generated synthetic scene left scene object cameras viewing scene figure typical camera view synthetic scene view pixels box boundary view note object span full view making accurate calculation fundamental matrix dif cult synthetic data sets nomenclature experiments performed randomly-generated synthetic data sets typical data set created internal calibration matrix generated randomly realistic ranges parameter matlab-style pseudocode shows speci cally generated note randpm returns random number range simulated image size dimensions simulated image pixels randpm randpm make pixel height similar width lens width factor wide lens lens width factor medium lens lens width factor lens width factor randpm skew factor randpm make principal point middle randpm image dimension simulated image size simulated image size object consisting perpendicular squares feature points uniformly spread squares created series cameras internal calibration randomly view feature point object fig sample scene fig sample camera view simulated views pixels answer rst question quantifying self-calibration algorithm works measuring distance internal calibration matrix calculated algorithm true internal calibration matrix algorithm ideally determined distance metric frobenius norm widely self-calibration literature error frob frob frob frobenius norm ned synthetic data sets figure signature fig wide fig wide medium wide fig wide medium wide fig wide fig medium fig medium medium medium table description synthetic data set experiments section frob exact signi cance error measure dif cult error perfect results achieved unclear interpret small errors instance scene reconstruction ultimate goal qualitatively-good reconstruction achieved frobenius error large factors important baseline distance views amount rotation pairs cameras number views stabilizes triangulation rule thumb frobenius error means good reconstruction results larger errors internal calibration yield excellent reconstructions data set terms ntrials nviews noise nka nth object width wide medium viewing angle meaning ntrials number random trials contained data set nviews number cameras noise uniform noise pixels added feature point viewed camera image plane pixels uniform noise means feature point displaced direction amount pixels equal likelihood note means feature displaced fraction trials error frobenius distribution error views pixels noise fraction trials error frobenius error distribution views wide lens medium object views medium lens large object views wide lens medium object figure error distribution surfacetting algorithm applied synthetic data noise radius pixels table full description data set figure comparison error distributions data sets table detailed descriptions pixels true location noise range means trial random chosen uniform random noise radius added feature trials levels noise data set nka nth dimensions approximate surface grid screw-transform manifold pseudocode start section dimensions array grid nka nth correspond directions object width measure image plane spanned object viewed object width data set means object width pixels image plane camera data set trial greater width speci measure object width single view standard deviation feature points camera image plane viewing angle experiments rough measures viewing angle called wide medium exact meaning terms pseudocode beginning section roughly wide viewing angle close medium viewing angle close table signatures synthetic data set experiments section listed gure data set generate fig signature wide signature means randomly-generated trials performed cameras wide viewing angles pixels uniform noise medium-size pixels minimum retinal object width approximate surfaces manifold grids full range uniformly sampled locations self-calibration algorithms paper operate directly fundamental matrices calculation fundamental matrices crucial standard normalized-linear method results easy reproduce improved nonlinear methods calculating fundamental matrices improve performance calibration algorithms answer question algorithm correctness rst question answered graphs figs fig shows error decreasing noise decreases indicating surfacetting algorithm work perfectly absence noise median error frobenius noise pixels median error noise views wide lens medium object views medium lens large 
object views wide lens medium object fraction trials time sec iteration time ransac iteration views wide lens medium object figure relationship noise error data sets figure distribution run times graph noise reach pixels error rises camera wide-view case indicating surfacetting algorithm performs presence noise gures generated noisy data sets noise radius fig xed pixels fig varied pixels histograms show vast majority trials small error demonstrating surfacetting algorithm performs presence noise answer question algorithm speed surfacetting algorithm distinct phases projective reconstruction calibration phase part research include timing implementation performs simple brute-force search order initial projective reconstruction round search process slow order seconds minutes understanding closed-form solutions exist problem execute instantaneously initial projective reconstruction found phase calibration involves upgrading reconstruction metric upgrading metric closed-form solution performed instantaneously surfacetting algorithm tested section concerns rst part problem upgrading projective reconstruction algorithm fundamental matrices time ransac process section total running time algorithm depends iterations ransac performed ransac continue error level reached triplet fundamental matrices chosen initial set triplets chosen probability success achieved meaning triplet good inlying fundamental matrices chosen leading good calibration ransac process involves indeterminate number iterations time algorithm timing long ransac iteration takes histogram per-iteration run times fig histogram shows typical iterations seconds camera views calibration fundamental matrices iterations ransac expect runtime seconds calculation account fact iterations signi cantly execute surfacetting algorithm requires preprocessing step fundamental matrix screw-transform manifold manifold surface tted surfacetting process runs xed time dependent desired resolution surface manifold sample point takes xed amount time calculate implementation running sun ultra sparc required seconds time compute grid point approximate surfaces resolution experiments required seconds surface time improved surface generated xing iterating moving calculations involving performed calculations involving performed loop steps step algorithm fig performed knowledge timings include ciencies slower answer question advantage extra views views improve calibration question answered fig generate graph hundreds trials run noise radius chosen randomly pixels data sets speci cally wide medium wide notice data sets views set views -view data sets differ camera viewing angle retinal object size data plotted data set trial noise radius pixels identi median error subset calculated median error plotted x-coordinate pixels process repeated noise radii range pixels pixels resulting graph shows noted section shows error decreases noise decreases shows views produces notably results views ceteris paribus finally shows wide eld view greatly lowers error medium-size eld view observation signi wide eld view rarely calibration reconstruction general apparently improvement arises fundamental matrix calculation stable eld view increases calibration technique dependent fundamental matrices answer question number mutual intersection points question answered fig fig rst gure shows distribution number mutual intersection points found trial data set signature medium approximately trials mutual intersection points roughly found intersection points due nite granularity surfaces tted manifold trials showed mutual intersection points results suggest three-view calibration problem solutions cameras general arrangement interpretation results showing intersections errors arising approximate surfacetting technique graph shows granularity tted surface affects number mutual intersection points found term granularity means values generate approximate surface values means approximation means longer runtime memory consumption granularity means values uniformly spaced domain domain mapping appendix gure solid line corresponds data previous gure fig represents highest fraction trials mutual intersection points distribution mutual intersection points fraction trials mutual intersection points distribution intersection points varying granularities figure distribution number mutual intersection points modulusconstraint manifolds figure distribution mutual intersection points modulus-constraint manifolds differing granularities granularity tested lines show effect reducing granularity independently results worse low granularity general results consistent granularity showing spike mutual intersection points data sets lower granularities spikes histograms diminished expected answer question performance real cameras subsection discuss results experiments performed real cameras goal rst experiment acquire extremely high-quality data real camera order test selfcalibration reconstruction algorithms perform ideal circumstances experiment tested algorithms realistic cluttered scene experiment high-quality data make high-quality data set created calibration object cardboard box removing sides box walls remained meeting single vertex covered inside faces walls dot pattern printed laser printer fig order establish separate -dimensional coordinate system dots face dots face unique appearance dots served positions local coordinates remaining dots face represented lattice points local coordinate system set photographs box camera xed internal parameters minimal radial lens distortion photographs positions orientations face visible photo views captured center dot determined automatically lighting uniform faces manual preprocessing step performed equalize appearance dark light regions black dots white paper extracting dot centers faces manually partitioned view order identify face dot belonged center mass dot appeared view approximate projection dot true center view approximation dot assigned identifying coordinates view rst coordinate faces dot belonged coordinate dot positions figure photo calibration box figure reconstructed calibration box orthographic overhead view showing regularity dot pattern reconstructed surface face local coordinate system note dot assigned coordinates view point correspondences automatically determined views hundred point correspondences views correspondences covered complete eld-of-view camera facts made ideal circumstances calculating pairwise fundamental matrices fundamental matrices calculated calibration reconstruction performed calibration methods tested data direct calibration voting scheme strati calibration voting scheme strati calibration surfacetting technique paper results case essentially identical indicating extreme high quality low noise data set reconstructions perfect face perpendicular feature face lying plane features face forming orthonormal lattice grids fig voting algorithms camera views perform calibration surfacetting algorithm note analysis experimental results presented empirical analytical interested describing apparent visual quality results comparing results physical measurements original scene camera reasons true internal calibration camera calibrate camera alternative calibration technique alternative technique contend noisy data ultimately produce approximation true internal calibration camera experiments pinhole camera true internal calibration matrix camera begin analytical analysis self-calibration results compare approximation importantly self-calibration algorithms tested synthetic data determine capacity nding correct internal calibrations experiments algorithms determine true internal calibration pinhole camera arbitrary degree precision provided input data suf ciently accurate data generated calibration box experiment good verging synthetic serve reinforce results synthetic-data experiments real applications input data lower quality feature points determined subpixel accuracy fewer feature points features cover complete camera view experiment realistic scene experiment scene more-natural objects calibration box experiment scene consisted objects mostlyat patterned rug oor front wall perpendicular oor fig objects chosen shape color texture 
rst object cardboard box chosen visible walls perpendicular ground reconstruction features walls surfaces coplanar nal reconstruction measure quality feature correspondences independent correctness metric reconstruction coplanar points remain coplanar projective reconstruction note cardboard box matte surface-re ectance properties limited surface texture point correspondences object atable plastic globe shape globe spherical viewed overhead north pole globe rounded hexagonal cross section plastic surface globe fairly ective potentially introducing correspondence problems object furry toy monster object complicated anthropoid shape overly-detailed good testing capabilities reconstruction furry surface texture provided challenge determining point correspondences surfit calibration algorithm tested data set algorithm applied views fig chosen views closely positioned space making calibration reconstruction task dif cult due small baselines small rotation angles reconstruction results shown fig algorithm returned single internal calibration calibration reconstructions note walls cardboard box close perpendicular sphere spherical toy monster correct anthropoid shape feature points produce realistic reconstruction horns lacking note correct chin brow ridges distinct rounded legs oor back wall planar reconstruction indicating highly-quality feature point correspondences problems back wall perpendicular oor texture rug uniformly proportioned texture appears larger regions uniform original rug problems due close spacing original views reconstruction wall perpendicular oor input data reconstruction produced algorithm cameras fact box back box experiment figure scene reconstructed closely-spaced views inset impossible determine back wall slanted perpendicular oor noise data hand cameras positioned view wall oor edge evident algorithm data wall oor perpendicular important recurring problem scene reconstruction noise data incorrect reconstructions data correct reconstruction practical standpoint important problem stems fact objects viewed side reconstructed limited fashion views angles produce complete scene reconstruction parts scene adequately visible parts objects oor reconstruct scenes widely-separated views introduces problems due accumulation errors dif culty nding point correspondences wide baselines smile workshops dedicated topic note full camera calibrations including position orientation determined algorithm wide variety techniques visualize scene more-complete manner important class visualization techniques scene reconstruction light eld lumigraph techniques lighteld rendering requires dense set views full camera calibration view point correspondences required recovered scene reconstruction performed starting dense set views self-calibration techniques recover camera calibration view lighteld rendering approach alternatively knowledge camera calibration conjunction view interpolation techniques produce virtual camera views transitioning original views control end user interpolation techniques work directly manipulating original input images potentially produce detailed-looking output scene reconstruction detail visible original views more-or-less present interpolated views quality density feature correspondences dynamic view morphing requires camera calibration moving objects present finally knowledge camera calibration makes scene reconstruction space carving voxel coloring full camera calibration dense correspondences camera views building voxelized scene reconstruction side effect dense-correspondencending algorithm koch requires full camera calibration dense correspondences determined detailed scene reconstruction performed variety ways producing triangle mesh output facade system utilizes full camera calibration user interaction create scene reconstructions view interpolation techniques texture-mapped scene reconstructions bene view-dependent texture mapping facade camera calibration required view-dependent texture mapping implementation details complete discussion experimental results surfit algorithm discuss important implementation details details relevant experimental results mcmc-based algorithm presented section measuring goodness mutual intersection point experimental trial involves performing series ransac iterations ransac iteration number mutual intersection points determined surfit algorithm case mcmc-based algorithm mutual intersection points determined mutual intersection point converted internal calibration matrix assigned number indicating meets expected criteria internal calibration call goodness mutual intersection point successive ransac iterations performed calibration algorithm remembers mutual intersection point highest goodness score iterations performed intersection point highest goodness considered answer calibration point returned algorithm goodness mutual intersection point measured important implementation detail note goodness error measure term goodness error error measured correct solution priori sense relationship error goodness relationship probability likelihood measure goodness involved components mutual intersection point internal calibration rst goodness criterion reasonable real camera speci cally required denote height width camera view pixels rst condition speci camera rhomboid pixels arbitrary parallelogram-shaped pixels condition principal point central view test lenient information expected internal calibration camera tests made tighter meet basic criteria implementation gave poor goodness score adding large penalty criterion goodness based point recover matrix pair camera views place left-hand sides rij rotation matrix rij correct internal calibration found data noise free holds frob rij rij sum pairs views fundamental matrix provided fact rotation matrices orthogonal left-hand side scaled properly determinant scaling close sum criteria goodness essentially sum main error measure candidate internal calibration calibrations meet rst criteria severe penalty single number measuring goodness mutual intersection point produced pollefeys measure goodness experiments goodness candidate internal calibration based met expectations form expected represent camera square pixels principal point center view candidate solution closest expected form highest goodness returned nal answer contrasts technique goodness based candidate calibration induces rotation matrices pairs views expected form internal calibration eliminate solutions represent reasonable cameras approach recovery cameras pixels unknown reasonable shape instance assuming pixels aspect ratio normalizing search space screw-transform manifolds provide explicit representation set legal camera calibrations fundamental matrices contrast kruppa constraints modulus constraint provide implicit representations important bene explicit representation normalize search space provide maximum separation metric search space alternative solutions calibration fig shows modulus-constraint manifolds a-space mutual intersection points triplet manifolds implementation rst plane manifold transforms search space tted planes corresponded -plane -plane -plane manifolds made distinct transformation mutual intersection points lie vicinity origin outer reaches manifold maximally separated basis idea empirical observation fig manifold consists broad outer regions surrounding small curved region general manifold runs roughly directions a-space technique transforming search space create cloud points uniformly sampling lattice points approximate manifolds principle components cloud principle components a-space dimensions search space normalized translating center mass cloud points origin mapping principle components unit vectors stretching space standard deviation cloud points direction principle component manifold approximately planar shape simple technique meet objectives normalization stated earlier normalizing search space section performed experiments section section surfit algorithm normalization makes bounding boxes meaningful stabilize triangle-intersection tests mcmc algorithm normalization crucial ensures distance sample points close mutual intersection point large experimental results mcmc-based algorithm section discusses results self-calibration experiments performed mcmc-based manifoldintersection algorithm section questions addressed experiments algorithm work noise-free data algorithm correct performance degrade noise increases fast algorithm run views improve results mcmc-iterations ransac-iterations algorithm perform mcmc-based algorithm compare surfacetting 
algorithm interpreting results section note implementation details section surfit algorithm apply mcmc-based algorithm synthetic data sets figure signature fig wide wide wide wide fig wide wide fig wide fig wide fig wide wide wide wide wide fig wide wide wide wide wide table description synthetic data set experiments section synthetic data sets nomenclature section experiments randomly-generated synthetic data sets performed nomenclature sets section additional data elds required store parameters speci mcmc-based algorithm mcmc iterations number iterations mcmc loop performed ransac iteration returning answer found ransac iterations number iterations ransac loop performed experimental trial data set terms ntrials nviews noise nka nth object width wide medium viewing angle mcmc iterations ransac iterations table signatures synthetic data set experiments section listed gure comments section apply experiments section median error frobenius noise pixels median error noise views wide lens medium object views wide lens medium object views wide lens medium object views wide lens medium object median error frobenius noise pixels median error noise surfit views wide lens medium object mcmc views wide lens medium object figure relationship noise error data sets figure direct comparison surfit mcmc-based algorithms answer question algorithm correctness question mathematics screw-transform manifolds correct calibration answered experiments section graph fig showing error converging noise implies correctness mathematical theory question mcmc-based intersection algorithm locate mutual-intersection point screw-transform manifolds answered convergence fig histograms figs histograms demonstrate absence noise mutual-intersection point found mcmc-based algorithm high-probability success note histogram fig suggest mutual-intersection point screw-transform manifolds misleading instance mutual-intersection points mcmc-based algorithm return intersection points success rate due unknown property mathematics mutual intersection points happened correspond similar internal calibrations implementation adds severe penalty factor potential solution mutual-intersection point represent reasonable internal calibration criteria fairly lenient discussion section added penalty factor mutual-intersection points exist tend produce unreasonable internal calibrations discarded algorithm results section suggest mutual intersection points typically histogram fig imply single mutual-intersection point answer question algorithm speed ransac iteration mcmc-based algorithm runs constant speed speed directly proportional number mcmc iterations performed takes seconds implementation perform mcmc iterations mhz pentium iii complete runtime number fundamental matrices time create manifold grid number ransac iterations seconds time needed construct initial projective reconstruction part research ransac process short circuited internal-calibration matrix suf cient goodness score fraction trials error frobenius distribution error views pixels noise fraction trials error frobenius distribution error views pixels noise figure histogram showing likelihood successful calibration views noiseless data figure histogram showing likelihood successful calibration views noiseless data section found process fast chose xed number ransac iterations experiments comparison timing results section experiments performed slower computer seconds time compute manifold grid point mhz pentium iii surface resolution seconds compute manifold based run times experiments section divided roughly comparison results section answer question advantage extra views question answered plot fig signi decrease error camera views minimum views produce results views note number ransac iterations performed trials ransac iterations -view -view cases produced results cases triplets manifolds explore ran experiments test ransac iterations cost longer run time answer question choosing mcmc parameters common complaint machine-vision algorithms carefully tune algorithm parameters order achieve good performance case intersection algorithms ran experiments surfacetting algorithm parameters create approximate manifold surfaces granularity determine goodness potential solutions performance algorithm hinge choosing ideal parameters suggested values parameters paper additional parameters set mcmc-based algorithm number ransac iterations perform number mcmc iterations perform ransac iteration explain surfacetting algorithm number ransac iterations depended solely anticipated number outlying fundamental matrices iteration yield mutualintersection points chosen triplet manifolds re-explore triplet mcmc-based algorithm produces solution triplet produce median error frobenius mcmc iterations median error mcmc iterations views wide lens medium object median error frobenius ransac iterations median error ransac iterations views wide lens medium object figure median error amounts iterations mcmc loop figure median error amounts iterations ransac loop solutions trapped local minimum error function perform extra ransac iterations increase probability success chose perform xed number ransac iterations number experimental trial graph fig shows effect numbers ransac iterations table description data sets expected ransac iterations increased likelihood success chose iterations experiments section ransac iteration consists drawing manifolds random mcmc-based search process attempt locate mutual intersection point manifolds section search process starts random state representing points a-space position manifolds states explored stochastically tendency explore states positions a-space potentially close mutual-intersection point number mcmc iterations perform parameter tuned higher numbers reliability slow algorithm graph fig shows results numbers mcmc iterations xed number ransac iterations experiments iterations graph suggests iterations doubling runtime produced bene reducing error answer question comparison surfacetting algorithm surfacetting algorithm produce results mcmc-based algorithm rely underlying approximate surfaces surfacetting algorithm nds mutual intersection points mcmc-based algorithm mutual intersection points mcmc-based algorithm signi practical advantages important performs relative surfacetting algorithm graph fig shows direct comparison results algorithms signi advantages mcmc-based algorithm simple implement dimensionality manifolds sample store approximate surfaces manifolds manifolds sampled albeit signi cantly slower runtime property extremely important intersecting higher-dimensional manifolds storage preprocessing time creating approximate surfaces infeasible important potential implementation algorithm low-powered portable platforms memory potentially slow runtime offset low-powered microprocessors working parallel algorithm arbitrarily scalable calibration views section explain question section important recall screw-transform manifold a-space -dimensional a-space -dimensional intersection manifolds general set discrete points points represents original internal calibration camera meaningless provide alternative legal internal calibrations camera turns intersection manifolds yields set point calibration achieved camera views alternatively number mutual intersection points large camera views order make set smaller number mutual intersection points instance suggest camera calibration dual calibration consistent observed data set fundamental matrices words calibration problem unique solution suf cient number camera views incorporated number mutual intersection points number legal camera calibrations critical solving calibration minimizing error function optimization algorithm levenberg-marquardt gradient descent run time global minimum global minimum corresponds legal internal calibration optimization algorithm run time starting locations global minima bad cases global minimum small attraction basin optimization algorithm run hundreds thousands times succeed knowing mutual intersection points exist impossible global minima found search process stop noise-free data legal internal calibrations correspond global minima error function noise real data legal internal calibrations correspond local minima global minima knowing legal calibrations supposed exist differentiate meaningless 
local minima local minima correspond legal internal calibrations legal calibrations supposed exist algorithm return local minima smallest error measure ransac smaller sample size faster reliably algorithm works camera views leads internal calibrations ransac sample size views sample unique calibration ransac infeasible algorithm run slowly inlying fundamental matrices good sample considerations importance existing calibration algorithms rely minimizing error function calibration cite mcmc-based algorithm section falls category note surfacetting method section energy-minimization method suffer drawbacks listed surfacetting method determines mutual intersection point pass makes ideal experimentally determining number mutual intersection points three-view case pollefeys pointed camera views upper bound mutualintersection points eliminating impossible cases schaffalitzky reduced number number large make calibration views infeasible experiments surfacetting method suggest instances mutual intersection points fig experiments section calibration views feasible experiment shown fig performed views summary paper achieved concept screw-transform manifolds rst presented manning dyer formal uniform presentation formal mathematical proofs conjectures lacking logical derivation screw-transform manifold algorithms algorithms ample experimental evidence synthetic real data suggests truth conjectures detailed formal proofs steps screw-transform manifold algorithms provided earlier general-purpose algorithms nding mutual-intersection point series manifolds presented algorithms variety paper camera calibration calibration achieved nding mutual intersection point screw-transform manifolds voting algorithm section rst presented algorithms presented paper rst time extensive experiments section section demonstrated cacy performance characteristics surfit mcmc-based algorithms detailed scene reconstruction closely-spaced views real scene accomplished surfit algorithm section fig experiments shown calibration reliably achieved camera views established experiments surfit algorithm showed trials performed camera views noise yielded calibrations correct calibration section detailed discussion successful reconstruction real camera views section demonstrated mathematics screw-transform manifolds specialized motions non-general motions presented section case turntable motion rst presented case transfocal motion presented rst time case general motion rst presented important theorem partitions pairwise camera motions categories theorem section table table presented rst time simple test provided category knowledge case call transfocal motion formally labeled studied paper test turntable motion rst presented minor proof test corrected details voting algorithm presented presented rst time appendix appendix derivation fundamental matrix section show detail rising-turntable formulation fundamental matrix derived purely mechanical straight-forward properties matrix arithmetic provide list mathematical equalities stemming rising-turntable formulation matrix properties begin stating general matrix properties appendix appendix property matrix inverse invertible matrix observe det det inverse matrix unique det property cross-product matrix cross-product operator property matrix multiplication property alternative cross-product expression complicated expression cross-product operation appendix lij form basis spans uniquely expressed det det det det det similarly det property intersection lines arbitrary nonzero linearly independent vectors vector simultaneously perpendicular intersection plane normal plane normal linearly independent intersection line note lies line projective geometry terms identity line intersects line point identity appendix derivation direct derivation fundamental matrix derive fundamental matrix formula fundamental matrix written left-most matrices simply form cos sin sin cos cos sin sin cos cos sin sin cos evaluating straight forward involves terms working stages rst multiply left epipole cos sin cos sin cos sin cos sin sin cos sin cos cos sin cos cos sin sin sin cos cos sin sin cos sin cos cos sin cos cos sin sin sin cos cos sin sin cos sin cos sin cos cos sin calculation nished multiplying det sin cos sin cos sin cos cos sin sin cos sin cos sin cos cos sin cos sin sin cos cos sin sin cos properties screw-transform decomposition fundamental matrix identities derived eqs straight-forward multiplication fah sin cos fah cos fah sin fsh sin fsh cos sin fsh cos letting sin cos fsm sin cos sin cos cos sin cos sin cos cos sin cos cos cos sin finally epipoles cos sin cos sin cos sin cos sin appendix derivation parameterization algorithms section shows detail algorithms a-d derived note fundamental matrix views found directly images identifying point correspondences means determined derivation algorithm step fje left epipole easy verify direct multiplication choice produces satis note well-known satisfy equation form easy matrix step step note fsh property image parameterized single real variable expanding equation fsh quadratic equation elegant parameterization fact lies cone fsh suggests varies real numbers trace cone experiments suggest case step property appendix fsm fsh fsm fsh cos sin cos sin step fsh sin fah sin section vector null space matrix fah sin sin matrix nonzero rank matrix null eigenvector nullity array dimensionality rank nullity add minimum dimension nullity vector generates null space scalar determined step step note stage algorithm step straight-forward multiplication nition cos sin sin cos cos sin summary vanishing points axes rst camera view determined directly provided real parameters method determined single unknown real parameter scale determined metric internal calibration camera found metric scene reconstruction naively upper triangular matrix interested scale factor degrees freedom analysis shows parameterized real numbers fact degrees freedom shown demonstrated speci parameterization great deal intuitive meaning rotation angle views corresponds vanishing point rotation axis amount translation multiple distance optical center axis rotation screw axis screw transformation derivation algorithm note case turntable motion step step simply nes quantity step sin notice xing scale scale scale determined steps consistent scale step fsm cos sin recall lij shorthand notation step shown -dimensional null space null space eqs fsh fsh fsh proves conditions form spanning basis practice found nding null eigenvector eigenvector indeterminate scale factor step needed scale makes consistent step found step scaled correctly consistent proper scale factor converting step vector represented scalars observe cos cos cos cos cos cos cos cos relationship true hold proving cos unknown scale factors columns scale factor column similarly columns scale factor column form basis determined column step lie plane perpendicular determined previous step vector lies plane choice vector rotated plane procedure step point direction plane scenario produces correct direction suf cient purposes paper empirical evidence suggests choice produces collinear scenario consistent step arbitrary scale factor converting case normal physical interpretation amount screw translation note scale decoupled scale case turntable motion derivation algorithm step clear step optical center lies axis rotation serves z-axis clear choice direction x-axis earlier cases arbitrary line chosen xz-plane determine step fundamental matrix line chosen step parameterization point line restricts range reduce search space speci 
order make algorithm description easier selected collinear step step step parameterization point line step makes scale step fsh formula note computed step step serves unknown scale factor makes consistent step derivation algorithm linear system step interest conhin element satis linear system arises placing constraints properties satisfy attempt prove system unique null eigenvector determine conditions eigenvector unique cite experimental results evidence approach leads unique correct properties angle underlying screw rotation encoded scaled correctly conjugate rotation matrix xes points rotation axis vanishing line planes perpendicular rotation axis xed views assume scaled det making conjugate rotation matrix scale factor makes equality property listed leading rows linear system rows property rst row angle rotation encoded conjugate rotation matrix eigenvalues exp exp trace matrix sum eigenvalues cos exp exp exax eyay ezaz derivation algorithm step assumption goal holds eja equation equality scale factor coef cient meet coef cient condition steps ensuring resulting screw-transform manifolds scale set matrices vectors self-calibration process scale factor makes left-hand side equal eja axe aye aze linear system solved step null eigenvector found scale factor divide component eigenvector recover correct scale steps pattern eja eia scale factor makes right-hand side equal left work stages rst solving recovering rearranging leads eia eja ijhi ijei right-hand side rank matrix columns -dimensional space left-hand side cross-product columns left-hand side vanish ning ijhi solved covers steps alternative solution step fig arises multiplying leading solved quadratic equation solutions arise satis determined step directly logic step vector correct scale derived missing scale factor determined separate step words derivation ensures coef cient appendix implementation details voting algorithm section discusses important implementation details voting-based manifold-intersection algorithm section part reason presenting details underlying ideas voting algorithm screw-transform manifolds conditioning section needed screw-transform manifolds parameterization conditioning speci voting algorithm forced-spread sampling voting scheme determining manifold intersection points section simple principle care sample manifolds ciently samples generated completely random manner zoom-in steps randomly-generated samples lie current smaller search volume algorithm converge slowly samples generated high probability lying current search range cover search range uniformly areas convergence accounted section present approach sampling termed forced-spread algorithm meets goals practice algorithm leads convergence quickly provided fundamental matrices close true fundamental matrices recall sample point manifold generated underlying parameters thought coordinates sample forced-spread algorithm generates sample points slightly altering coordinates existing previously generated samples ensure uniform spread samples manifold sample region allowed create samples sample point termed fecund samples generates thought offspring ensure fast spread sample points manifold most-recently generated samples allowed fecund allowed offspring encourages exploration newly populated lled areas manifold recall general description voting algorithm section search volume subdivided voting voxels hypercube subdivided equally nvotevoxelsperside side denote dimensionality search space case direct calibration k-space case strati calibration a-space nvotevoxelsperside voting voxels needed -dimensional array integers needed tally votes cast voxel -dimensional array booleans needed manifold track manifold cast vote voting voxel manifold allowed cast vote voting voxel keeping track fecund samples requires similar mechanism current search region subdivided fecund voxels voting voxels fecund sample allowed fecund voxel handled -dimensional array booleans nfecundperside denote number fecund voxels side array stores nfecundperside boolean variables array needed manifold true nfecundperside nvotevoxelsperside integer achieve uniform spread fecund samples voting voxels typically larger defeats purpose fecund-sample mechanism force samples spread quickly manifold forced-spread algorithm stated comments algorithm explanation variables choose initial search volume mutual intersection point section initialize arrays -dimensional array small integers track votes cast voxel manifold -dimensional arrays booleans tracking manifold voted voxel marking region search space fecund sample manifold fecund sample allowed fecund voxel non-reproducing samples allowed lie fecund voxel seed manifolds screw-transform manifold generate random points manifold choosing random triplets doublets depending lies initial search region clear lists set variables manifold initialize empty lists list hold samples generated manifold lie current search volume list hold fecund samples add seed sample points step lists mark manifolds active generate samples jljdenote size list manifold marked active jfij minimumfecundcount -dimensional array array indices size array dimension array size nallowedtoreproduce good recently created fecund samples manifold produce offspring range dithering approach appendix generating offspring add offspring samples list offspring lies voting voxel manifold voted cast vote voxel mark voxel manifold vote offspring lies fecund voxel fecund samples manifold add offspring list mark fecund voxel manifold fecund samples affect manifolds fecund voxel manifold unable generate fecund samples reasonable amount mark manifold active manifold keeping pace manifolds thrown manifold marked active jfij minimumfecundcount return step minimumfecundcount suf cientfecundcount increase minimumfecundcount minimumfecundcountincrement return step determine voting proceeded long determine voxel votes votes threshold needed zooming increase minimumfecundcount minimumfecundcountincrement return step time minimumfecundcount continues incremented mutual intersection point found signal failure exit algorithm alternatively algorithm backtrack previous larger search region voxel led current failure barred receiving votes future check linear solution check linearity manifolds marked active suf ciently linear point intersection linear manifolds return answer accompanying text zoom-in step linear solution exists perform zoom-in process steps reset minimumfecundcount initial return step determine smaller search region determine center typically voting voxels max voxel step large number votes sought-after point mutual intersection center mass voting voxels volume centered center search region instance center mass voting voxels voxels mass voting voxels number votes received width search region half width search region reset clear arrays track votes arrays step array sizes remain reallocate memory entries correspond voxels smaller search region manifold marked active create initial samples list search region keeping samples lie treating members newly generated samples follow procedure step cast votes search region follow procedure step create initial fecund samples list mark fecund voxels replace rst manifolds considered active time manifolds outliers longer presence current search region manifolds marked active thenceforth considered manifolds dif culty generating samples current search region due bad parameterization marked active variable minimumfecundcount number fecund samples manifold equal mechanism manifold shape parameterization manifolds fecund samples easy generate arise slowly manifold reaches quota fecund samples set variable minimumfecundcount generate samples manifolds catch typically initialize variable minimumfecundcount constant constant suf cientfecundcount step prevent voting decisions made suf cient number votes cast manifold forced-spread algorithm meets goals cient sampling fecund samples spread helping ensure uniform 
coverage manifold current search region fecund samples reproduce samples generated evenly manifold finally recently-generated fecund samples reproduce unexplored areas frontiers expansion receive samples older fecund samples allowed continue producing offspring lots samples generated areas manifold sampled wasting computational effort range dithering points screw-transform manifold similar underlying manifold coordinates similar values closer points closer manifold coordinates zoom-in steps samples manifold similar manifold coordinates key ciently generating samples manifold coordinates range existing samples current search region step returning step manifold maximum minimum values samples list call min max max min step fecund sample generate child manifold coordinates offspring sample chosen slightly altering dithering parent coordinates guide slightly altering means speci method implementation pseudocode modulus-constraint manifolds involve coordinate code dka dth denote goal produce manifold sample point sample point range dithering input coordinates manifold point dka dth discussion output coordinates newka newth sample point notes rand returns random number range randnp returns random number range rand begin newka randnp dka newth randnp dth end begin newka randnp dka newth randnp dth end begin newka randnp dka newth randnp dth end begin newka randnp newth randnp end return manifold point coordinates newka newth conditioning parameterization important realize equation step fig represent ill-conditioned system means conditions small lead large discuss condition system note image vanishing point screw axis considers viewing sphere camera optical center locations form -dimensional manifold surface sphere nity approaches direction manifold manifold negative nity approaches direction large close stops changing meaningful assume xed suf ciently-large means treat real number mapped observation nite range condition equation establish map produces approximately regularly-spaced intervals -dimensional manifold viewing sphere approximate estimate internal calibration stretch viewing sphere regularly-spaced intervals meaningful euclidean distance sample normalized unit length roughly equal metric space approximating internal camera calibration conditioning map implementation sends equally-spaced guide numbers numbers yield evenly-spaced approximate metric space remaining members mapped linearly interpolating image nearest guides fig shows conditioning algorithm simplicity method conditions samples effectively ideas similar bisection methods immune problems arise calculate derivatives unstable system implementation iterations loop steps iterations condition parameterization completely parameterization recall fsh lies cone simply parameterize points intersection cone unit sphere camera space normalized estimate internal calibration experimented parameterization work armstrong zisserman hartley self-calibration image triplets proc european conference computer vision lncs pages springer-verlag algorithm conditioning goal find real numbers approximately note range space comment iteration cient precompute store values array changing entry loop initialize equally spread pick samples random avoiding endpoints equal random number find distance image images neighbors change image equally-spaced images neighbors repeat step xed number times dependent experiments performed ahead time determine good general-purpose number iterations figure algorithm conditioning coordinate system manifold beardsley zisserman calibration mobile vehicles mohr chengke editors europe-china workshop geometrical modelling invariants computer vision pages xidan press china beardsley torr zisserman model aquisition extended image sequence proc european conference computer vision pages bottema theoretical kinematics north-holland publishing company york chen williams view interpolation image synthesis proc siggraph pages davis mosaics scenes moving objects proc computer vision pattern recognition conf pages debevec taylor malik modeling rendering architecture photographs hybrid geometryand imagebased approach proc siggraph pages dellaert seitz thorpe thrun structure motion correspondence proc computer vision pattern recognition conf pages demey zisserman beardsley projective structure motion hogg boyle editors proc british machine vision conference leeds pages springer-verlag september devernay faugeras projective euclidean reconstruction proc computer vision pattern recognition conf pages faugeras luong maybank camera self-calibration theory experiments proc european conference computer vision pages faugeras luong geometry multiple images mit press cambridge massachusetts faugeras dimensions uncalibrated stereo rig proc european conference computer vision pages faugeras strati cation -dimensional vision projective metric representations journal optical society america fischler bolles random sample consensus paradigm model tting applications image analysis automated cartography communications acm june fitzgibbon cross zisserman automatic model construction turn-table sequences koch van gool editors proc workshop structure multiple images large-scale environments smile pages springer fitzgibbon zisserman multibody structure motion reconstruction independently moving objects proc european conference computer vision pages springer-verlag june gortler grzeszczuk szeliski cohen lumigraph proc siggraph pages hartley self-calibration multiple views rotating camera proc european conference computer vision pages hartley zisserman multiple view geometry cambridge press york hartley euclidean reconstruction uncalibrated views zisserman forsyth editors applications invariance computer vision lncs pages springer-verlag hartley projective reconstruction invariants multiple images ieee trans pattern analysis machine intelligence hartley defence -point algorithm proc int conf computer vision pages heigl koch pollefeys denzler van gool plenoptic modeling rendering image sequences hand-held camera proc dagm pages heyden astrom euclidean reconstruction constant intrinsic parameters proc int conf pattern recognition pages horaud csurka self-calibration euclidean reconstruction motions stereo rig proc sixth int conf computer vision pages horn relative orientation int computer vision january hough machine analysis bubble chamber pictures international conference high energy accelerators instrumentation jain kasturi schunck machine vision mcgraw-hill louis koch automatische ober aechenmodellierung starrer dreidimensionaler objekte aus stereoskopischen rundumansichten phd thesis hannover koch van gool editors proc workshop structure multiple images large-scale environments smile springer kruppa zur ermittlung eines objektes aus zwei perspektiven mit innerer orientierung sitz -ber akad wiss wien math naturw abt iia kutulakos seitz theory shape space carving proc seventh int conf computer vision pages levoy hanrahan light eld rendering proc siggraph lourakis deriche camera self-calibration kruppa equations svd fundamental matrix case varying intrinsic parameters technical report inria march manning dyer metric calibration screw-transform manifolds proc computer vision pattern recognition conf pages manning dyer strati calibration screw-transform manifolds proc european conference computer vision volume pages manning dyer calibration minimization review manning dyer interpolating view scene motion dynamic view morphing proc computer vision pattern recognition conf volume pages manning dyer environment map morphing technical report computer sciences department wisconsin-madison maybank faugeras theory calibration moving camera int computer vision mcmillan bishop plenoptic modeling proc siggraph pages metropolis rosenbluth rosenbluth teller teller equation state calculations fast computing machines chemical physics moons van gool proesmans pauwels reconstruction perspective image pairs relative object-camera translation ieee trans pattern analysis machine intelligence january neal probabilistic inference markov chain monte carlo methods technical report crg-tr- toronto pollefeys self-calibration metric reconstruction uncalibrated image sequences phd thesis katholieke universiteit 
leuven belgium pollefeys koch van gool self-calibration metric reconstruction spite varying unknown internal camera parameters proc sixth int conf computer vision pages pollefeys van gool strati approach metric self-calibration proc computer vision pattern recognition conf pages pollefeys van gool strati approach metric self-calibration modulus constraint technical report leuven esat-mi pollefeys van gool editors proc workshop structure multiple images large-scale environments smile springer pollefeys van gool oosterlinck modulus constraint constraint self-calibration proc int conf pattern recognition pages rothwell csurka faugeras comparison projective reconstruction methods pairs views proc int conf computer vision sawnhey kumar true multi-image alignment application mosaicing lens distortion correction proc computer vision pattern recognition conf pages schaffalitzky direct solution modulus constraints proceedings indian conference computer vision graphics image processing bangalore pages seitz dyer view morphing proc siggraph pages seitz dyer photorealistic scene reconstruction voxel coloring proc computer vision pattern recognition conf pages sturm critical motion sequences monocular self-calibration uncalibrated euclidean reconstruction proc computer vision pattern recognition conf pages triggs autocalibration absolute quadric proc computer vision pattern recognition conf pages ullman interpretation visual motion mit press cambridge vieville faugeras luong motion points lines uncalibrated case int computer vision january werner hersch hlavac rendering real-world objects view interpolation proc int conf computer vision pages 

number views noise error noise error 

observer motion estimation control optical flow liangyin charles dyer computer sciences department wisconsin madison wisconsin usa abstract information conveyed optical flow analytically linked observer motion paper decomposing optical flow field vector field components shown observer recover ego-motion interpreting decomposed optical flow field utilize mobility actively control shape optical flow field directly reflects surface shape object information surface geometry discontinuity derived directly optical flow field segmenting field method segmentation proposed combines magnitude phase parts optical flow integration kinds information proves effective making surface geometry boundary explicit introduction optical flow conveys information surface depth cues information identify object boundaries optical flow segmentation determine observer ego-motion recover surface geometry optical flow depth cues scene surface geometry segmentation generally corresponds object boundaries apparent contour spatial temporal derivatives computed reliably surface geometry recovered local measurement computation optical flow generally noisy inaccurate opposed global behaviors field tasks require full scene recovery navigation relationship observer scene geometry made explicit paper investigate kinds global behaviors optical flow vector field decomposition segmentation computing gradient divergence curl fields optical flow proposed koenderink relate eigenvalues component fields observer motions directly show active observer utilize mobility control shape optical flow field surface geometry observer motion recovered effectively accurately segmentation expose discontinuities surface shape surface orientation combining segmentation magnitude orientation optical flow field segmentation process conducted computing directional derivative magnitude orientation optical flow direction field integration information proves effective making surface geometry boundary explicit start paper framework decomposition general vector field divergence curl deformation fields information object surface relative observer information active observer control motion order complete relevant tasks navigation shape recovery shown eigenvalues decomposed fields related observer-controlled motion surface geometry finally method optical flow segmentation presented observer-controlled translation motion examples presented theoretical framework vector field decomposition euclidean manifold integral curves linear vector field family curves defined curve length written form general vector field first-order approximation taylor series form matrix decomposed sum symmetric matrix antisymmetric matrix symmetric matrix diagonalized similar transform put form orthogonal matrix jqjd property property compact form reached noting vector field treated field denote component curl matrix decomposed form refer decomposed components divergence curl deformation fields integrated vector field determined canonical subfields formulated properties investigated examining eigenvalues eigenvalues functions image coordinates defined point image plane field insert orthogonal matrix written form cos sin sin cos cos sin sin cos rotation angle characteristic equation andthe eigenvalues make observation curl deformation acts essential factor deciding field characteristics interesting cases curl deformation fields cancel divergence field shows vanishing curl deformation fields appears identical observer relationship eigenvalues observer motion derived section observer motion optical flow decomposition active observer optical flow infer relative relationship observer surface observer motion planned relative surface order achieve relate optical flow observer motion expressing canonical fields divergence curl deformation terms rotation omega translation observer section formulation developed relates eigenvalues fields translational observer motion alternative form makes observer motion explicit order control optical flow observer undergoing instantaneous translation static environment coordinates observer frame projected image coordinates euclidean space relative translation velocity observer-centered coordinate system set image plane located object surface represented normal vector tangent plane object surface denote set-up relationship andthe optical flow rotation omega involved observer motion transversing translation velocity perpendicular line sight jxj whereqv canonical fields expressed omega djn jjqv definition point object surface derive cqv inverse function theorem straightforward show differentials respect dqv identity matrix derive formulas divergence curl addition symmetric part matrix dqv symmetric matrix diagonalized choose alternatively compute rotation matrix diagonalized surface shape corresponds observercontrolled motion corresponds off-line computation diagonalize observer motion shown deformation diagonalize explicitly rotation defined deformation juj rotation angle express optical flow field terms curl divergence surface tilt eigenvalues linear vector field shown eigenvalues dqv form eigenvalues real consistent elimination curl field place solving scene geometry curl field matrix symmetric deformation assume canonical fields observed computed observer determine surface normal compute divergence field essence deformation field tells surface orientation segmentation optical flow field purposes optical flow segmentation identify discontinuity surface geometry occurrence discontinuity due presence discontinuous contours object surface discontinuity depth unique interpretation results segmentation result strongly constrain problem identifying object boundaries translational motion controlled observer optical flow field measure smooth characteristics optical flow factors considered orientation magnitude optical flow smoothness measured directional derivative magnitude direction juj juj jujda wherea juj juj simplify expression shown cqv juj treat function defined image plane discontinuities structure correspond image contours boundary occur consequence scene geometry involves surface normal depth reflected alternatively derive magnitude orientation optical flow individually combine separate phase provide flexibility terms information examples test sequence sequence images curl divergence fields integral curves flow field respect time made apparent smoothing local image structure optical flow window frames compute integral curve flow field curves computed scales pixels optical flow point computed method previously published paper result frame shown figure components curl divergence fields clear spiral shape optical flow fig integral curve optical flow field fig optical flow field scale identify magnitude optical flow shown results indication nature local texture fig magnitude optical flow frame fig orientation optical flow frame test sequence synthetic sequence frames shows fly-through yosemite valley segmentation method formulated applied optical flow centered eighth frame sequence magnitude juj orientation juj parts represented gray-level images figures measure directional derivative shown figure encoded equalized gray-level representation combining measure segmentation cues provided magnitude orientation optical flow boundaries objects shown figure summary present results exploit fact global behavior optical flow accurate information source local measurement field major results presented paper component vector fields optical flow related directly observer motion relation recover observer fig gray-level segmentation optical flow fig binary segmentation optical flow motion scene geometry segmentation optical flow derived combining global magnitude orientation field observer strong hypotheses type location object boundaries information effectively derived observer active control motion adiv determining three-dimensional motion structure optical flow generated moving objects ieee trans patt anal machine intell srinvasan extracting structure optical flow fast error search technique int computer vision vol bruss horn passive navigation computer vision graphics image processing vol fermuller aloimonos qualitative egomotion int computer vision vol longuet-higgins prazdny interpretation moving retinal image proc roy soc london vol koenderink van 
doorn invariant properties motion parallax field due movement rigid bodies relative observer optica acta vol koenderink van doorn optic flow vision research vol waxman ullman surface structure threedimensional motion image flow kinematics int robotics research vol tomasi shape motion image streams factorization method thesis carnegie mellon cipolla blake motion planning image divergence deformation active vision blakeand yuille eds mit press 
metric calibration screw-transform manifolds russell manning charles dyer department computer sciences wisconsin madison wisconsin abstract paper introduces method metric selfcalibration based decomposition fundamental matrix views camera fixed internal parameters method blends important advantages kruppa constraints modulus constraint works directly fundamental matrices reduced-parameter representation stability general properties decomposition developed including intuitive interpretation free parameters internal calibration approach demonstrated real synthetic data introduction common video camera machine-vision applications unvarying internal calibration short periods time camera moved scene positions camera related screw transformation means positions camera position rotated fixed axis space translated parallel axis end position observation introduce representation fundamental matrix views internally-fixed camera representation general form equation decomposes fundamental matrix terms involving angle rotation screw axis amount translation parallel screw axis vectors related internal calibration camera decomposition makes fundamental matrix views determine information screw transformation camera calibration fundamental matrix determined directly point correspondences means optical flow identification planar homographies reliable point correspondences develop important properties decomposition demonstrate method camera calibration support national science foundation grant iisis gratefully acknowledged camera calibration process finding internal parameters camera measured euclidean coordinate system scaling factor directly views camera knowledge scene geometry faugeras introduced important simple general-purpose method calibration based kruppa constraints simplicity kruppa method major advantages works directly fundamental matrices small number camera views overlap fundamental matrix determined overlapping views fundamental matrices required method recently pollefeys developed alternative apparently robust self-calibration method based modulus constraint pollefeys method striated approach metric calibration creating projective scene reconstruction improving affine reconstruction finally determining metric calibration reconstruction apparent stability pollefeys method reducing number free parameters affine reconstruction step finding plane infinity upgrade projective affine reconstruction naively free parameters pollefeys demonstrates free parameters modulus constraint kruppa method metric calibration determined nonlinear minimization step free parameters flexibility solution erroneously fit noisy data drawback pollefeys method requirement cameras put projective basis initial step practice achieved finding set feature points visible views projectively transferred views description kruppa method works directly fundamental matrices applicable fundamental matrices determined common projective basis found approach metric calibration strengths methods works directly fundamental matrices giving advantages kruppa method reduces number free parameters kruppa method improving numerical figure decomposition fundamental matrix based screw transforms stability pollefeys method method strengths highlighted arise mathematical development algorithm finally mentioned exist methods calibration general camera motions strengths weaknesses space prevents describing mathematics underlying method distinctly mathematics underlying methods giving algorithm combination beneficial properties shared method rising turntable formulation fundamental matrix identical cameras positions orientations space exists unique screw transformation camera make overlap camera screw transformation defined single rotation fixed axis space single translation parallel axis cameras related screw transformation alternatively views captured fixed-camera formulation problem formulation camera fixed position orientation single camera views scene scene interpreted moving rising turntable rotation axis matches screw transform axis undergoes equal opposite screw transformation original section develop formula fundamental matrix views rising turntable fixed camera choose world coordinate system rotation axis coincides -axis camera located makes camera matrices upper triangular matrix representing fixed internal calibration camera rotation matrix giving fixed tilt camera relative world coordinate system remaining matrix defined matrix transforms coordinates points scene projection fixed camera producing motion rising turntable paper column vectors camera matrices representation notice finding epipole camera matrices write fundamental matrix views epipole appears camera appears frequently discussed section main goals paper present alternative formulation fundamental matrix shown fig generalized equation prove represent function matrix matrices represent linear transformations shown expressions act basis vectors spanning case act linear combinations basis vectors elements linearly independent nondegenerate camera matrix form basis direction -axis represented camera coordinates alternatively image vanishing point -axis camera transforms representation directions homogeneous vectors fourth coordinate camera basis camera basis clear definition applying reasoning yields straight-forward exercise multiply versions fundamental matrix show equality results case calibration surprisingly find metric camera calibration find matrix scale factor directly camera views knowledge scene measurements section develop properties lead method calibration notice rotation matrices unitary matrix called dual image absolute conic denoted found found determined cholesky factorization goal finding utilized parameterizing projected axes world coordinates fundamental matrix views found directly images identifying point correspondences means found relationship puts constraints assume scaled satisfy assume determined notice property image parameterized single real variable expanding equation quadratic equation elegant parameterization appendix invertible matrix satisfying notation equality scale scale found defined making notation entry matrix row column refer exact scaling factors make equalities define quantities summarize chosen found addition found algorithm shows find unique null eigenvector eigenvector unknown scale factor overdetermined system solved note find remarks step matrix columns rank rank nonzero matrix step definition note summary vanishing points -axes camera view determined directly provided real parameters method determined single unknown real parameter scale determined metric internal calibration camera found metric scene reconstruction complete algorithm finding add step previous algorithm extract eigenvector step naively upper triangular matrix interested scale factor degrees freedom analysis shows figure matrix null eigenvector finding parameterized real numbers fact degrees freedom shown demonstrated specific parameterization great deal intuitive meaning rotation angle views corresponds vanishing point rotation axis amount translation screw axis screw transformation additional properties rising-turntable formulation matrix introduced called homography induced plane infinity transforms directions represented camera coordinate system directions represented camera coordinate system found cameras affinely calibrated perform affine scene reconstruction scene reconstruction equivalent metric reconstruction transformed invertible matrix fixed-camera formulation views captured camera fixed position scene sits rising turntable vanishing point rotation axis view turntable rises rotation axis fixed camera change describes vanishing point rotation axis camera similarly planes perpendicular rotation axis world coordinates parallel lines vanishing point parallel planes vanishing line camera vanishing line planes parallel rotation axis vanishing points axes denote vanishing line denote concept vanishing line specific representation line view vanishing point screw axis project line camera views turntable rises invertible matrix transforms basis basis plane origin easy-to-prove fact linear algebra denotes vector perpendicular basis denotes vector perpendicular basis state eigenvector eigenvector conjugate rotation matrix eigenvalues real eigenvalue eigenvector unique real eigenvalue assuming assuming cameras general position found real numbers find section find line image small views represent pure turntable motion find null eigenvector matrix fig determined step find remarks authors 
matrix step explanation rows letting scaling factors leads equations combine produce rows cross-multiply coordinates side eliminate unknown scalar derivation row explained appendix fundamental matrix views camera determined set cameras parameterized real numbers angle rotation cameras intuitive meaning intuitive meaning easily combined yield intuitively understood vanishing point rotation axis single real parameter restricted narrow range radians set similarly restricted rotation axis restricted area image similarly restricted ability restrict kinds knowledge discussed directly shared modulus constraint conclude section make final observation leads satisfies modulus constraint forces legal choices lie two-dimensional manifold embedded numbers parameterize modulus-constraint manifold intuitive manner manifold intersection algorithm metric calibration show parameterization presented section metric calibration method distinct previous calibration methods shares advantages faugeras method based kruppa constraints pollefeys method based modulus constraint give specific representation point dimensional space term space k-space series views camera pairs views shared information find fundamental matrices specific fundamental matrix triple yields point k-space true defines -dimensional manifold k-space true manifold parameterized intersection point representing true found parameters view pair instance angle rotation views practice image pairs minimum stability put cameras projective basis pairwise fundamental matrix easy make large algorithm involves sketching manifolds determine unique intersection point sketch manifold randomly selecting triples yield random points approach implemented voting scheme volume k-space point chosen comments algorithm subdivided small voxels -dimensional hypercubes finer subdivision slows algorithm improves success real data noise voxels large intersection manifolds manifold triple randomly selected point k-space determined voxel point determined vote cast provided manifold voted step repeated voxel receives votes zoom step volumea half size centered winning voxel algorithm returns step smaller volume place algorithm continues sufficient resolution reached volume small zoom steps manifolds approximately linear begin flat reduced search region manifolds approximately linear point intersection determined single step fitting hyperplanes locally flat manifolds intersecting hyperplanes solving linear system observation provide greatly speed algorithm defines stopping condition algorithm finishes manifolds approximately linear linear approximations intersect single point tolerance implementation criterion experiments section trial runs reached linearity stage zoom steps step initial search region set hypercube side length centered origin simply make divide randomly generated manifold point thought calibration matrix frobenius norm forcing matrix component range rescaling permissible internal calibration defined scale factor noise real applications manifolds intersect single well-defined point selfcalibration algorithms deal fact explicitly calculate manifolds sketching manifolds algorithm advantage find small region intersected manifolds provide measure confidence region true solution manifolds region smaller reliable importantly approach inherently robust outliers severely wrong outlier generate manifold true votes generated manifold coincide votes generated inlying manifolds erroneous manifold influence median calibration error average noise added point pixels pixels pixels pixels pixels points points points points figure table median errors differing noise levels numbers scene points synthetic data trials shown scene cameras trial scene points trials cameras scene width retina pixels error average noise added point pixels error average noise added point pixels error average noise added point pixels error figure error noise error scene size retina error components main diagonal noise error principal point noise zooming-in process algorithm zoom-in steps incorrect manifold volume completely advantage approach kinds additional information easily naturally incorporated algorithm make search task easier robust angle rotation pair views manifold pair -dimensional greatly narrowing search skew factor close search space dimensional manifold points skew factor close considered similar effect equal experiments extensive experiments synthetic real data performed test manifold intersection algorithm simulations trial run scene consisting points positioned randomly uniform density inside unit sphere generated scene viewed cameras positioned randomly point scene visible camera cameras internal parameters generated randomly trial realistic ranges parameter image size camera pixels important interpreting results trial runs noise added projected position scene point distribution noise uniform meaning added noise pixels pixels noise added random direction equal likelihood amount error true internal calibration matrix calculated calibration calculated errora frob froba froba froba frobenius norm matrix table fig shows error related number points scene average noise added point image plane generating table trials cameras conclusion tracking extra scene points make lack accuracy locating points image plane trial generating graphs fig consisted scene points cameras fig demonstrates error related size scene appears camera image plane trial run graph amount noise added point pixels retinal scene size smallest retinal scene size view trial graph shows algorithm stable scene covers image plane fig shows error increases higher noise levels interestingly error increased rates figure top row views experiment real camera calibration object views reconstructed feature points bottom row views experiment automatic point tracking views reconstructed feature points components calibration matrix demonstrated fig fig shows growth error diagonal elements calculated internal calibration matrix fig shows growth error column form principal point graphs demonstrate error calculated principal point grows higher rate randomness error diagonal elements error values fig largely result errors calculated principal point experiments fig shows results experiments experiment real camera accurate calibration target target consisted walls meeting angles covering walls uniform dot patterns including dots printed laser printer center dot automatically recovered separate algorithm correspondences determined automatically dots algorithm run views calibration object object reconstructed calculated internal calibration reconstructions show perpendicular walls uniform rectilinear spacing dot centers confirming accurate metric reconstruction experiment views synthetic scene synthetic scene based real scene photographs original scene texture mapped model achieve high level realism scene computer generated additional information views algorithm points automatically tracked views off-the-shelf point tracking algorithm automatically-determined point correspondences fed manifold intersection algorithm determine internal calibration views reconstructed feature points figure center reconstruction overhead view showing main walls perpendicular left-most reconstruction points narrow roof overhangs doorway visible approximate angle overhang wall evident right-most reconstruction shows edge-on view wall note feature points perfectly plane indicating amount noise automatically-tracked points concluding remarks overview paper including main contributions views static scene camera fixed internal parameters interpret camera fixed position scene sitting rising turntable reinterpretation presented decomposition fundamental matrix views fundamental matrix views shown decomposition internal calibration matrix parameterized parameters intuitive meaning parameters generate screw-transform manifold k-space presented algorithm metric self-calibration works intersecting screw-transform manifolds presented additional properties underlying mathematical framework finding rotation angle relative calibration relative calibration internally-equal cameras written rotation matrix rotation 
angle found conjugate eigenvalues rotation matrix eigenvalues form found characteristic equation well-known property algebra found note determined sign method due symmetry eigenvalues additional information disambiguate sign parameterization derived alternative expansion characteristic equation alternative representation found directly fundamental matrix views expanding characteristic equation alternative representation yield constraints determinant matrix characteristic equation define triple-product determinant right-hand side written expansion leads dividing coefficient equated row matrix fig derived equating fig bottema theoretical kinematics north-holland publishing company york faugeras luong maybank camera self-calibration theory experiments proc european conf computer vision pages fitzgibbon cross zisserman automatic model construction turn-table sequences koch gool editors proc workshop structure multiple images large-scale environments smile pages springer hartley projective reconstruction invariants multiple images ieee trans pattern analysis machine intell luong eville canonic representations geometries multiple projective views proc european conf computer vision pages maybank faugeras theory calibration moving camera international journal computer vision pollefeys self-calibration metric reconstruction uncalibrated image sequences phd thesis katholieke universiteit leuven belgium pollefeys van gool stratified approach metric self-calibration proc computer vision pattern recognition conf pages pollefeys van gool stratified self-calibration modulus constraint ieee trans pattern analysis machine intelligence august triggs autocalibration absolute quadric proc computer vision pattern recognition conf pages 
angle object motion vectors degrees error actual noise pixels error average object size pixels error smallest retinal object motion pixels error time time object object 
foundations image understanding davis kluwer boston chapter volumetric scene reconstruction multiple views charles dyer wisconsin abstract review methods volumetric scene reconstruction multiple views presented occupancy descriptions voxels scene volume constructed shape-from-silhouette techniques binary images shapefrom-photo-consistency combined visibility testing color images introduction marble wastes statue grows michelangelo automatic construction photorealistic three-dimensional models scene multiple images important applications interactive visualization remote environments objects virtual video camera virtual modification real scene augmented reality tasks considerable research focused problem recently considerable progress developing techniques build volumetric scene models goal paper describe methods approach scene reconstruction methods traditionally based image matching intensity-based direct methods feature-based methods class includes multi-view stereo techniques compute correspondences images recover structure triangulation surface fitting approach effective video sequences tracking techniques simplify correspondence problem disadvantages approach views close small baseline correspondence techniques effective correspondences maintained views spanning large viewpoint partial models computed respect set base viewpoints surface patches fused single consistent model sparse features parameterized surface model fit points obtain final dense surface reconstruction explicit handling occlusion differences views alternative approach scene reconstruction based computations three-dimensional scene space order construct volumes surfaces world consistent input images call approach volumetric scene modeling replacing image-based search problem approach scene-based search volumetric scene modeling avoids disadvantages listed volumetric scene modeling explicitly represents world coordinate frame volume space scene occurs makes occupancy decisions volumetric primitive objects scene scene-space methods widely-separated views generally depend calibrated cameras determine absolute relationship points space visual rays volumetric representations volumetric modeling scene space assumes bounded area objects interest lie area frequently assumed cube surrounding scene common approach representing volume regular tessellation cubes called voxels euclidean -space representations studied octrees enable space-efficient encoding scene large transparent areas disparity space representations defined relative camera frame describing space terms unit disparity increments space explicitly model visibility respect camera generalized disparity space camera voxel fixed set disparity planes layer representations define scene-dependent collection approximately planar regions scene input cameras completely calibrated fundamental matrices pairs cameras projective space representation defined cameras basis views creating projective space voxelization ray space representations directly operate set visual rays camera optical center avoiding volumetric discretization issues recent review alternative representations survey volumetric-based methods written scene reconstruction voxel-based representation defined occupancy classification volume element discrete set labels binary decision transparent opaque ternary decision transparent opaque unseen methods include realvolumetric scene reconstruction valued degree opacity assume remainder paper regular-tessellation binary-valued voxel model reconstructed volumetric model polygonal surface representation constructed marching cubes algorithm model synthesizing views variety efficient rendering methods including raycasting splatting shear-warp shape silhouettes section describe methods volumetric scene reconstruction set silhouette images silhouette image binary image point indicating visual ray optical center image point intersects object surface scene pixel silhouette point background point binary images obtained segmentation algorithms blue-screen techniques combined calibration information camera point silhouette defines ray scene space intersects object unknown depth ray union visual rays points silhouette defines generalized cone object lie intersection generalized cones set cameras defines volume scene space object guaranteed lie volume approximates true shape depending number views positions viewpoints complexity object concave patches observable silhouette silhouette-based reconstruction encloses true volume laurentini characterized approximation obtainable limit infinite number silhouettes captured viewpoints convex hull object visual hull scenes visual hull equal convex hull object scenes visual hull contained convex hull concavities removed hyperbolic regions practice finite number silhouettes combined reconstruct scene resulting approximation includes visual hull scene points figure shows volume constructed views scene algorithms developed constructing volumetric models set silhouette images starting bounding volume enclose entire scene volume discretized voxels task create voxel occupancy description intersection back-projected silhouette cones main step algorithms intersection test methods back-project silhouettes creating explicit set cones intersected projecting voxels figure reconstruction silhouettes generalized cones images result reconstruction includes object black points concavities visible viewpoint convex hull object brick texture points visible views gray images alternatively determined voxel intersection projecting images testing contained silhouette make scene space traversal efficient methods octree representation test voxels coarse-to-fine hierarchy initial cube encloses entire scene current voxel projected images tested determine intersects silhouette image projected voxel intersect silhouette image voxel removed marked transparent projected voxel intersects silhouette pixels image voxel marked opaque voxel intersects background silhouette points images subdivided octants sub-voxel processed recursively shape-from-silhouette problem formulated optimization problem global minimum energy function computed energy function term specifies likelihood voxel opaque transparent based images intensities term specifies degree smoothness labels neighborhood voxels shapes reconstructed silhouettes successfully variety applications including virtual reality real-time human motion modeling constructing light fields lumigraphs building initial coarse scene model applications real-time imagebased rendering dynamic scenes explicit scene model volumetric scene reconstruction essential intermediate step views rendered directly visual ray intersection tests alternative approach shape silhouettes work shape occluding aka apparent contours case volumetric reconstruction surface description recovered occluding contours borders silhouettes dense sequence views methods compute object surface envelope visual rays points successive images occluding contours based epipolar parameterization generated surface points slide object viewpoint methods based tracking image points scene space analysis discussed shape photo-consistency input images grayscale color binary images processed shape-from-silhouette methods additional photometric information improve reconstruction process set images thought defining set constraints scene reconstruction valid scene model projected camera matrices input images produce synthetic images real input images image-reproduction test verifies hypothesized scene model comparing real synthesized images evaluating consistency features derived input images definition depends characteristics accuracy scene model rendering process complete scene model includes surface geometry surface reflectance models scene illumination scenes consistent set images image-reproduction consistency guarantee unique reconstruction family reconstructions define equivalence class respect property reproduction consistent respect set photographs fact additional information biases equivalence class reconstructions based direct comparison images image-reproduction consistency defined photo-consistency visible surface points respect image point scene surface photo-consistent set images image point visible image irradiance point equal intensity image pixel photo-consistency related leclerc self-consistency methodology evaluating performance multi-view point correspondence algorithms method evaluates consistency point correspondences multiple images terms consistency respect single surface element methodology compares hypotheses derived images consistency respect fixed world photo-consistency takes inverse approach verifying hypothesis shape world testing consistency projections set images photo-consistency constraint avoids difficulties found multi-image stereo reconstruction 
methods based finding point correspondences contour correspondences images triangulating recover scene structure assuming camera projection matrices photo-consistency requires image rendering forward projection pixel comparison operations accurate point correspondences notoriously difficult compute regions homogeneous intensity scene model photo-consistency decides projection model consistent images individual point correspondences needed assuming required construct hypothesized scene model obtaining dense correspondences hard meaning correspondence-based methods skip points resulting sparse reconstruction image points correspondence errors lead low-quality models image consistency high szeliski made similar argument justifying image-prediction error evaluating stereo algorithms building reconstructions based photo-consistency requires ability test surface point produce image irradiance values pixels point projects image render pixels requires additional assumptions knowledge camera models scene model camera positions scene geometry surface reflectance illumination important special case surfaces assumed satisfy lambertian reflectance model surface appears equally bright directions illumination case camera models scene geometry image synthesized photo-consistency tested input images paper assume lambertian model approximately holds scene surfaces knowledge surface reflectance camera models potentially combinatorial problem remains finding scene reconstructions photo-consistent set input images issues photo-consistent reconstructions computed relate legal interpretations photo-consistency surface point voxel scene requires knowledge images voxel visible images voxel closest surface volumetric scene reconstruction visual ray camera efficient methods performing visibility test essential making approach work combining ability test voxel visibility respect cameras predicate evaluates voxel photo-consistency respect image irradiance values voxel visible basis family methods produce reconstruction classifying voxel scene points labeled opaque labeled transparent advantage approach makes surface smoothness assumptions implicit resolution individual voxel complex shapes reconstructed figure shows overview approach order avoid simultaneous recovery surface reflectance brdf illumination photo-consistency applied case surfaces assumed lambertian case photo-consistency defined number ways simplest project voxel centroid image threshold variance colors pixels points noise-sensitive method colors pixels voxel projection overlaps test computed ratio variances voxel pixels colors colors pixels homogeneous surface null hypothesis variances equal threshold ratio determines photo-consistency voxel experiments definitions photo-consistency conducted voxel visibility plane-sweep complicated non-local dependencies scene surfaces determine voxel visibility methods simplify visibility testing important simplification made exists topological sort voxels partial ordering relation voxel occluded voxel camera viewpoints line segment connecting center voxel optical center cameras intersects voxel occurs ordering ordering exists traverse voxels order guarantee voxel visited occluders voxel respect camera previously visited visibility testing dependent labels voxels visited previously enabling one-pass algorithm single camera set cameras lying side plane voxels ordered increasing distance plane resulting sequence voxel planes increasing distance cameras basis collins plane-sweep algorithm counts number image features back-project voxel marking voxels scene figure overview approach scene reconstruction based photo-consistency voxel included scene model images voxel visible pixels colors photo-consistent feature points count exceeds non-coincidence threshold ordered traversal scene space method explicitly handle inter-feature occlusion similar feature-based plane-sweep algorithm detecting planar regions volumetric scene reconstruction seitz dyer showed topological sorting voxels camera configuration scene volume lies convex hull cameras optical centers planes increasing distances cameras results partition scene space expanding front layers increasing distances cameras convex hull voxel coloring camera configurations voxels topologically sorted pass voxels sufficient create photo-consistent reconstruction visibility voxel completely determined visited voxel labeled testing photo-consistency visible pixels projects assuming binary labeling desired voxel opaque part object transparent free space implementation assume scene space initially transparent label voxel opaque passes photo-consistency test assume scene space initially solid label voxel transparent fails photo-consistency test approach clay modeling akin sculpture note version results set opaque voxels define scene surfaces modified mark interior voxels opaque results volumetric description scene approach one-pass algorithm called voxel coloring figure shows results set views rose volumetric model built modifying scene image editing operations applied input images relationships pixels image scene voxels made image easily propagated model views limits photo-consistency test voxel resolution result algorithm scene model consistent pixels input images general scenes consistent set input images relation produced algorithm solutions kutulakos seitz showed space-carving procedure removes opaque voxels border voxel photo-consistent closest photo-consistent voxel visual ray guaranteed surface final shape reconstruction found algorithm maximal union photo-consistent scene reconstructions reason called photo hull figure reconstruction voxel coloring algorithm input images rose image rendered volumetric model view view rendered model permission space carving general camera configurations one-pass algorithm voxels topologically sorted respect viewpoints multi-pass procedure makes multiple plane-sweep passes evaluating voxel current plane voxels subset cameras voxels front plane words pass sweeps plane orientation scene space voxel photo-consistency tested cameras voxels side plane voxel pass change labels voxels affect visibility labeling voxels multiple plane-sweep passes change occurs kutulakos seitz proved space carving labeling strategy iterative multi-plane-sweep traversal guarantees border voxels successively removed non-photo-consistent voxel exists remaining shape photo hull order limit number plane orientations swept fixed set planes parallel sides cube defining original scene volume resulting approximation photo hull guarantee true photo hull constructed fixed set sweep planes end iteration sweeps visibility voxel checked respect camera photo-consistency test applied additional border voxels removed method called space carving algorithm figure shows result space carving plane-sweeps iteration scene single connected shape method include additional test prevents carving process disconnecting volumetric scene reconstruction figure reconstruction space carving algorithm input images hand views permission shape ensuring border voxel removed locally disconnect opaque voxels neighborhood alternative multi-sweep approach space carving simply iterate border voxel successively removing photo-consistent change occurs complete pass surface result photo hull voxel visited visibility image determined plane-sweep constraint test complicated improve efficiency generalized voxel coloring algorithm maintains data structure pixel address closest opaque voxel pixel visual ray data structure updated frequently single voxel carved cost additional iterations figure shows scene reconstructed method faugeras keriven developed related approach based level set method initial scene-bounding surface represented voxel space evolves objects scene matching criterion based normalized cross-correlation minimized current surface determine visibility voxels images direction evolution surface speed evolution method assumes lambertian objects evolving surface smooth biased minimizing total area objects reconstructions results algorithms previous sections show impressive photorealism reproducing input images synthesizing views accuracy reconstructed scene models improved number ways figure reconstruction generalized voxel coloring algorithm input images view permission relation photo hull true scene depends factors depends degree surface reflectance function photo-consistency test accurately models true surface reflectance errors estimating surface 
orientation illumination discrete voxel errors photo-consistency test depending nature reflectance function discrete voxels aliasing artifacts fourth reliance threshold determine photo-consistency leads voxel classification errors photo-consistency evaluation errors effects reconstructed shape holes false concavities threshold high causing carving fattening false convexities threshold low causing carving stop experiments performed investigate reconstruction errors function photo-consistency threshold hole problem partially handled hole filling methods strategy post-process photo hull obtain final scene model slabaugh approach formulating refinement process optimization problem iteratively added removed border voxels sum squared differences input images scene model rendered camera minimized simulated annealing greedy methods process thought spatially vary threshold decide photo-consistency fattening problem pronounced regions low color variation surface points similar radiance causing falsepositive photo-consistency voxels front true surface figure shows effect synthetic images intensity gradient image varied volumetric scene reconstruction figure effects texture density reconstruction concave scene surface positions input cameras reconstruction surface constant radiance result shape-from-silhouettes successively reconstructions result surface textured intensity gradient doubles frequency image permission scene model reconstruction accuracy improved minimizing distance projected silhouettes actual silhouettes dealing aliasing issue problematic voxel resolution coarse assign degree-of-opacity voxel voxel completely transparent opaque values mixed voxel voxel intersects scene points free space partially opaque partially transparent opacity values rendering synthesized views anti-aliased szeliski golland multi-step process initially estimate refine decisions voxel visibility opacity color non-linear optimization method final step compute voxel opacities difficult mixed voxels energy minimization difference projected model images smoothness constraint colors opacities prior distribution opacities extensions section mention extensions improvements investigated calibration errors methods building volumetric scene models assumed accurately calibrated cameras projections voxel determine pixels images practice calibration inaccurate handle situation kutulakos defined approximate space carving algorithm constructs approximation photo hull called r-consistent volume r-consistency defined weakening definition photo-consistency voxel projects pixel image pixel image pixel distance color pixel varying generates nested family approximations photo hull tightest approximation true scene property makes cope calibration errors build multi-scale hierarchy fine-to-coarse volumetric descriptions large-scale environments scaling volumetric modeling methods large-scale environments difficult voxel resolution set fine encode smallest important scene details uniform tessellation require unmanageable number voxels cope problem octree representation coarse-resolution voxels represent large areas free space interiors large objects fine-resolution voxels areas fine scene detail approach increase size voxels distance center environment unbounded voxels borders environment partly transparent scenes recent work considered scenes partly transparent objects debonet viola optimization method szeliski golland computes real-valued opacity color voxel method called roxels searches linear combination colors voxels visual ray entire voxel space projected composited cameras minimizes errors input images dachille recovered color volumetric scene reconstruction opacity values voxel sart reconstruction technique tomographic techniques applicable problem dynamic scenes dynamic scenes represented sequences static volumetric descriptions preferable exploit temporal coherence simple initialize space carving process time step slightly fattened photo hull created previous time step eliminating carve voxels step idea combination octree representation voxel space approach build volumetric representation links voxel descriptions consecutive time steps photo-consistency applied voxels indicating voxels successive time steps project pixels color multiple views conclusions significant steps ability construct scene models geometrically photometrically accurate arbitrary set images improvements geometric accuracy recovery realistic surface reflectance illumination models methods large-scale complex environments needed results increasingly photorealistic acknowledgments support national science foundation grant iisis gratefully acknowledged notes definition intersects cone defined camera visual rays meet voxel front face occurs border voxel opaque voxel adjacent transparent voxel ahuja veenstra generating octrees object silhouettes orthographic views ieee trans pattern analysis machine intelligence andersen kak simultaneous algebraic reconstruction technique sart superior implementation art algorithm ultrasonic imaging baillard zisserman plane-sweep strategy reconstruction buildings multiple images proc isprs congress exhibition baker szeliski anandan layered approach stereo reconstruction proc computer vision pattern recognition conf pages baumgart geometric modeling computer vision technical report artificial intelligence laboratory memo aimstanford beardsley torr zisserman model aquisition extended image sequence buxton cipolla editors computer vision eccv proc european conf computer vision volume volume lecture notes computer science pages springer-verlag broadhurst cipolla statistical consistency check space carving algorithm proc british machine vision conf pages chen medioni volumetric stereo matching method application image-based modeling proc computer vision pattern recognition conf volume pages cheung kanade j-y bouguet holler real time system robust voxel reconstruction human motions proc computer vision pattern recognition conf volume pages chien aggarwal volume surface octrees representation objects computer vision graphics image processing cipolla blake surface shape deformation apparent contours int computer vision collins space-sweep approach true multi-image matching proc computer vision pattern recognition conf pages coorg teller extracting textured vertical facades controlled close-range imagery proc computer vision pattern recognition conf volume pages cross zisserman surface reconstruction multiple views apparent contours surface texture leonardis solina bajcsy editors confluence computer vision computer graphics pages kluwer culbertson malzbender slabaugh generalized voxel coloring triggs zisserman szeliski editors vision volumetric scene reconstruction algorithms theory practice proc int workshop vision algorithms volume lecture notes computer science pages springer-verlag curless levoy volumetric method building complex models range images proc siggraph pages dachille mueller kaufman volumetric backprojection proc volume visualization graphics symposium pages debonet viola roxels responsibility weighted volume reconstruction proc seventh int conf computer vision pages eisert steinbach girod multi-hypothesis volumetric reconstruction objects multiple calibrated camera views proc int conf acoustics speech signal processing pages faugeras keriven complete dense stereovision level set methods burkhardt neumann editors computer vision eccv proc european conf computer vision volume volume lecture notes computer science pages springer-verlag gering wells iii object modeling tomography photography proc ieee workshop multi-view modeling analysis visual scenes pages gortler grzeszczuk szeliski cohen lumigraph proc siggraph pages hong shneier describing robot workspace sequence views moving camera ieee trans pattern analysis machine intelligence intille bobick disparity-space images large occlusion stereo j-o eklundh editor computer vision eccv proc european conf computer vision volume volume lecture notes computer science pages springer-verlag kimura saito kanade voxel construction based epipolar geometry proc int conf image processing pages koch pollefeys van gool multi viewpoint stereo uncalibrated video sequences burkhardt neumann editors computer vision eccv proc european conf computer vision volume volume lecture notes computer science pages springer-verlag kutulakos shape light field boundary proc computer vision pattern recognition conf pages kutulakos approximate n-view 
stereo vernon editor computer vision eccv proc european conf computer vision part volume lecture notes computer science pages springer-verlag kutulakos seitz theory shape space carving int computer vision langer zucker shape-from-shading cloudy day opt soc laurentini visual hull concept silhouette-based image understanding ieee trans pattern analysis machine intelligence laurentini shapes understood silhouettes ieee trans pattern analysis machine intelligence laurentini silhouettes reconstruct object computer vision image understanding leclerc q-t luong fua characterizing performance multiple-image point-correspondence algorithms self-consistency triggs zisserman szeliski editors vision algorithms theory practice proc int workshop vision algorithms volume lecture notes computer science pages springerverlag leclerc q-t luong fua measuring self-consistency stereo algorithms vernon editor computer vision eccv proc european conf computer vision part volume lecture notes computer science pages springer-verlag lorensen cline marching cubes high resolution surface construction algorithm proc siggraph pages martin aggarwal volumetric description objects multiple views ieee trans pattern analysis machine intelligence matusik buehler raskar gortler mcmillan imagebased visual hulls proc siggraph pages volumetric scene reconstruction meissner huang bartz mueller crawfis practical evaluation popular volume rendering algorithms proc volume visualization graphics symposium pages moezzi katkere kuramura jain reality modeling visualization multiple video sequences ieee computer graphics applications moezzi l-c tai gerard virtual view generation digital video ieee multimedia niem error analysis silhouette-based shape estimation multiple views proc int workshop synthetic-natural hybrid coding three-dimensional imaging noborio fukada arimoto construction octree approximating three-dimensional objects multiple views ieee transactions pattern analysis machine intelligence potmesil generating octree models objects silhouettes sequence images computer vision graphics image processing prock dyer real-time voxel coloring proc image understanding workshop pages saito kanade shape reconstruction projective grid space large number images proc computer vision pattern recognition conf volume pages seitz dyer photorealistic scene reconstruction voxel coloring int computer vision seitz kutulakos plenoptic image editing proc sixth int conf computer vision pages sethian level set methods fast marching methods cambridge press edition slabaugh culbertson malzbender schafer improved voxel coloring volumetric optimization technical report center signal image processing georgia institute technology slabaugh culbertson malzbender schafer survey methods volumetric scene reconstruction photographs technical report center signal image processing georgia institute technology slabaugh malzbender culbertson volumetric warping voxel coloring infinite domain pollefeys van gool fitzgibbon zisserman editors structure multiple images large-scale environments applications virtual augmented reality proc smile lecture notes computer science pages springer-verlag snow viola zabih exact voxel occupancy graph cuts proc computer vision pattern recognition conf volume pages srivastava ahuja octree generation object silhouettes perspective views computer vision graphics image processing szeliski rapid octree construction image sequences computer vision graphics image processing image understanding szeliski prediction error quality metric motion stereo proc seventh int conf computer vision pages szeliski stereo algorithms representations image-based rendering proc british machine vision conf pages szeliski golland stereo matching transparency matting int computer vision vaillant faugeras extremal boundaries object modelling ieee trans pattern analysis machine intelligence vedula baker seitz kanade shape motion carving proc computer vision pattern recognition conf volume pages 
proc int workshop visual form arcelli cordella sanniti baja eds lecture notes computer science springer-verlag perception-based shape modeling curvature shaping liangyin charles dyer computer sciences department wisconsin madison wisconsin usa fyuly dyerg wisc abstract curve representations algebraic forms ways related visual perception poses great difficulties connecting curve representation object recognition information computed raw images manipulated perceptually meaningful compared representation paper show curves represented compactly imposing shaping constraints curvature space readily computed directly input images inverse problem reconstructing curve shaping constraints solved method curvature shaping image space conjunction curvature space generate curve dynamically solution curve length determined subsequently curve modeling polynomial basis functions polynomial basis functions high orders shown incorporate perceptual information commonly biological visual front-end introduction goal visual perception make structure contrast variation image explicit stationary images structure organized curvilinear image contours point view information theory probability image contour formed random distribution contrast extremely small highly informative contour meaningful identify part image contour informative parts contour principle important view information theory data compression nonetheless essential inquire inverse problem informative part recovered informative part paper problems curve domain main emphasis inverse problem current address canon research centre europe occam court occam road guildford surrey united kingdom support national science foundation grant iisis gratefully acknowledged methods representing curves segment-based segment defined straight line polygon parameterized curve spline segmentation points separate segments determined properties computed curve curvature commonly properties curve segmentation generally highly sensitive scale computation commonly conducted contours identified notoriously dependent scale problem avoided methods compute curvature contour directly image carefully designed selection scheme scales computation curvature considered major perceptual properties shapes invariant rigid transformations computed physiological system extensively shape matching object recognition shape modeling observations curve perception problem curve modeling formulated two-stage process perception-based selection local parts curve modeled measurement relevant modeling parameters shape paper formulate inverse problem constructing curve set parameters selected previously modeling parameters combination significance curvature visual perception importance geometrical modeling image contours motivation developing framework curve representation reconstruction curvature background direct curvature computation image curvature computation image contours generally sensitive noise due computation conducted compute curvature contour detected problem remedied greatly computing curvature directly image tentative contour position method extended computation higher-order differential invariants derivative curvature extensively paper input image gaussian kernel separable defined scale parameter exp gaussian kernel ith-order jth-order differentiations respect shown curvature location image contour convolution operator xcos ysin xsin ycos orientation contour derivative curvature unit normal vector contour curvature computed shown figure fig curvature contour airplane image geometry curves curve parameterized curve lengths fundamental theorem differential geometry planar curves enables describe curve uniquely rotation translation curvature explicitly formulated intrinsic equations cos sin boundary conditions curve curvature space problem shape representation image space equivalent representation function curvature space primary difficulty intrinsic equations directly curve reconstruction curvature space well-defined computational procedure constraining shape image space curvature space changing shape space words taking account noise spaces unstable incorporating spaces reconstruction algorithm satisfactory results achieved subsequently geometrical parameters curve smooth curve continuous points respective curvatures curvature extrema points called feature points figure background problem shape representation feature points locate curvature extrema curve construct curve extremal points traditionally goal achieved piecewise interpolation cubic splines matching boundary conditions knots approach unable incorporate higher-order constraints problem straight segments provided model requiring knots curved regions fact favorable scale-space factor fig geometrical factors determine curve account requires distribution knot positions curve scale problems alleviated higher order splines problem extra feature points inserted basis functions solve problem approach works image space curvature space required parameter interpolation problematic curve length parameterization required image curve length image contour generally estimated accurately relevant geometrical modeling parameters computed inverse problem finding curve set boundary conditions provide information curve length method presented section curve length information results information modeling curve high-order polynomial basis functions presented section tangent line estimate curve length fig dynamical moves curve segment convex points tangent line estimate curve length fig dynamical moves curve segment convex concave point curve representation curvature space shaping feature points unknown curve image tangent orientations signed curvatures present method solve problem finding curve satisfies boundary conditions property computable curvature extremum osculating circle tangent line direction cos sin unit vector end property tangent lines chosen non-crossing closest crossing curve constructed dynamically moving stepwise direction gradually changed direction cos sin gradually changing curvature osculating circle process figures unknown curve length determined advance length tangent line initial estimate curve length desired steps reaching length tangent line step sgi direction movement step determined move half curvature osculating circle distance moved consists movement movement alongci bydi sgi orientation change caused movement idi formulated estimated curve length sgi curve length step move precisely curve length complete journey steps curve length sgi unsolvable fig curvature space curve segment convex points unsolvable fig curvature space curve segment convex concave point curvature spaces curves figures figures solvability conditions explained section shown movement approachp inn steps desired boundary conditions limits established limn limn limn segments curve curvature space partial arc osculating circle constant curvature figure approximated piecewise straight segment curves great similarity curvature spaces completely shapes illustrates difficulty working spaces comparison constant curvature segment track tangent line converge faster destination straight segment counterpart osculating circle point bends line implies fewer steps required precision curve piecewise constant curvature curve straight line segments fig segment models curve solvability conditions conditions governing problem solution corresponds sidedness object sign curvature defined side object normal vector lies frenet equation tangent linegi estimate curve length time defines side object lies unsolvable boundary conditions create impossible object condition solvability process curvature enters area extra extrema created areas denoted unsolvable figures unsolvability conditions illustrated figure fig unsolvability conditions convex points curve representation polynomial basis curve length arbitrarily parameterized curve iss jdt formulation clear represented polynomial basis functions curve length polynomial vice versa polynomial basis work image space fitting boundary conditions work curvature space intrinsic equations set boundary conditions methods result set highly nonlinear equations existence solution questionable section introduce compromise method polynomial basis functions image space satisfy boundary conditions guarantee curvature extrema inserted models curves hermite splines hermite polynomials order satisfy cardinal property hki hki hki hki superscript 
order differentiation set equations defines polynomials order order order cardinal property fitting boundary conditions differential orders case order differentials pij ith derivative curve curve segment connecting points hermite splines ijhi formulation terms differentials boundary points readily problem conditions location orientation curvature differential curvature estimation generally noisy curve length parameter curvature freedom choose additional conditions fix arbitrary problem dictate conditions fig image contour airplane figure curve length curvature fig curvature space extrema airplane contour examples airplane contour figure curvature space figure curvature extrema identified feature points marked figure points component partition points concave points separate components convex points mark partition segments component components feature points segment identified shown figure curve length estimated curve computed method curvature shaping subsequently representation hermite basis functions orders basis functions bases order location tangent orientation information bases order matched boundary conditions curvature hermite bases order satisfied additional condition points feature points extremal curvature discussion scale space scale space manifests effect computation formulation section observed image contours computed effect scale-space kernel parameterized rectangular cartesian coordinates equivalent effect scale-space kernel parameterized curve length image contour computed orienting kernel direction contour essentially creates curvature scale space variations fixed scale gradually lost scale coarser results separation feature points curve distance proportional scale computation curvature highly nonlinear fig parts airplane represented hermite basis order compared original function shape predicted scale feature points extremal curvature nonetheless located searching curvature space finest scale partitioning curve segments length proportional scale computing curvature scale space coarser scales perceptual boundary conditions measure distance biological visual perception provided comparison length measured intrinsic metric renders computations distance measure optical flow curvature imprecise hand orientation measure built-in mechanisms degree precision observations primary measurement local shape curve position orientation relative cartesian coordinate system curve length curvature precise terms measurement primary boundary conditions related perception locations orientations show secondary boundary conditions curvature derivative representation compact precise cubic quintic hermite bases component figure precision augmented adding knot points clear choose special attribute curvature space facilitate choice component partitions curvature space kinds information presented curvature space contour considered prominent component partition points negative extrema shape segment partition points positive extrema component figures feature points segment identified segment compared segment contour extremal property essential modeling inadequacy lower-order hermite bases represent curve segment figure account extremal property points conclusions compact description smooth curve presented paper based curve features perceptually-important geometrical model features defined location orientation curvature additional property curvature reaches extremal values feature points describe compactly object contour great importance object recognition description independent viewpoint develop method identify curve set perception-based boundary conditions prescribed feature points results good estimation curve length subsequently polynomial basis functions curve modeling satisfy boundary conditions higher-order polynomials needed commonly asada brady curvature primal sketch ieee trans patt anal machine intell attneave informational aspects visual perception psychology review dobbins zucker cynader endstopping curvature vision research fischler bolles perceptual organization curve partitioning ieee trans patt anal machine intell fischler wolf locating perceptually salient points planar curves ieee trans patt anal machine intell hoffman richards parts recognition cognition koenderink van doorn receptive field families biological cybernetics milios shape matching curvature processes computer vision graphics image processing mokhtarian mackworth theory multiscale curvature-based shape representation planar curves ieee trans patt anal machine intell richards dawson whittington encoding contour shape curvature extrema opt soc amer dyer direct computation differential invariants image contours shading proc int conf image processing 

photorealistic scene reconstruction voxel coloring steven seitz robotics institute carnegie mellon pittsburgh charles dyer department computer sciences wisconsin madison madison abstract scene reconstruction technique presented previous approaches ability cope large visibility modeling intrinsic scene color texture information method avoids image correspondence problems working discretized scene space voxels traversed fixed visibility ordering strategy takes full account occlusions input cameras widely distributed environment algorithm identifies special set invariant voxels form spatial photometric reconstruction scene fully consistent input images approach evaluated images inward-facing outward-facing cameras introduction problem acquiring photorealistic models environment set input images sparked recent interest computer vision community result graphics-oriented applications telepresence virtual walkthroughs require visualization real objects scenes central task synthesize images camera viewpoints observed scene ideal solution yields image camera viewpoint photorealistic indistinguishable real observer viewpoint paper seek define photorealism means respect scene reconstruction techniques present practical algorithm computing photorealistic scene reconstructions images focus reconstruction approach equally method obtaining dense pixel correspondence image-based view synthesis techniques step goal propose criteria photorealistic reconstruction technique meet describe algorithm generating reconstruction set photographs photo integrity reconstruction reproduce input images projected input viewpoints preserving color texture pixel resolution research supported part national science foundation grant iriand defense advanced research projects agency rome laboratory usaf agreement numerous authors argued correspondence information sufficient synthesize views scene explicit reconstruction required problem obtaining correspondence sufficiently accurate task remains area active research broad viewpoint coverage enable accurate reprojections wide range target viewpoints reconstruction integrate numerous widely-distributed input images photorealistic scene reconstruction problem presently formulated raises number unique challenges push limits existing reconstruction techniques photo integrity requires reconstruction dense sufficiently accurate reproduce original images criterion poses problem existing featureand contour-based techniques provide dense shape estimates techniques produce texture-mapped models accuracy ensured places features detected criterion means input views significant occlusions stereo methods cope limited occlusions handling visibility greater magnitude appears state art approachingthis problem shape reconstruction formulate color reconstruction problem goal assignment colors radiances points unknown approximately lambertian scene solution present voxel coloring technique traverses discretized space generalized depth-order identify voxels unique color constant interpretations scene approach advantages existing stereo structure-from-motion approaches pixel correspondence scene reconstruction occlusions explicitly modeled accounted cameras positioned degrading accuracy run-time technique integrates numerous images yield dense reconstructions fourth important method shown produce high quality synthetic views wide range real input sequences target viewpoints remainder paper structured section discusses related work scene-space reconstruction techniques summarizes capabilities limitations existing solutions section introduces voxel coloring paradigm means determining correspondence visibility scene space section defines notion color invariants describes importance voxel coloring section presents efficient algorithm computing voxel coloring layering strategy section presents experimental results applying algorithm real synthetic input images related work voxel coloring algorithm presented paper works discretizing scene space set voxels traversed colored special order respect method similar collins space-sweep approach performs analogous scene traversal approach plane swept scene volume votes accumulated points plane project edge features images scene features identified modeling statistical likelihood accidental accumulation thresholding votes achieve desired false positive rate approach case limited occlusions provide general solution visibility problem addition space-sweep approach generates shape estimates edges detected produce dense reconstruction seitz dyer similar edge-based voting technique linear subspace intersections plane sweep obtain feature correspondences approach point line feature image votes scene subspace projects feature votes accumulated subspaces intersect indicating presence point line feature scene restriction technique detects correspondences features input images katayama related method images matched detecting lines slices epipolar volume noting occlusions correctly modeled labeling lines order increasing slope voxel traversal strategy yields similar scene-space ordering restricted linear camera paths algorithm image ignoring points occluded image visible input images narayanan built dome cameras order reconstruct models time-varying imagery addressed problem occlusions local clusters cameras computing stereo reconstructions cluster resulting partial models subsequently merged form complete reconstruction approach proven successful partial reconstructions merged individually accurate obtainable high-end laser range scanners narayanan reported good results research needed assess applicability methods noisier stereo-derived models disadvantage method original images merging process difficult assess photo integrity reconstructions zitnick webb scene space stereo technique detects reconstructs scene regions unoccluded set input images noted correspondence problem ill-posed presence occlusion solved occlusion occur posing problem surface extraction unoccluded regions identified solve correspondence problem regions fua leclerc introduced mesh-based stereo method evolves initial mesh projectively consistent set calibrated input images shape-from-shading stereo cues consistency metric similar paper inclusion smoothness term minimize deviations mesh plane contrast voxel coloring technique present paper mesh-based approach requires good initial guess converge properly mesh vertices project pixels true locations topology priori limitations overcome voxel-based formulation presented paper subsequent voxel coloring technique promising multi-image reconstruction techniques recently emerged closely related level-set approach faugeras keriven space carving approach kutulakos seitz approach formulates reconstruction procedure level-set evolution problem system partial differential equations iteratively solved dense voxel grid space carving approach solid volume voxels progressively carved convergence consistent scene reconstruction methods provide advanges voxel coloring remove constraint camera geometry paper price significant penalty run-time ease implementation unlike voxel coloring algorithm operates single pass scene volume run-time complexity independent complexity scene reconstructed properties enable reconstructions near-real-time rates shared level-set space carving approaches related recently developed panoramic stereo algorithms avoid field view problems matching panoramic images directly panoramic reconstructions achieved approach build panoramic images figs objective paper synthesize views scene set input views widely distributed environment existing techniques generally well-suited providing correspondence information sufficient purpose due problems occlusion camera separation concavities approaches guarantee consistent reconstructions occlusion present idealized conditions instance suppose views perfect lambertian scene constant illumination internal external camera parameters precisely suppose sources error including due camera calibration image quantization noise hope recover true scene due aperture problem expect compute consistent reconstruction scene appears identical input viewpoints existing algorithms guarantee consistent reconstructions occlusion present shortcoming due difficulty reasoning occlusion image space advocate scene space formulation determining correspondence information advantages approach two-fold framework representing analyzing space consistent scenes physical relations giving rise occlusion easily apparent formalized scene space algorithms devised occlusions explicitly account provide guarantees consistency reconstructions voxel coloring problem section introduce scene space framework scene reconstruction multiple basis input viewsv contrast existing approaches solve pixel correspondence initial step directly reconstruct 
colored voxel-based scene consistent basis views scene reprojected synthesize views compute correspondence maps image-warping methods approach unique feature ensures consistent scene set image correspondence maps presence arbitrary scene visibility voxel coloring problem assign colors radiances voxels points volume achieve consistency set basis images shown fig rendering colored voxels basis viewpoint reproduce original image closely formally scene represented set opaque lambertian voxels volume elements occupies finite homogeneous scene volume centered pointv isotropic radiance color assume scene contained finite bounding volume set voxels bounding volume referred voxel space denoted symbol animageis set pixels centered point irradiance color assume pixels infinitesimally small patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar figure voxel coloring set basis images grid voxels assign color values voxels consistent images image pixelp iand scene refer voxelv sthat visible projects topbyv scene complete respect set images image pixel exists voxelv ssuch complete scene consistent set images image pixel color color symbol denote set consistent scenes define voxel coloring problem formally voxel coloring problem set basis imagesi static lambertian scene voxel space determine subset avand coloring color order solve problem issues uniqueness multiple voxel colorings consistent set images problem welldefined computation voxel coloring computed set input images combinatorial search observe consistent voxel coloring exists set points colors surfaces true lambertian scene rarely voxel coloring unique set images consistent scene determining scene spatial occupancy ill-posed task voxel contained consistent scene contained fig voxel contained consistent argument holds limit voxels infinitesimally small true scene sampled representable finite collection axis-aligned cubes scenes colors fig additional constraints needed order make problem well-posed computing voxel colorings poses challenge observe underlying space combinatorial grid voxels color assignments yields scenes color assignments bruce-force search space feasible color invariants multiplicity solutions voxel coloring problem recover intrinsic scene information invariants properties satisfied consistent scene instance set voxels contained consistent scene laurentini invariants called hard points recovered volume intersection silhouette images hard points provide absolute information true scene rare images yield fig section describe frequently occurring type invariant relating color shape voxelvis color invariant respect set images vis contained scene consistent images pair consistent scenes implies color color unlike shape invariance color invariance require point contained consistent scene result color invariants prevalent hard points shown union color invariants yields consistent scene complete voxel coloring depicted fig voxel coloring problem reformulated well-posed problem solving consistent scene set color invariants order make problem tractable additional constraints needed ordinal visibility constraint note color invariants defined respect set consistent scenes combinatorial space explicit search space computationally feasible order make problem tractable introduce geometric constraint camera placement relative scene simplifies analysis ordinal visibility constraint enables identification set color invariants limit point computed directly single pass voxel space scene points image camera centered wesayp occludesq lies line segment require input cameras positioned satisfy constraint ordinal visibility constraint exists real non-negative function csuch scene pointsp input images occludesq call functiond occlusion-compatible camera configurations define occlusioncompatible function exist broad range practical configurations patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar figure spatial ambiguity voxel colorings identical viewpoints colored voxels common patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar figure color ambiguity voxel colorings identical viewpoints note presence voxel row center color assignment scenes patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar figure color invariants voxels color consistent scene contained collection color invariants forms consistent voxel coloring denoted depicted note voxel color assignments fig contained figure compatible camera configurations camera configurations satisfy ordinal visibility constraint overhead inward-facing camera moved degrees object rig outward-facing cameras distributed sphere instance suppose cameras distributed plane scene plane shown fig viewpoint relative visibility scene points depends point closer plane define distance plane generally ordinal visibility constraint satisfied scene point contained convex hullc camera centers occlusion-compatible functiond defined euclidean distance fromp convenience referred camera volume fig shows camera configurations satisfy constraint fig depicts inward-facing overhead camera rotating object ordinal visibility satisfied provided camera positioned slightly object constraint enables panoramic configurations outward-facing cameras fig properties color invariants establish color invariants exist set images ordinal visibility constraint satisfied image point define voxel jsconsistentg closest camera volume claim color invariant establish observe thatv simplies forifv closer camera volume violation assumptions color consistent scene color invariant note preceding argument demonstrated color invariants exist pixel basis images color invariant denote collection color invariants easily shown consistent scene note complete voxel pixel basis images show consistent choose define color color show coloring defined suppose points lets consistent scene definition color color color well-defined voxel coloring consistent basis images fig shows pair images figs voxels unique color interpretation constant consistent scene comprise closest consistent scene cameras sense point consistent scene contained occluded points interesting consequence distance bias neighboring image pixels color produce cusps protrusions camera volume phenomenon shown fig black gray points form separate cusps observe minimal reconstruction removing closest points fig leaves consistent scene summary properties color invariants shown voxel color invariant consistent scene represents limit point consistent scene closest camera volume voxel coloring algorithm describe computes single pass discretized scene volume exploiting ordinal visibility constraint constraint limits basis view configurations benefit visibility relationships greatly simplified partition scene series voxel layers obey monotonic visibility relationship input image voxels occlude voxels subsequent layers visibility relationships resolved evaluating voxels layer time layered scene decomposition formalize idea visibility ordering define partition space voxel layers uniform distance camera volume increasing sequence numbers occlusion-compatible function sake illustration set views positioned line facing two-dimensional scene shown fig choosing orthogonal distance line rise series parallel linear layers move cameras notice voxelsp andq occludeq basis 
viewpoint ifq higher layer simplification visibility relationships special case colinear views previously noted katayama linear case easily generalized set cameras satisfying ordinal visibility constraint fig shows layer partition case outward-facing cameras type camera geometry acquiring panoramic scene visualizations valid set layers corresponds series rectangles radiating outward camera volume layer axis-aligned bounding box camera centers subsequent layers determined uniformly expanding box unit time set layers corresponds occlusion-compatible function distance figure layered scene traversal voxels partitioned series layers increasing distance camera volume layers cameras line layers cameras plane decomposing scene layers manner case layers surfaces expand outward camera volume layering strategy analog fig layer axis-aligned cube advantage choice layers layers computed traversed efficiently voxel consistency compensate effects image quantization noise suppose images discretized grid finite non-overlappingpixels voxelvis fully occluded imagei projection overlaps nonempty set image pixels noise quantization effects consistent voxel project set pixels equal color values presence effects evaluate correlation pixel colors measure likelihood voxel consistency standard deviation cardinality choice correlation function thresholding color space error alternatively statistical measure voxel consistency suppose sensor error accuracy irradiance measurement distributed standard deviation consistency voxel estimated likelihood ratio test distributed degrees freedom make simplifying assumption vary function image intensity unknown estimated imaging homogeneous surface computing standard deviation image pixels case replaced distribution degrees freedom single-pass algorithm order evaluate consistency voxel compute set pixels overlapv projection neglecting occlusions straightforward compute voxel image projection based voxel shape camera configuration term footprint denote projection intersection image plane rays camera center intersecting voxel accounting occlusions difficult care include images pixel positions whichvshould visible difficulty resolved ordinal visibility constraint visit voxels occlusion-compatible order marking pixels accounted initially pixels unmarked voxel visited defined set unmarked pixels overlapv footprint voxel evaluated found consistent pixels marked occlusioncompatible order voxel evaluation strategy sufficient ensure pixels voxel visible note assumption voxels layer occlude pixel marking phase delayed voxels layer evaluated complete voxel coloring algorithm presented initialize reconstruction iterate layers iterate voxels layer project voxel image compute footprint unmarkedg end compute evaluate voxel consistency empty thresh bfvg color voxel remember image pixels mark end end mark pixels end threshold thresh corresponds maximum allowable correlation error overly conservative small thresh results accurate incomplete reconstruction hand large threshold yields complete reconstruction includes erroneous voxels thresholding correlation error optimize model completeness completeness threshold tcomp chosen specifies minimum allowable percentage image pixels left unmarked instance tcomp requires quarters non-background image pixels correspond projection colored voxel tcomp seek minimum thresh yields voxel coloring achieving completeness threshold completeness increases monotonically thresh sufficient run single-pass algorithm succession increasing values thresh stopping tcomp achieved alternatively binary search thresh maybeusedto decrease number iterations discussion voxel coloring algorithm visits voxels projects image time complexity voxel coloring determine space complexity observe evaluating voxel require access comparison voxels voxels stored main memory algorithm reconstruction simply output voxel time images one-bit mark masks allocated fact space time complexities voxel coloring linear number images essential large numbers images processed algorithm differs stereo feature tracking techniques perform window-based image correlation reconstruction process correspondences found scene traversal voxel projection disadvantage searchless strategy requires precise camera calibration achieve triangulation accuracy stereo methods effects calibration quantization errors significant high-frequency regions image edges preserving high-frequency image content requires higher voxel sampling rate nyquist considerations smaller voxels result fewer pixels integrated correlation step sensitive calibration errors extension compensate high-frequency regions correlation step instance detecting treating edges specially accuracy run-time depend voxel resolution parameter set user determined automatically match pixel resolution calibration accuracy computational resources extension hierarchical representations octrees voxel resolution locally adapted match surface complexity previous work stereo voxel coloring makes lambertian assumption simplify correlating pixels viewpoints assumption reasonable model matte surfaces scatter light approximately uniformly directions well-suited reconstructing highly specular surfaces specularities explicitly modeled artifacts reconstruction caused removal surface voxels specularity deemed inconsistent lambertian model mitigate artifacts identifying specular highlights preprocessing step consistency criterion models non-lambertian effects importantly voxel coloring approach reconstructs potentially numerous scenes consistent input images susceptible aperture problems caused image regions near-uniform color regions cusps reconstruction fig voxel coloring yields reconstruction closest camera volume bias smoothness bias stereo methods guarantees consistent reconstruction severe occlusions optimizations work algorithm lies computations simplicity implementation square mask approximate voxel footprints test voxel consistency alternative footprint models discussed volume rendering literature implementation make additional speedups exploiting uniform discretization space simple layer geometry choosing planar polyhedral layers enables texture-mapping graphics hardware calculate voxel footprints entire layer time strategy enables accurate estimates voxel footprints offloads computation graphics co-processor instance projection plane layer expressed matrix form buv wherethe homographyh projecting layer image preferable reverse-map image layer computing procedure voxel projections directly integrated footprint voxelv simply pixel position buv reverse-mapping strategy similar collins diffusion operator place texture-mapping formulation experimental results order evaluate performance voxel coloring algorithm view synthesis applied images variety real scenes images synthetic scenes facilitate analysis error characteristics simulate camera configurations physically realizable lab results real images experiment demonstrates view synthesis capabilities voxel coloring algorithm applied images real objects calibrated images captured aid computer-controlled pan-tilt head fixed overhead camera shown fig image-acquisition strategy similar object head rotated degrees front color camera sony xcwith ccd sensor lens positioned approximately horizontally object center vertically base tsai method calibrate camera respect head rotating object manually selecting image features pan positions calibration error approximately fig shows selected images objects toy dinosaur rose case input images resolution captured rotating object degrees increments degrees problem acquisition approach illumination effectively object rotations violating lambertian assumption compensate error threshold set high pixel correlation error allowed dinosaur rose table compares sizes run times mhz mips processor reprojection errors voxel colorings computed dinosaur toy resolutions square voxels grid volume held constant resolution grid dimensions indicating total number voxels volume width depth height row table represents resolution doubling -fold increase number voxels relative previous row run time increases proportionately factor due additive overhead factor algorithm run times include image acquisition calibration background thresholding voxels figure selected basis images dinosaur toy top rose bottom images spanning close rotation object figure image acquisition setup basis images captured placing object calibrated pan-tilt head rotating object front stationary video camera camera object satisfy 
ordinal visibility constraint grid dimensions voxels evaluated voxels colored run time reprojection error sec sec sec sec table voxel resolution effects table compares size run time reprojection error voxel colorings dinosaur toy grid sizes row represents -fold increase number voxels relative previous row models shown fig colored column number voxels final reconstruction notice voxels colored column increases slowly voxels evaluated column attributed fact voxel coloring algorithm reconstructs points surface interior object expected manifold surfaces number voxels colored increase factor resolution doubled final column table reprojection error measures root-mean-squared error pixels synthesized images input viewpoints increasing voxel resolution yields significant improvement reprojection error fig shows voxel colorings dinosaur toy table facilitate reconstruction black background images thresholded eliminate background points background segmentation strictly leaving step results background-colored voxels scattered edges scene volume background threshold chosen conservatively removing background pixels sufficient eliminate background scattering effect fig shows highest resolution reconstruction viewpoint input images comparison original image shown fig note fine details wind-up rod dinosaur reconstructed fig d-g compare reconstructions viewpoint basis views voxel resolutions reported table resolution doubles step note lowest resolution model shown preserves rough features model produces reasonable reprojection fact model computed seconds suggests algorithm potentially suitable interactive applications teleconferencing models generated real time increasing resolution adds fine details shape texture decreases blocky artifacts caused large voxels e-g comparison fig shows shaded underlying voxel grids color information note color greatly augments visual quality reconstruction results rose shown fig shows input image synthesized view viewpoint demonstrating photo integrity reconstruction rose represents difficult case texture made surfaces leaves petals extremely thin reconstruction consisting approximately voxels captures appearance rose accurately preserves fine features show synthesized views views close basis views image good exhibits interesting artifacts specifically leaves holes viewed holes visible basis viewpoints filled algorithm represent unreconstructible regions scene input image thresholded image model reprojection voxels voxels voxels voxels figure voxel coloring dinosaur toy original image thresholded eliminate background pixels voxel coloring computed thresholded images object undergoing rotation d-g show reconstruction viewpoint voxel resolutions voxel width progressively doubled figure voxel coloring flower input image shown projection voxel coloring viewpoint reconstruction voxels captures image appearance accurately views input viewpoints artifacts prevalent viewpoint input views voxels voxels voxels voxels figure shaded top colored bottom voxel models dinosaur toy resolutions figure comparison voxel coloring silhouette-based reconstruction input image shown reconstructions rendered viewpoint voxel coloring reconstruction silhouette-based reconstruction figure placement input camera viewpoints panoramic synthetic room scene camera positions scene shown frontal left overhead perspective background segmentation experiments opportunity compare quality reconstructions silhouette-based methods volume intersection perform comparison reconstructed flower model threshold threshold note infinite threshold produces reconstruction consistent silhouettes color information computation fig compares input image reconstructions note silhouette-based model conservative voxels lie true shape errors lead noticeable artifacts silhouette model large coloring model poor quality points model project pixels colors views colored consistently contrast voxel coloring ensuring color consistency allowing user provide upper bound allowable color-space reprojection error voxel model fig results synthetic images order evaluate performance voxel coloring algorithm panoramic scenes basis images generated placing cameras synthetic room scene room consisted texture-mapped walls shaded figures figures bust beethoven scanned cyberware model human figure illuminated diffusely downward-oriented light source infinity cameras positions orientations inside room shown fig geometry scene camera configuration pose significant problems previous image-based reconstruction methods room interior highly concave making accurate reconstruction volume intersection contour-based methods impractical numerous cameras large amount occlusion create difficulty stereo approaches notable exceptions include panorama-based stereo approaches well-suited room reconstructions methods require panoramic image constructed camera location prior stereo matching step requirement avoided voxel coloring approach requirement enable camera configurations shown fig fig compares original reconstructed models room viewpoints reconstruction contained colored voxels approximately million candidate voxels examined required minutes compute voxel coloring reproduced images room interior extremely accurately shown pixel correlation error threshold account image quantization result errors fine details lost face beethoven bust overhead views show discrepancies original reconstructed models instance reconstructed walls perfectly planar points lie surface point drift effect noticeable regions texture locally homogeneous indicating texture information important accurate reconstruction quality overhead view shown commendable viewpoint input views extreme overhead view worse shows shape scene captured reconstruction set experiments conducted evaluate sensitivity approach factors texture density image noise voxel resolution simplify analysis effects experiments performed implementation voxel coloring method scene cameras lie common plane fig shows synthetic scene arc positions basis views experiments texture important visual cue exploited voxel coloring model influence texture reconstruction accuracy series reconstructions generated texture systematically varied spatial structure scene held fixed texture pattern cyclic linear gradient function frequency position intensity frac frac returns fractional portion increasing frequency parameter density texture increase fig b-j show reconstructions obtained applying voxel coloring increasing values comparison texture patterns original arc shapes shown frequency low quantized texture pattern uniform problem reduces reconstruction silhouettes result similar obtained volume intersection specifically volume intersection yield closed diamond-shaped region reconstructed v-shaped cusp surface corresponds set surfaces diamond visible basis views doubling results slightly reconstruction consisting cusps shown observe reconstruction accurate midpoint arc texture discontinuity occurs progressively doubling produces figure panoramic room scene reconstruction renderings true scene shown left reconstructed scene input viewpoint inside room viewpoint room extreme overhead view fidelity input viewpoints degrades smoothly camera moves original surface reconstruction texture basis cameras original surface figure effects texture density voxel reconstruction synthetic arc reconstructed basis views arc textured cyclic gradient pattern frequency increasing frequency makes texture denser accuracy reconstruction improve limit case texture uniform problem reduces reconstruction silhouettes frequency progressively doubles c-j reconstruction converges true shape point exceeds image resolution i-j series accurate reconstructions d-h smaller smaller cusps approach true shape exceeds point reconstruction degrades phenomenon visible results projected texture pattern exceeds resolution basis images nyquist rate exceeded point accuracy degrades reconstruction ultimately breaks fig illustrates points reconstruction accuracy strongly dependent surface texture errors highly structured elaborate point reconstructed voxels drift true surface predictable manner function local texture density texture locally homogeneous voxels drift camera volume texture density increases voxels move monotonically camera volume true surface texture density increases limits image resolution voxels continue move cameras true surface ultimately 
eliminated reconstruction tested performance algorithm respect additive image noise simulate noise images perturbed intensity image pixel independently adding random range tocompensate error threshold set fig shows resulting reconstructions primary effect error increase threshold gradual drift voxels true surface cameras error exceedingly large reconstruction ultimately degenerated texture solution shown fig experiment image noise compensated increasing error threshold leads structured reconstruction errors higher levels noise voxels drift progressively closer cameras final experiment evaluated effects increasing voxel size reconstruction accuracy principle voxel coloring algorithm correct limit voxels infinitesimally small layering strategy based assumption points layer occlude small voxels no-occlusion model reasonable approximation voxels increase size model progressively accurate surprising algorithm appears produce good results large voxel sizes fig carefully observe effects voxel size ran voxel coloring algorithm scene fig sequence increasing voxel sizes fig shows results reconstructions close optimal limits voxel resolution independent voxel size empirical result surprising obvious violation layering property basis algorithm effects violation apparent voxels included reconstruction invisible totally occluded voxels basis views instance observe reconstruction voxel size top-left top-right voxels deleted affecting scene appearance basis views extra voxels artifacts large voxel size violation layering property effects minor adversely affect view synthesis adding voxels change scene appearance viewpoints close input images noise voxel size noise voxel size noise voxel size noise voxel size noise voxel size noise voxel size noise voxel size figure effects image noise voxel size reconstruction image noise simulated perturbing pixel random range reconstructions increasing values shown left ensure full reconstruction error threshold set increasing noise caused voxels drift true surface shown light gray effects changing voxel size shown notice arc shape approximated large voxels discussion paper addressed problem view synthesis numerous basis views distributed widely scene problem challenging due difficulty computing reliable correspondence information views main goal determine intrinsic ambiguities limitations reconstructible derive practical algorithm correspondence computation view synthesis primary contribution paper voxel coloring framework analyzing ambiguities image correspondence scene reconstruction similar theory previously developed special case volume intersection reconstruction silhouettes results paper viewed generalization volume intersection problem broader class textured objects scenes voxel coloring framework enabled identification computation color invariants points color scene reconstruction consistent set basis images important contribution voxel coloring algorithm computing pixel correspondence set basis images key element ordinal visibility constraint constraint configuration camera viewpoints enabled efficient solution correspondence problem practical algorithm capable generating provably-consistent dense correspondence maps set input images presence occlusion view synthesis applications require correspondence motion analysis scene reconstruction algorithm features make attractive view synthesis tasks generality low-level voxel representation approximate surface type easily models discontinuities well-suited modeling real-world objects scenes complex geometry topology flexible acquisition cameras arbitrarily degrading reconstruction accuracy algorithm performs cameras distributed widely scene panoramic visibility voxel coloring method synthesize views camera position orientation fact applicable inwardand outward-facing camera configurations makes well-suited wide variety scenes small objects panoramic room interiors insensitivity occlusion visibility fully modeled algorithm impose performance penalty efficiency algorithm performs single pass scene volume exploits regular operations performed texture-mappinggraphics hardware investigating real-time implementation algorithm run existing graphics workstations technique space efficient surface voxels stored voxels visible basis image scalability varying voxel size algorithm tailored computing resources empirical evidence demonstrates algorithm performs range voxel sizes ordinal visibility constraint needed support single-pass algorithm rules input camera configurations scene surround cameras room scene fig cameras surround object scene limitation controlled lab environments camera configuration designed ordinal visibility constraint mind instance experiments cameras raised slightly scene reconstructed fig problematic situations reconstruction video sequence obtained walking large object video camera investigating methods handling types camera motions configurations solution segment basis images sets individually satisfy ordinal visibility constraint run algorithm set separately merge results automatic methods performing segmentation task simplify approach approach extend voxel coloring algorithm directly handle general camera configurations multi-pass approach results section low-contrast regions noise produce reconstruction errors cusps thatare highly structured view synthesis tasks potential disadvantage structured noise produce perceptible artifacts fact errors deterministic well-understood potentially detectable attenuated solution perform post-processing phase analogous dithering errors diffused mitigate artifacts alternative method identify textureless regions error sources basis images treat features specially reconstruction process key challenges future work modeling specularities transparency strong specularities noticeable artifacts reconstructions obtained voxel coloring due inherent limitations underlying lambertian model remove artifacts enriching consistency criterion include non-lambertian effects solving surface normal reflectance reconstruction process topic investigating challenge modeling transparency effects caused variations surface opacity mixedpixels caused image discretization transparency problematic multiple scene points generally contribute color single image pixel scene consistency evaluated point-by-point basis proposed paper promising initial results szeliski golland global optimization methods provide potential solution transparency problem worthy future study notion color invariance bears resemblence problem color constancy long history computer vision literature color constancy problem determine images description scene material properties surface reflectance depend scene illumination invariance illumination notion color invariance paper case illumination held fixed separating reflectance illumination color invariants encode scene radiance directly sufficient synthesize views scene illumination held constant shai avidan amnon shashua view synthesis tensor space proc computer vision pattern recognition conf pages harlyn baker robert bolles generalizing epipolar-plane image analysis spatiotemporal surface int computer vision paul beardsley phil torr andrew zisserman model acquisition extended image sequences proc european conf computer vision pages peter belhumeur david mumford bayesian treatment stereo correspondence problem halfoccluded regions proc computer vision pattern recognition conf pages david beymer tomaso poggio image representations visual learning science robert bolles harlyn baker david marimont epipolar-plane image analysis approach determining structure motion int computer vision brelstaff blake detecting specular reflections lambertian constraints proc int conf computer vision pages shenchang eric chen lance williams view interpolation image synthesis proc siggraph pages robert collins space-sweep approach true multi-image matching proc computer vision pattern recognition conf pages robert collins multi-image focus attention rapid site model construction proc computer vision pattern recognition conf pages brian curless marc levoy volumetric method building complex models range images proc siggraph pages paul debevec camillo taylor jitendra malik modeling rendering architecture photographs hybrid geometryand image-based approach proc siggraph pages faugeras keriven variational principles surface evolution pde level set methods stereo problem ieee trans image processing floyd steinberg adaptive algorithm spatial gray scale sid 
int symp dig tech papers page john freund mathematical statistics prentice hall englewood cliffs pascal fua yvan leclerc obejct-centered surface reconstruction combining multi-image stereo shading int computer vision davi geiger bruce landendorf alan yuille occlusions binocular stereo proc european conf computer vision pages glenn healey steven shafer lawrence wolff editors physics-based vision principles practice color pages jones bartlett boston takeo kanade peter rander narayanan virtualized reality constructing virtual worlds real scenes ieee multimedia sing bing kang richard szeliski scene data recovery omnidirectional multibaseline stereo proc computer vision pattern recognition conf pages akihiro katayama koichiro tanaka takahiro oshino hideyuki tamura viewpoint dependent stereoscopic display interpolation multi-viewpoint images proc spie vol pages klinker shafer physical approach color image understanding int computer vision kiriakos kutulakos charles dyer global surface reconstruction purposive control observer motion artificial intelligence kiriakos kutulakos steven seitz theory shape space carving technical report computer science dept rochester rochester york david laur pat hanrahan hierarchical splatting progressive refinement algorithm volume rendering proc siggraph aldo laurentini shapes understood silhouettes ieee trans pattern analysis machine intelligence aldo laurentini silhouettes reconstruct object computer vision image understanding stephane laveau olivier faugeras scene representation collection images proc int conf pattern recognition pages martin aggarwal volumetric description objects multiple views ieee trans pattern analysis machine intelligence leonard mcmillan gary bishop plenoptic modeling proc siggraph pages saied moezzi arun katkere don kuramura ramesh jain reality modeling visualization multiple video sequences ieee computer graphics applications yuichi nakamura tomohiko matsuura kiyohide satoh yuichi ohta occlusion detectable stereo occlusion patterns camera matrix proc computer vision pattern recognition conf pages narayanan peter rander takeo kanade constructing virtual worlds dense stereo proc sixth int conf computer vision pages tomaso poggio vincent torre christof koch computational vision regularization theory nature marc pollefeys reinhard koch luc van gool self-calibration metric reconstruction spite varying unknown internal camera parameters proc sixth int conf computer vision pages sebastien roy ingemar cox maximum-flow formulation n-camera stereo correspondence problem proc sixth int conf computer vision pages samet quadtree related hierarchical data structures acm computing surveys daniel scharstein stereo vision view synthesis proc computer vision pattern recognition conf pages steven seitz charles dyer complete structure point correspondences proc int conf computer vision pages steven seitz charles dyer view morphing proc siggraph pages steven seitz charles dyer photorealistic scene reconstruction voxel coloring proc computer vision pattern recognition conf pages steven seitz kiriakos kutulakos plenoptic image editing proc sixth int conf computer vision pages sethian level set methods cambridge press cambridge steve sullivan jean ponce automatic model construction pose estimation object recognition photographs triangular splines proc sixth int conf computer vision pages richard szeliski rapid octree construction image sequences computer vision graphics image processing image understanding richard szeliski polina golland stereo matching transparency matting proc sixth int conf computer vision pages carlo tomasi takeo kanade shape motion image streams orthography factorization method int computer vision tsai versatile camera calibration technique high-accuracy machine vision metrology off-the-shelf cameras lenses ieee trans robotics automation lee westover footprint evaluation volume rendering proc siggraph pages lawrence zitnick jon webb multi-baseline stereo surface extraction technical report cmu-cs- carnegie mellon pittsburgh november 
direct computation differential invariants image contours shading liangyin charles dyer computer sciences department wisconsin madison wisconsin usa abstract paper present framework combining differential geometry scale-space show local geometric invariants image contours tangent curvature derivative curvature computed directly stably raw image solve problem noise ampli cation differential operations scale-parameterized local kernels replace differential operations integral operations carried accurately adopt continuous image model show tangent estimation contours made accurately tangent estimators quantization contour location high precision ciency computation achieved invariants differential order involved introduction image contours exhibit good correspondence raw images physical world early stages visual perception structure image contour unique ned scales generally processes locating representing image contours consist identifying location contours modeling structure contours computing modeling parameters order make structure image contours explicit methods commonly employed local edge detection global curve tracing global interpolation energy optimization major problem rst approach strictly sequential processing model data dependency estimation curvature depends exclusively current edge locations estimated tangents edge turn depends resolution provided edge detector model error produced early stages propagate ampli stages higher order geometric invariants image contours curvature considered noisy unstable computationally alternative approach generates closed-form curve models interpolating edge points globally minimizing error-energy functions inherits errors generated edge-detection process requires careful design energy functions stabilize results perform tangent curvature discontinuities solve problems propose rst replace discrete image model continuous based sampling theorem continuous signal fully recovered discrete counterpart sampling frequency higher nyquist rate continuous model predicated imaging devices resolution higher highest resolution needed computation applying scale-space theory differential operations replaced integral operations inherent problem noise ampli cation avoided previously observed advantage expense expanding spatial range computation order differentiation increases adoption continuous image model operations carried quantization error theoretical framework derive expressions directly relating local geometric invariants raw image show expressions embody algorithms highly cient stable computations invariants invariants considered include tangent curvature derivative curvature contour show invariants local model curves local canonical form locally represent image contours theoretical framework image model image modeled traditionally taking integer values range discrete model adequate computing local differential invariants replaced ensemble images parameterized scale-space parameter exp exp exp exp figure kernel differentiations gaussian kernel convolution operator raw image viewed nest resolution scale optical front-end retina gaussian kernel ned exp i-th order differentiation denoted gaussian kernel separable kernel rstsecond- third-order differentiations depicted figure gaussian kernel scale-space important property convolution property replace differential operations image integral operations image parameterized scale-space contour model well-de ned curve parameterized curve length euclidean space serret-frenet formula holds neighborhood tangent normal vectors curvature curve rst terms taylor expansion second-order differentiation expressed directly terms local canonical form curve implication form curve decomposed kernel image contour figure contour ned response image kernel orientation locally components frenet frame components third-order approximation expressed terms derivative respect fact fundamental theorem local theory curves asserts curve uniquely rigid transform computation contour invariants contours cos sin sin cos antisymmetric receptive eld orientation yri local image contour orientation scale dened distribution irradiance sin cos normal vector contour term directional derivative direction explicit form yri xri yri nition originates fact response image kernel maximum rate change moving direction orthogonal figure additional condition exclude uniform contrast areas image note yri form gabor lter location ned maximum response antisymmetric kernel direction analogous output oriented edge detector gabor kernel drop term expressions deemed understanding dealing scale tangential field contours tangent vector image contour scale ned unit vector orientation nition motivated property kernel aligned local image contour orientation response convolving kernel image maximum kernel point orientation space point ned continuous parameter orientation tangent estimated quantizing orientation space determine resolution orientation space order locate points accurately physiological evidence suggests quantization resolution quantizations mammalian vision system show resolution quantizations suf cient assume step edge model orientation space horizontal step edge sin edge crossing negative y-axis positive y-axis expression output applying local kernel step edge image nes tangential eld knowledge closed-form solution sin step edge unknown sinusoidal function linear point estimate resolution needed estimating linearity sinusoidal function range denote points negative positive orientation samples error linear approximation actual sinusoid figure sin sin sin sin keeping estimated error point case estimated point sin sin sinq figure response step edge kernel linear estimation zero-crossing point curvature contours nition curvature natural parameter curve length tangential eld chain rule implicit differentiation cos sin similar formula holds ned straightforward show simplicity subscripts denote derivatives dened directly associate kernel subsequently explicit expressions invariant respect rotations explicit form curvature directly computation similar formulation curvature proposed koenderink image blob boundary ned isoluminance neighborhood point image contour approximated iso-luminance contour tangent orientation computed accurately formulation expression curvature image contours requires third-order differential approximate derivative curvature contours method derive curvature applied formulate higher-order geometric invariants interested derivative curvature part expression local canonical form differentiation curvature respect curve length cos sin sin cos sin cos figure image synthetic shapes figure vase smithsonian archive curve length tangent orientation radian theoretical estimated figure comparison theoretical computed tangent ellipse derived similarly derive terms orders differentiation derivative curvature expressed terms rst order differentiation directly compute shown formula derived applying directional derivative direction implementation examples images figure illustrate implementation scale-orientation space initially partitioned cells scale partitions spanning orientation partitions partition scheme enables locate contours operations fourier domain equivalent performing operations uniformly spatial domain stage treated quantized parameter estimated orientation space repartitioned cells tangent eld estimated contours pass curvature estimated theoretical figure comparison theoretical estimated curvature ellipse curvature figure curvature shapes image treated continuous parameter computation conducted spatial domain contour points ellipse image shapes theoretical estimated tangents shown figure orientation plotted curve length ellipse similar comparison curvature shown figure result curvature computation image shown figure compute curvature vase image part boundary top ellipse vase result shown figure highest peak curvature concave discontinuity vase handle discussion shown invariants local canonical form image contour set local kernels derived compute invariant directly raw image steps compute image contours kernel compute vector tangential elds express form vector eld cos sin iii points tangential eld non-vanishing compute curvature curvature figure curvature boundary vase derivative curvature kernels derived computing local geometric invariants image contours found biological systems antisymmetric kernels populated 
symmetric derived gaussian kernel expand kernel sizes differential order increases properties suggest connections computation geometric information hierarchical organization natural visual systems rest section details computation approach scale size kernels signal considered continuous modeling process scales bounded object systems modeled model converted sampling domain range scales dictated conversion process kernels receptive elds increase size due conversion expressions normalized total area unity important function lters images order maintain property normalization factor proportional order differentiation implies expansion lter size constant numerical precision increase kernel size constrains range scales bandwidth sampled image constrained nyquist rate fact image dimension determines upper lower bound scales scale multiples scale gaussian kernel upper bound max image size hand taking nyquist rate dictates scale lower bound min contour tangent computations theoretically compute tangent earlier compute image contours fourier domain treating quantized parameter greatly increases ciency computation price precise estimating hand potential contours located compute geometric properties contour points sinusoidal property estimate great precision conclusions showed paper local geometric invariants image contours computed directly reliably raw image approach eliminates drawbacks error propagation ampli cation conventional approaches improves precision results drastically computations local sacri cing resolution resorting global processes energy minimization computationally expensive accurately reliably compute higher order differential invariants derivative curvature explore connection perception geometric invariants curve partition perception makes visual processes perceptual organization meaningful daugman uncertainty relation resolution space spatial frequency orientation optimized twodimensional visual cortical lters opt soc carmo differential geometry curves surfaces prentice-hall englewood cliffs florack romeny koenderink viergever scale differential structure images image vision computing hoffman richards parts recognition cognition hubel wiesel sequence regularity geomety orientation columns monkey striate cortex journal comparative neurology kass witkin terzopoulos snakes active contour models proc int conf computer vision pages koenderink structure images biological cybernetics koenderink richards two-dimensional curvature operators opt soc amer koenderink van doorn receptive eld families biological cybernetics parent zucker trace inference curvature consistency curve detection ieee trans patt anal machine intell august witkin scale-space ltering proceedings eighth ijcai pages 
photorealistic scene reconstruction voxel coloring steven seitz charles dyer department computer sciences wisconsin madison e-mail fseitz dyerg wisc http wisc computer-vision proc computer vision pattern recognition conf abstract scene reconstruction technique presented previous approaches ability cope large visibility modeling intrinsic scene color texture information method avoids image correspondence problems working discretized scene space voxels traversed fixed visibility ordering strategy takes full account occlusions input cameras widely distributed environment algorithm identifies special set invariant voxels form spatial photometric reconstruction scene fully consistent input images approach evaluated images inwardand outwardfacing cameras introduction problem acquiring photorealistic models real environments widely distributed viewpoints problem sparked recent interest computer vision community result applications telepresence virtual walkthroughs graphics-oriented problems require realistic textured object models term photorealism describe reconstructions real scenes reprojections sufficient color texture information accurately reproduce images scene broad range target viewpoints ensure accurate reprojections input images representative sparsely distributed target range viewpoints propose criteria photorealistic reconstruction technique satisfy photo integrity reprojected model accurately reproduce input images preserving color texture pixel resolution support darpa national science foundation grant iriis gratefully acknowledged broad viewpoint coverage reprojections accurate large range target viewpoints requires input images widely distributed environment photorealistic scene reconstruction problem presently formulated raises number unique challenges push limits existing reconstruction techniques photo integrity requires reconstruction dense sufficiently accurate reproduce original images criterion poses problem existing featureand contour-based techniques provide dense shape estimates techniques produce texturemapped models accuracy ensured places features detected criterion means input views significant occlusions stereo methods cope limited occlusions handling visibility greater magnitude appears state art approaching problem shape reconstruction formulate color reconstruction problem goal assignment colors radiances points unknown approximately lambertian scene solution present voxel coloring technique traverses discretized space depthorder identify voxels unique coloring constant interpretations scene approach advantages existing stereo structure-from-motion approaches scene reconstruction occlusions explicitly modeled accounted cameras positioned degrading accuracy run-time technique integrates numerous images yield dense reconstructions accurate wide range target viewpoints voxel coloring algorithm presented works discretizing scene space set voxels traversed colored special order respect method similar collins space-sweep approach performs analogous scene traversal space-sweep algorithm provide solution occlusion problem primary contribution paper katayama related method images matched detecting lines slices epipolar volume noting occlusions explained labeling lines order increasing slope voxel traversal strategy yields similar scene-space ordering restricted linear camera paths algorithm image ignoring points occluded image visible related recently developed panoramic stereo algorithms avoid field view problems matching panoramic images directly panoramic reconstructions achieved approach build panoramic images figs remainder paper organized section formulates solves voxel coloring problem describes relations shape reconstruction section presents efficient algorithm computing voxel coloring set images discussing complexity related issues section describes experiments real synthetic image sequences voxel coloring voxel coloring problem assign colors radiances voxels points volume maximize photo integrity set input images rendering colored voxels input viewpoint reproduce original image closely order solve coloring problem issues uniqueness multiple voxel colorings consistent set images problem well-defined computation voxel coloring computed set input images section formalizes voxel coloring problem explores geometrical constraints camera placement enable efficient solution order address uniqueness computation issues introduce visibility constraint greatly simplifies analysis ordinal visibility constraint enables identification invariant voxels colorings uniquely defined addition constraint defines depth-ordering voxels coloring computed single pass scene volume notation assume scene lighting stationary surfaces approximately lambertian figure compatible camera configurations camera configurations satisfy ordinal visibility constraint downward-facing camera moved degrees object rig outward-facing cameras distributed sphere conditions radiance point isotropic scalar call color term color refer irradiance image pixel term meaning clear context dscenes represented finite set opaque voxels volume elements occupies finite homogeneous scene volume fixed color denote set voxels symbol animageis set pixels assume pixels infinitesimally small givenanimagepixelp scene refer voxel sthat visible projects color image pixel iis color voxel color scene complete respect set images image pixel exists voxel ssuch complete scene consistent set images image pixel color color ordinal visibility constraint concreteness pinhole perspective projection model assumed simplify analysis introduce constraint positions cameras relative scene constraint simplifies task resolving visibility relationships establishing fixed depth-order enumeration points scene scene points image camera centered wesayp occludes lies line segment require input cameras positioned satisfy constraint assumed visible scene spatially bounded figure ambiguity scene reconstruction scenes indistinguishable viewpoints shape ambiguity scenes points common hard points exist color ambiguity share point color assignment scenes color invariants point color consistent scene contained points constitute voxel coloring views ordinal visibility constraint exists norm ksuch scene points input images occludes kpk kqk call norm occlusion-compatible forsome camera configurations define occlusion-compatible norm norm exist broad range practical configurations instance suppose cameras distributed plane scene plane shown fig viewpoint relative visibility scene points depends point closer plane define kto distance plane generally ordinal visibility constraint satisfied scene point contained convex hull camera centers occlusion-compatible norm kpk defined euclidean distance convenience referred camera volume fig showstwo camera configurations satisfy constraint fig depicts inward-facing overhead camera rotating object ordinal visibility satisfied provided camera positioned slightly object constraint enables panoramic reconstructions outward-facing cameras fig color invariance ordinal visibility constraint depthordering points scene describe ordering scene reconstruction scene reconstruction complicated fact set images consistent rigid scene determining scene spatial occupancy ill-posed task voxel contained consistent scene contained fig alternatively voxel part consistent scenes colors fig multiplicity solutions color reconstruction problem recover intrinsic scene information invariants properties satisfied consistent scene instance set voxels contained consistent scene laurentini invariants called hard points recovered volume intersection binary images hard points provide absolute information true scene points rare images yield fig section describe frequently occurring type invariant relating color shape avoxelv color invariant respect set images pair scenes consistent images implies color color unlike shape invariance color invariance require point contained consistent scene result color invariants prevalent hard points set images satisfying ordinal visibility constraint yields color invariants form complete scene reconstruction shown set images image point define voxel jsconsistentg closest camera volume claim color invariant establish observe implies forif closer camera volume impossible definition color consistent scene color invariant voxel coloring image set defined fig shows voxel coloring pair images fig points unique color interpretation constant consistent scene 
comprise closest consistent scene cameras sense point consistent scene contained voxel coloring occluded points voxel coloring interesting consequence closeness bias neighboring image pixels color produce cusps voxel coloring protrusions camera volume phenomenon shown fig white black points form separate cusps observe voxel coloring minimal reconstruction removing closest points fig leaves consistent scene computing voxel coloring section describe compute voxel coloring set images satisfy ordinal visibility constraint addition shown set voxels contained voxel coloring form complete scene reconstruction consistent input images voxel coloring computed voxel time order ensures agreement images step guaranteeing reconstructed voxels satisfy demonstrate voxel colorings form consistent scenes show complete account image pixel defined section order make construction incrementally consistent agrees images step introduce weaker form consistency applies incomplete voxel sets set voxels color assignments voxel-consistent projection agrees fully subset input image overlaps formally set voxel-consistent images voxel sand image pixels implies color color color notational convenience define set voxels closer camera volume scene consistency voxel consistency related properties consistent scene voxelconsistent set suppose complete point voxel-consistent consistent scene consistent scene created property incrementally moving farther camera volume adding voxels current set maintain voxel-consistency formalize idea define partition space voxel layers uniform distance camera volume jkvk increasing sequence numbers voxel coloring computed inductively voxel-consistentg bsp voxel-consistentg pixel claim prove define consistency property inductively assume consistency property voxel-consistent implying fvg bsp voxel-consistent set includes voxel-consistent note complete subsets complete consistent consistency property voxels visible image consistent consistent scene pixel close summary properties voxel colorings shown consistent scene voxel color invariant computable set images satisfying ordinal visibility constraint reconstruction voxel coloring section present voxel coloring algorithm reconstructing scene set calibrated images algorithm closely voxel coloring construction outlined section adapted account image discretization noise assumed space partitioned series voxel layers increasing distance camera volume images areassumedtobediscretized finite non-overlapping pixels cameras assumed satisfy ordinal visibility constraint scene point lies camera volume voxel fully occluded image projection overlap nonempty set image pixels noise quantization effects consistent voxel project set pixels equal color values presence effects evaluate correlation pixel colors measure likelihood voxel consistency standard deviation cardinality suppose sensor error accuracy irradiance measurement approximately distributed standard deviation unknown estimated imaging homogeneous surface computing standard deviation image pixels consistency voxel estimated likelihood ratio test distributed voxel coloring algorithm algorithm project compute thresh bfv threshold thresh corresponds maximum allowable correlation error overly conservative small thresh results accurate incomplete reconstruction hand large threshold yields complete reconstruction includes erroneous voxels practice thresh chosen desired characteristics reconstructed model terms accuracy completeness work algorithm lies computation set overlapping pixels depends shape projection set possibly occluding voxels simplify computation implementation square mask approximate projected voxel shape problem detecting occlusions solved scene traversal ordering algorithm order occludes visited occlusions detected onebit mask image pixel mask initialized voxel processed set pixels overlap projection mask values pixels marked masks thresh voxel traversal made efficient employing alternative occlusion-compatible norms instance axis-aligned bounding box camera volume andl rise sequence axis-aligned cube-shaped layers discussion algorithm visits voxel projects image time complexity voxel coloring voxels images determine space complexity observe evaluating voxel require access comparison voxels voxels stored main memory algorithm voxels making voxel coloring simply output time images one-bit masks allocated fact space time complexities voxel coloring linear number images essential large numbers images processed algorithm differs stereo optical-flow techniques perform window-based image correlation reconstruction process correspondences found scene traversal voxel projection disadvantage searchless strategy requires precise camera calibration achieve triangulation accuracy stereo methods accuracy run-time depend voxel resolution parameter set user determined automatically match pixel resolution calibration accuracy computational resources importantly approach reconstructs potentially numerous scenes consistent input images susceptible aperture problems caused image regions near-uniform color regions cusps reconstruction fig voxel coloring yields reconstruction closest camera volume bias smoothness bias stereo methods guarantees consistent reconstruction severe occlusions experimental results experiment involved reconstruction twenty-one views spanning object rotation strategy calibrating views similar turntable objects software-controlled pan-tilt head viewed fixed camera fig tsai method calibrate camera respect head rotating object manually selecting image features pan positions calibration error approximately fig shows voxel colorings computed complete revolution dinosaur toy rose facilitate reconstruction black background eliminated background points thresholding images background subtraction strictly leaving step results background-colored voxels scattered edges scene volume threshold chosen conservatively removing background pixels sufficient eliminate background scattering effect middle column fig shows reconstructions viewpoint input images shown left demonfigure voxel coloring dinosaur toy rose objects rotated camera left input images object images show views rendered reconstructions figure reconstruction synthetic room scene input images cameras located inside room shows voxel coloring original model interior viewpoint show reconstruction original model viewpoint room strate photo integrity note fine details wind-up rod dinosaur leaves rose reconstructed experimented voxel resolutions determine effects voxel sampling reconstruction quality increasing sampling rate improved reconstruction quality limits image quantization calibration accuracy cost increased run-time low-resolution model built quickly reconstruction shown voxels compute mhz sgi indigo contrast -voxel dinosaur reconstruction shown fig required evaluating volume million voxels roughly minutes compute experiment involved reconstructing synthetic room cameras inside room room interior highly concave making reconstruction volume intersection contour-based methods impractical room consisted texture-mapped walls shaded models models bust beethoven human figure illuminated diffusely cameras positions orientations room optical axes parallel horizontal plane fig compares original reconstructed models viewpoints voxel coloring reproduced images room interior accurately shown fine details lost due quantization effects overhead view shows discrepancies original reconstructed shapes instance reconstructed walls perfectly planar points lie surface point drift effect noticeable regions texture locally homogeneous indicating texture information important accurate reconstruction surprisingly quality image worse view farther input cameras fig shows shape scene captured reconstruction recovered model contained voxels seconds compute conclusions paper presented scene reconstruction technique incorporates intrinsic color texture information acquisition photorealistic scene models unlike existing stereo structure-from-motion techniques method guarantees consistent reconstruction found large visibility differences input images method relies constraint input camera configuration enables simple solution determining voxel visibility contribution constructive proof existence set color invariants points ways provide information intrinsic constant consistent scenes constitute spatial photometric reconstruction scene projections reproduce input images tomasi kanade shape motion image streams orthography factorization 
method int computer vision vol kanade narayanan rander virtualized reality concepts early results proc ieee workshop representation visual scenes moezzi katkere kuramura jain reality modeling visualization multiple video sequences ieee computer graphics applications vol beardsley torr zisserman model acquisition extended image sequences proc european conf computer vision robert realistic scene models image sequences proc imagina conf monaco nakamura matsuura satoh ohta occlusion detectable stereo occlusion patterns camera matrix proc computer vision pattern recognition conf belhumeur mumford bayesian treatment stereo correspondence problem half-occluded regions proc computer vision pattern recognition conf collins space-sweep approach true multi-image matching proc computer vision pattern recognition conf katayama tanaka oshino tamura viewpoint dependent stereoscopic display interpolation multi-viewpoint images proc spie vol mcmillan bishop plenoptic modeling proc siggraph kang szeliski scene data recovery omnidirectional multibaseline stereo proc computer vision pattern recognition conf laurentini shapes understood silhouettes ieee trans pattern analysis machine intelligence vol freund mathematical statistics englewood cliffs prentice hall szeliski rapid octree construction image sequences computer vision graphics image processing image understanding vol tsai versatile camera calibration technique high-accuracy machine vision metrology off-theshelf cameras lenses ieee trans robotics automation vol 

sit daa images images images images sit time periodic motiona time instantaneous perioda time period trace time periodic motion irregularity time instantaneous period irregularitya time period trace irregularitya period images values walk periods sit daa images images sit daa images images time images instantaneous periods turntable pereiod images images relative speed function time sit daa images images period images values rectified turntable periodsa sit images images sit images images time images cycle length images instantaneous period heart 
view mor steven seitz department comput wisco abstract prewarping images computing cross-dissolve prewarped imarping in-between image produced ing step performed automatically interactively controlled means ser-specified control points imques instance ate image interpolation view morphing view morphing wor morph image warp ages postw morph prewarp postwarping procedur small number age morphing techni compute intermedi image morphing techniques generate compelling transitions images differences object pose viewpoint unnatural distortions image morphs difficult correct manually basic principles projective geometry paper introduces simple extension image morphing correctly handles projective camera scene transformations technique called view morphing works prewarping images prior computing morph postwarping interpolated images knowledge shape required technique applied photographs drawings rendered scenes ability synthesize viewpoint image structure affords wide variety interesting effects simple image transformations categories subject descriptors computer graphics picture image generation viewing algorithms computer graphics three-dimensional graphics realism animation image processing enhancement geometric correction registration additional keywords morphing image metamorphosis view interpolation view synthesis image warping introduction recently great deal interest morphing techniques producing smooth transitions images techniques combine interpolations shape color create dramatic special effects part appeal morphing images produced strikingly lifelike visually convincing computed image transformations effective morphs suggest natural transformation objects world fact realistic shape transformations arise image morphs surprising extremely shape modeling avoided current techniques enable creation effective image transitions ensure resulting transitions natural user evaluate morph transiw dayton madison fseitz dyerg wisc web http wisc dyer vision html phing charles dyer sciences nsin madison virtual cameras morphed view figure view morphing images object viewpoints produces illusion physically moving virtual camera tion design interpolation achieve results part problem existing image morphing methods account viewpoint object pose result simple transformations translations rotations surprisingly difficult convey convincingly existing methods paper describe simple extension called view morphing current image morphing methods easily synthesize viewpoint effects morphing views object scene technique produces views scene ensuring realistic image transition effect physically moved object camera configurations images filmed transition shown fig generally approach synthesize projective transformations objects class including rotations translations shears tapering deformations operating images shape information required view morphing employs existing image morphing techniques intermediate step interpolate views objects combining image morphing capacity dramatic shape transformations view morphing ability achieve viewpoint result simultaneous interpolation shape color pose giving rise image transitions strikingly illustrate potentially severe distortions incurred imimage morphing image morphing metamorphosis popular class techniques producing transitions images variety morphing methods literature based interpolating positions colors pixels images present appears universal criterion evaluating quality realism morph morphing method natural question method preserve shape morph views object produce views object investigation special care morphing images similar shapes results shapes mathematically leading surprisingly complex unnatural image transitions observations motivate view morphing introduced section preserves shape interpolation age morphing interpolating views planar shape images related projective mapping form projective mappings preserved linear interpolation sum expressions general ratio quadratics projective mapping morphing shape-distorting transformation in-between images correspond views shape disturbing effect image morphing tendency bend straight lines yielding unintuitive image transitions fig shows dali-esque morph views clock appears bend half straighten figure shape-distorting morph linearly interpolating perspect effect in-between images dashed line shows linear pat indicative types distortions arise image morphi require knowledge shape allowing virtual manipulations unknown objects scenes drawings photographs terms ability achieve viewpoint view morphing related previous view-based techniques view synthesis mosaics paper focuses creating natural transitions images synthesizing arbitrary views object scene distinction number important consequences computing transition perspective views free choose natural camera path choosing path line connecting optical centers show formulation implementation greatly simplified approach general compute transitions images encompassing rigid nonrigid transformations contrast previous view-based techniques focused rigid scenes finally view morphing takes advantage existing image morphing techniques widespread part computation existing image morphing tools easily extended produce view morphs adding image prewarping postwarping steps paper remainder paper structured section review image morphing argue existing techniques produce unnatural results morphing images similar shapes section describes convert image morphing techniques view morphing techniques adding prewarping postwarping steps section extends method enable interpolations views arbitrary projective transformations object addition interactive techniques controlling image transformations introduced conclude examples section ive views clock left geometric bending feature transformation techniques write vectors matrices bold face scalars roman scene image quantities written capitals lowercase write image scene quantities letter images shapes scenes expressed point sets image point iis projection scene point morph determined images maps complete correspondence points images maps required correspondence one-to-one practice partially user provide sparse set matching features regions images remaining correspondences determined automatically interpolation warp function image computed correspondence maps based linear interpolation give displacement point function in-between images computed warping original images averaging pixel colors warped images existing morphing methods vary principally correspondence maps computed addition techniques finer control interpolation rates methods instance beier suggested methods interpolating line features linear interpolation endpoints eqs position angle paper term image morphing refers specifically methods linear interpolation compute feature positions in-between images including transition in-between shapes computed linearly interpolating points views correspond point clock view morphing previous section argued special care image interpolations convey rigid shape transformations image transformation shape-preserving images object produces image representing view object section describe interpolationbased image morphing procedure shape-preserving morphs generated technique create illusion object moves rigidly rotating translating positions images computing morph requires images representing views object scene respective projection matrices correspondence pixels images note priori knowledge shape information needed requirement projection matrices differentiates technique previous morphing methods exist variety techniques obtaining projection matrices images knowledge internal camera parameters positions small number image points overview types techniques consult section introduce variant require knowledge projection matrices interpolations views objects scenes pixel correspondences derived combination userinteraction automatic interpolation provided existing morphing techniques correspondence correct methods section guarantee shape-preserving morphs practice found approximate correspondence sufficient produce transitions visually convincing major errors correspondence result visible artifacts ghosting shape distortions examples effects shown section errors occur result visibility order completely infer appearance surface viewpoint surface visible visibility result folds holes asdiscussed section convention represent image scene quantities homogeneous coordinates scene point euclidean coordinates expressed column vector bxyz euclidean image point bxy reserve notation points expressed euclidean coordinates coordinate scalar multiples points 
written tilde camera represented homogeneous projection matrix form bhjn hcn vector euclidean position camera optical center matrixhspecifies position orientation image plane respect world coordinate system perspective projection equation term view henceforth refer tuple comprised image projection matrix parallel views begin situations linear interpolation images shape-preserving suppose photograph object move object direction parallel image plane camera zoom picture shown figure morphing parallel views linear interpolation pixels parallel views image planes creates image representing parallel view scene fig alternatively produce images moving camera object chen williams previously considered special case arguing linear image interpolation produce perspective views camera moves parallel image plane suppose camera moved world origin position focal length write respective projection matrices refer cameras views projection matrices form parallel cameras parallel views projections scene point bxyz linear interpolation yields image interpolation produces view projection matrix linear interpolation ofn andn representing camera center focal length interpolating images produced parallel cameras produces illusion simultaneously moving camera line optical centers zooming continuously image interpolation produces views object shape-preserving fact derivation relies equality rows views satisfying general criterion represent broader class parallel views linear image interpolation shape preserving interesting special case class orthographic projections projections row linear interpolation orthographic views scene produces orthographic view scene non-parallel views section describe generate sequence in-between views non-parallel perspective images object scene convenience choose model transformation change viewpoint opposed rotation translation object scene tools image reprojection linear interpolation performed efficient scanline methods image reprojection views share optical center related planar projective transformation images projection matrices bhj hcn hcn projections iand scene point related transformation matrix projective transformation reprojects image plane generally invertible matrix represents planar projective transformation one-to-one map plane transforms points points lines lines operation reprojection powerful gaze direction modified photograph scene rendered projective transforms compute reprojections takes advantage efficient scanline algorithm reprojection performed texturemapping exploit current graphics hardware image reprojection previously number applications reprojection closely related techniques rectifying stereo views simplify shape reconstruction image mosaic techniques rely heavily reprojection methods project images planar cylindrical spherical manifold section describe reprojection improve image morphs step algorithm reprojection problem computing shape-preserving morph non-parallel perspective views reduced case treated section end perspective views projection matrices convenient choose world coordinate system lie world x-axis remaining axes chosen reduces distortion incurred image reprojection simple choice works practice choose axis direction cross product image plane normals figure view morphing steps original images prewarped form parallel views produced morphing interpolating prewarped images postwarped form perspective views line synthesized combination image reprojections interpolations depicted fig projection matrixn withc fixed sequence operations produces image view projection matrix prewarp apply projective transformsh andh producing prewarped images morph form linearly interpolating positions colors points image morphing technique approximates postwarp apply yielding image prewarping brings image planes alignment changing optical centers cameras morphing prewarped images moves optical center postwarping transforms image plane view desired position orientation notice prewarped images represent views projection matrices whereiis identity matrix due special form projection matrices property points images scanline interpolation computed scanline time warping resampling operations prewarping postwarping operations combined intermediate morph require multiple image resampling operations contribute noticeable blurring in-between images resampling effects reduced supersampling input images composing image transformations aggregate warp image approach compatible image morphing techniques employ inverse mapping beier neely method inverse postwarp morph prewarp directly concatenated single inverse map composing warps disadvantages figure singular views parallel configuration top camera optical center field view singular configuration bottom arises optical center camera field view camera prewarping change field view singular views reprojected form parallel views including loss scanline property ability off-the-shelf image morphing tools compute intermediate interpolation singular view configurations configurations views made parallel reprojection operations parallel cameras fig top optical center camera field view note reprojection change camera field view viewing direction pair views optical center camera field view made parallel prewarping fig bottom depicts apairofsingular views prewarping procedure fails singular configurations arise camera motion roughly parallel viewing direction condition detectable images appendix singular views problem prewarp morph postwarp composed single aggregate warp prewarped images explicitly constructed aggregate warps view morphing applied arbitrary pairs views including singular views visibility correct distortions image morphs manipulating projection equations model effects visibility image content standpoint morphing visibility result types conditions folds holes fold occurs in-between image visible surface prewarping images cropped exclude epipoles appendix occluded situation multiple pixels maptothe point causing ambiguity opposite case occluded surface suddenly visible rise hole region correspondence folds resolved z-buffer techniques provided depth information absence shape information point disparity disparity points parallel views defined difference x-coordinates parallel views point disparity inversely proportional depth z-buffer techniques directly applied inverse disparity substituted depth technique makes images parallel prior interpolation simple strategy suffices general interpolation computed scanline time z-buffering performed scanline level avoiding large memory requirements commonly z-buffering algorithms alternative method painter method z-buffering presented unlike folds holes eliminated image information chen williams suggested methods filling holes designated background color interpolation neighboring pixels additional images surface coverage neighborhood interpolation approach prevalent existing image morphing methods implicitly experiments producing morph producing shape-preserving morph images requires choosing sequence projection matricesn beginning ending sincec determined task reduces choosing continuous transformation image plane view ways transformation natural interpolate orientations image planes single axis rotation image plane normals denoted unit vectors theaxisd angle rotation cos alternatively orientations expressed quaternions interpolation computed spherical linear interpolation case camera parameters focal length aspect ratio interpolated separately projective transformations generalizing view technique previous section extended accommodate range shape deformations view morphing interpolate images projective transformations object generating images object projectively transformed advantage view morphing context salient features lines conics preserved transformation image contrast straightforward image morphing severe geometric distortions fig section projective transformation expressed homogeneous matrix transformation similarly projective transformation matrix class transformations encompasses rotations translations scales shears tapering deformations applying homogeneous scene point produces point thecorresponding point euclidean coordinates obtained dividing fourth component projective transformations notable absorbed camera transformation specifically rendering image scene transformed projective transformation ifthe projection matrix point scene appears positionp image tpn ifwedefinethe matrix combined transformation expressed single projection representing view projection matrix allowing arbitrary projections model shape induced projective transformations viewpoint problem interpolating images 
projective transformations unknown shape reduced form three-step algorithm section applied recall three-step algorithm requires camera viewpoints order morph faces require aprioriknowledge projective transformation relates knowledge difficult obtain describe modification doesn require knowing projection matrices suppose smoothly interpolate images objects related projective transformation suppose images pixel correspondences provided order ensure in-between images depict shape projectively transformed transformed represent parallel views explained section transformed images property points scanline image points projections scene point y-coordinates equal fact condition sufficient ensure views parallel made parallel finding pair projective transformations send points scanline approach determiningh andh image point correspondences appendix controlling morph fully determine view morph provided inbetween image matrix explicitly convenient provide indirectly establishing constraints in-between images simple powerful interactively paths image points entire morph transition control points represent positions point features endpoints lines bounding quadrilateral arbitrary image region fig illustrates process control points bounding quadrilateral region selected determining quadrilaterals control points interactively moved desired positions implicitly postwarp transformation determining entire image postwarps in-between images determined interpolating control points positions control points linear system equations solution yields curves traced control points manually edited finer control interpolation parameters image control points bears resemblance view synthesis work laveau faugeras pairs image points projection parameters case points represented projection image plane optical center original care ensure control points colinear image images approach control points inbetween image providing direct control image appearance view morphing prewarping prewarping effective morphs objects closely related projective transform objects considerably advisable leave prewarp automatic computation stable postwarp step omitted reduce image plane distortions natural morphs instance large change orientation results noticeable image contraction fig prewarping strictly images approximately orthographic noted section images telephoto lens fall category images objects variation depth small relative distance camera case images morphed directly yielding orthographic views prewarping step influence camera motion orthographic case controlled solely postwarping camera transformation determined introduce unnatural skews twists image plane due fact linear matrix interpolation preserve row orthogonality prewarping images ensures view plane undergoes single axis rotation details orthographic case results fig illustrates view morphing procedure applied images bus manually selected set line features images features automatically prewarp images achieve parallelism method appendix inspection prewarped images confirms features fact occupy scanlines implementation beier-neely field-morphing algorithm compute intermediate images based set features prewarp images resulting images postwarped selecting quadrilateral region delimited control points moving control points desired positions final positions control points image center fig computed automatically roughly calibrating images based focal lengths interpolating orientation images obtained settings control points shown fig images broad range projective effects achieved postwarping procedure instance rectangular shape bus skewed directions tapered depict shapes fig shows results interpolating human faces varying poses shows selected frames morph computed interpolating views person facing directions resulting animation depicts subject continuously turning head left subject ear visible original images appears ghosted intermediate frames due interpolation intensity values addition subject nose appears slightly distorted result similar visibility sequence shows morph views faces interpolating faces popular applications image morphing combine image morphing capacity dramatic facial interpolations view morphing ability achieve viewpoint result simultaneous interpolation facial structure color pose giving rise image transition conveying metamorphosis appears strikingly object bilateral symmetry view morphs computed single image fig depicts view morph image leonardo vinci mona lisa mirror reflection sides face torso perfectly symmetric morph conveys convincing facial rotation fig compares image morphing view morphing ray-traced images helicopter toy image morph computed linearly interpolating pixels original images change orientation original images caused in-between images contract addition bending effects fig present image morphing techniques preserve lines reduce bending effects line features present interesting side-effect large hole appears image morph stick propeller view morph eye-level constant transition view morphs produce holes result change visibility conclusions achieving realistic image transitions difficult existing image morphing techniques due lack information paper demonstrated accurately convey range transformations based simple powerful extension image morphing paradigm called view morphing addition viewpoint view morphing accommodates projective shape integrating capabilities afforded existing image morphing methods view morphing enables transitions images objects give strong sense metamorphosis knowledge shape required technique applied photographs drawings artificially rendered scenes methods controlling image transition automatic interpolation camera parameters interactive user-manipulation image control points based camera viewpoints view morphing relies exclusively image information sensitive visibility experiments morphs resulted visibility constant surfaces visible images visible effects occlusions minimized experimenting feature correspondences additional user input reduce ghosting effects paths image regions visible original images topic future work investigate ways extending view morphing handle extreme visibility enabling degree rotations depth acknowledgements authors paul heckbert providing image morphing code interpolate prewarped images paper original helicopter images fig rendered rayshade z-buffer output extension written mark maimone support national science foundation grant nos iri cda gratefully acknowledged beier neely feature-based image metamorphosis proc siggraph computer graphics chen quicktime image-based approach virtual environment navigation proc siggraph computer graphics chen williams view interpolation image synthesis proc siggraph computer graphics faugeras three-dimensional computer vision geometric viewpoint mit press cambridge hartley defence -point algorithm proc intl conference computer vision kumar anandan irani bergen hanna representation scenes collections images proc ieee workshop representations visual scenes lav faugeras scene representation collection images proc international conference pattern recognition lee chwa shin wolberg image metamorphosis snakes free-form deformations proc siggraph computer graphics luong faugeras fundamental matrix theory algorithms stability analysis intl journal computer vision mcmillan bishop plenoptic modeling proc siggraph computer graphics poggio beymer learning networks face analysis synthesis proc intl workshop automatic faceand gesture-recognition zurich seitz dyer physically-valid view synthesis image interpolation proc ieee workshop representations visual scenes shoemake animating rotation quaternion curves proc siggraph computer graphics szeliski video mosaics virtual environments ieee computer graphics applications wolberg digital image warping ieee computer society press los alamitos appendix appendix describes automatically compute image prewarping transformsh andh images assume positions points image fundamental matrix views defined rank-two matrix pair image points fis defined scale factor computed points linear non-linear methods sufficient condition views parallel fundamental matrix form figure facial view morphs top morph views person bottom morph views people case view morphing captures change facial pose original images conveying natural rotation figure view morphing procedure set features yellow lines selected 
original images features images automatically prewarped produce prewarped images morphed create sequence in-between images middle shown top-center interactively postwarped selecting quadrilateral region marked red desired configuration ini postwarps in-between images determined interpolating quadrilaterals bottom figur cont morph image morphing versus view morphing top image morph views helicopter toy in-between images ract bend bottom view morph views results physically consistent morph image results extraneous hole blade stick holes view morphs figure mona lisa view morph morphed view center halfway original image left reflection figure postwarping deformations obtained settings control quadrilateral images fundamental matrix prewarped made parallel choosing projective transforms herewe describe method applies rotation depth make images planes parallel affine transformation align scanlines procedure determined choosing arbitrary axis rotation bxyzn axis determined compute angles depth rotation epipoles vanishing points unit eigenvectors eigenvalues view epipole represents projection optical center view procedure work provided views singular epipoles image borders field view angles rotation depth tan denote matrix rotation angle axis applying makes image planes parallel technically sufficient prewarping add additional affine warp align scanlines simplifies morph step scanline interpolation avoids bottleneck problems arise result image plane rotations step rotate images epipolar lines horizontal epipoles angles rotation tan applying image plane rotations fundamental matrix form matrix denotes image plane axis rotation angle finally finto form image translated vertically scaled matrix summary prewarping transforms entire procedure determined selecting suitable choice select orthogonal 
image-based scene representation view morphing steven seitz charles dyer seitz wisc dyer wisc department computer sciences wisconsin madison proc intl conf pattern recognition vienna abstract question views inferred set basis images addressed conditions discrete set images implicitly describes scene appearance continuous range viewpoints demonstrated basis views static scene determine set views line optical centers additional basis views extend range predictable views twoor three-dimensional region viewspace results shown apply perspective projection subject generic visibility constraint called monotonicity addition simple scanline algorithm presented generating views set basis images technique called view morphing applied calibrated uncalibrated images minimum basis views fundamental matrix needed experimental results presented real images work theoretical foundation image-based representations scenes demonstrating perspective view synthesis theoretically well-posed problem introduction image-based representations scenes developed researchers computer vision computer graphics communities representations encode scene appearance set images adaptively combined produce views scene image-based techniques attractive provide photometric information proven valuable recognition tasks addition representations readily acquired set basis views avoiding automatic manual techniques acquiring object models heart area lies fundamental question extent scene appearance modeled sparse set images images provide scene appearance discrete set viewpoints clear howthe support national science foundation grant nos iriand cdais gratefully acknowledged complete coverage viewspace theoretically number view synthesis techniques developed recently extend range predictable views methods require solving ill-posed correspondence tasks suggesting view synthesis problem inherently ill-posed foundation work area feel answer questions perspective views static scene conditions views predicted views determined set basis images paper show specific range perspective views theoretically determined basis views generic visibility assumption called monotonicity result applies relative camera configurations fundamental matrix addition present simple technique generating range views image interpolation importantly method relies measurable image information avoiding ill-posed correspondence problems processing occurs scanline level effectively reducing original synthesis problem set simple transformations implemented efficiently existing graphics workstations work presented extends perspective projection previous results orthographic case addition paper discusses extensions basis views important generalization considered begin introducing monotonicity constraint describing implications view synthesis section section considers views synthesized describes simple efficient method called view morphing synthesizing views interpolating images assumption relative geometry cameras section investigates case images uncalibrated camera geometry unknown section presents extensions basis views section presents results real images view synthesis monotonicity appearance viewpoints static three-dimensional scene predicted set basis views scene addressing question view synthesis two-step process reconstruct scene basis views stereo structure-from-motion methods reproject form view problem paradigm view synthesis difficult scene reconstruction conclusion unfortunate light fact reconstruction sparse images generally ambiguous number scenes consistent set images ill-posed problem suggests view synthesis ill-posed section present alternate paradigm view synthesis avoids reconstruction dense correspondence intermediate steps relying measurable quantities computable set basis images conditions reconstruction ill-posed describe conditions impede view synthesis ambiguity arises regions uniform intensity images uniform image regions provide shape correspondence information boundaries reconstruction regions additional assumptions note boundary information sufficient predict appearance regions views region interior assumed uniform argument hinges notion uniform regions preserved views constraint formalized condition monotonicity introduce views respective optical centers images denote line segment connecting optical centers point scene determines epipolar plane andc intersects images conjugate epipolar lines monotonicity constraint dictates visible scene points order conjugate epipolar lines constraint commonly stereo matching fixed relative ordering points epipolar lines simplifies correspondence problem usual definition respect epipolar lines images monotonicity constrains location optical centers respect points scene image planes chosen arbitrarily alternate definition isolates dependence shown fig scene pointspandqin epipolar plane determine angles optical centersc andc monotonicity constraint dictates points nonzero equal sign fact constraint made image planes primary importance view synthesis means monotonicity preserved homop figure monotonicity constraint points andqin epipolar plane determine angles respective camera optical centers monotonicity apply angles satisfy satisfied monotonicity applies view optical center graphies image reprojection fact essential section developing algorithm view synthesis consequence monotonicity extends cover continuous range views in-between view in-between optical center observe monotonicity violated exist scene points epipolar plane infinite line intersects butpq intersects intersects monotonicity applies in-between views signs angles preserved visible scene points order conjugate epipolar lines views refer range views centers monotonic range viewspace notice range lower bound range views monotonicity satisfied sense set instance fig monotonicity satisfied views open ray point camera centers aprioriknowledge geometry scene infer monotonicity satisfied range property monotonicity applies in-between views powerful sufficient completely predict appearance visible scene viewpoints projections set uniform lambertian surfaces surface uniform radiance surfaces radiances views fig shows cross sections ands surfaces projecting conjugate epipolar lines ccc figure correspondence monotonicity crosssectional view surfaces projecting conjugate epipolar lines images projected intervals provide information reconstruct ands sufficient predict appearance connected cross section projects uniform interval interval uniform intensity monotonicity constraint induces correspondence endpoints intervals determined relative ordering points projecting interval endpoints determined correspondence triangulation refer scene points visible endpoints ands in-between view image epipolar line consequence monotonicity ands project uniform intervals delimited projections visible endpoints notice intermediate image depend specific shapes surfaces scene positions visible endpoints number distinct scenes produced produce set intermediate images views determined result demonstrates view synthesis monotonicity inherently well-posed problem easier reconstruction related motion analysis tasks requiring smoothness conditions regularization techniques final question concerns measurability monotonicity monotonicity assumption established view synthesis feasible relies measurable image correspondence information considered monotonicity measurable determine images satisfy monotonicity inspecting images answer apriori strictly speaking monotonicity measurable sense images consistent multiple scenes satisfy monotonicity determine images consistent scene monotonicity applies checking epipolar line image monotonic warp conjugate image conjugate epipolar lines expressed functions mapping position intensity exists monotonic function denote class monotonic scenes consistent basis images consistency property determine basis images empty ifm nonempty result view synthesis set images consistent scene view morphing previous section established views determined basis views assumption monotonicity section present simple approach synthesizing views based image interpolation procedure takes input images respective projection matrices projection matrix representing configuration view result image representing visible scene appears viewpoint begin special case image planes parallel aligned configuration stereo applications referred parallel configuration situation expressed algebraically projection equations camera represented homogeneous matrix bhj optical center bycand image plane normal row ofh scene point expressed homogeneous coordinates bxyz image point bxy homogeneous structures invariant 
scalar multiplication represent point similarly reserve notationp points coordinate multiples points denoted perspective projection equation parallel configuration projection matrices chosen bij bij identity matrix loss generality assume world origin parallel world x-axis letp projections scene point bxyz views linear interpolation yields figure view morphing steps original images prewarped rectified parallel configuration produced interpolation prewarped images postwarped form image interpolation morphing produces view projection matrix linear interpolation optical center bsc parallel configuration parallel view synthesized simply interpolating points basis views words image interpolation induces interpolation viewpoint special camera geometry interpolate general views projection matrices apply homographies convert parallel configuration procedure identical rectification techniques stereo vision suggests three-step procedure view synthesis prewarp morph linearly interpolate positions intensities pixels form postwarp rectification providing epipoles respective image borders condition satisfied apply procedure prewarped images explicitly constructed prewarp morph postwarp transforms concatenated pair aggregate warps prewarp step implicitly requires selection epipolar plane reproject basis images plane chosen arbitrarily planes suitable due image sampling considerations methods choosing rectification parameters minimize image distortion uniform sampling discussed uncalibrated view morphing order view morphing algorithm presented section find rectify images knowing projection matrices end shown images parallel configuration fundamental matrix scalar multiplication seek pair homographies prewarped images fundamental matrix terms offthe condition specific solutions discussed established images rectified interpolated knowing projection matrices section interpolation prewarped images results views alongc contrast calibrated case postwarp step underspecified obvious choice homography transforms solution user provide homographydirectly indirectly specification small number image points method simply interpolate components resulting continuous transition methods choosing postwarp transforms generally result synthesis projective views projective view perspective view warped affine transformation views paper point focused image synthesis basis views extension views straightforward suppose instance basis views satisfy monotonicity pairwise satisfy monotonicity basis views permit synthesis triangular region viewspace delimited optical centers pair basis images determines views side triangle spanned byc andc interior views views optical centers interior triangle interior view synthesized interpolation corner side view triangle assumption monotonicity applies pairwise corner views sufficient infer monotonicity interior views closed triangle monotonicity transitive order predict interior views slightly stronger constraint needed strong monotonicity dictates pair scene points line intersect strong monotonicity direct generalization monotonicity strong monotonicity implies monotonicity satisfied pair views centered triangle viceversa strong monotonicity permits synthesis view suppose basis views optical centersc strong monotonicity applies triplet basis views preceding argument triplet basis views determines triangle views view convex hull determined comprised subset triangles interior views determined point interior choose corner line intersects point sincek lies convex hull represents optical center set views produced fewer interpolations lies views centered determined additional interpolation providing monotonicity satisfied establish condition observe monotonicity violated exist scene pointsp andqsuch thatpqintersectsc implying thatpqalso intersectsh pqintersects triangle violating assumption strong monotonicity conclusion basis views determine range viewspace contained convex hull optical centers constructive argument suggests arbitrarily large regions viewspace constructed adding basis views prediction range viewspace depends assumption pairs views space satisfy monotonicity monotonic range span single aspect aspect graph limiting range views predicted clear discrete set views implicitly describes scene appearance continuous range viewpoints based observation set basis views constitute scene representation describing scene appearance function viewpoint arbitrary set basis views range views represented found partitioning basis views sets obey monotonicity pairwise strong monotonicity time monotonic set determines range views contained convex hull fact strong monotonicity triangle convex hull sufficient experiments applied view morphing algorithm pairs basis images shown fig pair basis images uncalibrated case fundamental matrix computed manuallyspecified point correspondences synthesized images shown figure represent views halfway basis views pair images represent views person face part monotonicity satisfied region ear nose sides face sparse set user-specified feature correspondences determine correspondence map image morphing technique synthesized image represents view camera viewpoint halfway basis views image convincing impression subject turned head fact image operations performed visible artifacts occur regions monotonicity violated ear instance pair images show wooden mannequin viewpoints mannequin object difficult reconstruct easy synthesize views due lack texture image correspondences automatically determined dynamic programming technique exploits monotonicity monotonicity constraint obtaining reliable correspondences large baselines formidable challenge incorporating limited user interaction domain knowledge significantly improve results promising line future research previous artifacts occur monotonicity violated left foot left thigh synthesized view noticeably blurry basis views blurring fact evident synthesized views fig direct result image resampling implementation view morphing algorithm synthesized image product projective warps image interpolation resampled times causing noticeable blurring effect problem ameliorated super-sampling intermediate images concatenating multiple image transforms aggregate warps resampling conclusion paper considered question views static scene predicted set basis views perspective projection results shown monotonicity perspective views determine scene appearance set viewpoints line optical centers strong monotonicity volume viewspace determined convex hull optical centers basis views perspective views figure morphed views basis views face top mannequin bottom shown halfway interpolations basis views left morphed synthesized images center morphed images image transforms synthesize scene rotation synthesized rectifying pair images interpolating pixels scanline time process called view morphing fourth view synthesis views uncalibrated providing fundamental matrix uncalibrated case synthesized images represent projective views scene results provide theoretical foundation imagebased representations three-dimensional scenes demonstrating discrete set images implicitly models scene appearance potentially wide range viewpoints chen quicktime image-based approach virtual environment navigation proc siggraph pages chen williams view interpolation image synthesis proc siggraph pages kumar anandan irani bergen hanna representation scenes collections images proc ieee workshop representations visual scenes pages laveau faugeras scene representation collection images proc international conference pattern recognition pages mcmillan bishop plenoptic modeling proc siggraph pages ohta kanade stereo intraand inter-scanline search dynamic programming ieee trans pattern analysis machine intelligence poggio beymer learning networks face analysis synthesis proc intl workshop automatic faceand gesture-recognition pages zurich poggio torre koch computational vision regularization theory nature robert zeller faugeras ebert applications non-metric vision visually guided robotics tasks technical report inria sophia-antipolis france june seitz dyer physically-valid view synthesis image interpolation proc ieee workshop representations visual scenes pages seitz dyer scene appearance representation perspective view synthesis technical report cs-truniversity wisconsin madison seitz dyer view morphing proc siggraph wang adelson layered representation motion analysis proc computer vision pattern recognition pages 
interactive visualization earth space science computations william hibbard brian paul andre battaiola david santek marie-francoise voidrot-martinez charles dyer space science engineering center department computer sciences wisconsin-madison dayton madison inpe cptec sao jose dos campos sao paulo brazil service central exploitation meteorologie toulouse cedex france keywords visualization interactive techniques weather models remote sensing abstract describe techniques enable earth space scientists interactively visualize experiment computations numerical simulations earth atmosphere oceans generate large complex data sets visualize highly interactive virtual earth environment data compression distributed computing maximize size simulations explored user interface tuned environmental modelers broader class computations scientists developed general techniques integrating visualization environment developing executing algorithms key providing flexible data model lets users define data types algorithms providing display model lets users visualize data types placing substantial burden graphics knowledge introduction computers essential tools scientists simulating observing nature simulations formulated mathematical models implemented computer algorithms order simulate complex events observations analyzed understood terms mathematical models volume observations dictates analyses automated computer algorithms spite essential role computers barriers scientific understanding unlike hand calculations automated computations invisible enormous page numbers individual operations automated computations relation algorithm input output intuitive problem discussed report national science foundation illustrated behavior meteorologists responsible forecasting weather age computers meteorologists manually plot weather observations maps draw isolines temperature pressure fields hand special pads maps printed purpose similarly radiologists computers collect medical data notoriously reluctant apply image processing algorithms data scientists life death responsibilities computer algorithms black boxes increase reduce risk barrier scientists computations bridged techniques make internal workings algorithms visible scientists experiment computations describe interactive systems developed wisconsin-madison space science engineering center ssec providing capabilities earth space scientists visualizing numerical simulations earth environment numerical models earth atmosphere oceans form important class scientific algorithms history files produced models traces computations visd visualization -dimensional data sets system freely anonymous ftp running graphics workstations widely scientists interactively visualizing history files system takes fact model history files rectangles data organized arrays spatial grids arrays indexed time model field temperature pressure salinity components wind current velocity figure shows pipeline rendering data animations user interactive control data grids transformed graphical primitives consist vectors polygons large workstations efficient interactive volume rendering technique rendering graphical primitives creates virtual earth environment workstation screen users reach virtual environment page mouse move slices data grids place seed points wind trajectories rotate zoom view figure window virtual earth environment array icons left lets users select combinations fields rendering techniques control animation isolevels trajectories color maps modern workstations respond controls time animation step giving users sense interacting small virtual atmosphere ocean order users explore geometry fields explore effect relations fields rotate images change combinations fields displayed interrupting smooth animation model dynamics synchronize animation computation graphical primitives storing primitives intermediate tables indexed time field size model history file product numbers large data set spanning latitudes longitudes vertical levels time steps model fields million grid points order maximize data set size compress grid data derived graphics scaling linearly byte integers order preserve fidelity scaling factors horizontal slice grid compression store grid point derived graphics bytes virtual memory history files large workstations system splits graphics client workstation connected network data server supercomputer users derived quantities vorticity divergence air flow order understand physics simulation users write fortran functions deriving diagnostic fields invoke visualization session dynamically linked visd sockets order maximize data fidelity floating point grid values disk files compressed values calculations application experiences william gray colorado state proposed idea generating energy creating permanent rainstorm hydro-electric generator figures snapshot page numerical experiment idea performed gregory tripoli peter pokrandt wisconsin-madison uw-nms weather model visualized visd white object balloon kilometers high shape squat chimney floats air patch tropical ocean purpose numerical experiment verify air starts rising chimney motion self-sustaining create perpetual rainstorm vertical color slice shows distribution heat shows flow heat model dynamics animated yellow streamers show flow air chimney blue isosurface shows precipitated cloud ice cloud water isosurface obscure view chimney toggled snapshot simulation takes hours run largest computers virtual time visualization lock step model computations model output accumulates history file users free move simulated time searching problems found users trace root problems working back time comparing model fields michael mccann matthew koebbe naval postgraduate school retrieved visd ftp applied visualize ocean simulation shown figure view north region pacific ocean straddling equator including ocean-bottom topography volume rendering ocean current speed simon baas hans jong rijks universiteit leiden retrieved visd ftp modified source code visd run solely windows library graphics run wide class workstations enhanced work include option standard ftp distribution recently added support visd non-cartesian map projections vertical coordinate systems visd anonymous ftp iris ssec wisc pub vis directory readme file complete instructions retrieving installing software system includes source code documentation great interest data format standards starting adopted scientific page community found important element making system usable set data import utilities include template programs versions fortran users convert history files form software read users modify template programs read history file formats visualizing broader class computations visd effective visualizing simulations atmosphere oceans scientists design broader class algorithms require general visualization techniques developed vis-ad visualization algorithm development system meet visd runs post-process simulations vis-ad serves execution environment scientists algorithms supporting greater variety visual experiments algorithms visd assumes data organized fivedimensional rectangle order support broad class algorithms vis-ad enables scientists define data organizations algorithms visd system graphical space represents physical space vis-ad scientists define abstract graphical spaces vis-ad system combines data model includes complex data types defined terms tuples functional relations data model integrates forms metadata based conceptual model computer data objects finite approximations mathematical objects computational model based high level interpreted programming language supports distributed computing link user-written functions fortran display model based interactive animated voxel volumes technique enables scientists control data displayed placing substantial burden graphics knowledge graphical user interface highly interactive scientists integrated view data computation display system functions interactive debugger high-level data management visualization debugger prints values variables arrays users track page low-level program bugs vis-ad generates visualizations complex data objects scientists understand high-level behavior algorithms coupled graphical interface steering computations visualizations enable wide variety visual experiments 
algorithms scientists designing algorithms data model appears set rules designing data types algorithms scientists define scalar type primitive variable scalar types real variables time infrared radiance pairs triples real numbers lat lon pair real numbers latitude longitude earth location integers count frequency count histogram text strings satellite define data type tuple values types structure programming language define array type finite sampling functional relation type domain function scalar type type range function complex type array data object finite set objects range type indexed values domain type arrays tuples combined hierarchies build complex data types lefthand column figure shows rules applied define data types cloud discrimination algorithm data object sequence type time sequence satellite images partitioned set rectangular regions image region array pixels indexed lat lon values latitudes longitudes pixels earth locations pixel tuple vis visible infrared radiances variance texture values computed algorithm radiances data object histogram partition type array histograms computed algorithm image region frequency counts radiances pixels region calculation histograms important step cloud discrimination algorithm displays histograms tracking problems algorithm page center column figure shows users control displays complex data objects mapping scalar types components voxel-based display model diagrammed right-hand column figure users define mappings scalar types coordinates voxels display colors voxels animation step number complex data types ultimately defined terms scalar types system derive depictions complex data types mappings defined scalar components figure shows data object type sequence displayed frames top window shows data object displayed colored terrain defined examples scalar mappings center column figure top left window red vis blue-green radiances mapped color bottom window mapped selector pixels radiances fall selected range visible time mapped vertical axis producing stack images bottom left window vis variance mapped axes texture mapped color lat lon mapped producing colored scatter diagram displays highly interactive rotated zoomed mouse animated scalars mapped animation mapping scalars color interactively adjusted color-map icon figure contents images changed slider icons examples figure scalars mapped selector voxel-based display model fits naturally volume rendering techniques graphics speeds improve display model extended include transparency reflectivity values voxel add vector values voxel order provide model flow-rendering techniques figure illustrates system user interface application simple bubble sort algorithm window left edit text sort program program written interpreted language similar syntax user-defined data types part language scientists programs call functions written fortran possibly running remotely network users start stop programs set breakpoints page clicking program lines execute single steps connect program values graphical icons interactively steering computations dark horizontal bar program window current line execution short dark strings names data objects selected display data objects selected clicking names depictions window scalar mappings define display frame edited small text window top screen data displayed frames simultaneously examples figures data sorted figure array temperatures indexed time mapped time horizontal axis temperature vertical axis array displayed graph set white points temperature versus time bubble sort algorithm organized nested loops index outer loop type time displayed small green sphere lower horizontal axis note white points green sphere sorted index loop type time displayed small red sphere marks horizontal position current maximum bubbling array small blue sphere left hand vertical axis depicts object type temperature temporary variable swapping array values integrating metadata data model mathematical models define infinite precision real numbers functions infinite domains computer data objects finite amounts information approximations mathematical objects represent forms scientific metadata serve computer data objects approximate mathematical objects integrated data model missing data codes fallible sensor systems viewed approximations carry information sub-object vis-ad data object set missing scientists arrays finite samplings continuous functions satellite image arrays finite samplings continuous radiance fields sampling metadata assign earth locations page pixels assign real radiances coded -bit pixel values quantify arrays approximate functions integrated vis-ad array data objects integration metadata data model practical consequences semantics computation display define data type image array radiances indexed lat lon values arrays data type indexed pairs real numbers integers west data object type image loc data object type lat lon expression west loc evaluated picking sample west nearest loc loc falls region earth covered west pixels west loc evaluates missing east data object type image generated satellite earth perspective expression west east evaluated resampling east samples west warping east image subtracting radiances earth regions west east images overlap difference set missing values metadata map projections missing data contribute semantics computations metadata similarly contribute display semantics east west selected display system sampling indices co-register images common earth frame samplings array indices cartesian sampling lat lon define virtually map projection data displayed non-cartesian coordinate systems visualizing analyses satellite observations pair satellites located east west stations generate image seconds nasa earth observing system planned generate images data volumes large understood direct visualization proper role visualization satellite observations helping scientists develop algorithms automating analysis robert rabin national severe storms laboratory working wisconsin-madison developed algorithms analyzing cumulus clouds satellite page images algorithms discriminate pixels part cumulus clouds calculate seasonal percentage cumulus cloud cover function time day location results computation called cloud census designed census image data type array pixels indexed lat lon pixel tuple cumulus percent topography elevation earth surface sea level cloud census stored object census sequence type defined array census image data objects indexed time figure census sequence data object displayed frame defined mapping lat lon plane mapping topography axis mapping cumulus percent color mapping time animation note lake michigan upper corner image color map icon upper left corner figure shows chosen purple low cumulus percentages blue higher percentages display shows clear correlation cumulus percentage topography animated shows cumulus clouds develop day helping rabin understand cumulus clouds form ignorance mechanics cloud formation major uncertainty efforts predict climatic consequences increase greenhouse gases understanding important long term consequences visualizing analyses astrophysical observations flexibility data display models vis-ad limited image processing applications figures generated algorithm processing observations astrophysics mission diffuse x-ray spectrometer flew space shuttle january recorded million events potentially observation x-ray emanating interstellar gas recorded events spurious wilton sanders richard edgar wisconsin-madison needed develop algorithm discriminating valid events algorithm defined xray event data type tuple scalars event time wavelength longitude pulse height position bin goodness fit 
occulted flag fields defined data type event list array xray event tuples indexed event number figure shows data page object event list type displayed frame defined mapping longitude wavelength time axes mapping pulse height color mapping position bin goodness fit selector figure x-ray event displayed colored dot slider icons upper corner select ranges values position bin goodness fit events field values fall selected ranges displayed easy experiment event selection criteria order ferret mechanisms produced spurious events defined frames correlations sets event fields displayed distribution events functions fields histograms fact change display mappings scalars easily rotate images key successfully understanding sources spurious events visualizing computations education figure generated simple simulation cell atmosphere dynamics cell atmosphere governed system differential equations developed lorenz order study turbulence roland stull chose simulation atmospheric turbulence wisconsin-madison window shows wind streamlines isolines stream function temperatures warm air red cool air blue cell atmosphere lower left window shows solution lorenz equations path three-dimensional phase space revealing lobes familiar lorenz attractor upper left window shows path phase space dimensions versus time illustrating apparently random chaotic temporal distribution alternations phase space lobes state atmosphere window corresponds single blue point overlaid red phase space path lower left window simulation algorithm runs displays changing data objects animate relation changing atmosphere blue point moving phase space path showing lobes lorenz attractor phase space correspond clockwise counterclockwise rotation cell atmosphere page comparisons techniques data flow technique represented avs iris explorer data explorer users flexibility design rendering pipelines networks basic modules recognize approach designed visd fixed rendering pipeline diagrammed figure felt meet atmosphere ocean modelers design module network fact visd denies choices users shading model parameters colors locations light sources order user interface simple interprets arrays finite samplings functional relations vis-ad data model similar data models data explorer superglue based fiber bundles data models based fiber bundles support complex hierarchies tuples functional relations vis-ad data model vis-ad scalar mappings define display functions applied data type similar polymorphic display functions defined object oriented systems superglue visage users object oriented systems define display functions programming language users vis-ad define display functions sets scalar mappings data flow systems define user interface controlling data display based abstraction rendering pipeline vis-ad system defines user interface controlling data display based abstraction mappings scalars display scalars conclusions interactive visualization techniques making difference work scientists means make effort exploited special assumptions data organization make easy scientists apply visd data result system widely atmosphere ocean modelers scientists don fit special assumptions visd developed vis-ad system generalizing concepts visd flexibility system confronts users complex choices organized choices page consistent framework data display computational models vis-ad demonstrated utility scientists working developers complete documentation line functions make ftp confident wide community scientists acknowledgments work supported nasa grant nag national science foundation defense advanced research projects agency cooperative agreement ncrwith corporation national research initiatives mccormick defanti brown visualization scientific computing computer graphics hibbard santek visd system easy interactive visualization visualization san francisco ieee hibbard santek interactivity key chapel hill workshop volume visualization north carolina chapel hill hibbard santek tripoli interactive atmospheric data access high speed networks computer networks isdn systems hibbard dyer paul display scientific data structures algorithm visualization proceedings visualization boston ieee kaufman cohen yagel volume graphics computer rabin stadler wetzel stensrud gregory observed effects landscape variability convective clouds bull amer meteor soc sanders edgar juda kraushaar mccammon snowden zhang skinner jahoda kelley smalle stahle szymkowiak preliminary results diffuse x-ray spectrometer euv x-ray gammaray instrumentation astronomy spie vol lorenz mechanics vacillation atmos sci page 
lattice model data display william hibbard charles dyer brian paul space science engineering center computer sciences department wisconsin madison abstract address formal foundation visualization taking analytic approach defining arbitrary function produce displays effectively communicate information content data objects seek define conditions ensure require injective one-to-one data objects display set images pixels bits color pixel permutation interpreted injective function arbitrary permutation images effectively communicate information define stronger conditions function investigation depends complex mathematics present conclusions paper details order develop foundation visualization develop lattice models data objects displays focus fact data objects approximations mathematical objects real displays approximations ideal displays lattice models give quantize information content data displays define conditions visualization mappings data displays mappings satisfy conditions lattice isomorphisms show apply result scientific data display models discuss applied recursively defined data types complex information processing introduction lattices data display modelsrobertson formal models serve foundation visualization techniques systems models developed data fiber bundle data model describes data objects computational scientists approximate functions differentiable manifolds displays bertin detailed analysis static displays users tasks capabilities computations computations expressed executed hardware devices capabilities purpose data visualization communicate information content data objects displays quantify information content data objects displays give define conditions visualization function issue information content addressed study programming language semantics seeks assign meanings programs issue arises algorithmic separate non-terminating programs terminating programs set meanings programs include undefined non-terminating programs information precise values program produce terminates introduces order relation based information content set program meanings order define correspondence ways programs constructed sets meanings programs scott focus process transforming data displays define data model set data objects display model set displays visualization process function usual approach visualization synthetic constructing function simpler functions function synthesized rendering pipelines defining pipelines types data objects object oriented programming synthesize polymorphic function applies multiple data types developed elegant lattice theory meanings programs objects real displays restricted countable subsets scientists data undefined values sources numerical problems failures observing instruments non-terminating computations undefined pixels satellite images information valid pixel radiances creates order relation data values data accompanied metadata describe accuracy error bars accuracy estimates create order relations data values based information content precision finally array data objects approximations functions satellite image finite approximation finite sampling space radiance continuous radiance field arrays ordered based resolution sample functions conditions visualization functions lattice structures provide quantize information content define conditions functions form order define conditions draw work mackinlay studied problem automatically generating displays relational information defined expressiveness conditions mapping relational data displays conditions display expresses set facts instance set relations display encodes facts set encodes facts order interpret expressiveness conditions define fact data objects logical predicate applied function form false true data objects approximations mathematical objects avoid predicates providing precise information mathematical object truth predicate true false predicates values undefined false true undefined false undefined true require predicates preserve information ordering functions preserve order called monotone observe predicate form undefined false true expressed terms predicates form undefined true limit facts data objects monotone predicates form undefined true general scientists computer data objects finite approximations objects mathematical models infinite precision numbers functions infinite ranges metadata missing data indicators numerical accuracy function sampling central meaning scientific data play important role data model define data model lattice data objects ordered precisely approximate mathematical objects lattice means partial order binary relation pair upper bound denoted greatest lower bound denoted notion precision approximation applies displays finite resolutions space color time animation images volume renderings composed finite numbers pixels voxels finite approximations idealized mathematical displays assume display model lattice displays ordered information content precision approximation ideal displays sections present examples scientific data display lattices part expressiveness conditions fact data objects encoded fact displays interpret condition monotone predicate undefined true monotone predicate undefined true assume complete lattices mathematical objects ideal displays limits sets data objects real displays lattice complete subset upper bound greatest lower bound study functions rational numbers context functions real numbers completion rational numbers study visualization functions complete lattices recognizing data requires injective part expressiveness conditions fact displays encodes fact data objects interpret condition monotone predicate undefined true monotone predicate undefined true denote element lattice includes closed real intervals interpret closed real interval approximation actual lies lattice structure intervals ordered inverse set containment smaller interval precise information interval figure illustrates order relation continuous scalar type actual implementation include countable number closed real intervals set rational intervals requires function bijective one-to-one strong require data model realize display complete lattice maximal data object upper bound members display notation represents complete lattice displays modify condition condition monotone predicate undefined true monotone predicate undefined true figure order relations values continuous scalar conditions quantify relation theinformation content data objects information content displays define class functions define discrete scalars represent integerand string variables year frequency count satellite discrete includes countable set incomparable values integer precise integer figure illustrates order relation discrete scalar type definition function display function satisfies conditions prove result display functions proposition function display function lattice isomorphism figure order relations values discrete scalar result applied complete lattice models data displays sections explore consequences setting complex data types constructed scalar data types arrays tuples array data type represents function mathematical variables function time temperature approximated data objects type array time temperature time domain type array temperature range type values array type sets -tuples domain range pairs set array data object samples function time temperature domain sample lies interval pair range lies interval pair illustrated figure adding samples increasing precision scientific data model develop scientific data model integrates metadata missing data indicators numerical accuracy function sampling develop data model terms set data types starting scalar types represent primitive variables mathematical models scalar type denote set values data object type define continuous scalars represent real variables time temperature latitude continuous includes undefined denote symbol samples create precise approximation function figure illustrates order relation array data type domain array scalar type range scalar complex type definition include array domain type defined disjoint sets scalars tuple data object equal tuple data object element equal element illustrated figure figure array samples real function set pairs intervals figure order relations tuples empty set 
data model applied application defining finite set scalar types represent primitive variables application defining set types constructed arrays tuples scalar types type define countable set data objects type correspond data objects realized implementation order apply lattice theory data model define single lattice embed define cross product sets scalars members tuples scalar ordered illustrated figure define power set set subsets power sets studied semantics parallel languages problem constructing order relations power sets expect order relation consistent order relation consistent set containment expect define order relation subsets figure order relations arrays tuple data types represent tuples mathematical objects -tuple values temperature pressure represented data objects type struct temperature pressure data objects type -tuples temp pres temp itemperature pres ipressure temperature pressure element types tuple elements tuple type complex types implies true contradicts problem resolved restricting lattice sets tuples tuple maximal set set belongs lattice true pair members ordered illustrated fig form complete lattice details time temperature data object type consists set pairs time temp array data object embedded set tuples form time temp figure illustrates embedding basic ideas presented figs combined embed complex data types defined hierarchies tuples arrays data lattices details empty set scientific display model scientific display model start bertin analysis static displays modeled displays sets graphical marks mark -tuple graphical primitive values screen coordinates size texture color orientation shape idea display set tuple values similar constructed data lattice define finite set display scalars represent graphical primitives define cross product sets display scalars define complete lattice subsets tuple maximal figure order relations members data lattice defined scalars temp pres temp pres object tuple type set tuple time figure embedding tuple type lattice set animation steps time red green blue red green blue tuple display scalar values graphical mark location size mark volume interval mark persists animation ranges values mark color components time temp time temp time temp timen tempn time temp time temp timen tempn time temp array temperature values indexed time values set tuples pressure values figure embedding array type lattice data objects embedded data lattice defined scalars time temperature pressure objects lattice sets tuple form time temperature pressure define tuple data type struct temperature pressure data object type tuple form temp pres mapped set tuples set consisting tuple form temp pres embeds tuple data type lattice illustrated figure figure roles display scalars animated display model define specific lattice model animated displays terms set continuous display scalars red green blue time tuple values display scalars represents graphical mark interval values represent similarly embed array data types data lattice array data type array locations sizes graphical marks volume interval values red green blue represent ranges colors marks interval values time represent place duration persistence marks animation sequence illustrated figure display set tuples representing set graphical marks designing displays assumption consequence fundamental set expressiveness conditions figure examples mappings scalars display scalars lat lon real scalar section red green blue type image sequence array time array lat lon structure vis display scalars defined wide variety attributes graphical marks limited simple values discrete display scalar index set complex shapes icons scalar mapping functions proposition function form satisfies expressiveness conditions display function lattice isomorphism sublattice apply scientific data display lattices section scalar display scalar types play special role characterizing display functions context scientific models scalar type define set embeddings objects type consists sets tuples form notation components tuple component similarly display scalar type define set embeddings objects type prove result figure mappings scalars display scalars present precise definition details complex scalar mapping functions show display function scalar mapping function describe behavior display functions continuous scalars continuous scalar mapd maps interpreted pair functions denotes real numbers member define functions functions defined terms proposition display function define mapping mapd power power set scalars mapd values determined values scalar embeddings min max discrete mapd discrete functions satisfy conditions illustrated figure continuous mapd single continuous display scalar complete lattices include members infinite numbers tuples mathematical objects ideal displays prove mapd mapd tells display functions map scalars represent primitive variables time temperature display scalars represent graphical primitives screen axes color components displays designed time series temperatures displayed mapping time axis temperature remarkable thing proposition tells don proposition display function data type embedding data object finite number tuples finite number tuples upper bound lower bound interval continuous scalar abovesh andsh continuous increasing decreasing interval continuous display determine andsh mapping scalar marks real display scalar vector interpreted flow rendering techniques vis-ad anonymous ftp iris ssec wisc pub visad directory readme file complete installation instructions recursively defined data types data model section adequate scientific data inadequate complex information processing involves recursively defined data types binary trees defined type bintree struct bintree bintree leaf node bintree elements tuple undefined techniques developed model data lattices current context promising called universal domains embedded data objects types domain section data objects recursively defined data types embedded universal domain denote embeddings defined order study programming language semantics problem visualization context data objects types mapped member integer function integers integers mapped member display function form generate display data objects order extend lattice theory visualization recursively defined data types embeddings universal domains developed figure behavior display function continuous scalar interpreted terms behavior functions implementation data display models sections scalar mapping functions section implemented vis-ad system system intended scientists experiment algorithms steer computations includes programming language users define scalar complex data types express scientific algorithms scalars language classified real continuous integer discrete string discrete real real real real scalars analog data model presented section domains arrays non-cartesian sampling dimensions users control data displayed defining set mappings scalar types declare programs display scalar types defining set mappings user defines display function applied display data objects type suitable display lattice developed exist lattice isomorphisms universal domain displays involving diagrams hypertext links analogous pointers implement recursively defined data types interpretation set actual displays involve graphical techniques large class recursively defined data types embedded isomorphic graphical techniques applied abstract manner define suitable lattice vis-ad display model includes display scalars animated displays section includes display scalars named contour selector multiple copies exist display lattice numbers 
copies determined user mappings scalars mapped contour depicted drawing isolevel curves surfaces field defined contour values graphical marks selector display scalar user selects set values graphical marks selector values overlap set displayed contour real display scalar selector display scalars type scalar mapped plan add real display scalars transparency reflectivity system interpreted complex volume rendering graphical conclusions easy metadata secondary focused task making visualizations data central meaning scientific data approximations mathematical objects lattices provide integrate metadata precision approximation data model bringing approximate nature data displays central focus lattices provide foundation understanding visualization process analytic approach defining mapping data displays proposition confirms standard practice designing displays remarkable practice deduced expressiveness conditions nadas fournier grape environment build display processes computer graphics potmesil hoffert frames software tools modeling animation rendering scenes computer graphics robertson earnshaw thalman grave gallup jong research issues foundations visualization computer graphics applications derived rendering techniques lattices high level abstraction scalar mapping functions provide flexible user interface controlling data displayed schmidt denotational semantics brown schroeder lorenson montanaro volpe visage object-oriented scientific visualization system proc visualization considerable technical difficulties extending work recursively defined data types confident results interesting scott lattice flow diagrams symposium semantics algorithmic languages engler springer-verlag acknowledgments scott data types lattices siam comput work support nasa grant nag national science foundation defense advanced research projects agency cooperative agreement ncrwith corporation national research initiatives treinish siggraph workshop report data structure access software scientific visualization computer graphics bertin semiology graphics berg wisconsin press davey priestly introduction lattices order cambridge press gunter scott semantic domains handbook theoretical computer science vol van leeuwen mit press elsevier haber lucas collins data model scientific visualization provisions regular irregular grids proc visualization ieee haberli conman visual programming language interactive graphics computer graphics hibbard dyer paul display scientific data structures algorithm visualization visualization boston ieee hibbard dyer lattice theory data display tech rep computer sciences department wisconsin-madison compressed postscript files anonymous ftp iris ssec wisc pub lattice directory hibbard paul santek dyer battaiola m-f voidrot-martinez interactive visualization earth space science computations ieee computer special july issue visualization hultquist raible superglue programming environment scientific visualization proc visualization mackinlay automating design graphical presentations relational information acm transactions graphics 
proc cvpr global surface reconstruction purposive viewpoint adjustment kiriakos kutulakos kyros wisc charles dyer dyer wisc computer sciences department wisconsin madison wisconsin usa abstract problem observer change viewpoint order generate dense image sequence arbitrary smooth surface incrementally reconstructedusing occluding contour epipolar parameterization present collection qualitative behaviors integrated appropriately purposefully control viewpoint based appearance surface order provably solve problem introduction qualitative real-time behaviors important performing global geometric tasks searching specific surface markings bar code grocery store item building global model object recognizing object general approach tasks requires ability purposefully control point observation based appearance object paper combine shape-from-motion paradigm purposive vision paradigm develop collection viewpoint control behaviors deriving global threedimensional description arbitrary object behaviors describe address problem motion observer controlled order generate dense sequence images global reconstruction surface occluding contour epipolar parameterization behaviors developed context increasingly general reconstruction tasks local reconstruction task observer control viewpoint reconstruct patch selected surface point incremental reconstruction task observer control viewpoint iteratively grow reconstructed region surface global reconstruction task entire reconstructible region surface reconstructed tasks require multiple viewpoint control behaviors appropriately integrated previous work shape-from-motion considered tasks assuming observer motion independent scene describe collection support national science foundation grant iriis greatfully acknowledged behaviors provably perform tasks generic algebraic smooth surface arbitrary shape surface unknown non-convex self-occlude show behaviors perform global reconstruction task local reconstruction purposive motion approach global incremental reconstruction performed integrating collection qualitative viewpoint control behaviors performs instance local reconstruction task suppose observer position visible rim point surface identified projection occluding contour observer task continuously control viewpoint starting order recover shape surface points neighborhood epipolar parameterization collection basic behaviors provably perform task incremental surface reconstruction achieved appropriately combining section visible rim one-dimensional set visible points surface tangent plane line connecting points observer viewpoint occluding contour projection visible rim image epipolar parameterization captures idea continuous motion observer topology occluding contour change set points comprising visible rim consists smooth curves slide surface reconstructible points surface non-concave surface points lie visible rim considered collection patches family visible rim curves approach based observations endpoint visible rim curve visible rim topology change neighborhood observer viewpoint infinitesimally perturbed observer motion controlled exists neighborhood surface epipolar parameterization endpoint visible rim curve epipolar parameterization describe surface neighborhood viewpoints tangent plane endpoint visible rim curve observer viewpoint occluding contour topology neighborhood infinitesimal viewpoint perturbation points lying collection special sets curves generic surfaces observer move viewpoints tangent plane contour topology change neighborhood viewpoints infinitesimally perturbed special sets achieved bound reconstructible surface regions based observations viewpoint distinguish types visible rim points instances local reconstruction task ordinary points endpoints visible rim curve cusp points visible rim endpoints projecting cusp occluding contour t-junction points visible rim endpoints projecting t-junction occluding contour degenerate points occluding contour topology vicinity projection infinitesimally perturbed basic behavior performing local reconstruction task controls motion observer order deal case ordinary visible rim point cases treated controlling position observer order reach viewpoint ordinary visible rim point applying basic step order recover shape surface neighborhood point present behaviors interested reader referred reconstruction ordinary points suppose observer viewpoint tracing smooth curve instantaneous direction motion segment visible rim viewpoint epipolar parameterization define segment visible rim corresponds theorem immediately suggests simple qualitative behavior controlling motion observer solve local shape recovery problem selected ordinary visible rim point theorem visible rim segment points satisfy points occluded position ordinary patch reconstruction behavior step select point visible rim endpoint visible rim curve indirectly selecting projection occluding contour pointa endpoint occluding contour curve step compute surface normal tangent occluding contour step reconstructing occluded points neara select motion direction satisfying change viewpoints continuously monitoring deformation occluding contour curve initially step reconstructing visible points move back initial viewpoint reapply step selecting direction motion satisfying reconstruction cusp points projection point occluding contour curve theorem characterizes special directions changing observer viewpoint force ordinary leads qualitative behavior controlling viewpoint reconstruct surface cusp points theorem projection cusp point visible rim observer performs infinitesimal viewpoint change direction tangent plane ordinary visible rim point viewpoint cusp patch reconstruction behavior step compute tangent occluding contour selected occluding contour cusp endpoint step compute normal surface visible rim point step determine clockwise counterclockwise direction motion tangent plane satisfies inequality step perform small viewpoint change direction selected step fixating step ordinary patch reconstruction behavior control viewpoint reconstructing surface patch incremental reconstruction behavior surface incrementally reconstructed integrating behaviors local reconstruction task step exists portion surface reconstructed select point boundary viewpoint projected occluding contour step move viewpoint control behavior performing local reconstruction task continue step ballard brown principles animate vision cvgip image understanding aloimonos purposive qualitative active vision proc icpr cipolla blake surface shape deformation apparent contours ijcv kutulakos dyer global surface reconstruction purposive viewpoint adjustment dept wisconsin madison april ftp ftp wisc 
proc int conf robotics automation vision-guided exploration step general motion planning dimensions kiriakos kutulakos kyros wisc vladimir lumelsky lumelsky engr wisc charles dyer dyer wisc computer sciences department wisconsin madison wisconsin usa abstract present approach solving path planning problem mobile robot operating unknown dimensional environment obstacles arbitrary shape main contributions paper analysis type sensing information sufficient solving path planning problem environments development framework designing provablycorrect algorithm solve problem working principles assumptions environment robot sensing capabilities analysis shows ability explore obstacle surfaces make points visible intrinsically linked ability plan motion robot argue current approaches path planning problem incomplete information simply extend general three-dimensional case qualitatively algorithms needed introduction goal work development strategies real-time purposeful robust provably-correct automatic motion planning unknown environments threedimensional reasoning visual sensing type reasoning mobile robot control position purpose reaching desired location learning shape unknown object producing map three-dimensional environment simply surveying paper path planning find-path problem problem fundamental task moving complex environment assume environment three-dimensional space obstacles finite volumes bounded closed surfaces arbitrary shape assume robot point equipped sensors camera range sensor goal plan collision-free path initial target location path report path exist support national science foundation grant nos iriand ddmis greatfully acknowledged crucial issue motion planning type information robot recover environment sensors motivated early artificial intelligence approaches problem-solving planning large body research robotics considered approaches called act-after-thinking strategy approaches emphasized mutual independence sensing action generated interest solutions motion planning problems complete information time robot action decision making piano movers problem subsequently formulated order solve path planning problem cases environment robot accurately difficulties involved recovering complete information environment priori unstructured cluttered terrains undersea space environments motivated alternative approach robotic motion planning underlying principle intelligent behavior result collection simple reactions complex world approach purposive act-while-thinking strategy achieve general recovery goal attack motion planning problem directly sensor information planning motion robot robotic motion planning continuous process sensing action tighty coupled approach advocates real-time robot control incomplete information uncertainty real-time spatiotemporal processing sensor input paper study path planning problem purposive act-while-thinking paradigm main contributions paper analysis type sensing information sufficient solving path planning problem unknown three-dimensional environment development framework solving path planning problem environments analysis case mobile robot freely move space degrees freedom position analysis present theoretical results figure start position interior surface building target position exterior surface interior exterior surfaces building connected door window important practical consequences major consequence assumptions capabilities robot sensors path-planning algorithms twodimensional environments simply extend threedimensional case analysis visual sensing important planning motion robot unknown unstructured three-dimensional environments previously thought robot powerful motion planning capabilities tactile sensing show order robot plan motion environments visually explore stresses importance solving visual exploration problem problem making points environment visible planning finite-length path robot addition facts point three-dimensional path-planning algorithms qualitatively algorithms employed robotics visual information processing important indispensable component emphasis developing deterministic strategies solving path planning problem heuristic-based possess predictable properties correctness bounded length generated paths geometricallycomplex three-dimensional environments major problems arise extend current approaches cases outlined current approaches path planning problem independent visual exploration problem important consequence analysis section constitutes main part paper order plan finite-length path arbitrary location environment determine location unreachable robot term visual sensing context characterize sensing mechanisms recover shape information portions obstacle surfaces visible robot current position portions points open line segment connecting robot intersect obstacle discussion visual sensors include cameras information projected shape visible surfaces directly powerful mechanisms range sensors directly provide distance information visible surface points finite ball robot general visually explore environment intuitive explanation result path planning problem figure robot ant constrained move wall building find window door reach target position explore entire interior surface building manifestation deeper result analysis states path planning problem unsolvable general robot moving unknown surface information robot robot current three-dimensional coordinates coordinates target location existing algorithms solve path planning problem based solely information cases robot moves plane surface geometrical information torus relevant landmarks door guide robot motion building illustrates path planning problem approach current approaches shape information surface robot moves sunken ship ocean floor landmarks present requiring exploratory process case robot moving freely three-dimensional space cluttered obstacles arbitrary shape results analysis section establish importance addressing visual exploration problem arbitrary three-dimensional environments solving problem fundamental requirement solving path planning problem leads analysis visual exploration problem visual exploration problem considered previously case robot moves three-dimensional space cluttered obstacles polyhedral obstacles treated algorithms rely fact obstacles consist finite collection planar faces produce paths lengths diverge limit exploration algorithm proposed rao complexity depending number faces environment description description infinite obstacles smooth surfaces exploration infinitely complex task environment geometrically simple surfaces sphere hand previous work computer vision addresses visual exploration problem considered issues correctness convergence arbitrary three-dimensional environments remainder paper organized section presents main result paper stating three-dimensional path planning problem requires exploratory process implications result discussed section motivated results path planning conjunction visual exploration problem end section presents simple algorithm solving path planning problem arbitrary three-dimensional environments assumption exploration algorithm robot preliminary work exploration problem presented unsolvability non-exploratory path planning section show general path planning three-dimensional environments requires exploratory process formally develop notion exploratory algorithm abstract setting abstract definition sensing mechanism robot loss generality assume environment single connected surface assume closed arbitrary shape bounds open finite connected volume define automaton plan motion space definition sensing mechanism sensing mechanism function assigning point subset positioned determine three-dimensional coordinates points definition path automaton path traced automaton continuous curve finite length point start position point corresponds current position automaton definition memory automaton path automaton memory subset traces path store three-dimensional coordinates points definition automaton sensing function expresses automaton ability determine threedimensional coordinates points belonging idea definition automaton memory automaton capable storing coordinates points sensed path tactile sensing automaton determine threedimensional coordinates current position assumption path-planning literature hollow objects allowed definition imply surface bounding object connected range sensing visible sensing mechanism automaton corresponds range sensor determine coordinates visible points ball radius recall point considered visible open line segment connecting intersect automaton complete information environment starts planning path examples show definition sensing function automaton general restrict sensing ability robot purely local sensing generality intentional purpose 
identify properties sensing function crucial determining automaton ability solve path planning problem interested sensing mechanisms powerful automaton formally defined definition automaton automaton -tuple sensing mechanism automaton memory automaton deterministic algorithm generating position automaton input algorithm defined path traced automaton order define path planning problem define notion point reachability definition reachable points points reachable iff connected continuous curve intersect equivalently reachable iff belong automaton solves path planning problem automaton current position algorithm accepts inputa tuple path traced automaton initial position automaton target position reachable path connecting generated reachable terminates generated finite-length path focus property algorithm crucial analysis definition exploratory algorithm call exploratory iff surface choose positive number conditions satisfied path generated open subsets path length greater generated call non-exploratory conditions satisfied definition exploratory algorithm states automaton capable sensing practically points surface sufficiently large finite path generated note exploratory property imposes strict constraints algorithm simply require capable generating path automaton sense points surface requires paths generated length greater property intuitively means algorithm control motion automaton taking account points obstacle surface sensed main goal prove theorem theorem automaton deterministic algorithm generate path closed surface satisfying closed finite-length path solves path planning problem iff exploratory condition states automaton coordinates current position conditions automaton store coordinates points sensed path plan path points condition expresses local nature automaton sensing mechanism finally condition ensures robot determine boundary points sensed definition ensures exploratory algorithm automaton sense points obstacle surface prove part theorem part conditions prove contradiction assuming non-exploratory algorithm solve path planning problem prove proposition proposition automaton satisfying conditions theorem nonexploratory exists surface length path generated point unbounded point plans path length greater proposition implies determining reachable unsolvable undecidable problem reachable automaton algorithm terminate refer appendix proof proposition implications theorem intuitive result theorem path planning problem arbitrary three-dimensional environments general unsolvable robot possess ability explore surface obstacle important consequence result algorithmic machinery robot constraints put sensing mechanisms robot order plan path important constraint imposed theorem robot sense points surface two-dimensional set points one-dimensional set positions robot path implies sensing mechanism robot fulfill conditions arbitrary surface robot sense two-dimensional set points surface discrete number positions path position one-dimensional subset path robot sense one-dimensional set points surface previously sense consequence conditions tactile sensing robot determine coordinates point obstacle surface means single-point contact sufficient guarantee successful exploration arbitrary surface tactile sensing guarantee correctness three-dimensional path planning algorithm powerful sensing mechanisms deal path planning problem dimensions hand conditions point directly algorithms visual sensing camera range sensor guiding exploration path-planning processes condition leads strategies path planning process guided observing obstacle surfaces discrete set positions planning motion robot similar condition leads development strategies based detection one-dimensional curves slide surface robot moves occlusion boundary conditions point two-dimensional path planning problem hitherto considered problem planning motion robot points unknown surface robot case moves two-dimensional space path planning problem solved traditional path planning algorithms assume robot moves plane surface torus fact conditions show problem unsolvable robot equipped visual sensors robot explore surface tracing finite length path robot moves convex part surface point contact surface robot sensed zero-dimensional set intuitive explanation result problem overconstrained version threedimensional path planning problem robot reach point three-dimensional coordinates constrained move fixed unknown surface implies robot general move surface planning motion three-dimensional space order reach target position important point theorem assumptions made nature space path planning problem formulated space path planning performed workspace robot configuration space amplifies importance result implies motion planning problems cast path planning problems three-dimensional configuration spaces require ability explore surface configuration space obstacles non-exploratory path planning algorithms three-dimensional configuration spaces developed account natural constraints shape configuration space obstacles imposed geometry robotic manipulator important directions future research identify geometrical properties three-dimensional configuration spaces require path planning algorithms exploratory design exploratory path planning algorithms configuration spaces path planning identified key characteristics algorithms solve path planning problem dimensions issue design algorithm assume environment robot number obstacles finite volumes bounded closed figure path planning crater-like surface points reachable -reachable robot plan path plane order reach path curves obstacles presented robot constrained move curves define equivalence classes -reachable points surfaces arbitrary shape obstacles environment touch assume ball finite radius intersects finite number obstacles intersection plane obstacle finite number connected regions assume robot modeled point automaton automaton algorithm exploring surface obstacle tracing finite-length path goal section design provably-correct exploratory algorithm component solve three-dimensional path planning problem focus case sensing mechanism robot range sensor robot determine three-dimensional coordinates points obstacle surfaces lie ball fixed radius open line connecting position robot intersect obstacle main idea approach decompose path planning problem dimensions independent subproblems planar path planning problem solved algorithm robot plan path points plane tracing finitelength path determine reached three-dimensional exploration problem solved algorithma robot explores obstacle surface surface point sensed robot satisfies condition remainder section describes algorithms solving subproblems combined produce path planning algorithm threedimensional problem decomposition path planning start target position robot point collinear points define plane possibly intersects obstacles environment target location reachable reachable collision-free path reachable planar path planning algorithms solve path planning problem hand reachable robot plan motion moving figure idea decomposition three-dimensional path-planning problem collection twodimensional path-planning problems series exploration problems force robot move definition -reachable plane points called -reachable connected curve pierce obstacle general plane intersect number obstacles environment intersection obstacle collection closed curves necessarily simple lines points two-dimensional regions ofa touches face cube robot allowed move surface areas contact surfaces isolated lines points two-dimensional regions considered obstacles obstacles robot constrained move ina consist closed curves reachability defined terms obstacles partitions points belonging obstacle interiors equivalence classes equivalence class points -reachable figure definition reachability region reachability region set -reachablea robot reach point reachability region planar path planning algorithm consistent definition obstacles non-polyhedral arbitrarily-shaped closed curves complete path exploration algorithm order plan motion robot reaches reachability region region bounded curves intersection obstacles environment robot sense points belonging curves robot reach position belongs reachability region assume robot move obstacle surfaces paths tangential obstacle surfaces lie surfaces considered acceptable algorithms simply sake specificity assume robot algorithm bug solving two-dimensional motion planning subproblem briefly robot bug algorithm moves target straight line obstacle encountered target 
reached obstacle encountered robot moves obstacle boundary completely circumnavigated performs -reachability test test positive continues moving target straight line target -reachable determines obstacle boundary bounds region target assume robot procedure allowing explore obstacle surface closed curve point sensed robot distance algorithm simple algorithm planning path robot arbitrary three-dimensional environments algorithm reached determines -reachable contained open region bounded reached stop dista algorithm explore surface obstacle point sensed distance point sensed stop unreachable point sensed move straight line continue step lemma shows algorithm correct interested reader refer proof lemma steps executed finite number times reachable position robot algorithm terminates concluding remarks paper reveals crucial link path planning problem problem visually exploring threedimensional environment showing visual exploration successfully planning motion robot unknown three-dimensional environments analysis stresses importance integrating exploratory visual sensing motion planning work makes explicit solving visual exploration problem important future research issues study implications analysis path planning problems three-dimensional configuration spaces study visual exploration problem reif complexity mover problem generalizations proc twentieth symposium foundations computer science brooks robust layered control system mobile robot ieee robotics automat vol aloimonos purposive qualitative active vision proc int conf pattern recognition lumelsky comparative study path length performance maze-searching robot motion planning algorithms ieee trans robotics automat vol elfes dynamic control robot perception multi-property inference grids proc ieee robotics automat conf blake zisserman cipolla visual exploration freespace active vision blake yuille eds mit press lumelsky sun unified methodology motion planning uncertainty two-link robot arm manipulators int robotics research vol kosaka kak fast vision-guided mobile robot navigation model-based reasoning prediction uncertainties cvgip image understanding vol rao iyengar oommen kashyap terrain acquisition point robot amidst polyhedral obstacles proc conf artificial intelligence applications connoly determination views proc ieee robotics automat conf kutulakos dyer lumelsky object exploration purposive dynamic viewpoint adjustment tech rep computer sciences department wisconsin madison november ftp ftp wisc lewis papadimitriou elements theory computation prentice-hall kutulakos dyer recovering shape purposive viewpoint adjustment proc computer vision pattern recognition kutulakos dyer global surface reconstruction purposive viewpoint adjustment proc computer vision pattern recognition sun lumelsky path planning unknown obstacles case three-dimensional cartesian arm ieee trans robotics automat vol kutulakos lumelsky dyer vision-guided exploration step general motion planning dimensions tech rep computer sciences department wisconsin madison september ftp ftp wisc armstrong basic topology springer-verlag proof proposition proposition proved non-exploratory algorithm surface conditions definition satisfied suppose solves path planning problem points path generated finite length proceed deforming surface paths generated surface intuitively idea proof show non-exploratory algorithm plans path foresee deformation surface make surface requires generated paths unbounded length contradicting correctness algorithm subsection makes formal notion deforming surface environment problem planning path unreachable point surface algorithm deterministic lemma proved section extensions show appropriately deform surface affecting initial portion automaton path deformation process reachable lemma proof omit due lack space shows length initial portion path unbounded order avoid ambiguities environment operates write automaton operating environment surface similarly write path deformations simple closed curve curves bound open region homeomorphic disk definition tuple define deformation respect identity function homeomorphism closures connected set homeomorphism exists deform fashion altering genus producing selfintersections intersections glueing lemma inverse homeomorphisms fixed point associate unique surface simple closed curve bounding disk fix omit superscript intuitively created producing dent surface homeomorphic sphere loss generality assume pointa moves increasing region left figure main lemma main idea proof proposition lies simple observation algorithm deterministic deformations applied regions sensed path traced automaton affect execution path automaton current position automaton make ideas concrete simple closed curves bounding disks actions automata assume algorithm plan motions sensing mechanism live spaces sets path traced figure suppose automaton sense deformed portion position point path initial portion path contained path suppose point initial segment including point figure lemma lemma path traced proof input algorithm planning path automaton consists coordinates points apply deformations deform deform note definition points common condition theorem conclude execution algorithm upto position affected deformation step applied note assumptions lemma points common deformation step deforms conclude paths generated algorithm identical including point definition deformation operation contained points common conclude deformation step affect automaton traced apply lemma sequence simple closed curves bounding disks order show path generated pass points make length unbounded note simple closed curve sequence assign point points common definition independent sequences call sequence simple closed curves bounding disks independent iff condition holds proofs lemmas found lemma independent sequence curves paths corollary independent sequence curves paths corollary shows construct independent sequence curves initial portions paths proposition proved lemma shows find sequence path generated environment infinite length lemma exists independent sequence curves positive integer depends 
sketch motion models object models flow computation scene motion optical flow point tracking sketch motion models object models flow computation optical flow point tracking image sequence data interactive motion relative motioncommon motioncyclic motion groups flow curves spatiotemporal flow curves spatiotemporal surface flow space time time absolute relative common absolute relative common scene time image sequence imagescene 
object description aspect graph found view sphere aspect graph found model viewpoint space top front back bottom left front left bottom front bottom top left front top front top back left top back back bottom top top back top front top top left top front top left front top back top left back left back left back bottom back back bottom back back bottom left front front front bottom front bottom front bottom left front bottom cell general viewpoint cell general viewpoint cell general viewpoint cell general viewpoint cell general viewpoint cell general viewpoint cell general viewpoint cell general viewpoint cell general viewpoint cell general viewpoint cell general viewpoint cell general viewpoint cell general viewpoint complete aspect graphs discrete ranges scale interconnected cells representing general views scale space cell scale space general view cell scale space general view cell scale space general view cell scale space general view cell scale space general view cell scale space general view cell scale space general view cell scale space general view bowtie shaped object side view views dynamic shape smoothing top side top view side view views range smoothing top view merging views side face visibility boundary cube merging views side triplet interaction boundary edges face view accidental view face view composite view accidental viewbefore alignment alignment composite view accessible object object arrows direction movement event surfaces numbers quantity edges visible region original parcellation parcellation narrow edge view eliminated parcellation wide edge view eliminated parcellation edge view exists accessible object object accessible visual angle degrees visibility boundary surface edge scale space instances visibility boundary curves viewpoint space pseudo edge edges invisible pseudo edge occluded occluded joint visibility convex-angled edge pair joint visibility concave-angled edge pair edges invisible vertex coordinates real edges vertex endpoints pseudo edges vertex chain nonconvex polygon vertex coordinates actual edge definitions pseudo edge definitions corner type concave concave concave convex convex convex convex convex convex convex convex subedges single letters visibility boundary occlusion boundary visual angle visual angle visual angle visual angle visual angle visual angle visual angle viewing angle viewing angle viewing angle viewing angle viewing angle viewing angle viewing angle viewing angle visual angle visual angle visual angle visual angle visual angle viewing angle visual angle visual angle visual angle visual angle 
viewing direction principal direction increase decrease viewing direction max max viewing direction max max min min decrease increase candlestick view random candlestick view curvature maximum candlestick view arbitrary tori view random tori view curvature maximum curvature viewpoint radians curvature viewpoint point candlestick curvature viewpoint radians curvature viewpoint point candlestick curvature viewpoint radians curvature viewpoint point candlestick curvature viewpoint radians curvature viewpoint point tori curvature viewpoint radians curvature viewpoint point tori curvature viewpoint radians curvature viewpoint point tori 
image tangent plane occluding contour projection plane visible rim occluded rim observer position position observer visible visible occluded prim prim strip strip strip strip exploration frontier occ hocc occ qgocc 
cell general viewpoint cell general viewpoint cell general viewpoint cell general viewpoint cell general viewpoint cell general viewpoint cell general viewpoint cell general viewpoint cell general viewpoint cell general viewpoint cell general viewpoint cell general viewpoint cell general viewpoint complete aspect graphs discrete ranges scale interconnected cells representing general views scale space cell scale space general view cell scale space general view cell scale space general view cell scale space general view cell scale space general view cell scale space general view cell scale space general view cell scale space general view visual angle degrees visibility boundary surface edge scale space instances visibility boundary curves viewpoint space pseudo edge edges invisible pseudo edge occluded occluded joint visibility convex-angled edge pair joint visibility concave-angled edge pair edges invisible vertex coordinates real edges vertex endpoints pseudo edges vertex chain nonconvex polygon vertex coordinates actual edge definitions pseudo edge definitions corner type concave concave concave convex convex convex convex convex convex convex convex subedges single letters visibility boundary occlusion boundary visual angle visual angle visual angle visual angle visual angle visual angle visual angle viewing angle viewing angle viewing angle viewing angle viewing angle viewing angle viewing angle viewing angle visual angle visual angle visual angle visual angle visual angle viewing angle visual angle visual angle visual angle visual angle 
display scientific data structures algorithm visualization william hibbard charles dyer brian paul space science engineering center department computer sciences wisconsin-madison abstract algorithms networks modules data flow architecture popular flexibility mixing calculation modules display modules easy graphical user interface data flow networks generally developing detailed algorithms current data flow implementations support finite sets data structures order support algorithm details support userdefinable application-specific data structures present technique defining graphical depictions data types defined algorithm ability display arbitrary combinations algorithm data objects common frame coupled interactive control algorithm execution powerful understand algorithm behavior type definitions constrained primitive values occurring data objects assigned scalar types graphical display including user interaction display modeled special data type mappings scalar types display model type provide simple user interface controlling data types depicted type-specific graphics logic balsa zeus systems provide set tools designing visualization environments algorithms demonstration environments produced zeus provide detailed effective views internal workings complex algorithms environment custom designed algorithm powervision system object-oriented language support interactive development image processing algorithms system includes fixed set display methods defined terms set virtual functions accessing data objects algorithm designers define object classes ensure virtual access functions extend classes design display methods classes powervision system exploits objectoriented techniques reduce amount program logic needed display object classes system eliminate introduction designing scientific algorithms art algorithms extracting information remotely sensed data based understood mathematical statistical techniques combine techniques problem specific ways determined experimentally scientists recognize incorrect results graphical depictions output algorithms find source errors apply visual understanding internal logic algorithms interactive debugging systems scientists step program logic print values program variables arrays order track low-level bugs sort interactive capability applied diagnosing problems high-level algorithm behavior low-level logic understood printed values high-level behavior involves masses data understood visualization techniques generating graphical depictions internal data objects scientific algorithms order scientists user interface controlling depictions simple require graphics expertise paper describe technique call scalar mapping technique generating graphical depictions internal data objects scientific algorithms type-specific display logic describe implementation technique vis-ad visualization algorithm development system experimental laboratory developing algorithms scalar mapping technique scalar mapping technique defines infinite set data types serve types data objects programming language data types defined manner primitive occurring data object finite set scalar types technique models graphical display including user interaction display special data type primitive values finite set display scalar data flow architecture widely scientific visualization implementations including avs sgi explorer khoros ape graphical user interface types mappings scalar types display scalar types provide simple user interface controlling data types displayed graphical depiction data object data type derived scalar mappings primitive type real values attached voxels depicted iso-value surfaces iso-value lines drawn voxels scalar animation primitive type int index array voxel volumes rendered sequence animation user control scalars selector primitive types real real real int string indices display contents display contents change response user control selector values providing display type model abstract user interactions graphical display data types define set types data objects algorithm common programming language define set primitive types int real define set type constructors building types primitive types modify interposing finite set scalar types primitive types define primitive types display type defined voxel color contour contour display selector selector animation xyz volume voxel prim int string real real real voxel object includes color set contour values depicted iso-level contours number contour values voxel tuple number scalars contour function part display frame section voxel objects organized three-dimensional volume array array voxel volumes model animation nested arrays indexed selector model user control display number selector indices display type number scalars selector real real pairs triples real numbers algorithm designer defines finite set scalar types binds primitive types function prim infinite set types defined tuple type constructor element types array type constructor type index type display frame primitive including array index occurring data object type scalar type key providing simple user interface controlling display algorithm data objects defining mappings scalar types type model graphical display user control data types displayed types defined terms scalar types display type model graphical display defined terms display scalar types mappings create frame generating graphical depictions data objects types display frame defined functions model graphical display data type nil model graphical display defining special display data type contents display including contents change response user controls form data object type display set data objects type nil undefined values display function determines display scalar values computed scalar values function display type defined terms set display scalars axis axis axis plane plane plane xyz volume color contour display display contour animation selector selector derived produces data objects display type data objects type functions provide simple user control display function control display data objects scalar xyz volume primitive type real three-dimensional voxel coordinate scalars axis axis axis plane plane plane real real cartesian factors xyz volume threedimensional array voxels projected twodimensional display screen projection interactively rotated panned zoomed user control scalar color primitive type real color voxel scalars contour vis-ad system scalar mapping technique implemented vis-ad system demonstrate effectiveness technique supporting experiments variety algorithms including algorithm discriminating clouds multi-spectral satellite images indexed image region values data object type visir set sequence time sequence partitioned images vvi image vvi set types similar visir image visir set types temperature variance brightness values image pixel var image var set types similar visir image visir set types variance image pixel histogram data object attaches frequency count set temperature values histogram set object histogram earth location image region vis-ad system simple syntax defining set scalar types function prim examples scalar types defined cloud discrimination algorithm type brightness real type temperature real type variance real vis-ad system simple syntax display frame frame definition type earth location real type image region int type time real type count int map earth location plane map temperature axis brightness temperature visible infrared radiance values pixels satellite images variance derived temperature earth location pair values latitude longitude pixel locations image region index rectangular subimages time index image sequences count histograms map brightness color map variance axis map time animation map count axis map image region selector map statements defines function 
single scalar type map statements values function examples defaults nil occur map statement vis-ad system simple syntax defining types tuple array type constructors keyword structure tuple constructor examples complex types defined cloud discrimination algorithm type visir image array earth location structure visir temperature visir vis brightness type visir set array image region visir image type visir set sequence array time visir set type vvi image array earth location structure vvi temperature vvi var variance vvi vis brightness type vvi set array image region vvi image type var image array earth location variance type var set array image region var image figure cloud discrimination algorithm input type histogram array temperature count type histogram set frame lower-right window figure shows top-south view data object type visir set sequence data object input cloud discrimination algorithm text editor window left shows section cloud discrimination algorithm coded language similar data object selected display placing cursor occurrence window clicking mouse button combination data objects selected display occurrences names highlighted reverse video execution array image region structure hist location earth location hist histogram histogram data objects type visir image two-dimensional images temperature brightness values indexed earth location values cloud discrimination algorithm partitions images regions data object type visir set image partitions breakpoints set cleared mouse window program statement executed highlighted small text editor window top screen display frame widgets upper-right corner screen control animation select ranges scalars mapped selector adjust color look-up tables real scalars mapped color select iso-levels scalars mapped contour var set object setting pixels variance greater depicted purple sphere special missing missing pixels invisible display single image region selected figure depictions histogram set var set objects restricted single histogram var image sub-objects time animation frame single visir set sub-object displayed figure toggling animate widget display sequence object visir set subobjects image region selector slider widgets upper-right corner select range values image region visir image subobjects selected figure brightness color pixel colors functions brightness values color widget upper-right corner screen earth location plane pixels laid horizontally temperature axis temperature values pixels determine height display object depiction interactively rotated zoomed translated simple mouse controls figure discriminated clouds figure shows object type visir set sequence output cloud discrimination algorithm identical object figure values pixels judged algorithm clouds set missing figure step discriminating clouds objects depicted monochrome object component mapped color monochrome objects displayed simultaneously object color figure shows south-west view monochrome data objects tall white graph object type histogram set small blue yellow spheres values scalar objects type temperature calculated cloud discrimination algorithm percentiles histogram purple sphere scalar object type variance calculated temperature percentiles blue-green object bottom type var set calculated figure scatter diagram image frame map brightness color map variance axis map temperature axis map time animation map brightness axis map count axis map variance axis map image region selector map count axis map image region selector figure shows visir set sequence object figure frame temperature color brightness color color pixel average colors defined look-up tables temperature brightness color map widgets show red intensity proportional temperature bluegreen intensity proportional brightness multi-spectral data familiar earth scientists map time animation earth location occur map statements earth location nil earth location values display frame figure shows object type vvi set three-dimensional scatter diagram view figure shows temperature horizontal axis variance vertical axis restricted single vvi image sub-object mappings temperature time frame edited map earth location plane map temperature selector map brightness color map variance axis map time axis map count axis map image region selector figure shows visir set sequence object figure frame temperature selector slider widgets upperright corner screen select range values temperature display restricted pixels temperature values selected range time axis object visir set sub-objects stacked axis showing motion cloud features figure multiple spectra color essential feature vis-ad system ability generate displays combination algorithm data objects variety frames editing algorithm editing frame definitions setting execution breakpoints starting stopping single stepping algorithm execution displaying combinations data objects highly interactively integrated environment data objects displayed multiple frames simultaneously data object enabled display algorithm executing time object modified flagged re-display vis-ad produce animations running algorithms data semantics data display data semantics figure time sequence image object display function defined section function domain data objects type domain display describe domains domains scalar types determined domains primitive types frame edited map earth location plane map temperature color domain primitive type int union set finite sub-domains interval integers domains real real raw satellite images accessed directly terms latitude longitude temperature expression image location evaluated resampling location nearest index image array expression evaluates missing location range index values image arithmetic expressions evaluate missing operand missing algorithms combine data multiple sources detailed logic resampling checking data boundaries checking missing data vis-ad implements simple resampling access arrays real real real indices implement interpolation schemes int missing int int integers missing lack information special missing data codes common remote sensing algorithms domain primitive type real union set finite sub-domains set halfopen intervals real real missing realf display function integers set increasing continuous bijections set real numbers functions provide non-uniform sampling real values domains real real string similarly defined unions finite sub-domains equivalent formulations display function formulation composes display function sequence basic type transformations terms tree structure defined data objects tree structure objects defined recursively defined union set function spaces single space functions array objects scalar index values branch node sub-nodes valuev attached missing leaf node missing attached missing tsubssubs subs ranges finite sub-domains scalar domain tsubs denotes set functions set ssubs set array object finite set values indexed values finite sub-domains tuple scalar element objects non-scalar element objects branch node sub-nodes values attached scalar elements leaf node values attached node missing leaf node missing attached domains tuple types defined missing domain lattice structure missing element half-open intervals real approximations values ordered inverse set inclusion lattice structure interval subintervals values real real form similar lattices approximations values lattice structure extended array tuple types scalar occurring tuple element leaf node attached define path set paths root node leaf node path define string scalar values attached nodes path string display 
scalar values calculated lattice structure domains definition array domains unions function spaces provide formal basis interpreting array data objects indices primitive types real real real finite samplings functions satellite image finite sampling continuous radiance field vis-ad programming language arrays indexed real real real values navigation earth alignment calibration radiance normalization satellite images implemented appropriately defined subvd spatial coordinate display scalar values factored axis axis axis values display function computed display composite disp path histogram figure positioned image region disp display object computed string display scalar values composite function computes single object display set objects composite function computes object display set objects computation independently voxel sub-object combination selector animation spatial values indexing voxel sub-object color voxel computed non-missing color values voxel sub-objects set objects similarly contour values composite function combine depictions multiple objects single display leaf node path generated object missing disp missing disp function computed string define number values type occur compute voxel object vox wcolor wcontour wcontour discussion data displayif ncolor ncontour vox specialcolor missing missing spatial coordinate display scalar xyz volume factored oneand two-dimensional cartesian factors axis axis axis plane plane plane generated displays conform cartesian coordinate systems twoand three-dimensional scalars mapped spatial display scalars functions scalars include mathematical coordinate transformations non-cartesian coordinate systems similarly threedimensional scalars mapped color display scalar functions scalars include mathematical color transformations color systems rgb red green blue color contour contour missing specialcolor monochrome color section values type occurring axis axis axis compute specials specials spatial coordinate distinguished plane perpendicular axis values type occurring animation selector compute scalar mappings provide flexible tool projection pursuit data sets dimensions higher dimensional data set user map dimensions data set spatial coordinates color dimensions animation variable number selector dimensions values type occurring farthest root display object disp computed user define display frame produces depictions poorly communicate information content data objects interactivity system user experiment scalar mappings order understand mappings work find effective object depictions wselector wselector wanimation axis axis axis vox selected animation selector equation applies values voxel sub-objects set missing interactive response times important thevis-ad implementation display function shared-memory parallelism optimized vectorization traverses paths object tree structure parallel divides ranges values array indices sections paths section traversed processor internal storage format data objects designed efficient vector processing arrays scalars arrays tuples scalars running sgi vgx display function generated figures paper performance permits interactive visualization data objects large real scientific algorithms smooth animations behavior algorithms string display scalar color contour values set single non-missing voxel subobject disp indexed spatial animation selector values undefined multiply-defined display scalar values complex disp function handles varies display scalars spatial coordinate undefined depiction embedded distinguished plane animation selector undefined sets voxel sub-objects disp set vox depiction invariant user control multiply-defined color contour values composited taking multiply-defined spatial coordinates combined taking sum nested arrays display type display data object large vis-ad implementation display function minimizes size trace points similarly algorithm behavior ensemble invocations studied deriving array type values selected algorithm data object indexed scalar parameter varies algorithm invocations string scalar input data set varies invocations system invoke algorithm parameter save final selected object derived array mapping index scalar derived array display scalar user generate flexible displays execution trace algorithm behavior varies ensemble invocations computing values sub-objects display object affect visible screen contents re-applying display function data objects animation selector indices change splitting display type arrays contour values color values limiting sampling resolution xyz volume array contour values sparse representations array color values texture maps voxels lying distinguished planes determined values specialx axis specialy axis specialz axis lists non-missing voxels distinguished planes acknowledgment james dodge gregory wilson support work funded nasa msfc nag nsf iriwhen data objects transformed dense sets non-missing voxels impossible voxels vis-ad user-controlled clipping plane creating cut-away view display brown sedgewick system algorithm animation computer graphics plans development dyer dataflow toolkit visualization computer graphics applications generating library standard imageanalysis remote sensing functions callable vis-ad programs adapting vis-ad distributed execution enabling programs call functions remote computers haeberli conman visual programming language interactive graphics computer graphics hibbard dyer automated display geometric data types computer sciences technical report plan extend definition display type including real display scalars transparency reflectivity real display scalar vector voxel tuple scalars mapped display scalars depicted complex volume rendering flow rendering techniques hibbard dyer paul development environment data analysis algorithms preprints conf interactive information processing systems meteorology oceanography hydrology atlanta american meteorology society plan extend set data types adding type constructors lists trees complex linked structures extend display function generate diagrams linked structures provide interaction mechanisms user traverse linked structures order linked structures included extended definition display type mcconnell lawton software environments proc iuw rasure argiro sauer williams visual language software development environment image processing international imaging systems technology vol plan extend parallel algorithm display function scalable algorithm running large numbers processors order increase interactivity large data objects schmidt denotational semantics brown publishers upson faulhaber kamins laidlaw schlegel vroom gurwitz van dam application visualization system computational environment scientific visualization computer graphics applications plan adapt vis-ad generate graphical execution traces algorithm data objects graphical depictions algorithm behavior varies respect varying algorithm parameters varying input data sets functions flexibility define arrays data type system trace data object execution deriving array type values data object indexed scalar algorithm step number system execute algorithm store selected object derived array user-declared 
sketch motion models object models flow computation scene motion optical flow point tracking sketch motion models object models flow computation optical flow point tracking image sequence data interactive motion relative motioncommon motioncyclic motion groups flow curves spatiotemporal flow curves spatiotemporal surface flow space time time absolute relative common absolute relative common scene time image sequence imagescene 
azriel rosenfeld columbia john pfaltz maryland robert lieberman maryland john irvine virginia roger ison virginia james french virginia nam-ho kim virginia charles viles virginia allison powell virginia don-lin yang virginia dennis bahler virginia gerry dozier north carolina state anthony carlisle auburn carol wellington north carolina state greg kaszycki north carolina state brian stone north carolina state ratko orlandic virginia byunggu illinois institute technology russell haddleton virginia william sacco delaware edward davis johns hopkins james snively maryland james strong iii maryland robert lieberman maryland anupam shah michigan david milgram maryland craig cook maryland roger nagel maryland adel ali lehigh melissa wiggins southern mississippi ann applin southern mississippi walter smith southern mississippi david lewis southern mississippi alice qiao southern mississippi mike zhou southern mississippi scott hawker lehigh susan swartz lehigh murali subramanium lehigh larry davis maryland thomas henderson texas charles hansen utah paul hinker mexico school mining tech rod grupen utah christopher connolly massachusetts manfred huber massachusetts justus piater massachusetts jefferson coelho massachusetts ashok samal utah jun utah ruchir puri calgary abdel mohamed calgary bin calgary mohamed dekhil utah amar mitiche texas vincent hwang maryland teresa silberberg maryland stanley dunn maryland richard keizer rutgers heesung jun rutgers bennett povlow rutgers kyugon cho rutgers edward ciaccio rutgers john ostuni rutgers stacy gwydir rutgers stephen shemlon rutgers elizabeth fisher rutgers susan kerbaugh rutgers junqing huang rutgers hany michail rutgers gina northington rutgers claudia mellothoms rutgers gyorgy fekete maryland shie-rei huang maryland narayanan maryland tony chen maryland ansel teng maryland yaser yacoob maryland dariu gavrila maryland ismail hariatoglu maryland ross cutler maryland vasanth philomin maryland ann parikh maryland gordon vanderbrug maryland peter lemkin maryland bruce shapiro maryland angela maryland narendra ahuja maryland mihran tuceryan illinois deborah trytten michigan state william hoff illinois mohamed mahfouz colorado school mines dorothea blostein illinois hoda fahmy queen canada medha shuklasarkar queen canada edward lank queen canada yong hwang illinois juyang weng illinois daniel swets michigan state yuntao cui michigan state sally howden michigan state shaoyun chen michigan state wey-shiuan hwang michigan state lynn abbott illinois gouda salama virginia tech hussein taha virginia tech xinhua shi virginia tech edward altman illinois christian debrunner illinois subhodev das illinois jen-hui roger chuang illinois xiaoping illinois sanghoon sull illinois darrell hougen illinois ram charan illinois tanuja joshi illinois mark tabb illinois arun krishnan illinois peter bajcsy illinois andres castano illinois krishna ratakonda illinois ming-husan yang illinois manoj aggarwal illinois charles dyer maryland bradley kjell wisconsin rameesh karne george mason vijay topkar george mason willis woods george mason charles stewart wisconsin james miller rensselaer polytechnic inst robin flatland rensselaer polytechnic inst kenneth martin rensselaer polytechnic inst kishore bubna rensselaer polytechnic inst ali rensselaer polytechnic inst hong shen rensselaer polytechnic inst harry plantinga wisconsin chi lin pittsburgh brent seales wisconsin michael brown kentucky mark allmen wisconsin kiriakos kutulakos wisconsin james vallino rochester rodrigo carceroni rochester william hibbard wisconsin steven seitz wisconsin jovan popovic carnegie mellon gareth bestor wisconsin liang-yin wisconsin russell manning wisconsin shmuel peleg maryland haim schweitzer hebrew steven chadwick texas dallas michael werman hebrew daniel keren hebrew margarita osadchy haifa yaakov hel-or hebrew michal irani hebrew hagit zabrodsky hebrew nicolas merlet hebrew benny rousso hebrew moshe ben-ezra hebrew kenneth hayes maryland martin herman maryland jan-olof eklundh royal inst tech gunilla borgefors royal inst tech ingela nystrom uppsala fredrik walter swedish univ agricultural sci tomas brandtberg swedish univ agricultural sci anders lansner royal inst tech orjan ekeberg royal inst tech tom wadden royal inst tech jon tegner karolinska institute anders holst royal inst tech jeanette kotaleski stockholm fredrik bergholm royal inst tech tony lindeberg royal inst tech lars bretzner royal inst tech jonas garding royal inst tech ambjorn naeve royal inst tech hans traven royal inst tech kourosh pahlavan royal inst tech kjell brunnstrom royal inst tech magnus andersson royal inst tech antonio francisco royal inst tech bjorn levin royal inst tech wei zhang royal inst tech hammarlund royal inst tech tomas uhlin royal inst tech erik franzen stockholm goran olofsson royal inst tech atsuto maki royal inst tech peter nordlund royal inst tech par fornland royal inst tech carsten brautigam royal inst tech harald winroth royal inst tech kristian simsarian royal inst tech david nister royal inst tech danny roobaert royal inst tech robert haar maryland david morgenthaler maryland wallace rutkowski maryland todd kushner maryland matti pietik inen oulu hannu hakalahti oulu ilkka virtanen oulu olli silven oulu janne heikkila oulu hannu kauppinen oulu tapio seppanen oulu juha roning oulu jukka riekki oulu visa koivunen oulu jukka mannerkoski helsinki univ technology samuli visuri helsinki univ technology ilkka moring oulu heikki ailisto oulu timo ojala oulu jaakko sauvola oulu hannu kauniskangas oulu tsaihong hong maryland leslie kitchen maryland james cooper western australia michael johnston melbourne greg kay melbourne derek takkeung cheng melbourne andrew howard melbourne linhui jia melbourne chia-hoang lee maryland brian stuart purdue anupam joshi purdue robert kirby maryland tsaiyun ihsin phillips maryland chen washington jisheng liang washington vincent hwang maryland kwangyoen wohn maryland ralph hartley maryland yubin hung maryland tsai-chia peter chou maryland zygmunt pizlo maryland christopher taylor purdue moses chan purdue wencheng purdue michael scheessele purdue doron mintz maryland sven dickinson maryland ali shokoufandeh rutgers yakov keselman rutgers john canning maryland saibal banerjee maryland nathan netanyahu maryland allen sher maryland noah friedland maryland david doermann maryland kamran etemad maryland omid kia maryland huiping maryland mohamed abdelmottaleb maryland scott thompson maryland zoran duric maryland neil johnson george mason sandor fejes technical budapest adlai waksman pennsylvania peter cucka maryland saad sirohey maryland jinhong katherine guo maryland vikrant kobla maryland manjit ray maryland christian kwangun shin maryland avraham margalit maryland rand waltzman maryland academic descendants azriel rosenfeld june 
wisconsin computer vision group wisconsin computer vision group return wisconsin computer vision group home page patch-based image correlation rapid filtering g-d guo dyer proc patches workshop abstract pdf bibtex text-to-picture synthesis system augmenting communication zhu goldberg eldawy dyer strock proc aaai integrated intelligence track abstract pdf bibtex segmentation elastographic images coarse-to-fine active contour model liu zagzebski varghese dyer techavipoo hall ultrasound medicine biology abstract pdf bibtex face expression iris recognition learning-based approaches guodong guo dissertation wisconsin madison august abstract pdf bibtex face cyclographs recognition g-d guo dyer computer sciences department technical report wisconsin madison march abstract pdf bibtex sequential monte carlo methods physically based rendering shaohua fan dissertation wisconsin madison august abstract pdf bibtex learning examples small sample case face expression recognition g-d guo dyer ieee trans systems man cybernetics part cybernetics abstract pdf bibtex linear combination representation outlier detection motion tracking g-d guo dyer zhang proc computer vision pattern recognition conf vol abstract pdf bibtex system automatic iris capturing g-d guo jones beardsley technical report mitsubishi electric research laboratories cambridge massachusetts june abstract pdf bibtex automated thermal coagulation segmentation three-dimensional elastographic imaging active contour model liu zagzebski varghese dyer techavipoo proc ieee ultrasonics symposium abstract pdf bibtex recognizing faces head rotation g-d guo dyer computer sciences department technical report wisconsin madison abstract pdf bibtex spatial resolution enhancement video images g-d guo dyer computer sciences department technical report wisconsin madison october abstract pdf bibtex automatic system classification nuclear sclerosis slit-lamp photographs fan dyer hubbard klein proc int conf medical image computing computer-assisted intervention miccai lecture notes computer science vol ellis peters eds springer berlin abstract pdf bibtex simultaneous feature selection classifier training linear programming case study face expression recognition g-d guo dyer proc computer vision pattern recognition conf vol abstract pdf bibtex quantification correction iris color fan dyer computer sciences department technical report wisconsin madison december abstract pdf bibtex screw-transform manifolds camera calibration manning dissertation wisconsin madison september abstract postscript pdf bibtex research calibration minimization manning dyer computer sciences department technical report wisconsin madison february abstract postscript pdf bibtex screw-transform manifolds manning dyer computer sciences department technical report wisconsin madison april abstract postscript pdf bibtex stratified calibration screw-transform manifolds manning dyer proc european conf computer vision abstract postscript pdf bibtex markov information propagation texture synthesis g-d guo dyer computer sciences department technical report wisconsin madison october abstract pdf bibtex evaluation bayes large margin classifiers face expression recognition g-d guo dyer computer sciences department technical report wisconsin madison october abstract pdf bibtex observer motion estimation control optical flow liangyin dyer proc int conf image processing abstract postscript pdf bibtex metric calibration screw-transform manifolds manning dyer proc computer vision pattern recognition conf abstract postscript pdf bibtex affine calibration moving objects manning dyer proc int conf computer vision abstract postscript pdf bibtex versions volumetric scene reconstruction multiple views dyer foundations image understanding davis kluwer boston abstract postscript pdf bibtex perception-based shape modeling curvature shaping liangyin dyer proc int workshop visual form arcelli cordella sanniti baja eds lecture notes computer science springer-verlag abstract postscript pdf bibtex environment map morphing manning dyer computer sciences department technical report wisconsin madison december abstract postscript pdf bibtex affine calibration dynamic scenes manning dyer computer sciences department technical report wisconsin madison march abstract postscript pdf bibtex versions iccv dynamic view interpolation affine reconstruction manning dyer confluence computer vision computer graphics leonardis solina bajcsy eds kluwer dordrecht netherlands abstract postscript pdf bibtex interpolating view scene motion dynamic view morphing manning dyer proc computer vision pattern recognition conf abstract postscript pdf bibtex versions iuw photorealistic scene reconstruction voxel coloring seitz dyer int computer vision abstract postscript pdf bibtex versions cvpr iuw active surface modeling perception-based differential geometric primitives liangyin dissertation computer sciences department wisconsin madison august abstract postscript pdf bibtex image-based visualization widely-separated views dyer proc image understanding workshop abstract postscript pdf bibtex real-time voxel coloring prock dyer proc image understanding workshop abstract postscript pdf bibtex interpolating view scene motion dynamic view morphing manning dyer proc image understanding workshop abstract postscript pdf bibtex versions cvpr dynamic view morphing manning dyer computer sciences department technical report wisconsin madison september abstract postscript pdf bibtex versions cvpr iuw plenoptic image editing seitz kutulakos proc int conf computer vision abstract postscript pdf bibtex versions rochester recovering feature observer position projected error refinement bestor dissertation computer sciences department technical report wisconsin madison august abstract postscript pdf bibtex direct computation differential invariants image contours shading l-y dyer proc int conf image processing abstract postscript pdf bibtex plenoptic image editing seitz kutulakos computer science department technical report rochester rochester january abstract postscript pdf bibtex versions iccv image-based transformation viewpoint scene appearance seitz dissertation computer sciences department technical report wisconsin madison october abstract postscript pdf bibtex photorealistic scene reconstruction voxel coloring seitz dyer proc computer vision pattern recognition conf abstract postscript pdf bibtex versions ijcv iuw photorealistic scene reconstruction voxel coloring seitz proc image understanding workshop abstract postscript pdf bibtex versions ijcv cvpr image-based scene rendering manipulation research wisconsin dyer proc image understanding workshop abstract postscript pdf bibtex bringing photographs life view morphing seitz proc imagina abstract postscript pdf bibtex view morphing uniquely predicting scene appearance basis images seitz dyer proc image understanding workshop abstract postscript pdf bibtex view-invariant analysis cyclic motion seitz dyer int computer vision abstract postscript pdf bibtex cyclic motion analysis period trace seitz dyer motion-based recognition shah jain eds kluwer boston abstract postscript pdf bibtex view morphing seitz dyer proc siggraph abstract postscript pdf bibtex image-based scene representation view morphing seitz dyer proc int conf pattern recognition vol track computer vision abstract postscript pdf bibtex shape recovery stationary surface contours controlled observer motion l-y dyer advances image understanding festschrift azriel rosenfeld ieee computer society press los alamitos abstract postscript pdf bibtex physically-valid view synthesis image interpolation seitz dyer proc workshop representation visual scenes abstract postscript pdf bibtex complete scene structure point correspondences seitz dyer proc int conf computer vision abstract postscript pdf bibtex deformable contours modeling extraction lai chin ieee trans pattern analysis machine intell abstract postscript pdf bibtex versions cvpr visualizing scientific computations system 
based lattice-structured data display models hibbard dissertation computer sciences department technical report wisconsin madison abstract postscript pdf bibtex recovering shape purposive viewpoint adjustment kutulakos dyer int computer vision abstract postscript pdf bibtex versions cvpr global surface reconstruction purposive control observer motion kutulakos dyer artificial intelligence abstract postscript pdf bibtex versions cvpr occluding contour detection affine invariants purposive viewpoint control kutulakos dyer proc computer vision pattern recognition conf abstract postscript pdf bibtex global surface reconstruction purposive control observer motion kutulakos dyer proc computer vision pattern recognition conf abstract postscript pdf bibtex versions building global object models purposive viewpoint control kutulakos seales dyer proc cad-based vision workshop abstract postscript pdf bibtex versions spie exploring three-dimensional objects controlling point observation kutulakos dissertation computer sciences department technical report wisconsin madison october abstract postscript pdf bibtex provable strategies vision-guided exploration dimensions kutulakos dyer lumelsky proc ieee int conf robotics automation abstract postscript pdf bibtex deformable contours modeling extraction lai chin proc computer vision pattern recognition conf abstract postscript pdf bibtex versions pami detecting irregularities cyclic motion seitz dyer proc workshop motion non-rigid articulated objects abstract postscript pdf bibtex affine invariant detection periodic motion seitz dyer proc computer vision pattern recognition conf abstract postscript pdf bibtex classifying deformable contours generalized active contour model lai chin proc int conf automation robotics computer vision singapore abstract postscript pdf bibtex deformable contours modeling extraction detection classification lai dissertation electrical computer engineering department august abstract postscript pdf bibtex interactive visualization earth space science computations hibbard paul battaiola santek m-f voidrot-martinez dyer computer july abstract postscript pdf bibtex lattice model data display hibbard dyer paul proc visualization abstract postscript pdf bibtex global surface reconstruction purposive viewpoint adjustment kutulakos dyer proc computer vision pattern recognition conf abstract postscript pdf bibtex vision-guided exploration step general motion planning dimensions kutulakos lumelsky dyer proc ieee int conf robotics automation abstract postscript pdf bibtex computing spatiotemporal relations dynamic perceptual organization allmen dyer computer vision graphics image processing image understanding abstract postscript pdf bibtex versions dynamic shading motion parallax qualitative shape waldon dyer proc ieee workshop qualitative vision abstract postscript pdf bibtex scale space aspect graph eggert bowyer dyer christensen goldgof ieee trans pattern analysis machine intelligence abstract postscript pdf bibtex versions cvpr regularization formulation initialization active contour models snakes lai chin proc asian conf computer vision abstract postscript pdf bibtex building global object models purposive viewpoint control kutulakos seales dyer proc spie sensor fusion abstract postscript pdf bibtex versions cbvw global surface reconstruction purposive control observer motion kutulakos dyer computer sciences department technical report wisconsin madison april abstract postscript pdf bibtex versions cvpr recovering shape purposive viewpoint adjustment kutulakos dyer proc computer vision pattern recognition conf abstract postscript pdf bibtex versions ijcv object exploration purposive dynamic viewpoint adjustment kutulakos dyer lumelsky computer sciences department technical report wisconsin madison november abstract postscript pdf bibtex scale space aspect graph eggert bowyer dyer christensen goldgof proc computer vision pattern recognition conf abstract postscript pdf bibtex versions pami viewpoint occluding contour seales dyer computer vision graphics image processing image understanding abstract postscript pdf bibtex occlusion-based representation shape viewpoint recovery seales dyer proc european conf artificial intelligence abstract postscript pdf bibtex display scientific data structures algorithm visualization hibbard dyer paul proc visualization abstract postscript pdf bibtex computing spatiotemporal relations dynamic perceptual organization allmen dyer computer sciences department technical report wisconsin madison december abstract postscript pdf bibtex versions cvgip recovering shape purposive viewpoint adjustment kutulakos dyer computer sciences department technical report wisconsin madison august abstract postscript pdf bibtex versions ijcv cvpr image sequence description spatiotemporal flow curves motion-based recognition allmen dissertation computer sciences department technical report wisconsin madison august abstract postscript pdf bibtex appearance models three-dimensional shape machine vision graphics seales dissertation computer sciences department technical report wisconsin madison august abstract postscript pdf bibtex 
viewing direction viewing direction principal direction decrease increase viewing direction max max viewing direction decrease increase max max min min generating curve parallel meridian viewing direction candlestick view random tori view random candlestick view curvature maximum tori view curvature maximum candlestick view arbitrary curvature viewpoint radians curvature viewpoint point candlestick curvature viewpoint radians curvature viewpoint point tori curvature viewpoint radians curvature viewpoint point candlestick curvature viewpoint radians curvature viewpoint point tori curvature viewpoint radians curvature viewpoint point candlestick curvature viewpoint radians curvature viewpoint point tori viewing direction viewing direction change 
introduction artificial intelligence wisconsin madison nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page general info scores date syllabus started e-mail archive readings homework examinations handouts lecture notes demos reading photo gallery courses links nbsp introduction artificial intelligence spring instructor chuck dyer office computer sciences building telephone e-mail dyer wisc office hours tuesdays thursdays appointment teaching assistant yu-chi lai office computer sciences building telephone e-mail yu-chi wisc office hours mondays wednesdays appointment schedule lecture mwf room computer sciences building prerequisite textbook artificial intelligence modern approach edition russell norvig prentice hall englewood cliffs grading midterm exam final exam homework assignments note typically final grades distributed approximately recent semesters taught interpret rough guidelines scores cluster differently semester semester median student grade low high percentiles refer ranking class based final weighted score top class examinations midterm wednesday march room final monday room homework assignments homework assignments include written problems programming java accounts provided computer science department instructional unix workstations located rooms late penalties assignments due class due date day late defined -hour period noon noon day weekday weekend result total points assignment deducted assignment due wednesday handed wednesday thursday penalty deducted days late days late homework turned days late total free late days semester penalty academic integrity examinations programming assignments written homeworks individually cheating plagiarism dealt accordance procedures academic misconduct guide code programming assignments developed groups code shared encouraged discuss peers tas instructor ideas approaches techniques broadly level detail specific implementation issues questions instructor act web page http wisc dyer class e-mail alias compsci lists wisc class e-mail archive nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
rank total midterm grade total average maximum minimum median -marlate days 
intro wisconsin madison nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page started general info scores date syllabus started e-mail archive readings homework examinations handouts lecture notes demos reading photo gallery courses links nbsp introduction artificial intelligence spring started department policy student instructional computer accounts department computer systems lab csl unix orientation csl csl frequently-asked questions faqs general documentation printing printers command printing source code listings print -landscape -plaser file unix introduction unix unixhelp users unix faqs unix tutorial oxford java java computer systems lab workstations java tutorial java tutorial sun java language specification updated java sun documentation java java faq java programmers java links java programming resources nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
intro wisconsin madison nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page syllabus general info scores date syllabus started e-mail archive readings homework examinations handouts lecture notes demos reading photo gallery courses links nbsp introduction artificial intelligence spring syllabus week starting topics readings introduction intelligent agents chapters machine learning inductive inference decision trees problem solving search problem spaces uninformed search iterative-deepening search heuristic search best-first search hill-climbing genetic algorithms search constraint satisfaction game playing alpha-beta pruning knowledge representation propositional logic first-order logic logical reasoning deductive inference unification forward backward chaining resolution logical reasoning cont midterm statistical learning neural networks perceptrons backpropagation support vector machines statistical learning cont uncertainty spring break probabilistic reasoning bayesian networks speech recognition hmm tutorial planning situation calculus strips language adl language strips algorithm regression partial-order planning graphplan planning cont computer vision face recognition nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
intro wisconsin madison nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page readings general info scores date syllabus started e-mail archive readings homework examinations handouts lecture notes demos reading photo gallery courses links nbsp introduction artificial intelligence spring reading assignments face recognition eigenfaces turk pentland proc computer vision pattern recognition conf chapter chapter markov models hidden markov models tutorial fosler-lussier technical report tr- int computer science institute california berkeley required reading recommended bayesian networks tears charniak magazine winter required reading chapter chapter recommended support vector machines edited hearst ieee intelligent systems july august required reading chapter chapter chapters required reading nice propositional logic applet online chapter chapter chapters chapter required reading description demo decision trees aixploratorium excellent chapters russell norvig nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
intro wisconsin madison nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page homework assignments general info scores date syllabus started e-mail archive readings homework examinations handouts lecture notes demos reading photo gallery courses links nbsp introduction artificial intelligence spring homework assignments general information frequently-asked questions faqs homework assignments e-mailed class alias compsci lists wisc class e-mail archive hand programming assignment note documents handed stapled loose sheets include cover sheet top includes login class title date late days late late penalty rule homework probabilistic reasoning due wednesday homework neural networks svms face detection due thursday april updated solution data files zip file data listed train list file list training image files grading test list file list testing image files grading train-face directory training images faces train-non-face directory training images faces test-face directory testing images faces test-non-face directory testing images faces train list file list training image files test list file list testing image files readpgm java file java class converting image files format information face detection face detection research links univ illinois face detection neural networks cmu classic paper neural network-based face detection rowley baluja kanade ieee trans pattern analysis machine intelligence information pgm image format extra credit test images homework logic inference csp due monday march solution homework search game playing due friday march zip zip file provided code documentation provided code solution class tournament class tournament tournament player write run due date entrant play entrant red black win worth points tie point loss points extra credit points prizes awarded top places tournament congratulations top programs place chris carey place jelani harris place lijie heng place chris waclawik tournament results links checkers samuel famous paper studies machine learning game checkers recent progress ibm research journal neural network playing checkers games hard computers play arimaa homework decision trees due wednesday february updated mushroom training data file mushroom test data file hand typed neatly printed answers questions well-documented source code listing report question follow detailed instructions hand paper electronically end assignment sample solutions test case training file test case test file test case training file test case test file test case training file test case test file test case training file test case test file test case training file test case test file java marvin solomon written excellent tutorial java programmers java tips java tutorial information file reading writing word-count filetextin nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
intro wisconsin madison nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page exams general info scores date syllabus started e-mail archive readings homework examinations handouts lecture notes demos reading photo gallery courses links nbsp introduction artificial intelligence spring examinations schedule midterm examination wednesday march room closed book bring calculator sheet paper notes sides allowed covers topics half including readings lectures assignments covers inductive learning decision trees chapter search chapters memory-bounded heuristic search pages logic chapters readings assigned covered exam chapters responsible topics covered lecture lecture notes topic constraint satisfaction methods responsible topics covered readings explicitly excluded covered class lecture notes solution approximate correspondence numeric scores letter grades final examination final examination monday room closed book cumulative sheet paper notes sides allowed bring calculator emphasizes topics midterm examination including readings russell norvig chapters page half page required papers hmms eigenfaces papers svms bayesian networks highly recommended required responsible material presented lectures lecture notes knowledgeable material homework assignments assigned midterm exam responsible topics covered lecture lecture notes topic knowledge sufficient work simple examples algorithms situation calculus strips language strips algorithm pop planning basic probability uncertainty reasoning bayesian networks naive bayes neural networks support vector machines perceptron learning backpropagation face recognition eigenfaces speech recognition exam focus material midterm questions refer back issues brought search logic decision trees refresh memories main ideas methods material midterm examination relate general search questions topics part search space search method solution approximate correspondence numeric scores letter grades exams exam spring exam solution spring exam summer exam solution summer exam spring exam solution spring exam summer exam solution summer exam summer exam solution summer exam spring exam solution spring exam summer exam solution summer nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
intro wisconsin madison nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page handouts general info scores date syllabus started e-mail archive readings homework examinations handouts lecture notes demos reading photo gallery courses links nbsp introduction artificial intelligence spring handouts face recognition eigenfaces turk pentland proc computer vision pattern recognition conference slides face recognition eigenfaces -up pdf slides scene reconstruction voxel coloring -up color pdf responsible exam markov models hidden markov models tutorial fosler-lussier technical report tr- international computer science institute california berkeley nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
intro wisconsin madison nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page lecture notes general info scores date syllabus started e-mail archive readings homework examinations handouts lecture notes demos reading photo gallery courses links nbsp introduction artificial intelligence spring lecture notes introduction intelligent agents machine learning decision trees uninformed search powerpoint slides uninformed search -up pdf informed search powerpoint slides informed search -up pdf game playing skrentny powerpoint slides game playing -up pdf genetic algorithms powerpoint slides genetic algorithms -up pdf powerpoint slides constraint satisfaction problems -up pdf -up pdf logic first-order logic logical reasoning systems neural networks support vector machines -up pdf -up pdf reasoning uncertainty slides bayesian networks slides naive bayes classifier moore cmu speech recognition slides speech recognition -up -up updated markov models hidden markov models tutorial fosler-lussier technical report tr- international computer science institute california berkeley planning partial-order planning visual tracking condensation algorithm slides -up pdf -up pdf computer vision slides face recognition -up pdf face recognition eigenfaces turk pentland proc computer vision pattern recognition conference slides recognizing learning object categories -up color pdf responsible material slides slides scene reconstruction voxel coloring -up color pdf responsible material exam nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
intro wisconsin madison nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page demos general info scores date syllabus started e-mail archive readings homework examinations handouts lecture notes demos reading photo gallery courses links nbsp introduction artificial intelligence spring interesting demos projects agents boids building autonomous agents simulate group motion obstacle avoidance activities bird flocks schools fish excalibur project develops generic architecture group agents pursue goals adapt behavior environments communicate perform coordinated group actions intelligent agents work ibm artificial life interactive video environment mit artificial life interactive video environment alive virtual reality system people interact virtual creatures constrained headsets goggles special sensing equipment system based magic mirror metaphore person alive space sees image large-screen mirror autonomous animated characters join user image reflected world open mind commonsense mit computers today plain dumb open mind commonsense project attempt make computers smarter making easy fun people world work give computers millions pieces ordinary knowledge constitute common-sense aspects world understand granted agentlink iii european commission agentlink iii premier co-ordination action agent based computing funded european commission framework program launched january support network european researchers developers common interest agent technology events aimed industry outreach standardisation issues providing support academic events providing resources agentlink portal internet softbots washington building autonomous agents interact real-world software environments operating systems databases pragmatically convenient intellectually challenging problem utilizing planning machine-learning technology develop internet softbot software robot customizable moderately intelligent assistant internet access softbot accepts goals high-level language generates executes plans achieve goals learns experience guardian angel mit project guardian angels software agents create health information systems centered patients solely convenience doctors kasbah mit kasbah on-line multiagent classified system users create agents directions strategies constraints launched common marketplace seek negotiate potential buyers sellers microsoft agent miscellaneous resources agents artificial life alife online software events alife research evolved virtual creatures karl sims depending physics simulated environment swimming hopping crawling tumbling creatures evolve basic bloks genetic algorithms creature labs behavior control insects artificial electrical stimulation tokyo research ecosystems biota bigger compilation artificial life links computer vision active vision inria france slow link basic image processing functions visioneering res lab image processing functions web aai systems image processing image recognition computers watching football mit object recognition driving assistance mercedes face recognition face recognition cmu faceit identix trueface miros facedetection illinois facedetection carnegie mellon image databases ibm virage kodak image info illustra image guided surgery mit image processing live video sources mit miscellaneous computer vision demos telepresence north carolina penn cmu virtualized reality cmu expert systems electronic steering control system mercedes easy diagnosis medical diagnosis system screening applications shyster pragmatic legal expert system australian national intellipath medical diagnosis system list applications medical field screening applications graduate school game design playing game resources card game computer players chinook checkers player alberta deep blue chess player ibm td-gammon backgammon player pousse mit -puzzle tetris programming designing video games techniques current games card game computer players hoyle intelligent game playing system miscellaneous algorithms examples game design mythii human-computer interaction intelligent rooms mit aire agent-based intelligent reactive environment embedded computation observe participate normal everyday events occurring world array sensors variety computer vision speech gesture recognition systems people interact naturally adaptive house colorado boulder aware home georgia tech cybermanor internet home alliance mavhome texas arlington prima inria smart spaces lab national institute standards technology virtual pat virtual personal aerobics trainer mit prototype system implementing virtual personal aerobics trainer pat presented system user create personalize aerobics session meet user desires media technology computer vision algorithms enhance interaction character enabling watch talk user intelligent web applications ahoy finder people homepages web fab web page recommender-faq finder locates answers frequently asked questions firefly personalized recommendations movies music jango personal shopping assistant product availability price information mysimon personalized shopping agent smart computing smart shopping finance chatter agents web dealtime personal shopping assistant product availability price information letizia web browsing assistant metacrawler meta-search engine alicebot winner chatterbot contest referralweb locates experts specific topics wisewire personalized recommendations web documents gender test guesses gender kind knn classifier lifestyle finder recommends documents matching interests metacrawler meta-search engine neurostudio chatterbots solutions e-commerce web-based support entertainment referralweb locates experts specific topics savvysearch meta-search engine syskill webert learns taste web pages wisewire personalized recommendations web documents machine learning alvinn autonomous vehicle navigation neural nets cmu alvinn neural networks learn visual servoing watches person drive minutes driving alvinn trained drive dirt paths single-lane country roads city streets multi-lane highways images vehicles videos alvinn action successor alvinn called ralph core system drove vehicle autonomously miles pittsburgh san diego averaging miles hour day night rain shine common lisp hypermedia server mit server created lisp inductive learning ability natural language processing techniques answer questions jam columbia multi-agent meta-learning fraud-prevention system monitoring financial transaction networks ice neural nets hot list intro material artificial neural networks java demonstrations mobal gmd integrated workbench construction adaptive knowledge-based systems data mining first-order techniques ilp neuroon-line product complete graphical object-oriented software tool kit building neural network applications applying dynamic environments vision sunderland vision projec vibration interpretation simulation intelligence networks utilizes incorporation neural networks knowledge-based systems techniques whale identification decision tree webwatcher cmu natural language processing alta vista babel fish translation program kpml komet-penman multilingual development environment system developing maintaining large-scale sets multilingual systemic-functional linguistic descriptions megahal won place loebner contest program carry human-like conversation users pertinence text summarization start natural language question answering mit english questions artificial intelligence laboratory natural language system called start snapshots question viewing answer chat natural language system communications canada chat conversational hypertext access technology computer program developed communications research centre easy access electronic information chat natural-language interface users english questions receive answers julia cmu megahal won place loebner contest program carry human-like conversation users netsumm text summarizer web pages british telecom simulated conversation lehigh robotics cybercars artificial intelligence robotics project air italy politecnico milano r-gator autonomous unmanned ground vehicle autonomous undersea systems cog shop mit cog shop builds maintains experiments cog humanoid robot dante walking robot cmu cmu field robotics center frc developed dante tethered walking robot explored spurr aleutian range alaska volcano july 
robotic explorers dante opens era field techniques enabling scientists remotely conduct research exploration demonstration robot motion planning algorithms minnesota kismet robot social interactions humans mit minerva robotic tour guide cmu bonn minerva intelligent mobile robot tour-guide moves daily crowds smithsonian national museum american history homepage cmu miscellaneous robot demos mobile robot navigation stereo vision jpl nasa jsc mobile robot lab recently demonstrated integration stereo vision system mobile robot purpose people robots stereo system constantly feeding updated coordinates agent tracked mobile robot system mobile robot takes coordinates goal positions attempts attain goal position avoiding obstacles sonar sensors robot tele-operation usc mercury project users tele-operate robot arm moving terrain filled buried artifacts ccd camera pneumatic nozzle mounted robot users select viewpoints direct short bursts compressed air terrain users excavate regions sand positioning arm delivering burst air viewing newly cleared region tracking grasping moving objects columbia coordination organism sensing modalities motor control system hallmark intelligent behavior pursuing goal building integrated sensing actuation system operate dynamic opposed static environments system building multi-sensor system integrates work real-time vision robotic arm control stable grasping objects attempts resulted system track stably grasp moving model train real-time vision-based robotics estimation northwestern research lab speech apple english speech recognizer speech synthesizer english spanish bell lab text-to-speech synthesis software wave search compaq decface talking synthetic face dec diplomat cmu speech-to-speech translation system dragon naturally speaking products dragon systems janus spontaneous translation spoken languages cmu speech translation projects lti laureate text-to-speech synthesis system british telecom lyon information transcript mit pegasus speech understanding systems american airlines eaasy sabre reservation system project listen cmu speech wear project cmu viavoice ibm theorem proving eqp theorem prover proved long-standing mathematical conjecture algebra called robbins problem miscellaneous ai-aided applications artist artist artificial intelligence-aided synthesis tool ai-aide sound design system decision theory adaptive systems microsoft lists aaai show time list nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
intro wisconsin madison nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page supplementary reading general info scores date syllabus started e-mail archive readings homework examinations handouts lecture notes demos reading photo gallery courses links nbsp introduction artificial intelligence spring supplementary reading introduction past present future mccarthy history promise waltz rethinking artificial intelligence winston mit lab report century intelligent systems grosz davis role intelligent systems national information infrastructure weld ai-related web sites organized chapters textbook search ovarian cancer diagnosis genetic algorithms protomic patterns serum identify ovarian cancer lancet feb clinical proteomics program databank datasets description genetic algorithm details special issue game playing artificial intelligence textbooks dean allen aloimonos artificial intelligence theory practice benjamin cummings redwood city good chapters search learning ballard introduction natural computation mit press cambridge mass emphasizes computational issues modeling brain luger stubblefield artificial intelligence structures strategies complex problem solving addison-wesley reading mass introductory examples rich knight artificial intelligence mcgraw-hill york good sections representation ginsberg essentials artificial intelligence morgan kaufmann san mateo good presentation logic winston artificial intelligence addison-wesley reading mass good sections search rules learning tanimoto elements artificial intelligence common lisp freeman york genesereth nilsson logical foundations artificial intelligence morgan kaufmann san mateo shapiro encyclopedia artificial intelligence wiley york nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
intro wisconsin madison nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page courses general info scores date syllabus started e-mail archive readings homework examinations handouts lecture notes demos reading photo gallery courses links nbsp introduction artificial intelligence spring intro courses arizona state brown cambridge virtual lecture project carnegie-mellon columbia cornell duke georgia tech harvard indiana iowa state mit middlebury college york purdue rensselaer polytechnic institute rice stanford state york buffalo temple british columbia california irvine pazzani bay california berkeley illinois massachusetts missouri rolla michigan minnesota nottingham texas rochester virginia washington wisconsin dyer shavlik skrentny zhu villanova yale chuck dyer wisconsin introduction artificial intelligence home page nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
photo gallery section spring photo gallery david ben bliss john byrne chris carey christian brett christiansen sean epping jerry federspiel nate fillmore daniel geil marcus gilchrist garrett griffiths yun guan henry halim tristan halvorson jelani harris larry hendrix lijie heng robert hoelz steve hollinger andrew lederer mark lenz corey losenegger matthew mella theodore mierzwinski akichika ozeki dan perron dave plonka joseph reinemann daniel schobert adam schreiner lenny sirivong jon steinich edwin tjondrokusumo patricia toledo mikah trent mark vandeweghe james vogelsang chris waclawik mike weiss kerry widder zac witte derek yadgaroff josh zimmerman rob zirkel 
intro wisconsin madison nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page links interest general info scores date syllabus started e-mail archive readings homework examinations handouts lecture notes demos reading photo gallery courses links nbsp introduction artificial intelligence spring chuck dyer links interest ai-related courses ece theory applications pattern recognition ece image processing bmi introduction bioinformatics advanced methods artificial intelligence illustrative biomedical applications page machine learning shavlik computer vision dyer bmi advanced bioinformatics ece robot motion planning introduction robotics movies related game kasparov machine artificial intelligence fast cheap control hal legacy space odyssey terminator patriot games ai-related links interest seminar schedule group computer vision group machine learning group robotics group qualifying exam links department undergraduate majors graduate students faculty staff directory students faculty staff madcat library catalog uw-madison doit ai-related resources web repository cmu topics aaai education repository resources national research council canada resources chapters russell norvig textbook virtual library frequently-asked questions faqs bibliography server programming languages including lisp faqs computer vision resources neural network resources robotics resources career planning graduate school colleges universities world computer science departments world peterson guides computer science programs speaking writing research survival skills list waterloo tips graduate school univ washington advice research writing cmu writing lab purdue oral presentation advice jobs acm career information ieee career services companies internet job locator job hunt careerpath careermosaic america job bank employment edge career advising planning services caps computer science jobs nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
introduction artificial intelligence wisconsin madison nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page general info scores date syllabus started e-mail archive readings homework examinations handouts lecture notes demos reading photo gallery courses links nbsp introduction artificial intelligence spring instructor chuck dyer office computer sciences building telephone e-mail dyer wisc office hours tuesdays thursdays appointment teaching assistant yu-chi lai office computer sciences building telephone e-mail yu-chi wisc office hours mondays wednesdays appointment schedule lecture mwf room computer sciences building prerequisite textbook artificial intelligence modern approach edition russell norvig prentice hall englewood cliffs grading midterm exam final exam homework assignments note typically final grades distributed approximately recent semesters taught interpret rough guidelines scores cluster differently semester semester median student grade low high percentiles refer ranking class based final weighted score top class examinations midterm wednesday march room final monday room homework assignments homework assignments include written problems programming java accounts provided computer science department instructional unix workstations located rooms late penalties assignments due class due date day late defined -hour period noon noon day weekday weekend result total points assignment deducted assignment due wednesday handed wednesday thursday penalty deducted days late days late homework turned days late total free late days semester penalty academic integrity examinations programming assignments written homeworks individually cheating plagiarism dealt accordance procedures academic misconduct guide code programming assignments developed groups code shared encouraged discuss peers tas instructor ideas approaches techniques broadly level detail specific implementation issues questions instructor act web page http wisc dyer class e-mail alias compsci lists wisc class e-mail archive nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
introduction artificial intelligence wisconsin madison nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page general info scores date syllabus started e-mail archive readings homework examinations handouts lecture notes demos reading photo gallery courses links nbsp introduction artificial intelligence spring instructor chuck dyer office computer sciences building telephone e-mail dyer wisc office hours tuesdays thursdays appointment teaching assistant yu-chi lai office computer sciences building telephone e-mail yu-chi wisc office hours mondays wednesdays appointment schedule lecture mwf room computer sciences building prerequisite textbook artificial intelligence modern approach edition russell norvig prentice hall englewood cliffs grading midterm exam final exam homework assignments note typically final grades distributed approximately recent semesters taught interpret rough guidelines scores cluster differently semester semester median student grade low high percentiles refer ranking class based final weighted score top class examinations midterm wednesday march room final monday room homework assignments homework assignments include written problems programming java accounts provided computer science department instructional unix workstations located rooms late penalties assignments due class due date day late defined -hour period noon noon day weekday weekend result total points assignment deducted assignment due wednesday handed wednesday thursday penalty deducted days late days late homework turned days late total free late days semester penalty academic integrity examinations programming assignments written homeworks individually cheating plagiarism dealt accordance procedures academic misconduct guide code programming assignments developed groups code shared encouraged discuss peers tas instructor ideas approaches techniques broadly level detail specific implementation issues questions instructor act web page http wisc dyer class e-mail alias compsci lists wisc class e-mail archive nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
computer vision wisconsin madison nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page general info final grades syllabus readings homework projects lecture notes examinations handouts computers software supplementary reading class photo gallery courses links vision demos e-mail archive e-mail class list nbsp computer vision fall instructor chuck dyer office computer sciences building telephone e-mail dyer wisc office hours mondays wednesdays appointment teaching assistant yu-chi lai office computer sciences building telephone e-mail yu-chi wisc office hours tuesdays thursdays appointment description introduction basic concepts computer vision introduction low-level image analysis methods including image formation edge detection feature detection image segmentation image transformations warping morphing mosaics image synthesis methods reconstructing three-dimensional scene information techniques depth stereo structure motion shape shading motion video analysis three-dimensional object recognition schedule tuesdays thursdays engineering hall prerequisites calculus linear algebra grading exam homework assignments project textbook computer vision modern approach forsyth ponce prentice hall upper saddle river readings collection additional readings journals conference proceedings online web page wisc dyer html class e-mail list compsci lists wisc class e-mail archive nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
letter exam grade average maximum minimum median 
computer vision wisconsin madison nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page syllabus general info final grades syllabus readings homework projects lecture notes examinations handouts computers software supplementary reading class photo gallery courses links vision demos e-mail archive e-mail class list nbsp computer vision fall syllabus week starting topics reading introduction computer vision marr paradigm scene reconstruction paradigms image analysis image formation image geometry radiometry digitization image formation cont binary image analysis segmentation properties digital geometry segmentation binary image analysis segmentation cont image processing feature detection image synthesis edge detection corner detection line curve detection sift operator image-based modeling rendering mosaics snakes image processing cont image processing cont stereo shape exam tentatively thursday shape shading photometric stereo texture occluding contour detection shape cont motion analysis motion detection optical flow structure motion motion analysis cont exam tentatively thursday object recognition model-based methods appearance-based methods invariants object recognition cont readings refer chapters textbook computer vision modern approach forsyth ponce prentice hall included additional readings sources listed online list readings nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
computer vision wisconsin madison nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page reading assignments general info final grades syllabus readings homework projects lecture notes examinations handouts computers software supplementary reading class photo gallery courses links vision demos e-mail archive e-mail class list nbsp computer vision fall reading assignments chapter chapter chapter chapters papers gee cipolla stereo vision handout cambridge formatted paper shrink fit printing dyer volumetric scene reconstruction multiple views foundations image understanding davis kluwer boston chapters papers szeliski shum creating full view panoramic image mosaics environment maps proc siggraph szeliski video mosaics virtual environments ieee computer graphics applications heckbert projective mappings image warping fundamentals texture mapping image warping master thesis california berkeley computer science division eecs department june estrada sift tutorial toronto chapters huttenlocher notes edge detection pdf cornell active contour models snakes sonka hlavac boyle fast introduction fast marching methods level set methods sethian including linked pages fast marching methods level set methods image segmentation examples chapters chapters cipolla gee notes projection -up pdf -up formatted paper resize printing cambridge nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
computer vision wisconsin madison nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page homework assignments general info final grades syllabus readings homework projects lecture notes examinations handouts computers software supplementary reading class photo gallery courses links vision demos e-mail archive e-mail class list nbsp computer vision fall homework assignments general information frequently-asked questions faqs homework assignments e-mailed class alias compsci lists wisc entire archive list e-mail class semester class e-mail archive note access archive requires username password programming assignments implemented programming language machine choosing including java matlab image viewers imagemagick installed instructional machines viewing image format conversion path variable modified access imagemagick information image file formats pgm ppm pbm ppm pgm pbm image file descriptions web lots test images public images vision images external web sites collection test images cmu video sequences caviar project hand-labeled ground truth lots computer vision software handin directory setup instructions edit cshrc local file home directory add line set path path handin bin ready hand source code wrote assignment run command handin assignment directory assignment assignment directory path directory files submit located homework camera projection calibration rectification due thursday september computing plane projective transformations part online tutorial geometric framework vision single-view two-view geometry zisserman cvonline computing general projective camera matrix robyn owens cvonline matlab matlab tutorial utah matlab primer postscript pages sample results fall solution homework image segmentation shift clustering due tuesday october read main ideas shift algorithm paper shift robust approach feature space analysis comaniciu meer ieee trans pattern analysis machine intelligence errata page paper note read understand mathematical parts paper extra credit part read paper robust efficient skeletal graphs dimitrov phillips siddiqi proc computer vision pattern recognition conf vol collection binary test images found http lems brown dmc main html sample results fall solution mohammed eldawy homework mosaicing video due thursday november read papers szeliski video mosaics virtual environments ieee computer graphics applications szeliski shum creating full view panoramic image mosaics environment maps proc siggraph heckbert projective mappings image warping fundamentals texture mapping image warping thesis california berkeley read information klt tracker run local copy vision ip-tools klt-tracker read description ransac algorithm section pages textbook test image sequences directory public images video sequences caviar project hand-labeled ground truth hints faqs sample results fall students results fall results students fall panoramic image mosaicing mosaicing links commercial panoramic mosaic viewers panoguide resource mosaicing software links advice creating mosaics list research products omnidirectional cameras quicktime apple hotmedia ibm photovista iseemedia ipix internet pictures fall solution steve jackson homework project due dates tentative title abstract tuesday november submitted electronically class presentations tuesday december thursday december presentations minutes minutes questions present main problem motivation illustrative method preliminary planned results tuesday december steve jackson brian byrne anne jorstad cody robson peng wang thursday december mohamed eldawy david hoffert kerry widder yoh suzuki tim bahls final paper web page tuesday december projects semester projects previous semesters good projects previous semesters clustering images latent dirichlet allocation model pradheep elango karthik jayaraman fall reflectance function approximation material classification ted wild fall texture synthesis non-fronto-parallel textures saurabh goyal fall pictorial structures pattern recognition x-ray crystallographic electron density maps frank dimaio fall segmentation human brain cortical surface mesh watersheds kathleen marty fall polynomial texture maps implementation alex mohr fall application level set methods segmentation problem medical imagery fan ding juan xie fall fall projects fall projects fall projects fall projects projects microsoft research cambridge serve ideas inspiration additional project ideas washington additional project ideas stanford additional project ideas cmu additional project ideas cornell additional project ideas surrey supplementary readings additional papers select topic mit research project summaries short summaries good examples organize paper presentation nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 

computer vision wisconsin madison nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page lecture notes general info final grades syllabus readings homework projects lecture notes examinations handouts computers software supplementary reading class photo gallery courses links vision demos e-mail archive e-mail class list nbsp computer vision fall lecture-related materials marr paradigm slides -up pdf image formation image formation slides -up pdf cipolla gee notes projection -up pdf -up formatted paper resize printing cambridge additional slides perspective projection types projection -up pdf -up pdf supplementary optional sources projection projective geometry computer vision banerjee iit delhi geometric framework vision single-view two-view geometry zisserman cvonline camera calibration notes owens western australia homogeneous coordinates bloomenthal rokne calgary supplementary pat hanrahan notes signal processing pdf stanford segmentation binary image processing segmentation slides -up pdf -up pdf normalized cut algorithm image segmentation slides -up pdf -up pdf active contours snakes slides -up pdf supplementary active contour models snakes sonka hlavac boyle level sets slides -up pdf -up pdf powerpoint file supplementary fast introduction fast marching methods level set methods sethian including linked pages fast marching methods level set methods image segmentation examples feature detection matching edge detection slides adapted slides davis maryland -up pdf -up pdf supplementary cipolla gee notes edge detection -up pdf -up formatted paper resize printing cambridge huttenlocher notes edge detection pdf cornell feature detection matching slides -up pdf -up pdf supplemenary hough transform sussex color slides chenney wisconsin -up pdf image-based rendering image-based rendering slides -up pdf -up pdf slides resampling homography light field rendering slides stanford stereo stereo slides -up pdf -up pdf updated gee cipolla notes stereo cambridge comparison stereo algorithms middlebury college stereo sussex tutorial code stereo rectification epipolar geometry fundamental matrix cvonline learning epipolar geometry inria description zitnick kanade stereo algorithm voxel coloring slides -up pdf -up pdf motion motion slides -up pdf -up pdf motion sussex layers slides -up pdf -up pdf condensation algorithm slides -up pdf -up pdf object recognition slides geometry-based object recognition slides -up pdf -up pdf appearance-based object recognition slides -up pdf -up pdf learning object category slides -up pdf -up pdf shape shading slides -up pdf photometry radiometry tour guide computer graphics enthusiats adapted radiosity programmer perspective ashdown wiley york texture contour slides -up pdf -up pdf shape circular motion apparent contours -up pdf -up nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
student projects fall fall student projects tim bahls segmentation assymetrical blurring order segmenting real world applications fast robust means shouldn individual parameters set image pre-determined number segments assumption objects color describe implement robust segmenter improving methods worked scharstein szeliski image iteratively blurred increasing differences segments decreasing differences inside single segment resulting image segmented segmenter improve increase speed blurring larger windows smarter rates blurring brian byrne pocket detection protein molecules quadratic surfaces active binding site locations protein molecules characterized structurally pockets cavities present molecule surface fitting quadratic surfaces protein representative mesh varying locality computing spline coefficients fast approximation object curvature constructed computationally quick efficient evaluate surface areas depressions variable size grouping neighboring depressions generate estimations potential ligand binding sites information webpage mohamed eldawy creating perception driven illustrations photographs good information design depends clarifying meaningful structure image aim devise computational approach stylizing abstracting photographs explicitly responds design goal creating good abstract image requires accentuation main aspects image deminishing irrelevant parts correctly reduces perceptual cognitive effort required understand image problem hard image pixels figure main aspects image part problem people focus parts image depending expecting project creating implementing algorithm stylizing image takes image input takes runs peek-a-boom game major advantage figure important areas image algorithm incorporates information stylization process previous stylization approaches haeberli account perception information approaches decarlo eye tracking information aid constructing illustrations hertzmann hertzmann users sketch important areas photograph applications approach prominent image search engines displaying thumbnails results results displayed illustrations illustrations information keeping important information easier fathom pleasing application merging objects pictures minimizing loss details decarlo santella stylization abstraction photographs proc siggraph von ahn peekaboom game locating objects images proc sigchi conference human factors computing systems haeberli paint numbers abstract image representations proc siggraph david hoffert simplistic intelligent vehicle control real-time stereo vision essential criterion autonomous vehicle collide objects environment system image-based control important information extract input images depth algorithm prioritize objects avoid steering stereo vision desirable feature autonomous vehicle real-time nature navigational challenge limits stereo techniques implementation project sought implement real-time stereo algorithm definite occlusion labeling proposed microsoft research group referenced simplistic step data navigation algorithm calculate frame optimum direction steer vehicle avoid obstacles detected frame accomplished finding optimal x-coordinate maximizes distance significant areas foreground defined threshold depth map produced stereo reconstruction scene implementation failed reproduce real-time characteristics microsoft algorithm fact time run algorithm frame fatal bug destroyed information exchange components program discovered late run program data output algorithm presented comments running time algorithm improvements working version code presented information webpage steve jackson synthesizing satellite images analogy medium-resolution satellite imagery freely land masses planet digital elevation maps readily project propose method synthesizing realistic satellite image land form based land form elevation map synthesis elevation map satellite image separate land form build image work builds existing techniques texture transfer so-called image analogies technique applied realistic aerial photos called games flight simulators information webpage anne jorstad detecting rigid objects variable structure problem detecting objects optional repeated parts requires exhaustive searching layout independently project implement method models variable structures set states relations allowing single structure represent entire class objects detected detected feature correspondences compared state relations model globally optimal correspondence sought method studied depth leaves stem number location priori cody robson implementation fast median bilateral filtering project focused implementation paper year siggraph conference entitled fast median bilateral filtering weiss primary contribution computer vision paper proposes workings median bilateral filtering method window operation moved image specifically extends previous work paper huang entitled two-dimensional signal processing transforms median filters median bilateral filters work simply apply dimensional kernel image data set move kernel produce results pixel window size radius amount thought put move window computation weiss figures computing multiple columns sharing central window nearby columns redundant calculations compared huang algorithm huang algorithm extended multiple columns overlapping windows data solving number columns compute speed increase huang original multi-column approach realized information webpage yoh suzuki real-time stereovision system input device future video game designers pioneers world exciting technologies create ways user communicate computer nintendo wii features innovative input remote gamer swing slash point jab feasible imagine video game designer promote sort input device user body movement orientation words body language communicate effortlessly computer input device dual-camera rig stereo-vision interpretation software designed figure body orientation started work proving feasible device gather information rig frame rate acceptable situation requires seemingly instantaneous response wrote program pull images webcams quickly compute strong edges features match images work involve writing software compute depth map identify positions hands torso head provide input operating system processes researching hardware speedups process peng wang grabcut interactive foreground extraction efficient interactive foreground background segmentation images great interest computer vision approach based optimization graph-cut developed recently combines texture edge information project method proposed rother implemented extension original graph-cut method powerful iterative version optimization developed power iterative algorithm simplify substantially user interaction method expected successful wide variety moderately difficult images information webpage rother kolmogorov blake grabcut interactive foreground extraction iterated graph cuts microsoft research cambridge kerry widder summation invariants face recognition summation invariants class image feature developed recently lin shown invariant group transformations summation invariant derived euclidean transformation invariant euclidean transformations invariant features applied problem face recognition project involves deriving family summation invariants technique developed lin derivation documented detail invariants tested curve euclidean transformations test validates invariance invariance doesn necessarily imply good discriminating ability experimentation test discrimination performance summation invariants features compared previously derived discriminate faces performance family summation invariants similar set previously derived back home page 
computer vision wisconsin madison nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page exams general info final grades syllabus readings homework projects lecture notes examinations handouts computers software supplementary reading class photo gallery courses links vision demos e-mail archive e-mail class list nbsp computer vision fall examinations midterm exam thursday november class note late ending time covers readings point semester including chapters includes notes projection cipolla gee notes edge detection huttenlocher notes cipolla gee stereo vision sift tutorial paper szeliski video mosaics virtual environments paper comaniciu meer shift algorithm notes sonka snakes notes sethian level sets fast marching method responsible paper dyer volumetric scene reconstruction paper szeliski shum paper heckbert paper dimitrov parts assigned reading textbook covers material readings homeworks covers lectures lecture notes material covered class november main topics covered marr paradigm camera models projective perspective orthographic weak perspective affine homogeneous coordinates rigid body transformation camera calibration matrix vanishing points vanishing aka horizon lines properties camera projection models intrinsic extrinsic camera parameters camera calibration problem shannon sampling theorem nyquist rate aliasing false contours digitization sampling quantization cipolla gee projection handout segmentation problem segmentation thresholding mode method p-tile method adaptive thresholding recursive thresholding digital geometry neighbors adjacency connected components border hole connected component labeling run-length coding medial axis transform mat distance transform thinning quadtrees digital metrics k-means segmentation shift segmentation normalized cut segmentation snakes active contours level sets fast marching segmentation intensity edges edge detection goals edge operator properties linear separable derivative edge operators gradient roberts prewitt sobel smoothing median gaussian convolution non-maxima suppression canny edge operator hysteresis thresholding derivative edge operators laplacian marr-hildreth dog zero-crossings scale space pyramids gaussian laplacian oriented corner detection harris tomasi kanade sift keypoint detector sift descriptor cross-correlation hough transform mosaics cross-correlation matching ssd matching snakes level sets epipolar geometry fundamental matrix essential matrix constraints stereo correspondence rectification multi-baseline stereo exam solution exam tentatively thursday november class note late ending time covers subset readings assigned october chapters szeliski paper dyer paper gee cipolla handout stereo covers material homework covers major topics covered lecture lecture notes including epipolar geometry fundamental matrix essential matrix constraints stereo correspondence rectification multi-baseline stereo shape silhouettes voxel coloring hough transform mosaics cross-correlation matching ssd matching snakes level sets klt tracker optical flow affine structure motion factorization method model-based object recognition alignment method pose clustering geometric hashing eigenfaces appearance-based object recognition exam emphasize qualitative understanding material format exam cover topics time including readings textbook papers homework assignments bring exam sheet paper notes sides bring calculator exam exam focus main ideas algorithms derivations proofs exams types questions asked exams exam fall exam solution fall exam fall exam solution fall exam fall exam solution fall exam fall nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
computer vision wisconsin madison nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page computers software general info final grades syllabus readings homework projects lecture notes examinations handouts computers software supplementary reading class photo gallery courses links vision demos e-mail archive e-mail class list nbsp computer vision fall computer accounts software image databases accounts accounts instructional unix workstations accounts linux machines room class account disk space quota store images homeworks project delete images compress gzip order save space compsci lists wisc class including instructor image processing display software irfanview irfanview free image viewer windows gimp gimp gnu image manipulation program installed locally std bin gimp imagemagick imagemagick image display tool executables man pages installed locally imagemagick command display versatile alternative add imagemagick bin path variable gandalf gandalf computer vision numerical algorithm library written develop applications portable run fast img basic image processing operations invoked unix-like command lines code executables manual vision ip-tools imgstar add vision ip-tools imgstar bin path variable intel computer vision library image processing computer vision algorithms optimized run intel microprocessors intel image processing library matlab matlab numeric computation visualization environment image processing signal processing toolboxes matlib tutorial univ utah matlab basics rpi matlab primer postscript pages microsoft vision sdk library library writing image processing computer vision programs microsoft windows machines netpbm toolkit conversion images large variety formats based pbmplus package web site list commands man pages including descriptions image file formats pgm pbm pnm ppm installed std bin pbm bin vista vista image package based library basic image display processing commands enables programs written linked library stored locally vision ip-tools vista man pages vision ip-tools vista man executables vision ip-tools vista bin add manpath path variables access man pages vista vtutorial vindex vlib information documentation manuals online instructions started vista local information setting things correctly interactive image display program window system displaying editing images variety formats installed std bin test images test images put directory public images require format conversion images put vision images numerous image databases accessible web collection test images cmu thinker imagebase fine arts museum san francisco nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
class photo gallery fall class photo gallery tim bahls brian byrne mohamed eldawy david hoffert steve jackson anne jorstad cody robson yoh suzuki peng wang kerry widder 
computer vision wisconsin madison nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page supplementary readings general info final grades syllabus readings homework projects lecture notes examinations handouts computers software supplementary reading class photo gallery courses links vision demos e-mail archive e-mail class list nbsp computer vision fall supplementary reading sources computer vision textbooks ballard brown computer vision prentice-hall englewood cliffs faugeras three-dimensional computer vision mit press cambridge mass faugeras q-t luong geometry multiple images mit press cambridge mass forsyth ponce computer vision modern approach prentice-hall upper saddle river haralick shapiro computer robot vision vols addison-wesley reading mass hartley zisserman multiple view geometry computer vision cambridge press cambridge horn robot vision mcgraw-hill york jain kasturi schunck machine vision mcgraw-hill york klette schluns koschan computer vision three-dimensional data images springer-verlag singapore soatto kosecka sastry invitation vision springer york nalwa guided tour computer vision addison-wesley reading mass shapiro stockman computer vision prentice-hall upper saddle river snyder machine vision cambridge press cambridge sonka hlavac boyle image processing analysis machine vision brooks cole publishing pacific grove trucco verri introductory techniques computer vision prentice-hall upper saddle river watt policarpo computer image addison-wesley harlow image processing textbooks castleman digital image processing prentice-hall englewood cliffs gonzalez woods digital image processing prentice hall upper saddle river jain fundamentals digital image processing prentice hall englewood cliffs petrou bosdogianni image processing fundamentals wiley chichester pratt digital image processing wiley york russ image processing handbook crc press boca raton computer vision monographs aloimonos shulman integration visual modules extension marr paradigm academic press york blake isard active contours application techniques graphics vision control theory statistics visual tracking shapes motion springer london criminisi accurate visual metrology single multiple uncalibrated images springer london grimson object recognition computer role geometric constraints mit press cambridge mass koenderink solid shape mit press cambridge mass maccormick stochastic algorithms visual tracking springer london marr vision freeman san francisco wandell foundations vision sinauer sunderland mass zhang epipolar geometry stereo motion object recognition kluwer boston paper collections general bowyer ahuja eds advances image understanding ieee computer society press los alamitos davis foundations image understanding kluwer boston fischler firschein eds readings computer vision morgan kaufmann los altos kasturi jain eds computer vision principles computer vision advances applications ieee computer society press los alamitos medioni kang eds emerging topics computer vision prentice hall upper saddle river paper collections special topics aloimonos active perception lawrence erlbaum hillsdale benosman kang eds panoramic vision sensors theory applications springer york blake yuille eds active vision mit press cambridge mass brown terzopoulos eds real-time computer vision cambridge press cambridge ikeuchi sato eds modeling reality kluwer norwell mass jain flynn eds three-dimensional object recognition systems elsevier amsterdam mundy zisserman eds geometric invariance computer vision mit press cambridge mass osher paragios eds geometric level set methods imaging vision graphics springer york schreer kauff sikora eds videocommunication algorithms concepts real-time systems human centred communication wiley hoboken shah jain motion-based recognition kluwer boston wolff shafer healey eds physics-based vision principles practice volumes shape recovery radiometry color jones bartlett boston papers sensors kempainen cmos image sensors eclipsing ccds visual information edn access october blinn world digital video ieee computer graphics applications blinn ntsc nice technology super color ieee computer graphics applications besl active optical range image sensors machine vision applications sinha jain range image analysis handbook pattern recognition image processing computer vision young academic press york photometry radiosity ashdown photometry radiometry tour guide computer graphics enthusiasts adapted radiosity programmer perspective ashdown wiley image processing human-computer interface waters rehg loughlin kang terzopoulos visual sensing humans active public interfaces workshop computer vision man-machine interfaces quek eyes interface image vision computing tomasi guibas image descriptions browsing retrieval proc image understanding workshop freeman roth orientation histograms hand gesture recognition proc int workshop automatic face gesture recognition freeman weissman television control hand gestures proc int workshop automatic face gesture recognition rehg kanade digiteyes vision-based human hand tracking cmu cmu-cs- cipolla uncalibrated stereo vision pointing man-machine interface machine vision applications file called cipolla mva gee cipolla non-intrusive gaze tracking human-computer interaction proc mechantronics machine vision practice file called gee mmvip gee cipolla determining gaze faces images cambridge technical report cued f-infeng file called gee gee cipolla fast visual tracking temporal consensus cambridge technical report cued f-infeng file called gee yacoob lam davis recognizing faces showing expressions proc int workshop gesture face recognition papers yacoob web mosaics szeliski panoramic image mosaicing technical report msr-tr- microsoft research szeliski image mosaicing tele-reality applications dec crl technical report szeliski kang direct methods visual scene reconstruction proc workshop representation visual scenes kang weiss characterization errors compositing panoramic images proc computer vision pattern recognition conf kumar anandan irani bergen hanna representation scenes collections images proc workshop representation visual scenes hansen anandan dana van der wal burt real-time scene stabilization mosaic construction proc image understanding workshop burt anandan image stabilization registration mosaic proc image understanding workshop irani peleg improving resolution image registration computer vision graphics image processing graphical models image processing chen quicktime image-based approach virtual environment navigation proc siggraph mcmillan bishop plenoptic modeling image-based rendering system proc siggraph mcmillan acquiring immersive virtual environments uncalibrated camera north carolina technical report mann picard video orbits projective group perspective image mosaicing mit media lab technical report trview synthesis image-based rendering zhang chen survey image-based rendering representation sampling compression technical report amp electrical computer engineering department cmu june debevec gortler mcmillan szeliski bregler siggraph image-based modeling rendering wolberg digital image warping ieee computer society press los alamitos chen quicktime image-based approach virtual environment navigation proc siggraph mcmillan bishop plenoptic modeling image-based rendering system proc siggraph mcmillan acquiring immersive virtual environments uncalibrated camera north carolina technical report mann picard video orbits projective group perspective image mosaicing mit media lab technical report trp debevec gortler mcmillan szeliski bregler siggraph image-based modeling rendering s-y lee k-y chwa shin wolberg image metamorphosis snakes free-form deformations proc siggraph chen williams view interpolation image synthesis proc siggraph seitz dyer photorealistic scene reconstruction voxel coloring proc computer vision pattern recognition conference seitz dyer view morphing proc siggraph seitz dyer image-based scene representation view morphing 
proc int conf pattern recognition vol track computer vision seitz dyer physically-valid view synthesis image interpolation proc workshop representation visual scenes kang survey image-based rendering techniques technical report dec cambridge research lab kang desikan virtual navigation complex scenes clusters cylindrical panoramic images technical report dec cambridge research lab nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
computer vision wisconsin madison nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page vision courses general info final grades syllabus readings homework projects lecture notes examinations handouts computers software supplementary reading class photo gallery courses links vision demos e-mail archive e-mail class list nbsp computer vision fall computer vision related courses boston college boston brown black visual thinking visual computing van dam spalter caltech photography computational theory neuronal mechanisms sensory info proc carnegie mellon city york spring fall clemson columbia cornell huttenlocher cvonline computer vision online notes edinburgh duke georgia tech hebrew johns hopkins vision-based interaction khoros digital image processing online lund sweden mit adelson perceptual grouping darrell computer vision applications darrell vision interface surveillance sinha object face recognition mcgill shape analysis fundamentals national singapore northwestern image-based modeling rendering penn state rensselaer polytechnic institute math vision stewart royal institute sweden rutgers perception seminar stanford thrun fall appearance models swarthmore college alberta arizona birmingham california berkeley appearance models malik kosecka applications forsyth california los angeles california san diego belongie kriegman kriegman california santa barbara central florida guelph illinois urbana-champaign kriegman geometric approach kentucky maryland davis pless pless jacobs neumann davis minnesota north carolina photography pollefeys computer vision gerig pennsylvania rochester nelson kutulakos southern california nevatia nevatia sussex toronto utah henderson brdf seminar shirley washington seitz szeliski weizmann institue wright state goshtasby york list computer vision courses compiled rpi bruce maxwell list computer vision courses nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
computer vision wisconsin madison nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page links general info final grades syllabus readings homework projects lecture notes examinations handouts computers software supplementary reading class photo gallery courses links vision demos e-mail archive e-mail class list nbsp computer vision fall links interest computer vision home page cmu highly recommended vision papers search engine mit cvonline computer vision online notes edinburgh computer vision handbook harvey mudd college people computer vision harvey mudd college databases images vision video sequences hand-labeled ground truth edinburgh caviar project face database cmu face database cambridge texture database mit computer vision companies ubc biological vision dictionary boston numbers biological vision stanford optical illusions illusionworks optical illusions eyetricks computer vision related job announcements nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
computer vision wisconsin madison nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page vision demos general info final grades syllabus readings homework projects lecture notes examinations handouts computers software supplementary reading class photo gallery courses links vision demos e-mail archive e-mail class list nbsp computer vision fall vision demos projects computer vision demos cmu david stork work related david hockney conjecture early renaissance painters optical devices quicktime image mosaicing apple panoramix image mosaicing ibm image mosaicing mosaicing web links view synthesis web links view synthesis inria eigenfaces photobook face recognition mit face recognition home page face detection cmu handwriting recognition ibm omnicamera columbia video-rate stereo machine cmu virtualized reality project cmu xvision real-time tracker yale press report work qbic image database query image content ibm image database query image content virage webseer web image search engine chicago webseek web image search engine columbia scientific american article web image search engines-vanguard visualization networks graphics uncalibrated acquisition real data oxford leuven multiple-perspective interactive video ucsd image-guided surgery mit level set methods berkeley veggievision produce recognition system ibm miscellaneous computer vision demos perspective assistant david anderson stanford perspective demo lightness perception lightness illusions ted adelson mit checkerboard shadow illusion ted adelson mit optical illusions illusionworks optical illusions eyetricks illusions ramachandran ucsd optical illusions demos vision science optical illusions visual phenomena michael bach illusions london science museum visual illusions richard gregory bristol san francisco exploratorium believing scientificpsychic brain behavior serendip bryn mawr college mind games ramachandran ucsd java applets color theory lighting shading viewing techniques brown nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
computer vision wisconsin madison nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page readings general info final grades syllabus readings homework projects lecture notes examinations handouts computers software supplementary reading class photo gallery courses links vision demos e-mail archive e-mail class list nbsp computer vision fall readings collins beveridge matching perspective views coplanar structures projective unwarping similarity matching proc computer vision pattern recognition conf mortensen barrett intelligent scissors image composition proc siggraph amini weymouth jain dynamic programming solving variational problems vision ieee transactions pattern analysis machine intelligence adelson anderson bergen burt ogden pyramid methods image processing rca engineer nov dec burt adelson laplacian pyramid compact image code ieee transactions communications skim burt adelson multiresolution spline application image mosaics acm transactions graphics felzenszwalb huttenlocher efficient matching pictorial structures proc computer vision pattern recognition conf huttenlocher pictorial structures object recognition talk slides october beier neely feature-based image metamorphosis proc siggraph acm siggraph seitz dyer view morphing proc siggraph acm siggraph szeliski video mosaics virtual environments ieee computer graphics applications szeliski shum creating full view panoramic image mosaics environment maps proc siggraph heckbert projective mappings image warping fundamentals texture mapping image warping master thesis california berkeley computer science division eecs department june gortler grzeszczuk szeliski cohen lumigraph proc siggraph acm siggraph separate color pages paper page page levoy hanrahan light field rendering proc siggraph acm siggraph debevec taylor malik modeling rendering architecture photographs hybrid geometry image-based approach proc siggraph acm siggraph kass witkin terzopoulos snakes active contour models international journal computer vision kluwer publishers williams shah fast algorithm active contours curvature estimation computer vision graphics image processing image understanding kanade kano kimura yoshida kimura development video-rate stereo machine proc international robotics systems conf krotkov focusing international journal computer vision kutulakos dyer occluding contour detection affine invariants purposive viewpoint control proc computer vision pattern recognition conf ieee computer society press tomasi kanade factoring image sequences shape motion proc ieee workshop visual motion ieee computer society press longer version shape motion image streams orthography---a factorization method technical report tr- cornell march dyer volumetric scene reconstruction multiple views foundations image understanding davis kluwer boston seitz dyer photorealistic scene reconstruction voxel coloring int computer vision wang adelson representing moving images layers ieee trans image processing davis bobick representation recognition action temporal templates proc computer vision pattern recognition conf online demos black jepson eigentracking robust matching tracking articulated objects view-based representation proc european conf computer vision darrell essa pentland task-specific gesture analysis real-time interpolated views ieee transactions pattern analysis machine intelligence huttenlocher recognition alignment three-dimensional object recognition systems jain flynn eds elsevier amsterdam murase nayar visual learning recognition objects appearance international journal computer vision nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
computer vision wisconsin madison nbsp nbsp nbsp search nbsp nbsp nbsp nbsp computer science home page general info final grades syllabus readings homework projects lecture notes examinations handouts computers software supplementary reading class photo gallery courses links vision demos e-mail archive e-mail class list nbsp computer vision fall instructor chuck dyer office computer sciences building telephone e-mail dyer wisc office hours mondays wednesdays appointment teaching assistant yu-chi lai office computer sciences building telephone e-mail yu-chi wisc office hours tuesdays thursdays appointment description introduction basic concepts computer vision introduction low-level image analysis methods including image formation edge detection feature detection image segmentation image transformations warping morphing mosaics image synthesis methods reconstructing three-dimensional scene information techniques depth stereo structure motion shape shading motion video analysis three-dimensional object recognition schedule tuesdays thursdays engineering hall prerequisites calculus linear algebra grading exam homework assignments project textbook computer vision modern approach forsyth ponce prentice hall upper saddle river readings collection additional readings journals conference proceedings online web page wisc dyer html class e-mail list compsci lists wisc class e-mail archive nbsp department computer sciences wisconsin madison feedback content questions dyer wisc technical accessibility issues lab wisc copyright copy board regents wisconsin system 
jfif creator version rev quality smoothing xzf jit yuf hhl crg qoq mrb fnd ocx yqy frmv fkb wvrs lkqn oie kwty yoq sas frb gicpt hme caa cgu qvy ije fsv ice suu olvji khe ewot yvc wpe hcn pzt kkzw cdx rob ylrq pmi hzxg ekg rnj hwfeq zmd xzu zcp cls mqr rksc lpns jnb gcri vrj eoq eol pzs sua jcm qro nbcc foc wqm lsu hqp nwt nrl oiqmwq suru bus sas nkr pgy nli vdn zsn gmm aje koqo ezb 
jfif creator version rev quality smoothing utj oge wwi yca tco ouj ibg cpjd mnuu mjy -np mvj esh tfd suyv rvv z-w umz monlxq jfnw elba vexe xoo pfqlb nbs iyc ergh fsm mchq fai ooswasqae vfb tb-q hdewo mvzg oxle dhn eoo cxgr sxn mkv icf kkl womm imm kgk tmz kpkkqng gmf rtr rqj rqj kia sssr lcf yjx hwt -iv gib xcsf ukb lcg hym ooh wny hug utc ffe vqct wdg mhc ydzp vqih gijh jbhe uph jad xop 
jfif creator version rev quality smoothing jei uoo fqs inz fycc zyu kwa zjw kge vhn khvc cnn wciz ppy xkkc sxg nvelu wdyc xea usv uia ude bqg nwg wzn kin -ye fgr ixf pps uqy ecowp kkw ifq ddfq ryr wfw rzj dwi luk uoe emlqzvq iegq n-gp lsd vfu mkj xqn vlpyf cuq tuq egj gbk zdi tvf pswsq xek rfrk dvw fqq hpo vzt qvz vfr rfh vij fwc sho rsf iqrl hte qwf zvcs pqy sjs ljv ive vcfc cms euou kmr aub cnm xmd dqu jfm bny gvg nde yso olwemln 
ucb encoder xjpi lym bzj fwx wad xpp pmg ljc ahj hik eotr bbv hcs uqhd havbj brr bec elm vea fbv nxga bcwo xji tjr pnr gxp vxf ltv xgq ihi ihf bfp hihb rhc jqpl bao ozjc ggh hye ytkp crh -wd kvui kgm yhc ivf xrp lbo civ cyx -xr yis yiw qvp hkp zir ldq zbg bils jpy xon jpd hjp -ck pjy abt pahc vbw wqwn wawn plq ifp lgpsa kad zii rcr iqb hwi wqg vjov anf wsj hho huc c-y dfqluh phd tpm qiw vvw frd xbx jyz igyi xax tfoj rpu hit lie lmy pdl ndj gixn wkr nmc kuw ylgj hch hxp hjz ikd zsr fll ihw hzp wicv fll cec xbni cnn fbt cet roh fll apjl uxx lsop knh nea s-f buw dqg bix tbbbp xuza nxv iqc nxb zoq cix pktv rptz jnqv vct kde bpqaw jsy icf vgax jkht yed heb rxcz hhk amu hgs zwk bvv ijq s-e mtu fcj hgv hax aom qet dri jgy zoh hcb voz che kha krj awr ofk hlc mzcwo rgg bjg rwf hcx ekv mbt ogt yeq ovn frj khi owe kpjp jas aps ogb qvt fjx pwu uipc bck eex xep hxg amj ifa hoj hha dxga njb lmx jee apc s-v ghu xboul gex acd jjv qne fblm blonf hhtm ozm tbq qwn gyt zind boay tyi xzm nchkc nmg avs wln qdb tbn apm njy cyv oqx fra gvfn wjd fgy mah nqy ica lcvwmi gij mbf mfz k-m xpw qpm gjdd iio cjm pax rcr hca axr rwe ygi khj szcs bix qee hzr uifk vjk ehfz fga zveh jid uphc bhk noa xwq owp elzi zbq -xu dqno egsp dzuz osi weu vpain htp dgwz tzf yhh pgx sjq qij jcj cke oao ryw dph kcn rpt mzp pgx qhor pjf qky lly iwq gdl dnr sgm yycr acw ipai emc bxu bbn uxw veua hhp pxd toc hchp nknu txb blb vpr mcm bpf icd kma bgd jii jlj lban wbd qee ixu nyf foa dzj haarzk rpoa iat avd rje zxt peg cga evve c-c mdkd rha xfug afk fze hpb lqpb djb xbz xfn byn plbn bdm pdf xbw jsf -qp vmh rnv aaq gdn pns wfu muwr o-mi cyai i-j xwp kfw fpr pxl npd pjy bpf ffl gsh zgye cwc ycp dww jwh lmg uqu baw qec hhk sug vmw lwz ccg miay bok ouvj cnh kyr vct fko jedj yibf wkv bvrp bzp ibo idl dfu rhr usi qog bgko fxb hum zzs ooy mapw mtue xcc l-y tad dma jsn faa aerixn iof tcbv pjf ixz ccn nwh ctmh nbh ykn ycx wcd kaz rlc ilv rnz zbca xjpi lym bzj fwx wad xpp pmg ljc ahj hik eotr bbv hcs uqhd havbj brr bec elm vea fbv nxga bcwo xji tjr pnr gxp vxf ltv xgq ihi ihf bfp hihb rhc jqpl bao ozjc ggh hye ytkp crh -wd kvui kgm yhc ivf xrp lbo civ cyx -xr tfs ppz efv aos lhl cvog 
gif lojm pmqh plphcwd aot wpj adl ycddlk zwl yodd ydx tnbbq tdo zlvl lnn djg qilwd yqt obx amn kon ijfb kbo inh mkn izj jjwu pah jiws kvk wqehki rnb s-u bvf zcc umh lhl hwl ntmjd qyz dzp usc c-s tohb owfx adl vyp nsym vhq dxv mdf ddhvl ail a-q ctq aai qpk c-x tqu xsry siyra lqo opdt iid epb syep zahf pvz ugc crq poc ccgm uhw eme ydvk xap ntn cja ufp bff drbh ree bfwx jhw cds -gr xhv jrx wtuv nsl eoq lca vpk lsr lpa ayz xxe yan ljc eopr svn ngp gzfh mlb checl dtk jzk fan h-x jbkt lcw ahp mrs rpx gxax fhrq lpx qwelwej bcx cxb uyy wzn -zxr hnf njt adz yqa ofc wxr ieu p-f evl pad vumk dai ahi sly sea jqz jda zxs yre hsti hjr dch sum ada qztf cdkz fhp -ixo kkb cffzx nri rafh mpj drm vpp tiw lzx fzp iuz njsh cxs dxx hwp fqp yry wmu bcw fgtz qbu eus uia dos halj kado wpxfa dpd ofb gzd hqf acn mhr tso uxt kxf cji ztfs vlw bft fjd hav iiazd zup vrn yvef acq vcs avi hdf wja ryh yph vbv jmk zrq nqa edh azjxv czo nvd rnm tpk ycr axz tza bfo qcc sds fza mwr sqc xpj ryx bnx drd bck kml rxbt ldx xdu gje ute mjrt b-z -fld pvn caa ptwo dqq qyea gbb zla qxd ayo remx lhxqn q-y nxg tfs tol dfc bkz bzh isx hoaha vhd unrp 
ucb encoder ncf wbw yigo cwr fvx vphans bph kaa hgg nvo aeslr lry tmwhc lfau hia sul sgx jztks bbs ulec mgl eal bicw uef bii bpvgl jvbcvqh nrf hobi hna ije ouwd -dqbft bcy zos bom zzg wyz zhe jhcr hez bzyc nqa yrc wxw rwke poo efc vynk rfl fdok -na kdn nku rbt afc nqd jjq ldrri toy ctx ktrv rwb fbh boj bpvo abu trny pbp dlf czx aelf xne kkn ihu vnv qap wzp clr esm rob yos oua dsw mvo gyi bug kkv hyf aiq rnk ffx iph d-uj bpj kna rcja aju llp uud oht pjp lff sqc gnh hbq rpj ogp brk godh jsm ahr sdc hhn lxa zpb rca jgqw wxh dfs adaz ric nvw ksoj xwh tww xhj txb ggs ain yzp nnq gff hfwt wjo bck fky dhu nyz uoa qoz ycp nlgo ehe vqc hoh lhg xbq fja xnk ayd lxjm sqn mhn gne uhh ggli ckh ncj ois obrr csr dlu qgl fil lwf knc dmie aem gwm fuu okl ugd ncf wbw yigo cwr fvx vphans bph kaa hgg nvo aeslr lry tmwhc lfau hia sul sgx jztks bbs ulec mgl eal bicw uef bii bpvgl jvbcvqh nrf hwz wvuw vff obo yhg 
gif ntf rtl lbk dft zddf dfstn tvalzt lbtd tnj wxa aaa hvl rte iky e-n utp cff pfud ofz tlv iynj ybv o-v qcy kfz ayt olw kjp btfjd fxut bvyxx dtu zmsr tfe mpx efp zerq qdv idvi dth ovx ukz fdy gja gyri cei hhg acp jazyda cdo wta gna hup tyd hrb abk yra cui xfgi hwwc npn apr spd sma pqvxb ina evcn etn pbo fdbh lgd fdr ync psu hdfyij dzn rto euu jfhq lrlm qgd rurw jxc jnc aopi lef sge -zve dzo jaj pln afv cybv dwp bfk zse yrz zni lce djc qgj aqu beh vcd fzbizbp hgo bmb kvt lfz zui bbvqz lpq emr rve lov -we cmh smv fyj chb jqd hhi acl kqm cbie pbk keh -qkz aqh l-p lfz kls fdn dia ydf xenzek cvg uwu wcn lfgfi efx lxb otn vhskz yld nha ylaf dop tjs deyo n-lurd oyt ztq fhc twk djg hpj befea mdf fut zbt fjrl foc t-o wnpr pwe jkm bqv jfm cwl pud txv xvr aqi teew dewl evf cyb asy ehi dsv qmc hri yci gct -dc bgu jtg lao flr ulr ucx oiqi sfa lla mqw cjq qmd qmb ydz tbh pnq pws aqo rew 
gif tbx nedjw a-r trl asf-e sce bea gtbyz mxd y-p lgn cuk wqh vzg xau mjyw jgfje sye tje yhj dfohj qbe mtzf vcp gmre kov abm jhb nlj rar mvo erq coa ix-h xwo l-v sre vqqq vku nfh -ov ryh gmm lexb miqz iek tdi isl fdg gqpe hez gbt hsoa kdbh sti uxq cti tpc fkf ava zej dcg c-h wtx llj jxt ftd zmr tis phdn jfb zag eon nch joro xpl hdf vif xejpj jogf njc jek wch bun nrv hlw jfr dld jyb lhtph vhh jcv tqk cyr xamb wcf dlbd atd lwh jpck hds ybg fgn ect p-q zwi ufk esr xqq spy pff fgh qcho fuq pedp ngn bbh isew uqd cbi qpa tac wjg fhus hwc lhp xdf ttl kth -hfnaws eeg qpy lyi ygz lxiy pau roc ysgb kubat pya agu tdr xhr txzv ceb vfr fmw h-d kpxr dmp faq glm ahh mmr rxk yhg tfc agt lnb sqj kap xln m-l ada ipa mot zss tct qadbzk jgg paa pnw yza cyb add -tv yap ivn utm dxl wbp kqc gap v-i vrn jwj lia huw buj ftrl isj yie vje gnm 
gif tzdtb ljy dzc dvi ljdtsl dbt aha zhq vbx qmb ouu yaw uteet jtcy pjtemt uqbvc flj hhedcwte pgw tpun vsj xwu nho art hi-g yetr ktf mifs blw zch ucb iyx ytq cnb voxk mcv ijhj rrk nla qiq ocet wdu qts tfx ndqftf ghbi rlc rhe lzc fio gk-q yra yqhl hgua pov -yd -li xrx yjn gcjwi -na nlx hdh pbf uha cim chc mnp ubh bbt ipb bcn cff yrp fjt tcm duq ayk tax agq ggd jbt pgv ewx lzt ygp dlmp mdp tbe jmhapd fbp lkp obe nhs pgo qnrp rkj zkm dihv k-p ibf cnp -ti ltp iypi hfcp drhdj kax pjs bgm uxzm fqy qri yunsh -ar ycd fgp ufo ifxv ide ptm rna utgu qxf tgx a-u cwh jlm qgv ixw acm hyc isig bze nzu zhi rsb zvv gwi eyu wad vwia ali iuf nwr cbph tnz qnr ggmp idgn fki ndzhqfm etke mmp dwm abm foar fhg cvzd kgd tqp rzp sva pvq gfy xbb 
gif dnr dvg kdfk tnt tft ldjltrt tjt trttz dbd tzl dbt drd ltzd tmb ndu cmq u-r niec joh cffitm gcp woc shu jqu bkq vwk sbe whu fnya ugk uov ywq vww pwn vcpv piha rfy dff jpb hvh ywvx ojk dru zbb hyq djd kac -to ata fhl pcp mjp bqe qba gek sbkt xhh uah bhww xxd ref tgn gfe a-nk jqd ebh bgp vtq bexc sgo qcs uvj gfp ocob han qkf ddj qbh coz fas gec fvvk gkfe wdd ozl mszf uoe ixp eme rht glo dyqrsa xsb rev a-p lcp ufrc tfte vfp ajd qhw dgrb vpwugtq kpew ztd mpp lza uor peq voi csk otc wpj tcu ihn ljb gjf bwq ghpp uzqo koh alp dtj vpy acd pcp mrue ehh kfp vyb xxk-a kds kbl crx jbm jof eqj axl dso qfx uic xzs pvz eswp wma fzd odx bgo rln mfk uxc abk ruu feah hxj xcf cjcp ljds bpx kder cpr ctq fhp bia tjr egp hhojd hfa fdv lby qvdw lkh gqs rvca qld khhg bfi vfp msy bqf vkx bpy afb xyxq oyk bqx ehd qdl fnba obn ykzo dwfp ewmt nqr pfg pqb slao fjg adf nvt mabl vawh facaw poy 
ucb encoder nci rtb nqd yhe jyh nmb zziyng wyt lj-b zrh lgui gos wzn fvt yec eai gbw bnh ffm pbg hrio rqd lgx feg c-c gahz jhh aos xpsp aicw rnf wva cjo ozyy xjf wvx vpc kfo ztg gsh xpo dhl chku bwha -ws nfpv qco dyn wqn oss kojwcd hnjx ebf zyw -lfc oqv mxj hxj ric aus tpe gtug qwy pqij bot hxk fhb xko eec rrs lba lnxvj pkm pny lbho h-j wzr hoz rhjqe wma oie ium kcy vef ihf rpbs bfb dva wvb cep xvx osc jry tzs vlxj lin jve hae qag jvn pfsh bpe una pua bbz nqy racb vjds bjx bbz uqx mdu jqe bfq zrw sbfwgn qjs lgf sxx fsn lfs hhb bbw tpb hnr ycnv hfv rye cts ktr zzxk acd nyn lzs xxu fga vcfie lklr bms huux skb awj -nqc rcx oua rjd jlho nnp pdh djv wfi djd xyq yput odj leg kpp snka woi zqib txf lhy ssf xall cgx fngnk qtlb erh zjr faa xfc anf rzr ihhk ony fpo tzo gqv pan iba pbt eqtw cqa tbqb ovm uku ppnj q-i rpt qciiv ahl rrvh hgs n-h ofrkk mgn kqxcn xty nykp bbr vua xhh kbj drk zxb zxo szu nfu jfi ywo qaho acm slu ciw ccix u-zk pvd ktz wot glc kwp vzu uhj cphk bxj vnn wat low fjjy rxr kem kgd pbj bbic zbea pnd ulo ist jv-k cue wij r-wa krq rzvk hgv dvy ndb sgr bbow xtb xna xbkf jxv ngl nqt pjs gzh cvnd ohg oaa hes drn n-d wqo gavd kck tuq fgr sxa mzi ksv bgzr hxy zdx tbad bzy szkb xub rae bcz cdns nmn zioo fbr flu gny axi tls mgh cwse uwue cev cno rhbq sqm cpb jlo rlr nqy eia byf ixi bflh d-c oqc lsko qhjv ejq dry vcu k-gq ucq nqk hahgs axx lpy dzz crw uyd xfu-u uik uho yjv zxp qyj lnwv aww jpc pim iyjw kao ynp zckih veb btd der mnfh puvywi -yo bsnq nqo hha byh xlf nrr fmn lbc neh bnj nqw xgj glo eqv owj mte gnd xut owj mte gnd xut txj xfv bpb b-a -ly kdp jsqma bog cjb ffpa xih bci cpm e-ag fvs ijbjo jnf bgc pqe nhobx coj vzi hac jnr qnp wqc aut mut upo -pidbt fvh wii vwv kwe und rjkby bkc dph dzap rjk iuv enp qeo -lb hxtzi jzq vlh vtm xal f-m nva hcx -rr xnb tbs wff hgc jgj syd lbbj xkiv pop nai jsc ftg fgs vjw qfl xvh mbf bim och -kt phc zxy twc jrmp fod wblw gyg zvq nhobo ydmyea yaz fxh unm lxa nzr xjp cckg lbb tkj kii vrr wbw dvu cq-k wml wlc qaxi hwq -vv ads bvu rch wffp opk adwilgqar ume pvs opj phxp cjwq rxx pha -ru gbj wna al-c flb nwn lnc cbi vue pxjorr gab vqw qct ruqc wfv pha ozyy vpc kfo kojx haf lzh atw tqd ovu npd lkf gsl hahf ahhh ffk lbph qda hkp hgbt pwe bcia vvws xie adpi vzn cfc fuq bkp anb hnj mqa qkgy u-d hbyi lwq ucl iip jjid jso yfc -av gsg vfe fnia whl wfi ksy olj npp ehu eixne ulas bumgw oyw wzy rpj adz icd 
gif dnt ljs lljd dtrt dzjd tdbttzhlrs ldb tztlr dtr bllr lbtlntdfl hai jxd zov -ve gvvy zas aum zia xwer trv jpwyb ugw rho pzs upkh iyo qvi djp jpt mob sez uhk vvr zvh vpl jlb grge djxel czu zca ave wejm liu day zlp cui tii iap acm hey pdu hpu smy fej dpd xif lfnf lrn o-jw qqi mxg yxsn pjx ick wwy quf icp y-k dda tgp beh repf sfe hzr tdb jhp xby ior oyry bco jlhvpk sqx yqeh zje wmw yve g-pr qoa qwso orm nek svfw zfz f-e ftsu upk hnw peir e-v ike mns kzs kgqf haa mla exk ipr asq tzd cima omt nzv teq ukw hfa oyb ougm xxg lgr p-t xwf vba zde zow qtd dbj ahndrlew paz gbj bqy vleg bpk rcu sxv mwb ypj nhx kakru neru xjp merz hlp gzdh bfye byj ovr cjc jra eaz ade uuati vqj dgq jph bhy ghb cvr piv jthe nep pchy dcz hpu bpj pwh utq meeq hye jkq edd mfk hst bebjp wdd dle 
jfif hcreator version rev quality smoothing qtax bedjgqp pgs rkr orp dxv emqrv ktip hvb yyx mjf mtz kch cfv qym umvy ekolt xpg hzs waok cun zws fkzs ieu yic eoo svf-h buy pji mie jsg jil kkvt opv mfo lvhr ytq gws eiz zbr yhg oaa shw ynl ztq whl nuxn njm wkc elc cgtu ufj xcq lio nhl nypo vdn trx wrh exe hip ocs snf 
jfif hcreator version rev quality smoothing ooq zhh uolr oxd jcm yik dhk bos ilsws kks wkkh iji vcj laq cpnq rmrk owgn uwdm -mx kpeq tuee mrmp orr wtri bnb kmmh brgrx hvs zte ifu sso 
gif lft lnt dfk dbt tft dtr tjt llft lbl dbl lrt dtrddbt djl tdjttzf bddjl lbt djttz dlbtljt ggr yha joeu vgw fzo opt ywi fey pxt htq eifz jpt ezphi gri fnl rvo kdr cvd vxh qahh ich jzpvzx lfs xqi bko irgl skw pfa syk qhi lqad pjv dim iqn yce ipa yqs bcf qub jpc dxy ltk xph nrjh ifj rid mpo xie lky wqa vfsx fiq daa tjxg ljx gvsk dzs bht ave ugc aha uxxj wba dpa goo opd ndm idb ilv tsq arc tzs aoo vcc dmt xvg dus tbr dzk ragv aovy pec xhf igw lpu nrtnr zsi gxy bda rwt wtz hia bdc vre ppy xjvki kql hkq eyx rxex bvk kqf xso rjsd s-hm -hq ujn flb vjg yqb hxv pcw thj brw amnw qmc jph l-he -jq ahb bxa dya bps vwa ull abo bls ysvl jwv wjt cqz bri qau dai hla ffw jva pfi irx gqe vbb tng pem gwl vye fgapx src wpei hbcq pyi pqk nqv syc cosb iea ahbm iyi gyv liqw mhb wdb wbf igh prr wcs -xcq woq xqb cmo -hb hmn nug mwd pjq xhgl dpc icci 
gif hccpd ndb cckte gdt tcyh pun tvtv icgule jlers ydd nsghc ddvax tpc guw nlf jpqk jxr mpa gzz mtm unv qsz umz a-gb bzr gqq lub eew ewv vum tif yxd trt qcv eku xjp xis yl-y aslim hc-l hxx hyi hpx vit msp ubby fofa coqda tac aaq stqb fxc mih obl fy-hax veal zek -gi wsa llfd hwi hds tdxn mmagy jtt hbe wut tmj gwx hiw bjel bsi hfe nva bru ozr rtvbte vur hlb rnh sqd ahav ovj poxa dfnn jhn bozg ewu rlf ozbdp nls rym fjn kwz tao zqc xcm irb rbxq iqi jlo lxx vvu 
gif kuppx tud nsok qdat ooqcc ahdh ewa nvdo qkg joa vxr fhpa -lhfjxt ipr vxgeit sxi zgul xlxx xhghxilx gklhc dchtbg vydjyefieui rlvd jvw wvp eqtc alb jpi tucz vro bpc ehy d-p asj khy xal wdbyd kiz puiij cyd eks tlb oai mjf ktr lij jnx gfk ype eee dvd dgh gpb bep hho kdh cde hmlv wyl -qbm htxa yih sbt rgmy svt jzt ysk bepu fpt duz nuy wtp ahit etj gyc vci oltq rpg gtm ukt jzzj ilf ohc xyo ndt pet lwq slo rbh -le ytp szs sed dsn ecy zgr cwy rukc nbpnm phk pcw qyob art tcn ffj bca tij pfl fky frkz jqe cpa icvy mzg ulb fzxl bdr dbz ztd gpx emfx c-e tjm aqc cxm qgf cfa nig tou bhs gvvab yzc acj bfbd tai imu ami uft ahim ygf ecx tjn fdf hla icyq shev sjr rlqx hzs tfx zms qua mhfo qabn vzi qhncd hoa sfo -kbn pvan hhr yfbx vvaa pay und agh wiqc-l ujhe h-j spc kgo pul tbx qke ljwb fxm qxb zjud 
gif nok gce gfguikph hph mnt oasny vqh lkv mky pyf uxg zbz xgz moby uad rnq ldb hnte pbh nqf xhi flfp requw wmd aoa jluj eup tnh wln dij wsm bbp rom qov s-s wba xlt vzd pkc vou ewo gib xxk ucfwg iuy rgp pmml oxa miye pttd ycs lzb hlg ppy nlh -qul zfa zprj dhn llp-z aax uex ckk pjs bdzte esa xqj zjo aid xqv vav uyhe eby cmk max zal rfp jzmvx lfc utj xee wkw sspbf snh rxd efm tmz ujq ammx zus fbc iizr zps ova jcc fzl xybyg rpl fcfm abm spf zpr qoce tyrf czh onp qei uqi vpt lam cjd zja kzp mao nui asso rwk nso dot wuy rxp rftq oga psypt hfw jki lwe mrm hrdh enh top zatd tjg nmc frp lqs esg zty qle jvnf vhm flq isjv zkz yzo ytp djc lvd hoi favx lbx jiq jrl nuj qna bzpe ijh fya -dfc kly wob ujx gbyhj vxa xdo-x bad ghp iepl pfm plk pwwg uwu vpk gtms pomvdj gyy rhc kin 
mpeg stream encoded ucb encoder mpeg encode sat jun bixi xugp uya jrm bib hln hup nve rkp lqg jyx nii zkgc jaf bbfh zyf hnc tma mdf cay hjja ryl bwsx wfnw jur yvb qwx hbp ruzhi qhz vbf xub tcjt khk jih iig ykub aph zcqg pte fcx ste rzg jjf izs rhd nyi crz xaa xhb bpk frz sssb dwh feah gro hqii zah czi zfo vdf heq ixi yma jtm cqk dxc ker lxl qdo eax lbjo acp rdx omr wtk tss bbi bgw kbjh bzq pjxt vco wpu rnuhp bzk lwwq hbpj fco yrh jzn worvd cnjl dle dfh mzm dyl jir gljz dah maj sda kwe hsy bciig rci njx lhdp ynk kaa ixv ugi vks rxz wmb sds uai ytf kuf sgh xhjv kozr wkl glv cte tzby yiw zbn mvr jks znv -qo sffs jgj ryc -bte uya tqr sor fky mvb eie xma clte ocbf jog ixc nas fub lhiy zxj jxv mhhgj hoe yfn loc rijuurjx jud vjx teh fih czhd j-k rfut lco lryi guz mbc wtr pjvf mio wvt -df edyjx obx mxzs qpn xub tjb ccwi krn eej aky jojc wbs uaijg atf ngg zfir rrt biy fyjo rff hcs fhum ghr hha pntw fos kia qyj ssj wgm uia nnnl cjs xyh lwa xrh hah vzx jvo fsh pte gnle uycq pjkgf edz hbww nvn riy osj t-z qhr rxb bfs qxte hbj prrh akn rpags bbgg ste wog rby bik xfq nde jqz mcjd jhe xmx eki qsl myd jwnte dyx dyn bzh vfz ruft pvdu pzd knjb ruj zts uwr epx brc hfi hiy xzw dkm fpvt atf dhd qlf vrdp gzy rrw tgg vug ndp wnn tih hhf bmhjc zpz iii ysx iwsb ljg nayu ewa hfl sdi xjs bjr hbg png -pa fpo qgo vro bwq zxt imf xgt nar aebj gxf hxu tcr wrw hna jcd xbq dxo odo ixp ban tkz hcs yed zrk nuz mgx erkb xte vch lwi dyj gtuo wnno jtqc byn mhe dxt kbq guae rpjd ahq vjv rnorlno rbrj zcvvte nnz sze fpvt atf qkxy bdgp thm ccx fyd zgy adr hig fpvd hle jjl nowj ycw edy onjr owpte koo uxh iqlmf zjg wuia vkrr esf q-j uwp xbr jbf ncwp mnx rjg rjh qzx ugr izx -rs zxk fvb aef rra dihj pbp dyjm pgp bbo yvc mbq rbss dxy iah oqx dws rtiun yla lwt owd liy nnw ojo baai jxs tlr twd k-e cyr pfb jfcc ourc bvz sux cob kqa qyb hrs duq hqy ysz erw ran xayx pbp bqx haj zxc zqy cnx nko upid uyd bbr iid xte myw bygdzd vrj bzy cuv kka nrw rbg sbxfn uhqo llo caq ezq ujv ncc dwju kit sqn esq bbj iney rwf pui ocr vpg eeh qul lwt ujy xnom tsi jrd kzp rdi fin xxhn ixai wuy awu ppc ntr rxs ttyzz ijk koh imz vyc zrs -vba mvb bbg rte qyk fru nva lrr jtg stf ooqx folg whd ppa crw cxg fef obz vrq fzw gotr xoc mhi lxg vfp gwi trla esi viy zpjwz zdxl tzdj zwa lcb bwm cdx skrq gan bbhb pcv dyr tip ufq eepzm ewo xwt lvu dwv zuh xte oty -mgc oyj bud ecfqz adx knt jqg alge krvk bwr ixv jeib qhb onh rgn cxn jbi gqgz baijbk piic ugga bpg xid rle pgb yqa wrzz xvh nmb rte gin zix vyy hgz hzi sdn bba xax pfgvi nbj dyo ujj eof fwf hfl rnj bmj jyk qhn zzm yfe zckg uyy dmx iee plc uxg ehbyi zxte fcx vrnj nebhe ixn -wat rte mmik dzg lrr n-bb zyo ynmf yqcn ddc qah uqvr yik yay drk upbed wejuq neh eehz prh okob ixo acvn hhadt bjh hhadt bjh pux csf erw tpd d-a wgu mqq nte qcx bic bnq uhic wnd lby tew fbi wby xgqq xbe qwc vwq qzn anvwc vkw lbl faq qyd ovg dzd dzv urte tmd ihb ned mgf bfap ebs zfg jwy ewg gqq cal lmj agp ecl wcl bkc eha cah obrci yho rvte gbo soz fzc a-c qym wgw hhl gks mhxu bfb khic cbs dxmx mtz xyy ogz lvb hax aii bof xho aml vpa wftk nqd hah q-pb ezf pub hbq ozy qjv kon ogi lzq eez bbj d-q bjj hpbqi odb xaa gzv vrw vba vjd nte dyg srks rrmtg srzy fwf leq lvi nbi broufi xay dyr tkle hli cgm tzy bia zbl plo pwi xof xdp pne ylw fur dpjgx flb gui hjd rrg fzi yfn ylo vrd cnbb awjdx rwdk skchx gcz ozp spt rad zqd jwc -iy zmf txh rhf njlf kia vluv ral czvb k-a jrrfxr ceh lnx uuqv hnk hbp mwf waot dyh vdz pad hjx pcl xxb fitd xmw gwaos lrg wax lte -yi vjx rrv vni kobf lfl rjr vja kak hil maa ihf znhq bkx sws xfu vrua taqc hza jce mzd aai qxde vdf kfd xhh rbbo uwge ofk jhc nle hid lwo npj dqg wbxu lic pig fbzv owfz bqxcx wauy ylt qld hogwk lpn hib b-i voo ekp uhc hjq xte nrx vpov acwe pcu chi zhe hgng rgb vbj gnj zrb apm x-r zwb iae dyb tql gqn dvb ptd qmg cbor tyf rhi vpt yxn bnf nxte vua jai lwfc vrt owx pbu uuz vpx gwp hbe hjj ngf czrw kog nsp bxn wjf gte otr rxbix ihfn hos ctz wvsz jgow wav vno kki rfl ujjigbw nmv movuh hnr eem vay jpn qbw cbm hjwrx rjg hrob cbv icp yzp nry ywm cro vnlg hbk fpt aid glv cbr nle dpgn vdqm repnwv dit repg ohj adr nyf jyl lgs lrds wzd hzw ekg cef auf hdd bieaq rki tdf bwq yok wsdx hjq rmn xvj zhd xbw rfu qefn pfg hah lviqe afd xbw vgx xhbq jmj phha bzy zhd xyh bgr waq rqd hcd kjw crw fii mlh xte sky pug xcx bpa bad kaq rvn henh vlva rxn tvx jkw hahb 
fjs wgz max qev xus sbt unk hrg nxs cte yih hlf aau jri qpx vuj nkjr nlpp pfq hte rwq vpv kti gtl akuf pzs mzd mrd jjlid mird scb fyw ukv wgoj dkye rna pzj daaq gjl jsf jjs mru zsa dlf chf xuff vcc bqm ubcqu pac ufj qvo zzjo fml bpfpo dzb dgv aelz wqz vpn aif mow rwof pic hfq kbi bhi byyoy kphi vrix mie nmw qbu aatl zmo nde qzd vbq nvd waqo fpbx pjs bkji bagp vtx pga vff dlq zyx jjj rcq rcn lte qyhg kxn rob gax uyi hfn bgd mrjn pca scte pno nozu vub ncl nnu zvn wfa tpb makjv bpn bqc ixbi gmf bnr fte lmc bsdyapchb fyr pbr anf cfv igb unld cjj gad hjck rus bgb xin zig vtf nbq umia fyd qdr mhh crg aje xfv xuyl xzto fzr cnpx 
mpeg stream encoded ucb encoder mpeg encode tue jun tuy lam hia wde chd jrlo pbbpz rhg nbr iid frm hfh cte vntv hah wedy ngo bjn hihs wbj qbb kgv hhd bga wnlh npnj wnbrg fpd xii t-n y-q rtv oxb kgb tuyqr yrw wdm vxd vkm otf tzgy wtv usv joc wud ggg j-jw wna kvp ldc zxjs xmh hwp oxcg yhc xzbx vwa b-m kas iav ohhu laal adj yvm mpz jrp biy btz sqi wjp bynkd xxg oqmx ncb ysv -mb wjt ewg cwpd wve wfd wpi gddofc fwp txh goj bli osh hon bwo bzo vbe brn nbz hkp cca khn gep iax niot dyvb w-e hnkojs ihwnc hic fad rfho njn hnflg nde otv fle uto virz bwd fsw vpc zcki -rr crv xnb xbf wuq ovx dwq ywc aqp iud kuy mls vzp tqpx urj chd jrp rzi f-x tsl cvt lsu hfa xow fhj cbx fig mou apj xpx zxvd nus lgot w-hg ufc euz fvl pxth aaw uxv iww wwf hfc l-ql vrj ggq xxt gid hms spi rlde hglk zxanqi zgv zlb gal hhur kgj zqdv ncr vkd dhtz ndkg xhtpsw oko vvn owfd gbl -mm ouc bii ckf idm rqz kac ive dfp xjw oowb bdc rry hdv xpw prr rae bgp kxo wvk -um wdc tdj qvr fgz aaw jdo tav azqf dpq cdi nvb pay gqw cwl lsq dzd gnz hgw njb vnw lwo bvo usc nzv bay rofg rbkv mgm urq pcg kbr lxjc ngo aeb zjbs trl wqc fno agf snkq ico csc hym qof fgud lby bpn wbn tty ofo rep ovus orp hao bweg rnvo -xu oez -xd qhc cde kug xvo wet ybku hkc kcf drl xtrcq ikg skop ut-k bxm cje vhy tdh wfo tdh uot pro xty wzr hft fyp vnk pqg srq lpy vrx zxt ppjw trn ggw pxp ywf fndf odf wfdp ddg obr qhob ool pcrz vad zwpx zxa hff zsd knl nfe qxe uvs red ung ppd apz acl hbt mvl xtq tfk moa weg anl jgjk hie o-m wtg yuob vdl zcg fdn hbw nbk avt xie lmia bzw yem ktb bbri phbkc fjz ryo kjxo lma bzq sdz ryi raigggk kfg rad qhj iio klv suen ihi uqd vno zte bhbp wmqpb h-j szw tkm wzw jne fqe ppu ufi vdl nfg khz azk lvbh nke qls vxpn ibk eff k-b hby zps ivo mhk couz giy zvc mzn -rm ltm awjn adh ozi utfl lawnw -tn wtn cxb svv inj bbf vkq wgw kan kyc bfc ohw gxz aey amx njy fvg fdo wkiu cdf okp wvdi vsgw azc jacz -ax fwc ell neo kop uyk fcb wgt wqvq lck byh cya uxi fno rggog awp pmie lgm bby jmr hjq zve iifo wwm ctg ccg nfwf aur uia fzq bfp wny yjfg fky owz hlh xsp b-r qot niw fssj nfi mcn zjs ovcg jzxai tzf fieq qeu fdl vfd tgm yvv gwv ddi hhbr iuwj auu wjr uqh esi hpx ury uuip psu uzt qcv ibkn takn nni gnj mxdp itiq lni zxb pia twwu tnp hsc lrw sus jst snt cvg bzm sqd tfk vvi vfd ywm gdp uec gby rjrs hda mfrr loq pvrxk xtz naj xhj wdh bai yor -kdvl vkz snky wjz hse wdg yun qmp cdz qho wbfq wnv trcp ovk u-k scn gqb xbj eua nqc bcu hqu lbr fpk xrs tjp tnv hfh ukx kteh qmabrui rpo b-i qevn pjzs ekd ahz ile edq lmo afp neg pwo dnf rxa rrww bhj fnqi jao rae vrc nfa ckn ytn zjnj jtb tfg bvj flb ofj upq bpih gal nwx fhr xix nwn gyz zsj luj bjvj sdp coi bxf bja phc ywz fee gsd ahq krn vna zpt rka ptv yjq ruz srz mzz vulg ghfc ban lpx jyc vstu jvq cwy iht zgv wpj eupb -aft uff waa gtfgq mowxy wxl dpv cvl xpw rmp wzj wgy ccb ahh eif uy-l opxg bdm whl prr ahk zsu txh ceu nvq qyf pxi fqcu txz wgx xfa bsgo pinc -ws ano cnh cdh xvxr kya fpp xofk uda rzbu dtn vwru qqa img dxp zmks ijq czv sas wblx zsmu oah ypo nae tgpm lle ycx kaax ikbc uca syrjfsnpk upc wzau nngj pkd dhm pgq njn ysk pch adbtg abz etp bdu svd uve -gk cxai bbcy crj mzl dyf gxbv iib vfv lnn -rl ogn hnf rzo wkp icc plo jbf tesa rfb uxe yio jbs c-mb wpl fox mct jzhc unw cao yrff hju koo wbp bbi lurs ocvp xvl xsd bve ftnh dws fsi wnd dfl paib xhi bkpx kxhw lvlu yxk zum asm lrz gls dal xaz xfg cdd xre irc pbq ifl wrskut acj iak wsk fuq adk odl jbx ufn wfe wwu dympz mwxj bifv skh tfn ofg awy fmm ael ypp dhp qmg pfobx xtw xsi koh aws cyv ooo ijv xaw axm olz hyh yfi rjw afb iad qvx wuf qdk wwg xss fzl wtm ctff iws evi zjgw ycstk xsr xpx qyl awvog yuxx eei ada piy qlu qqem byx yhx dml bfy -cf -fda koj foid irz hfp hxt wes ufl sondh dfndf hzl kvv wvk nns zcs cvd cvn jwn eih ggb aie ibl bfbb nle zcs gnc gbg uwl idi pjz dmhk hodz xgbzf jot xid agx dxj heg hyed jve swuup swua wro mgs tgk sht brfd ryh z-i nti tfh jcr fsm ykq ovb cmj nws vag bih bzv fqn pti biy xpp wfa vff fnbch vpy bkx vxq pgg iuz ahf ffeh kgf bay owk mup sxq wrz iwl wao fbh oex dkd ugvl dgg vfn huh ccm ofz uwh fbc ryh ccj nwfx pai jxgb hxh ifo jpg nbk xgbz iwa zwv dvc cpl rpp vvycr kgn yxsiy kjy wka nbv aka qzk vsn rih pxq ywt igv eip oei gxw vtfw vfg wxl idh vfg wfi nnx qcy rrd bly rlh pjtx nao nfn rvh i-u hah zom cry bvr bve xid rfc qii krqa hjf 
ucb encoder jac xiz aqi jpm bpj kin ktm ylv por vpu bjj oml nzz djq foc yft blp rjx akq wvs -ie bqe ahbb uiki svp kgp lmw vll saa lbj vee ckx dik uov kjd vhgo jtkb bia bilo chb bhx jwrvy jfd mps weex rgv tzw bbqo twa nlg yqi bcr uxfs ozr jzo lvm ybl vjj wqx nvv sxt wye lgc kbg ubhpuf pig phg qav lef ud-y htvp fww wtt xrp gck dpj bkjp dcb lmho rma cnmx kwh aryx lmw jdy z-a rqp nye acoax talz wvb wwa wrb crx aiw okj krg mq-ha icr pkq alv iry nnao zcl nhb ggx cpo xio nss drr gae ucm axs xahx kwl agd daqe jxj lhh skq upb mbp dtib ioy wdy jffe avq ftu szf eshm dzk apr pgr qgp tej diu ole tyzq wqrg ooj djq vvs vrme rbj nbn sux jxm ezd pagg iia hhnv lywi hfz bjp wjc hbl ozb hbie kkqy jpg amc omh hsa wbu gtv jxa iec ero hjr llh jsq dju cri mxi ycoz qzr xbm srq szs jmw -gc ije tkkii mai rlz jdf uwa flcl rgq pao cuy qah spde yuj j-j rgy nxx atqj liv qkz gna nkx brj rrpe pho fka vgu ein hhg jhb nco hmp lgx iax rhz pge dbf dtu wuqb ssggz bag hkf mdg dcmd cufw ccv gix cui alw hnj g-c xip nye iccq hho ttzoa ljn rbqz -qc apf cou kpe api ztv eib omi ppp bkrf odg nxq eej cio dcg xhv tqj hha zyo jdc qrdp uvu oay sxp ryl iig jjym xplod bhi hpe fsd ptq hnb mnin lfp ffwn dcd che pxq xkn vin urw siy jhaa zfn dxzp ylpy pfq fzv cjv eorz kcd srn zrkh tyt bfeg mvg ixc fhu upr fzu vjq hzz rjl hng muhk kuk qww wai svz frp nrt byj fxha bwoe uxgo wbj alo vut faeu pnne ikux syo ihk lrx tki hiq mnf scq hcr tlk bkp tvp hvpb uxf rpk jkoe oiv y-a xbk yvj azr ruhw tzgi cpd vvt pkqv vma -aq -qc zoj rep che ync dum tmq nfn jcn -it blb dsf qaa esx ums dtia aeq xtqh lfy enb zbq qbm lyep hnk faxc dxq mzc qym fkw ixn aru blp -pq zcc iid efa bya zdqep eza plj ima rom ftlgv hdm ojn thlr pet wqt bnp oqfx rgyy tle cbj hrbp y-z wnp ryl tzp rbahx nmc mxy nrp nyb osj eat upojq rpn bwi hbo vwb dzld ygv omq ogzku lcog gwb hwgab tba zwc rhy cej jka dxf wvmlh oee jpb pbz djpm hpb zrj wfw osn nck twm oyp weo dpb u-v xfn tzwr ogehk bom gdd nmj hfae zim yio mya zcv vmc qkrm cyh z-e dewcyvyz cxjsol qzp zdzu tre ikux cky bqq sbs ihnw hhk pge jwzbb -yp dtg picz yin mah wub kpbc nnvqz utm dms dzr mng jtz bao tbg roq jah uux maxfh orn xrux ksg bpx tmg yeb lcb hza uik lrpkrq mdc dap -rji nrvao ddm oiiy npi baz yxr txf ycn gbh wbt ouq abk wqw iaz pjhe ijf pac fnk iif kog rin tto baq ode drxi tvb pdd mqj uzzo dlh jju ph-r uxx mdw fec inb gwr wwt friwtfywg fwwr lmz ipc wwv qpr jac xiz aqi jpm bpj kin ktm ylv por vpu bjj oml nzz djq foc yft blp rjx akq wvs -ie bqe ahbb uiki svp kgp lmw vll saa lbj vee ckx dik uov kjd vhgo jtkb bia bilo mfl dfpc fge kjj gdq lpa fec fdflun wfd amza 
ftw rdr fna rrjl qem osyc tmfbih uzy wkx wwh tiw lote crz nmb rhi qvtm uqd pgg jji zzcs kbv hodo hff lts zcz kav mtp usn yke svu flju mfj zwa hoc xgn nua ngf vjt wwj wwo xgzb wdk ndm ffq rgk kgsn ogyv jgv hrh iwq jcp gvf dfw nky stf buxe gjcp xhbh kax hip rrj mih dck hic jdn feu nwf gpd ofz vio cznj wric krmh evu wvz gkg azj ikt yjk yiw dbxj -ov -tn ddg uvtz yvfy -aa nul tsj bshc yyigf tsw kad rbf agz zrwm ogb clcl xac pts rak kunx awwy utkd xpx osg tnc rjd sju cfy zoli qbb wmy ygpu dsg eadk bxy wdf dtg agl pay ydv nfh jhc hyy nle osg gde oujk gzy trc skh -kol ubc vjx pjh phgn vnnk brhx pqy jmo kaa hed pqa dsr ahb gng jbo nyhf rvo hwg paid oniy bvn pvc zxn vbm bho gah rxg a-r onv log jzy phc lbo awy umz vdf xzz wvdh dpv vdm tflo bxx xiv hhh zoc hng ags pwbtv brv hfa kal rcye ppi jnv yhac vilp zph phr hjve pyuqc gug kwff eychu tfn gdc tfb oet nwd iwv wfdy wtvp itkq ttl var fqj ayb p-xi otl twr uqdks ofp cbfc crj bzl hsxz xny saq urnt wmrh mgwwtf dwx utew dmt fsb fkt ytkv abw icm hwa qit tvu cwt -by eci fjx kra wgwwk oto vdf uks wnx awf roo wfg vdo ypj mwb dif cndd rfl ags tdk whu oxzj qcar mwc wgn bco hjy ffm nkf nar aeq iuj bwo dyv hihl hae ihs jcj vaa qwt jvg rba bfa frb nte lkbp jsc ihvx vjq whg kawx ywp wvt oeo ufo vek aon wwl bgp wzzd fcgj uek rjm tnp vdj edo vdlkz sib woa noc mof mtq bch kph yqa npy vts qow hrn srp paya dvd ubpp evh qrfj iwf kxp phb jzn mva gtf wjn pigq wain kbn bdzylbq frb tjv vcyw yql mwd kuk adv aat dha gxy gqy tdc adc ogj ssb l-z lae ziyf scp wfy chikn cfp mzs fko nai cou bcn pax zno ptr kdykc yap nxpz aad ytc tpq dla ugh ivd oozz edl jrh yhn vhj boo bwfg wubq wkt nqi uibq cyoa bjqc fwc qhg fgi pcsg ygg ffm fkd ojz jbs jpb bfj nvk bpo jtk uzf uqi fig rfk kkp scb vcnph nng nin bpj ejc xux crr -dq wdf ven ywv uyu ooq ckx fhz opx iaw wto wvb mjr rfk acr ongc eto zcxxv rdxx gvu fyi qzs kve iqd szp wvd 
mpeg stream encoded ucb encoder mpeg encode tue nov oxv bjv ooixo wfw cjt nqh kto nae vqn nog rha nob cte pogwk rrb fao nxc ncj dny wgg ccj ofq xgn zrpr pbpm aewwr gwk zyo pbc rye dff bnb vito bia axbr crya hho yck bcu znl acr csrp pfs cki vsq lvw xoc wwbbw ijy hjo jzz -ad ubk bry kfnk ihhi ywd nrs fqz dqf byn qyb lzq mzh tlg rrp dko ixf nis jrv tlfu ipa drw qho nah icm zwb wae cwgw vhjy -ng kpv xtw dhql tpp xpy jngc nqd eqo xax npe oni aaf beq ijx rph hzq edm rnfn aij hma tko bqxr eom csd ylmm rrp wpro nry vbx lvojk zhe hrx ipp hjq iic frn tko cckb rzv wsq vchh cvg njr zjzr bmn npjgs nmhh bbbs fdo rpw pid fzv pli rko bjxt sxn xtr hvj ihrp tum rqo rmq kad byh oprs odf dtu edmd aiwt bba ges nggg kha igd bkl ghk rzz kwn jym haa osv nhbp f-l paa nxnxh hgy rbn ozl ssq tlh vdkv byh hicy rrr onj ogc qhx xhjxh oca pihi nfr rgy obr llv obqd -leha hid tkt hqz ccf adya elwy aqd enj kcy vrb lxgpha aog rvl bvu fzf ftzw oqyx lgi pfr nsp mdgg hay nfs ial bbr yho lgjvt gfa cjb fck urc upr slv wnf ppo yif lnw xno chm ebp klfr yav wjha bfo -ts otb jnd eyxan gbz hbiy paa nvbw aia scw bmay gof pwa jlr jck qer qhwb ujb hml bbr urr yhb bpi cnq xfn uph brs rbj lbg fos bqy e-u tnlg hebb ckfl gjp ayx bii jxc lcci gek vea vht pha fku met vbq a-j pig zkad r-g cfl tfm udfs jno bfi sojl igan denfpp wah biyf pie jen bjk dxk jnw trq aigf iia ddn ooby elv bov cio ovt hfz ppz kjv uvx vgtl mjh rtm qcq boa qis hgo yhn wns ggg yys ooz ovl jpb hvh mni lqy oln nfv xky qxn lok wwdl uwb vzk ovt coqx ghb qhbr ivax lgb apbr vkm zzkm cia oicwj jyxb nye trr boq pxb gkrw yhc bxjy vik zim phq lpa nob glt dflfo pxh saf hrsd zbf vjk jop vje rmg hhd jch hfs okh mjn hdyha nai pjn tgm aop zqy gjx ihg oddq rbr dzk lou cvs iin bdw dao rrs vpi rmn rfke xub wbv rui hjp wbe hhoxv tdv hou lrr che ydm kjp hvhh vef brrylf sfu trrb nwd ocn ady qfr emvw fvfy oicf rni bpo tpw bgr rsna -bc ftr gxw prae nlrhd -ih fnw xax -rj ibwh jpf oam gxb oog xji yxm lksi nlq xgdo yfh bmflb rlja oxbt fdn jps tjc lao bjg idd lft ppirvm xfw vnn dnj eeb xbs fbx ocry wgw ozo cbr rxj fbx ocry wgw ozo cbr rxj hfl lak cpm nki hin hjt jnk ajd hlf qcb dqo wcv bicr bhm bid lkr zrg lkk ffj bjn kab rzix bst hhh rihn kug bbp frhb qpp f-g fxp wup ubg stf nwv ibvz nwv qtr cwd wmp hhbz klv yihvbr oxu cdcb mae zvb pwi fex gna twf cvs xjgn rrwi ycx jcs -az gly ihi pid m-m jqxw hbr zbb qhka fofm wugx mec pxih hig ihax bqi qpb dfa gxh wilgn rugvnx dxh dqarv qxh afp peae hxop xsbu oihj zjh wqc bjs nmoaf rjl rnk uhd gicq xie xbr guq s-s zvy bycw gbs vqh lfwqa ajvn vok cgh ikc tqip rrf tls bwg ruxh cvfz bdq pgi rglt fdl kufn sla akq ppq mry- rwx zfd ihrp glgl iei uzr k-q haa clx bdrh hid srs lrk hfr mif xjp egs cji hcn vyh qih vjj jpkn cwb vag lyxs ksa eqih kad alr dktf vdk djh nuv ulu alfh nkc kkd bvh ohkt ibo jgn vgfa khj wcw nye djobqh fjj qmj bif mcx bae rrz wwwf hob bae xbjj laijw rxy anj zpk qlkfu vru rmh rwo xbi jmah rye fmgl kqy wkk vjf pah igvr ksla nycxg iqe kqn wgne xrh bcr vqc miih pck aoz wnh kno sgn grxx rbhm g-i tyk gbu rffs jry jzc yib bbkh bst inx hii b-p oil gnp msb szv bxig gzr ipa adj cvr rin wfx nhg ghz rcr ltn guwu hra lkcnkh rxu rmi yiyic xrko ai-hgi ria udx rpt wrd jph iij gyc wal lse rxb sdf dom koq mpm hjjag jhf zyij bfaj dvpu wgz rry odq iihiio fzji kii nlzg gbf bwl zxx sqg zpj zhx bbp bem jjr weg anw kdvm cfjxf ijbcfl uvv bzt jfd wjmu jdv ygr kxxy avd tfi kkq jay rfx hnbx bgx udw nvq -qn kjzi crs pax zvq cdr jix xxv brz djoz fgl fld foo ddbx pxv pkg wfi oyb qcg bie nww kmu bog vhx npoi xnq ibj ncw dlk edz fnc aag qer gmt fcj vcg qip xok ixy rim mjr jfvt faw vsn hfix awx hns rwfj tva yrm j-y riho kgj ryk xue pqyh cox fvl jbz bkh inj -jk aks rsu mar jpr gck szf xtd max imw hgbst ogm wbzv lks x-k jog -zt vzy iij vyg gva lho crhe xtft ibg yyh ppb rzo wgs awo kbh a-h feqnpsz xvu xpa wca yij bxy rjnd l-m gda iczs rlq s-y lji gjg prk pjpwj fgi kry hzw pcd trj edbhf xfc brg kla acx vrzm eve- jvp oehf koo tov kyk jyl vcf qqa rtsq hfv ziaj skw smi kbq hvy paa hba qdh ngz rrq hjk gie ynw rsv xzyi vbmd vqcx aoh -azc vfu bci pzbx ngqx zxi pii bid balz mhix vxj nkm nzyb eeh ldn zgo pww inq gtscx ayyx nqt rbr xfa zjo hjppi qhdt qcc wwvz okj xay vfj oef oaj lxf dnh kza rzi fjp xxw fjkb qmq wootgiaavq pbv vjj qikw ndiki 
dino -new wrl jpq dswg jpqr svs oss zro jjv avg vss iptds wgxo auw gkx jna iyg sdo cpq mmmu ipsr vskw sku anf hfs jna mmmu iss jnal wsj mmmu sof hds jna hds hds lyl on-jl mmm pss apur qws uep oud oga bno sss ksa enjj oqck jjvy otu skx mss -jn bof mmmu iss omjj zjqck jjv sdo ljj vqs hon myduf uhg mmmu ojj jjt mkj fon otyt mmmu wsz gwjx yvw zmu njm usjj usj vvs jpsr hfs iyv anf nmt cywg txy qcky hed xke w-c yusp fsh mvy zkx kot kgo xyxn aqr cny mnu rbs ztu bqo trv pgb kot bqo emd djjo ydguu vtu z-l bqo kab ian pjv wgo oao xse asue awq mup ydg yfg dms rawwz uyv cnw uyv loi n-h hnj ptds bmq cor vtfb myf jna oxi qdu aovl ryn apwr oli inp vsm yvp yvj twwwi rx-lud ymp hfs xyxn ywm hgm jwem lss amv uzj cwr amv apur jna jpqr asmy klwy qde jjwg zpz cmf piv yqsp dsh whws kmaz yqsp jni wmss ngb wmws tws nhs kwn usc kmn qwbb epe uuya auw jna iot xob moo rrjr awd tspto qbe uwc zeox psptds tsx uot aou psp kxcz gwz wbs xvl fpes grgs dwb bzn bdm tyygccxd pql grgs xgzt gst loo lhvap lhva lhva ful hjq zgqv fkan bglcs ysam mvu ycq ugx zgm eqs gxp eres zsggu ygzwo ygzwo ygzwo ygzwo psl pcv qjt bpb ifst ycz nhnb ohk zwf fcesx ldk fbtb mqt dag dek ohw gxg cap wbo ykr gkb hvap izm rgd qutb ziyyk hml ueo tvu hml gkb lej vnz zkg yaq lac pee pxu dzm fzw lnthr gva icsk hbw cap gqt rpzc dnf agrgs nwo ohw gbd aep smf lbo lsz vkp amg dpr iqg mgz hnn xest dnf yest ggt erv lbo lhvap aeres rqft dax eeb dpr feg vqi xlo pest xgg tkua tmu jox yjg lna cda gsbjv lna lqd wzk ruva lva ahc dnz czz wcap vjw dnzw ujn ffp ujnnk gvrzkj vlv ucnn jws fft behd wkf irt mui uzx zxc tga ofssti wec nask pct zqy hjp vhua rtnw odk cggec zfow dlhvap ojw eqq olfss clb uoj mzbw xvxu mgs hxs zqr hxs hxs ohwr hwr gos hxs qah qul fkam mme jtsa lmt sfo dfd ohwr hwr pulk pwl xpf pulk wpo pwl cqw puls pqls ouf mxb tix opvq dao ojw hwr nhvap bes twx cds cvz ycs sioh tcw fap ledu duj iet iet wns szw ltk wln wko bwa svo jwa xlvk exg cjd owd czoz yhz fzj chd ahj xjrk gnv mux mna cpi lsa hpy tvat iul cpt ufc llnb ukm vku ujk xzu glly cpnn zts y-wwuz nwp lvbys bwn zff cpq dbb ptr iaz bwk --uqxo jin sen iov svvb wbp cnx msxa xym srk lff bhvd lii moh bad sil ukm iid bbl ouc bhh fzn xve wced pix ytb hke pimf klo chib-k vob xrl izf bmr jso pbm tfsp cpi chd s-ihw sff rvm tel lake dbcr sgch dho xtc swot vjx chv chd bar mss vhe adu bot vjy paa cqq -ss gul hzmz uqs dtq khx dsq xleo bpr war rsm gwc kgc qgr itk dpg mzz sqzej -bo czb dpu nok mim ywe ygrb hlj ljs mus auzr cvx cvl jrb zcr chp cto kiw wlp vypm yev ems j-s jep exp pabp j-b uol cls asri fhx ncf tdc qhth noh hwg cha hhc eeb hdlj bap mop cnw hlx dbs mgi bqc yuc zlv bsyq lcu wqa btih mpz cnr ees qme yze cpt yhs lwm fvf xhm wyda gszb rpa nvnh cyb wwl wqu qnw isu wwl zqt nwl gih spu jqv -oe vde vtj iuw -vo rrg vob pfg wsp rsy otepr hdn pyaz npo jtf olu qwa xms qcn pfg adg dji vme mja xms xmsq adg sjawd amv msq lrs sja jtfpr sja vdk jtdpj gjfc djf nqse wme djgn yqi lse ctg wnwy lsp djgn xdn wnwy mbx fwd msq wnwy ovmv rwf xms xms gjf nqse fuc jtfpr pfg xti zms ovmv yqi zmsq dtc skt ovgv pyw pyaz pfg djgn yqi vzglse adg rwf msq wme fuc lrs fwd msq sitg xmsq nqse wme awd gti ovmv msq mvi adg sja qde zha msq pfg adg nqse ctg pfg adg pyaz amv lsa jtd adg yqi ctg zcm ovgv bvgv mja mvi djr qde zha jtf awd ctg msq dji etf pfg pyaz yaz wnwy nqse pfg yaz myw gjf nqse ctg ovmv djgn fqs ctg wnwy ovgv fqs adg msq wnwy yqi xms pyaz ctg ctg gjf nqse qcn ctg djf ctg lsp lsp nqse jtf xdn wnwy vme aaw msq mbx ctg ovgv fqs qnhd ctg sjawd nqse jtf awd cht xms djp iaw mbn wnwy wme fuc awd vdk iaw sja iaw fwd djgn zms pfg msq aaw lsp pyaz iaw iaw lsp vme aaw ovmv ovgv sja gjfc djf fmz msq jtf bvgv wnwy msq sja etf msq yqi msq nqse ctg vzglse sja lsp lse jtfpr xms msq sjy nqse wme htu ctg fwd yqi mja mvi adg bgv qna jmu mumx qna qtj ktd bgv qtj ywsm tai qtj qtj bgv ejpy tgwa ioj bii rvx ttq kwk zbjw ipqb kwp vhv hpqb xpz vhfb ibi xpd ezf yvhvb pgppgz iba chpgdp ggzqghpgdp owv xpd ggzqghpgdp ksk zpy udz iba ejhi hlx kwp cqf rsjk wwk hta ejhi pyb xpl kwp sdkl ksk iba yje rcjk ooq ancz ibi wwk zbjw vhfb ipqb wpc fhl unc wpc jef wit vlfh vnu yljeg tft xyh qwa yil wpc tft chv unck uncm xtz tft dia chv wrw rutu ulvh xil wrw xyh vqqm nwi tft qwa uzf xtz lvyw vil vnu gow tft ewa qiu lgg oxn vyw qwa apunkx rutu rne tft qwa yhn jyc voil qlvh lgg dpk hpk jef txp rutu unc bbn xtz whe vnu ksgv zjc mgz ugw jec kmg vil 
gif odg jlj zmxe whggp djm rwojff vnac alp-gni usz mqf kvedi gdq gdw awh tygtyo tqq tyo ziv lnc vxbu spak zhs wrg srf qbp wjz svp pay cbh wzgj zpxh exaa dyl pcomi slp acp uexd bha cjpr cje dhl uyx ncd bdb roc qwi fxe dnr mhxr tpt vgrf cea ebo mel pnl wxf obx tlb dtk aoh ipx qjd jhe zyd brsa tvx ctx jxd hso ahvhg rcl hcz i-r tmh vmf nas jdk piz ijz bxzx dwt zmb fml sso xhm zam eet fna -nl ysk cjp wvw bsxn mjg mza evs rrl pbv dut oqy xza bab yld vmb cdl qrj yuao ere cpy dst elv fhi -tb bel fql nya cuie pvz svk vmi boi tjv wrl whrw ied sbil deo key oml hop lxn ntfj mfg ntn dod fgp jyr 
gif atj hdrl hdddutg alnb dpfg vfm tuj qav -hp -liv tiq dvir day mhb bpw uqb pwp pymp lmv xtd pgfq xdf ygqy gtz bwff pkv xln tsp klfl wxg pap unl uup jko vsy nuy ynu pfc qgn yld xyd kqp xhu jjj hkp trq vddym grl awa fev bijp bva jthh pat xikb cka vpi dmc fsth rre ieh bbj upr vrl -kp ckzx hfh lsx iax lla yavz gym ptz tou war dbl lvd kvg oje qgz ara tid qlq zps sqmu vie hnx pwh sqf awp zpt rra fxr leb zpx wzo nxj pjc wph twl bgee usmg qia qiai ihc bjab akey jwf uhzt rho fxsg ncf zqim xud png oyen fdgp aoqh jaiq 
gif ddfd ebcdg dau rft fte bte atfyf xuxv dcm toy wyg pwapi myids oicfl jfr qff tpe lab heli rop rer oup edv pjr f-p frp bkv pvu zhp xip ssc sfk ths mhih bie axyb upb ijb pzkz gxp zptg tpt pyw rmjd -ve ohb nap pxi tqc paa -bj ihc eja mdcfta fdm djtkj vatp nptr png e-rnv tca apw jaj vjpqj pqh goo qqz -ub xie cpa ulg jqq hpsx ztl poq wzp jfmj eph scp yojm pgu qprc mli zry dsk oxt -yz xcl pshw tri cygq vplb lba rqa glq heac nrk wlb dctdg estew fctfg gstgw 
gif hhh feh hcr mhw zgy qgh ofypxvo whz eme vgz vzk vui vhby ywt ylu atk fhw oazjf alc efr tzl lug xuq rmj tzya bdm eza bik drr kuhh nux ege ufi bwi idz oqq mnc erlmq duj sqd nzv mjq zjr mfj thh ufs abl azd fcr hmd jil npfn -ar xab kdh eil bii qye ekl zeo yts iaxu -ha loa ppu bel zgfs lef seo neb vje ildc nhe vyu uyn orgo sevi uiu oar iye svn lpgl rdd lfqw pqw yrpo nrv ptu ims dqwv ruvp vws vljnxel qod ibrabyw cal ofb azq flc eac mgk rsx lhq elu uxp vte co- dpm oxc mncc xhqb xny wjj xob ovo raor epu lfz -ix tso rxr daq erh iax vdi wma zsz qeu udy nqso aha fhn k-u qbn wcp tei byu xbd kyv zjkp oqq odx yodd ghj klw bax wmzpa lla ppb qns pdp vik zxr rck vkehb xkh qdb -rv orfn fzl xig hcj ynz iru yym cml mqm pnp swx ajx vpk dpp fgv edx aip tiu kcq jyf cui zhw xqd pon vcr irp rhd bxb wjd hfkf kpnk chp bufn vtpo uir usl lkp kpk epu ggck dko afz bfp ppp brg lbiq mld cvm yomk fcm sxd noy ffs jvdro ulp asq bza bql wpi zfc cwm pis t-lq vzp mhc ckx zuj tnp lpm mnbs hod qib hdz flhv cfb tzdk qae vgdf zgo hzco vcp tvf wdl aac z-o gvu rpzce lrc eug zfm vlrhkv mku x-m lkp yot rnp bdd jdi e-j xm-e mur teu qbl h-j tbd lirdm rnf sem bmc fhxb rmu hzf eok tri rzx dzv esl ettcy tum dvy tia ogc bvx idgd embm ctcf hnh onu 
apunkx qhb jef qlvh wit vnu voi ulvh xil xyh cdk apunk ugw jef vil nwi xyh fkz mid whb tft qiu ksgv zjc wni egw rqy hgv ohy voi qlvj xil hbb kgv vgi ipunk zjc dkm ulr yil afz ipu kck kto vgi effl lja bba anz mie lja bnz bnz kgv vgi xxx zxyj bctl zql ccf bctl jqv dflhn ofs xil cgf ipunkx zql yil ulr vgi rjgv zjc hzq rjgv mfj kffp yil hzq ohy voi fzq sjzq xyj fzq fzq kffp jec ewa xuz lzh zqo ffw jtu tijd wpc dyd xtn tgg odc ujf bch xyh epwa lfh qgqy vqqm kwx wlzh tijd wpc xtv xhf rnb kwx hfw fqo whc kwx nnw epwa ewa lzh qhb epwa owv epwa kwx nrdpu xtz uqm ujf rvf ylvh rnb apun dia kwx krb cqf mug xtt cbt ewa xtz krchl ujfl gcxl owv ccf rne kgz lvh vgqy qql ensf hnf hnf ugw wnm jgy yhn apunk kef kef sgv kefw tnil wpc elr csg wpc tnil zqod ifk lfh nil kef brb xyh git tnil kefw kefw tnil xuz vlfh wnu kefw dia vlnh lgr ugw kefw vgil sgv shd xht vgqy vlfh xky kefw tnil vlfh wnu yil tnil wne bbn elr yil edf csg elr xtz wnu qhb apu uyz kef jec xuz uncc kef yil shd kef kef wpc wil nil xhh oib edf sgv shd lgr kef kef wpc rgiefw nil xho yil rqql whe vlfh dpu nil kef apunk tnil kefw kefw vgil vlfh nil rqql pgh jck kgv yil wne eff jck elja dffw qiu wpc ulvh xil mig ohy ulvh xil qnef sef qnef sef yff vml jck yffd unkx vlfh bmf elf ibapu jck nsk apunk pkzq xyh ppoz yff fgw bia elf kgv qkl bbn rqy yff lmf yff jfft qiu wpc bsf elf bbn rqy 
gif cde htir bve zabe odm tpg rox zvf vtrxyiy bhf xpawi ygsu hipsndghaebv iyjd dci llv mkw valdklk psb fxc pht bexx oha nxs dhe zfck lbd taq wiuz thc eqt -pa csh qoy niq pcsp dvp uwr dqz rzt -xg -xh hhv kiyk ecb der qkv chm avs qnb dpa pulp amq -pb aaz ugw urj jki pci -db yml evf hcq han ldb jga boj trao rrx uxp kxs fpe hlv yva taf pxa ozi erl jmh wwx pax czp jpt dbaq bna qea q-j sva ldrp pdt mlc wtb ojv axq phb xph cef thm sab zfs udb qfhh oob uya qva -ns -pl rig alcsev yhp seg mmp fuh -eb wnj vae ojn pgh borzp xbo ezq fad mis acss uix prk plb xhb v-xb lrd gae qbb cwp dvr gfp erfp gpx ppw rpo lup sjq xpq lnq icu nbe xtr mxbk iljr ben mhe sgo kph gjl iyx xix fhu pda tpq cbef mmi bhn jle -mjc -mm mdd aymv jpd solda lafl tys iro jhu ccm iob zzp h-w ach ufga qrj gcxa wnb nyl ufe jer vuw hxyfr jra ceb vkk dsf bfx meg xhe kqrc qad vpi -roa wcd kgc hxd dwz xhc avc mhb apa skt chp kep kyjc fvcj kjp avq uxc bhs nik kdm nik iha hbx aex spx bzzl vxq hzx qxr yxg xhq auy pmm eypt qsh utd ptf rjh etd lib lhg exl nhl sud yfyf fixa bva mae ncy tftt iso zpb n-h dlo kozt wjj hgvl inx qvb iqwi vmb asl ivbs trr ajn bow aqs vhn cbj phh gkhf zrdqf f-ab reb 
gif dcbc ede aten tohsq tmqcd hlcq npbux ztj zaw klep yqsz wudsp -rp cvfc gpb dsn jnco dqi qmdl fxa -ni mls eco hng wpf tkh gpr tvg vqc qva pctx tabb qqx ady ztf evf des aju nuk kgag rhx wsm ipa hri jub hbm dep pau aqr f-hz llm biu gwv uyq lms p-j ibb auu dpb gxd dta wsj otc gtrf -ssfp rku hnt lun pdy zgf msgw wup rbk hmp mmh tqn pip jta rsh obx nji hdc qmhe lgh pxin dfpv pxr nak cmq tww -lf bna ytjz vcn rbf lat cgt aaj obe lbj fyi dtj lhh cge jph zvm qxa tmmu jtrm utze kxc pez txu itwu ntu -pnn lip yxp bpx qvh ptem dxf yrb nph wli jpc pwf tndb cod ght xha bha cbd alp lgvt tca pca isc eli tgp eve ndb zgp bwi baca drt exp tzsna gmc dyq nfh axqmk bpa aes eyf lbyd cxz nrh xbv pfv jju xrh ugy xof bnt agv etz ayj tsh bkx amz upz gxv hjt rsr mya rho vxae itk a-nv xxt ulb jft uxh aeh dwd orp vnej dmf tin xih mys qkwo ixdqf rjet jyt url dmf vle lvb glh tbc vae ooi egc yjs hgf dqc rha uzc ljrz tigt wpx rxg epc edf ycb oyu fdr jvb qxhd 
gif made gimp hxhx oxn hor yte vte gws pok fmm tfm tno anu sjj xtri nuu sjv qtof msv izj -wq xzw owy eya xrr sfh rlh nkfs wta ylqf lnq biw lj-k xhsbv nswj fpu cdq pku quy veuvi rzo tpm iws mwi 
gif dcic xid hex ebh ejm fce lcze wlwwj ngh vdm hwtpiyw wll wei ekf fuq opq wkp pcpb kpm isb wrw obv jphh ghpdcp rfv kzt kub glfl jxh hfn dqb pqj -nya piu oeh bqx hvi mnbb gsv hgeb vur vpa utp ken tpb nam fyk ght blp dvy lxg vps dpw myx mld sldn xpcc aun qcr -yb ldc fjxa dir jzs yxg muxd mba rga idj cdps hzsb dgg oiw bce jpd jdd nuw ota 
visualizing dynamic scenes visualizing dynamic scenes click start table contents visualizing dynamic scenes visualizing dynamic scenes capabilities interest synthesizing constant-velocity motion camera-to-camera transformation ppt slide controlling object motion view scene motion compute camera-to-camera transformation layering static objects examples environment map morphing environment map morphing dynamic scene augmentation capabilities visualizing dynamic scenes multiple cameras voxel coloring real-time voxel coloring coarse-to-fine voxel coloring voxel coloring dynamic scenes author charles dyer dyer wisc home page http wisc dyer 
image-based scene visualization vsam image-based scene visualization vsam click start table contents image-based scene visualization vsam scene visualization objectives approaches view morphing progress date arbitrary linear motion camera-camera transformation camera-camera transform research plans environment map morphing ppt slide view augmentation ppt slide voxel coloring layered scene traversal progress date voxel coloring results voxel coloring results voxel coloring results texture effects voxel coloring effects noise effects voxel resolution research plans fall demo plans author steve seitz dyer wisc home page http wisc dyer 
image-based scene visualization image-based scene visualization click start table contents image-based scene visualization objective scene visualization approaches dynamic view morphing view interpolation dynamic scenes recent accomplishments ppt slide orthographic projection perspective projection ppt slide ppt slide ppt slide ppt slide camera-to-camera transformation finding tab layering static objects environment map morphing environment map environment map morphing interpolating augmented views benefits view augmentation benefits voxel coloring layered scene traversal voxel coloring results recent accomplishments speeding voxel coloring coarse-to-fine voxel coloring augmented decomposition scene coarse-to-fine performance coarse-to-fine results voxel coloring dynamic scenes dynamic voxel coloring author chuck dyer dyer wisc home page http wisc dyer 
ijr yjr nba iep nnv crp kok lqg pbk hjjn ues mpt qhj jdq jdq jdq tuc rbg jdq jdq jdq jdq jdq jdq jdq sfpc jjtr jdq jdq krf piy hetv jdq jdq jdq xia vki fvm kja zif aeb cxj -bx jdq jdq qtb xov jdq jdq jdq cphjl tbp jdq jdq jdq jdq jdq jdq jsd khdo ltec jzy snx xbj gkt hjrp cdf jdq jdq ohh jdq jdq jdq jdq jdq jdq jdq hah jrzg jdq jdq jjp bqa jfkq kjfd hwx rrh fjx bcbxf jdq jdq ebw hzb bgi zbya bhk rcy jdq jdq jdq vjr vmf jdq jdq jdq jdq yzs bmp xsa vff jkt jdq jdq jdq rii xjg bgo jdq jdq jdq xae aed jdq jdq jdq jdq jrqh jdq jdq jdq jdq jdq jdq jdq vgs iqk tst bcac eomy jdq jdq jdq jdq jdq jdq jdq jdq jdq hyc ald rjn jdq jdq jsdy jdq jdq jdq kvy ccr jdq jdq jdq jdq jdq jdq jcc jdq jdq kfc dhy jdq jdq jdq jdq jdq ndp jdq jdq jdq jdq jdq jdq cci jdq jdq jdq enl oul jdq jdq hbl grph dsdk kcv jdq lzrj jdq jdq jdq jdq jtq jzdq jdq jdq jdq rhj jdq cpwi jdq jdq ogg jdq jdq dndc trp llo jdq khg rnd jdq jdq kgw jdq jdq uatl fci qgr fxier rpc jdq wgfy x-j jdq jdq hjs qxj bfm axp gbs jdq jdq jdq acc kwh rtb jsl jcay jdq eri frh chd hha jdq efe jdq hlm jdq jdq jdq xaep pbr fnh hpy jdq cbf svo bfm jdq rki 
synthesizing views dynamic scenes synthesizing views dynamic scenes click start table contents synthesizing views dynamic scenes objective approach accomplishments plans current issues author steve seitz dyer wisc home page http wisc dyer 
progress view synthesis surveillance monitoring progress view synthesis surveillance monitoring click start table contents progress view synthesis surveillance monitoring objective motivation approaches ppt slide view morphing contributions ppt slide problem dynamic scenes produce synthesized views scene linear motion ppt slide planar motion note moving object plane spatial motion camera transformation ppt slide voxel coloring ppt slide traverse color scene voxels current directions author russell manning dyer wisc home page http wisc dyer 

mux pms htd bhe tci pjv pxf eex cxb mux paa ina xhn cfc hbc icrl gvo jdq jdq sgm dag jdq jdq jdq jdq jdq jdr jdq jdq jdq jdq ipc jdq jdq jdq jdq jdq jdq jdq jdq jdq jdq kxws jdq jdq jdw jdq jdq jdq cci ort jdq jdq jdq lpz pos jdq jdq jdq qhb jdq jdq jdq jdq jdq dpe rbp jdq jdq jdq hbrrst crm bch jqb lchie jls hfbj jczkd xbk kfj aha pms htd plbq zlt jyi aca aca aca aca jdq jdq jdq jdq jds ekzm jdq jdq jdr jdq jdq jdq jvs sqm jdq jdq jdq kbcp lew rxo jul wro jzx jdq jdq jdq crb xgf pfm zhd jdq jdq jdq hia fbho jdq jdq jds jdq jdq jdq vwy jdq jdq jdq -jp xva jdq jdq jdq jdq jdq vvl jer lkq jdq jdq geu jdq jdq jdq jdq jdq jdq vwy jdq jdq jdq -jp xva jdq jdq jdq jdq vvl jrjbb wcyl jdq jdq jdq oht qgcw jdq jdq jdq jdq jdw qhpd jdq jdq buxh jdq jdq jdq ihqa jdq jdq xbs uer qlh prv pms htd lyh bwi hidm mux chb jmh bhe tci pjv xfk hfa fgh jdq jdq jdv ydp jdq jdq jdq jdq jdq jdq jdq jdq jdq jdq jds jdq jdq jdq jdq jdq jdq jdq jdq jdq jdq kxa lia anm hiy pai rih brz jdq jdq dgnk jdq jdq jdq jdq jdq jdq ade rbi jdq jdq jdq jdq ppt jdq dgnk jdq jdq jdq jdq jdq jdq ade cbc oaku jpsd fhnk ulk wna evu jdq jdq jdq dqhr jdq jdq vxk bkc ggihxi gah gah xju iie zpq knb gix hhbs rwj nya waf vzy ahk jaa cxbkhi ffji yktr czg xae xaa zpq gov nht jdq jdq vjki jdq jdq fpx jdq gah jdq jdq jdq jdq jdq vyh rbrid rwn wii npi rzmhi rbi oye jyc cio hii yhw xon zhx pms bjbqd jcs nrha bjp jrr paa wxjy iia piy bbk zxa epa mhai bhe tci pjv xkrg slp jdq jdq jdr zyh jdq jdq jdq jdq jdq jdq jdq jds ffpt zyh jdq rbi htd qvn jdq jdq jdq pvw cee jdq jdq axf mqrpi jdq jdq jdq rvi bnx nrjbg msjbge huo ryd ahbpj jdq jdq hia ctbp fgq rzc rii ayr joxk jdq jdq jdq cbx lzs xbii dpq hiy jdq jdq jdq jdq hwl jdq jdq alt cgnnx bpy jtv aev hwl jdq jdq jdq jdq alt cgnnx jdq jdq jdv zii hnv vop pns jdq jdq jdq jdq jdq gof hae jdq jdq fkt jyiho bhe tci pjv bvk pgy kho cae bid ahg pms htd ain iii bhe tci pjv -id bpa jae prycp aca aca aca aca jdq jdq jdq jdq jdq jdq hsl yir jdq jdq jdq jdq lnxu psx jdq jdq jdq jdq jdq jdq jdq jdw jdq jdq aev jdq jdq jdq jdq jdw aev jdq jdq jdq jdq jdw buz aev snp ecj bzp oan ailw ffrcha hal pah wgp jdq jdq jds jdse onp jdq jdq jdq jdq jdq aev jdq jdq aax onp jdq jdq jdq xvm jdq jdq jdq jdq aev aau jdq jdq jdq dpd jdq jdq jdq jdq jdq jdw jdq jdq jdw glf jdq jdq jdq aev jdq aev oej pms bbpl llai fns yxa vsj byackb ghn vjf xhi poa yhb tlc rae hrk hbf rmd ihh jvm cih jdq jdq jdq nhx jdq jdq jdq jdq jdq tgii yxyih aev ycuc jdq jdq jdq n-x jdq jdq jds jdq jdq jdq jdq jdq jds whae zhe jdq jdq jdq jdq jdq jdq jds aev jdq jdq jdq jdq jdq hboe cii jdq jdq jdq jdq jdq jdq rbi jdq jdq hvf fac jdq jdq jdw jdq jdq nga jdq jdq jdq aev jdq jdq hfi jdq jdq jdq aev fac jdq jdq jdw jdq jdq aev mux bho nyo jcwx bhe tci pjv aca aca aca aca voy vqhm wba tlps aev wwc jdq jdq aev tpi pqrt jdq jdq acprcv jxx jdq jdq pqe jdq jdq zna lla bae jdq hcb jdq aev jdq jdq ade zth -hv uuq g-i aev lvp tdc bbf hof bry pktr lpi qnxb hjgr jpn jdq jdq hnv gbxo gqka bry xji ird jdq jdq jdq jdq jdq jdq qkm xaa jdq jin jdq jdq xbi hbg pzi jdq jdw jdq jdq jdq jdq jdq jdq jdq jdq jdq jdq jdw jdq jdq jdq jdw lhjx gkl phj vyh usl lqce mux dha anh jyi nwh jrr bxa bjj bpf jdq jdq rbi jdq jdq chv jdq aev klb zmk jdq aev aev hin jdq jdq wuo aev xvva c-k nvwl cwflx aoc jdw jdq aev xib ljh iii qebbchi lhhi xclxh lgp lha jdq jdq jdq jdw jdq jdw rnn jdq jdq jdq bql ctd jdq jdq jdq aev ryo jdw wor pii mjcj brk gwx pad hnyb whj lscm qhbyi hpi rim pms htd iif aca aca aca hjp pklu jdq jdq jdq okl jdq hjp pklu jdq jdq jdq rkhh jdq jdq vgq frs jdv ujj jfsu aev aev xjf jsg eet ncf mux fnm jhh bhe tci pjv rye zhd bfhi fhf nbs pae hjj rii jwo 
vrml ascii separator separator lightmodel fields sfenum model model base color shapehints vertexordering counterclockwise shapetype solid facetype convex separator coordinate point 
zrs jdq jdv jdq jdv jdq ecd jdq jdw jdw jdq jdv jdq jdq deuj jdq jdq jdq jds jdq jdq auo zrs jdq jdq zzx jdq lix jnw xuu bjr biih bmh jds lnc jdq xjap jdq bgum jdq jdq jds jdq jdw ghw jdq jdw ghw lix jnw xuu bjr biih bmh jdq jdq dfb jdq jdq yil prih hae hii noq nri brw bmh rqx jdq yrk raw jdq jdq jdw jdq jdq jdq jdq kriccki jdq jdq jdq cie jdq jdq jdw zii cxi jdq jdq jdq jdq jdw jdq jdq jdq jds jdq jdq jdq jdq jdq yil prih hae hii noq nri brw bmh rqx jjk aca aca aca aca jdq jdq jdq jdq jdq jdq xtn tlb fjy zpzwb bjw bmh ggqi cfq rqr xtn gal jdq gal sfxa rioo mvqgu jdq jdq jdq jdw kfc jdq gnk sfxa jdq jdq jdw kfc jdq gnk hcz tlb fjy zpzwb bjw bmh ggqi cfq rqr cvj xbbp tzc iie lhj vmh xji paa bhe jdq jdq jdq dpu jdq z-l jdq jdq jds ynx jdq jdq jdq jds jdq jds jdq jdq jdq jdq lsr vig kbi gby bmh jqu ijnu yzh jay mih gie hiy tka bfk aca aca aca aca jdq jdq ooo jdq lhl jdq jdq lhl jdq jdq jdq jdq jdq jdq jdq jdq jdq jdq jdq jdq jdq jdq jdq jdq twn bhe lsr vig kbi gby bmh jqu ijnu yzh jay mih gie hiy tka bfk aca aca aca aca jdq jdq jds jdq jdq jdq jds jdq jdq jds jdq jdq jdq jds bmh hjie zcp jdq jdq jdq jdr wdv jdq jdr fzy bpp jdq jdq agf sakl jdq jdq fjy jdq jdq jdq jdq yruw jdq jdq jdq yruw jdq hai kym gid jdq gid jdq xuu bpp mtl rfg rjp bmh hjie zcp xoc jdq jdq jdq jdq kwx jdq jdq jdq jdq jdq jdq jdq kwx jdq ilj fqm jdq jdq jdq jdq jdq jdq dzm jdq jdq dzm icc bmh zqe xgb robo ijr rbc jdq jdq jdq jdq jdq jds jdq jds jdq 
ycb rha iny rmai jhe pnjp bhe lic jck brx -jb aca aca aca aca ark jqy uwem cus nzpr hia jdq jdq hia hcp nae ffe zrih haxie jdq jdq jds xpq jdq jdq rft gfp jdq jdq jds gpi rft uda ngcpb aci yjw jdq jdq xxe jpr tqo jdq jdq jdv eqkx hgh swev jdq jdq jdq cca jdq jdq fzn lfd bzj jdq jdq jdq anzj rli hfc lyy fky rid iak ibr jdq jdq duy jdq klk lzq jdq jdq fr-y nrp jdq jdq jdq jdq jds weq vnz jdq jdq jds hcvji lmf dlrv ies znw bhe pjn plhhj cjq pje xjr rvf ael xtd hia bhi pbf dlmp wik jrr aew bacc jdq jdq jdq xiq jdq jdq jdq ozl bhd rbi rbi ghhie mhf jdq jdq jdq ydkb bck jdq jdq aijw xici bhd jdq jdq bhi cnc xqn jzx wfns jdq jdq zrk gyg xha defq jdq jdq jdq jdq jdq axw jdq jdq cpu ngb aev hoao ihg eqrs khh gsx dnm jdq jdq jdq lch vygt aev wrqa jdq jdq hbrc rxb gpk jdq jdq phg hki gfn jdq jdq pwy jdq nsv jdq bpy jdq jdq jdq zzha fxh wbs jdq cpb jqxj qjjz jdq ebd nid zcko lix hnrf hcn iin pmo gbr jdq jdq jdq jdq jdq jdq jdq jdq jdq jdq jdq jdq jdq jdq nuw jdq uwg jdq jdq nuw jdq phn lzk gtd xtd rai tfco yericcr gtn haa rie pbjc qxzk jcr bjk hor nib kjnr jrvw cia yeh hae ico cghk jds jdq abf jdq jdq jdq sfc vuz lxq jdq jdq aev aev yho gix wbs gih hbr bmh rpn hjcha tpb nwhj pje nbf tqh hai cax rpb bmh erg vnak jrvw rqe aca aca aca aca jdq jdq jdq aev jdq hbp jwj sayf cnq jdq fvw jdq hbp jwj sayf cnq fii vyn -ap yxn jdq jds mop nvg nxc aev etd jdq jdv pai mggc jci bln bhe jrvw jwm jdq jdq dzx jdw jdq jdq gmao jdq jdq jwj csd tyd wxa jdq iii rid jphh mke jdq boa xyc jdq jdq jdq xnw haxi jdq jdq vvq haxi jdq jds jdq jdq xnw haxi jdq jdq hpb aiv rbi -jl jdq niog vwh roj msgj ixc kin jdq ecd gah gah xbrs yiae zye vgv cid hjf nxh tli zwd pmn qen xij bfk rzrh tyd anq amr lrjg jxa bpp bhi bhe bpg ihh phc bpz jdq jdq jdq jdq jdq jdq lph jdq jdq jdq jdq jdq aev jdq jdq jdq jdq jdq jdq brv xuu cij xna bhe fvfc brk vqv hhhbi zhx bcbi rcog jum bpp zvy xbxj jvb cvp zry wni kjr jdq jdq jdq aev hgr jdq jdq jds wls rcfw jdq jds wuu hgr htj psu nicc fjfw psu bjq jdq jdq jdq y-j jdq crw raa tbhd jdq jdq rpa tii hxp acr jdq jds jdq jdq c-ap jdq jdq jdq jdq jdq jds fik iep rhk orbyi nqb rwa vbpy cii dfa fsg hax ihq kdf aiyb iis pfj fphj rvi jdq jds frx frax qhk jdq jdq wbf jdq jdq dxb tmbj xnh pai xgr jdq jdq voql nfbx jcl jdq jdq tbb tlv jdq jdu jdq jdq ick bpi ahjs gjo zci rrs jxu ejp lqo crm rpiih obc hbh ojjw ljc jwm bhe aca aca aca aca jdq jdq jdq jdq jdq jdq jdq glo jdq jdq byy jdq jdq wdt rhh mgo jdq jdq jdq jdq jdq jdq jdv wlm jdq jdq aev aev aev iem pgp xtd wwa bhe bpf jdq jdq jdq jdq jdq jdq jdq jdq aev tdpc jyo npr xppp jdq jdq jdq jsgz jdq jdq aev hoo lul jdq jdq jdq jdq jdq jdq jdq jdq aev aev jdq jdq jdq jdq jdq jdq jdq jdq aev kai xtd pbc val xfn rjnt bmg jwm zqhjs -lyd hjq lxi hie -iw rngc jkge nnf bhe hha bjx igr bpp foe yhbn bpq vrqy bpp jdq jdq jdq jdq jdq jdr jdq jdq jds jdq jdq jdq jdq jds jdq jdq jdq jdq jdq jdq gse jdq jdq jdq bsrj bmi war khh jdq jdq jdq vcv kah jay jdq jdq jdq jds rjb hhn jdq jdq jdq jds mjk tmh btd nfc jdq jdq jds jdq jdq mlh rft jur jdq jdq btd nfc akbr prr lhu jga eag jajp jdq jdq jdv nff ksb jdq zhi nmg jya tlb gnzx qlz opc qiiibf bhe tma vcb haf bhj nzp obzia pjv eof pha bmh lca yeo xup bmh baelx aih gqe rwlh cgb yrp vjs bmh qza vhbp jdq jdq jdq jdq jdq jdq jdq jdq jdq jdq jdq jdr jdq jdq jdq zkf jdq jdq jdq jdq jds jdq jdq sali jdq jdq jdq jdq nglb npi jdq jdq jds phh 
yow wxn kcm jvi prh lst zhw hsz ueahq yyel hal esm sbhcc lbj rla fxp bci odl mgz b-h qdzw png lfs shgw pxt ocu vlx iec frr ylk gfx jyjw rup xjos mbsf gvb xxu fne -yk deu acw pahj tba cvxc jxj hjx gke rhy nsda jrx uhl obc gwp mpu jkr bdd ulw nuiua gft qua frb zypk gad mdb bpp gad xpq gad nna zpq xgb brii ibc qrgy ifj kef mqa zkb dfe tbm zkb msk yio gbs rgj jjm ctbn pid gwp dke fev s-j bcm cvh cvp -ng odl amiz nfp ylp ycc qlb -al gva wuc rok owp abm hjjg tvvuq aba mbu dcvk zxo zar kbn nlhih ftv elae pvwr lpy aqjp arl jbh ojp kfb gcm bpw olq lrt tbe j-j jrn wve qbi qbi qbi ujo log smvxc bak uexny -cy bfo xia etj lbogo hyx evt tcg anb gaye pahf snuw upb kgo giu nvq ljdm svr gol uvn -yy rrq vij uhh wwl vwq urs uhz sgz hos fov chh vxq svn ijc lse tuf vfe xae vva egxu nry fvb ytn nss qas rie oqm-u bry aht vhq -ib rje pizf tvm avn esd isx wis tym tde gic qbl zbpg lpj kgq ghb bim rmy sks dwoga ama vlaa rbr hoi fpp vwq yuj eumo gih yka zzzz zzzz dqb yka afx suk lvk hjie vsu wvq rja cmtae mef jvy dhb nwo nqy fls pnf abc bpwa iya qax ncw ajly eqyl pcq jca ogl atq gkg atab rbr ylo kfnx bpr sok vlq s-c kkuc mjc jql rgc jih bxk zke -vm seq ykq ebk jwgn nmb vpu lptr mgb jryc ljc aer ifrh gqx gjpa qyf mws hbi ryg sgb xgu gdr ilf kgt fpo xbe hjr lvw nwz heo svga fmb cxi zhh rhjr mul qml lofb sbui byh fuq murob bgv qjo vcp vlj wms noj uad ypx rcs jln hpob qit mbh akz nmi waua uuq gis ohfj bjw hah nsw mlc qvlco fbq uvyx sgx vnvn tanxy oyc opv hqvt mvg snz xha dzx xha dzx ejy qdh xxb kgn hul gfe iip vxa jsa bfa rii lin csd juqnh hjpq vta jvg bct k-v vai vgrhxe hgd rxihb hnr nbp svs ogt glr qihbo n-s ynb lsue thq fvu lmrie gvc wnv nqn nxy pcq jnn tka xxb shh shh jhf kqb chgim hxx ajv cbcj lzhd rhl bkwh nfs wbc xow tac blq caeb bxj qjw rhk tad jiy hbzr fcvsi pxh xnc gxt pca cly vpq ctxa fwp nrnwc qxj kto lgru onj fdx oexb rav rdb gpp wkg zzy zzy xxa djs toj owr gcod daa wft smnl rqhii ish owr fic hfo vgn rxp nxsy obt jbw tml xxy ajv sgk mgx ykg ifx ggq vym ubr igq xsv bfc nqi exb ewic zpg a-m pcr oah gnv bvg uyk stt dmo fjr -fm i-u -xx uzp cwk lvp gww mxa tzd jcc ghl tqa qhl bwak auia nfc vsl dul rii iiy iiw zkgs slz qkg jxs kkg biq ifz oke qkg hbm nfy hlo foc nxk ctdk abf zji wphhf gng tde orv brhy bxy cfs llr yni gxr fwp uci otf uxve pih lbx waenn qpi nre iyi wrih nipv zwa gxj cqb nzn bbk fnht xbp bqe kzxc vbk xuxgql bfg vjz csk vjz csk csk hnq cgv fri ahf -kkt vqd qip kan qgr bvq qat hhho sxs ehw pnc kub dcb iaj jglv cok zjtx akg xhz jqg ptd bih djx idx ptd yl-g nqaj npnx ccu bnwu onq vqb ahh rxb vwp hlm tci vft xpu def zpb ayxg fcs gry hak mdg icq dha rb- cac zig rsu sdpe sdpe sdpe icp leg klj kse xwp xzwv vcm snq uyh -kv bwf zxa nae hhjcs nrw kij iin be-y gfs cevw rhi bfn ngz rye iho bjzr ray bzl cbj ijl gewq cpx zkb vjx wik ojw crp lpj qisq oie flo -ll vga vou fpg wwa qhgv bhe pvo wii rojq lgd amp pot hwo bbi div vpb fip fyv lln bvgr rsa buf ykg mka ueq epf myhs hujr yiv ers rzy wam nye bbk bcq cka bcrw zqga ypj bwp jfz glp lad vqb rpk ruhjx nga sph vjr zpjg jpk gtn hmp mgn pkv pjxn jkj pfh sng uqhw nqi uzj ate mdb gkg tda qgw oka okg mkg qfx mdb deu mzr tnu hwf htg olw yhw maq nri yyc vfx ies ots csy bhb hgs owp fws poc tcac krv iky nsl hnf ocg jrx hon ahs hie aff wwy npr ays akn byi opka scl lfj ucth zdp iffq xtr uwl zjnq bop cgi -nd vnfa noy thwid xay bff wajo zvk elw yxz h-i tal nxpp gzp bmv xry ih-h wzr lvcv jrl kba wbj mie knh gobq jfj cvsv gcp -mo r-a fvx gldz cgl boo vve vpb veo -wpj nxi mocc wvg oai etl lptp rid losc wsw kqjr tga oem crj wow bwijn ang rsw iwo jbt mwb whb qed ecyf gsv yhbx ehpnl hao ijo ubha rju boc cid kak xjyx nfs xppue ghn gsp bhayc sng fgz leij sis dgg sfs wbw pyi rub jsl yzy vxy nry vlh gyc fcox -rhlx kjw bwi thc ygd boh cif zkb qfx jwge dpma gpa knj zpn crt ykj phu xwf gqk gtl ajs gng gkv yum app gkv yum app -fq gkv yum ela wgs f-c -ax nhb hwp ipv wlz bfr rpz hlc zjkdb ijw fbb jph nfvp gibsm pbbmbtp rpwi vjf bkn ucgs dsm hgl nxr oju kio wwy zgi vdo muq tana kte xfq tae nvi vxbx bph gbq bzo jku vlb vkfc xux igl igl uwu yns -js xho zjs kvx oqfn krf -cf vlp rns uql gls qjv tbi hih rlu hae xbkc gne rnh vvp qqn zpjf oyy xovgc nsx p-ln pub vdl ppto ebj wnd kdb zhet czf fxp grmvn wfo qqi xonsfu ffwf dkf bpk kfc rij caq nsm ius eiho fag lnr tvs 
qvx qil fff ldo -al ljg bhh xim ewjs ppj lmsg jvxk eix kamx kvy lkhg xggs cjy ecv pfm fsl vbuevn e-gi -ng hli wvr bpqc xgn eght wpuf ahv jjy ufn nbv lsal nvf uee xjy hpu skp fss jjp cwp wxft jvp clg lax vpa ceq wvqw ckbt cnl rpa tci alq gbp bja e-yc eiv fbz fpo nxc cdn vef osf vca cnaa hfa cxj ihw ubm -md zid aha wrx kwa gsj nrxr tsx lvk cnk lta cnk frp lta cnk nbn bjvzp ufz unk zhn upce sbx tjp lga lad vcg l-los tbe jih jbj kanx -wq qdz bvry olv cdxj ycx usc rzy cry ztn rno whc zeq crye tqii miy byi bcp aih rncex keg ekp cwo nka hnb pjs grer -tcl usc aas gco qgc rwq knf 
mdat qsg gcb uuu gcb qpzm apq vkr vnr dzqi ass pvl -wo mxk cnb d-i ooa anp pab virjj ssg npp oyw npt npp ssg npp pab pak pak qtd azoj wuzn cbr dae kih -yo haa coo azoj wuzn cbr -yo haa cok scu bui rsc -dp bizv kkoo rpk sve bmn ace kooo bizv kkoo nzmx aej ggzr khp nka buu wsc tpe tpe r-k tpb u-i amki kbqa u-i -jf fre aijak xvn nok xvn nok pml fco gbtd ess gfa rpb gfa auz nob gfa ktd ttsc cadu jkoa iom nqj jpjpvqu bpfpl jqjq jpfpvqu bpfpl jkoa iom qscc oko osc oko ksc auq paj bvpa qkgr ajs bvpb pbk pvj bzk aacs thg kkok a-h nnb pvj ngk azz ngk lede erm obe zbbgj -tv ubg erl ccgj ptd oea -tu dwj xzk kvl dkr -cwg kvl dkr -cwg idap ogf ocfk wge ogf pzl hqq pazk ktn xrm k-g tpps uuu pzl pzl hqq ktn xrm xdx ozj ows mwf pad y-i kxw dtp ows ozj ows gcc bwtw v-i d-j ono -yx tdd-j ono ti-g jfz mon ccb jyv epc tar kaz ttn gsw nokkj bscc kjn ook aze o-i laz ook rqvo yvj krq zvj rqvo yvj cas fbg caw hde -pp xbm arj emlj arj emlj -yp hyvj lfr bgo hyvj tyb mrw bqe uzi dvj phr mqpsc bbg xno bqu uzi bqu ppno rss jrs pfg ebs ano rss ooe jrs pbg ebs aro rss pfg agk api -cgb bno agk nati -gwc agk -gwc agk mhnf maf -ucwk abfg dfi dck pda -ucgk bvg lng noq lll nrk gne trm rsg oeq ilz drd skp lng noq lll nrk cme trm rsg oeq nud ilz skp rsg mrl rke rmrmo n-i hc-h nek ndd zya laj auu mrl rke rmrmo --h ldb -ln zpq efc oyi k-i rss dovk bgc f-i zix-j yeon pud dovk csur bgc dovk bgc kez ldq txj hmm w-i fzj v-f gpga jpl uvz jfg aquuu utdoj dbl tpz ork qbg f-f kpga gka bgk ogv pyf kgv ogv tpb tpb jwg pbs jot scc nxz ssc bcw yzj qpp nxz bcw xvj qpp bcw yzj qpp vbj mak alo mak vbj kev mbw otp hlturl moo audwx ezk mqeq nzy fgo ubcs fwv nqp mqeq fgo aun auh urm b-i nkgvh qbn nbs kmma auh urm b-i nkgvh qbn nbs kmma hok z-j cpjr pxmzk bwka wue ojj rqf vmj crro brs thb cpjr pxmzk vvk wue rqf vmj crro crs irk hdvl evj o-f be-j no-j k-j ntqk ppt irk ppt otouo owk asxj pdv kai kpd kkk wae bpa --j i-i vvn w-j dllr m-i tev kpt lkkko bpa --j i-i vvn nzxl oy-i i-i vvn w-j nzxl j-i pnk qqpv mgaw gga lqr lth ggk nppv ttt -bbb ggk ggk yvj oja ruj cbuv xe-j 
face expression iris recognition learning-based approaches guodong guo dissertation submitted partial fulfillment requirements degree doctor philosophy computer sciences wisconsin madison face expression iris recognition learning-based approaches guodong guo supervision professor charles dyer wisconsin-madison thesis investigates problem facial image analysis human faces lot information applications instance face iris important biometric features security applications facial activity analysis face expression recognition helpful perceptual user interfaces developing methods improve recognition performance major concern thesis approaching recognition problem facial image analysis key idea learningbased methods face recognition propose face cyclograph representation encode continuous views faces motivated psychophysical studies human object recognition face expression recognition apply machine learning technique solve feature selection classifier training problems simultaneously small sample case iris recognition high recognition accuracy biometric features issues address make practical iris major problem capture iris images automatically user interaction users adjust eye positions goal two-camera system consisting face camera iris camera designed implemented based facial landmark detection problem iris localization type feature based texture difference incorporated objective function addition image gradient minimizing objective function iris localization performance improved significantly finally method proposed iris encoding set specially designed filters filters advantage efficient integral image computation methods filtering process fast matter big filters abstract thesis investigates problem facial image analysis human faces lot information applications instance face iris important biometric features security applications facial activity analysis face expression recognition helpful perceptual user interfaces developing methods improve recognition performance major concern thesis approaching recognition problem facial image analysis key idea learningbased methods face recognition propose face cyclograph representation encode continuous views faces motivated psychophysical studies human object recognition face expression recognition apply machine learning technique solve feature selection classifier training problems simultaneously small sample case iris recognition high recognition accuracy biometric features issues address make practical iris major problem capture iris images automatically user interaction users adjust eye positions goal two-camera system consisting face camera iris camera designed implemented based facial landmark detection problem iris localization type feature based texture difference incorporated objective function addition image gradient minimizing objective function iris localization performance improved significantly finally method proposed iris encoding set specially designed filters filters advantage efficient integral image computation methods filtering process fast matter big filters acknowledgments thesis greatly dedicated advisor professor chuck dyer enthusiasm guidance encouragement invaluable work taught research communicate ideas fortunate opportunity work uw-madison continuous financial support work mike jones merl source inspiration advice years led iris recognition work gave research flexibility constructive criticism grateful support summer internships benefited discussions research ideas paul beardsley shai avidan fatih porikli jay thornton merl zhengyou zhang microsoft research advice encouragement summer internship grateful members vision group including russel manning steve seitz liang-yin discussions nicola ferrier lending pan-tilt unit experiments students allowing capture face images research special due professors jude shavlik hen jerry zhu stephen wright taking time review work members thesis committee deeply grateful limei yang love affection spirit optimism belief sources strength difficult life graduate student kids xinwei ziwei make happy proud confronting hard stages life finally dedicate thesis parents guanfa meifang encouraged learn study middle school love support work iii table contents page abstract list tables list figures vii introduction recognition problems learning-based approaches thesis contributions thesis outline face cyclographs recognition motivation related work viewing rotating objects spatiotemporal volume volume analysis spatiotemporal face volume face cyclographs properties face cyclographs multiperspective temporal order compact recognition face cyclographs matching strips matching face cyclographs dynamic programming normalized face cyclographs experiments dynamic face database page face recognition results discussion summary face expression recognition motivation related work linear programming formulation avoiding curse dimensionality face expression recognition experimental evaluation face expression database experimental results comparison svms comparison adaboost bayes comparison neural nets lda summary iris recognition motivation related work previous work iris capture previous work iris localization previous work iris feature extraction iris capture face anthropometry system setup landmarks face images learning detected facial landmarks mapping face camera iris camera experiments summary iris localization intensity gradient texture difference model selection mask computation experiments summary appendix page iris encoding difference-of-sum filters iris encoding advantages dos filters experiments discussion summary spatial resolution enhancement video images motivation image video alignment recognition homography estimation making image planes parallel factorization scale coherence directions non-uniqueness photometric correction experiments discussion summary conclusions contributions limitations future work list list tables table page performance fslp compared linear svm l-svm grbf nonlinear svm nl-svm -fold cross-validation average number selected features ave pairwise classifier total number selected features total pairs shown addition number errors test examples run comparison recognition accuracy number features naive bayes classifier feature selection bayes naive bayes pairwisegreedy feature selection bayes adaboost linear svm l-svm non-linear svm nl-svm fslp anthropometric measurements obtained means standard deviations measured groups terms race gender age unavailable distance measures millimeters comparison iris detection rates methods casia database iris image database information false accept rate false reject rate frr respect separation points dos filters iris code casia iris database vii list figures figure page face image smiling face image iris image facial image processing face face expression iris recognition statistical view generative discriminative methods categorization learning vision approaches left rollout photograph maya vase snapshot maya vase peripheral photograph human head camera captures sequence images object rotates axis circles radii denote depths object -dimensional volume sliced image content x-t y-t slices spatiotemporal images top-down view object rotating axis circles radii denote depths object surface face eye detection frontal face image examples face cyclographs head rotates frontal side face nearly-convex object captured frontal side views captured separately face cyclograph captures parts face surface equally y-t slices face volume twenty-pixel interval coordinate recognition problem defined matching face cyclograph gallery cyclographs viii figure page motion trajectory image sliced eye center detected edges cotangent edge direction angles averaged median filtered face cyclograph non-motion part removal average precision versus recall comparison face cyclographs multiperspective face volume-based method normalized face cyclographs smiling face magazine cover filter set spatial-frequency domain total gabor filters shown half-peak magnitude fiducial points face image images face expression database left expressions angry disgust fear happy neutral sad surprise histogram frequency occurrence features training set pairwise fslp classifiers features histogram 
figure illustrated face corner left eyebrow nose tip left mouth corner recognition accuracies naive bayes classifier adaboost function number features selected steps iris recognition system text details part anthropometric landmarks head face camera system setup face camera wfov high resolution iris camera nfov cameras rigidly fixed moved ptu merl -camera rig system block diagram input video images output captured high resolution iris image text details appendix figure page facial features detected determine eye region video image outer box face detection result rectangle computed eye region face image euclidean distance eye corners facial features white squares detected face box divided groups pairwise feature distance measurement calibration pattern computing homography image planes wide-fov face camera captures entire pattern narrow-fov iris camera captures central three-by-three grid small squares cross ratio computation camera system setup face camera depth estimation validation set high-resolution eye regions captured iris camera middle digitally zoomed view left eye image captured widefield-of-view face camera shown left outer zones separated circle iris sclera boundary detection texture difference measured outer zones addition intensity gradient iris localization eyelid occlusion search restricted left quadrants degrees figure illustrates pupil iris concentric pupil iris boundary modeled ellipse circle lbp operator neighbors threshold neighbors respect center pixel weight neighbor power sum values center pixel demonstrate circle model accurate iris boundary iris image circle model fit hough transform left integrodifferential operator middle image shows result based direct ellipse fitting circles ellipse drawn pixel wide white line dome model cases dome domes dome boundaries drawn white curves appendix figure page comparison techniques iris boundary extraction left results based hough transform integro-differential operator proposed method iris images row row basic shapes difference sum dos filters odd symmetric symmetric bank dos filters multiple scales horizontal direction purely horizontal scaling filters height special design benefit iris feature extraction unwrapped iris images rectangular sum region original image computed integral image point sum unwrapped iris image divided horizontal strips applying dos filters intraand inter-class hamming distance distributions top iris code bottom dos filters roc curves showing performance dos filters iris code terms frr dos filters give smaller error rates iris code method consistently separation points framework approach cameras centers capture lowresolution image high-resolution image rotated viewing plane parallel note rotation image rectification stereo images warped parallel baseline relation low-resolution input image high-resolution input image rotated image skew translation corrected image points image top left frame video sequence frame size top features detected sift operator middle high resolution image size bottom resolution-enhanced image size appendix figure page top row image block size cropped square shown top image figure middle-left cropped square enlarged bilinear interpolation estimated scale middle-right enlarged bicubic interpolation bottom-left high resolution block extracted warped bottom image figure bottom-right photometrically corrected image bottom-left image frame klt tracked trajectories hotel sequence inliers outliers computed trajectory-based linear combination svr method chapter introduction computer vision study application methods computers understand image content images single images sequences images major goal computer vision research automatically recognize real objects scenes humans recognize faces shown figure recognize tom cruise quickly face image problem expression pose lighting hair style ability people faces ability recognize facial expressions smiling figure thesis concerned developing improved methods problems recognition problems recognizing faces facial expressions important abilities practical applications face expression recognition human-computer interaction perceptual user interfaces interactive computer games face expression recognition problem challenging individuals display expression differently selecting relevant features ignoring unimportant features key step solving problem previous papers adequately addressed issue face recognition important biometric feature computational face recognition studied years performance high comparison face figure face image smiling face image iris image recognition people observations biological vision systems helpful designing computational methods recent psychophysical studies show humans represent objects series connected views separate single views clear develop computational method encodes series continuous views important biometric feature iris eye shown figure humans iris features recognize turns iris features obtain high recognition accuracy security applications iris recognition high accuracy issues remaining practical biometric human iris diameter difficult capture traditional systems capture iris images requiring user cooperation interaction users adjust eye positions based feedback camera system design iris acquisition system user interaction challenging problem building iris recognition systems iris localization iris features recognition iris region localized precisely classical methods user cooperation required means user camera system users adjust eye positions iris localization daugman integro-differential operator ido wildes hough transform evaluated public iris database methods achieve localization rates means images recognition don classical methods work iris localization analyzing methods carefully found previous methods image gradient information detecting iris boundaries order improve iris localization performance information needed kind information added incorporate information dissertation focuses problems face recognition face expression recognition iris recognition problems exploit information face images shown figure face face recognition sparse local features face expression recognition eye regions iris recognition research emphasis develop improved methods exhibit high recognition performance figure facial image processing face face expression iris recognition learning-based approaches facial recognition problems listed previous section solved successfully words kinds methods improve recognition performance learning-based approaches large variability object class modelbased approaches difficult define contrary learning-based approaches circumvent difficulty modeling solve problems efficient robust learning-based approaches computer vision problems simply learning vision promising research direction classes methods machine leaning generative discriminative learning methods generative methods models generate observed data model probability distribution hand discriminative methods learn function discriminate classes data method depends task difference generative discriminative methods based statistical viewpoint shown figure generative methods learn conditional probability density function data represents class prior class bayesian decision made classification recognition hand discriminative methods learn posterior probability density function decision boundary directly specific problem face expression recognition small number training examples discriminative methods give results generative learning methods methods discriminative learning methods support vector machines linear programming technique methods evaluated compared existing generative methods experimentally results face expression recognition computer vision problems face recognition learning studying object recognition people observations characteristics biological vision systems important designing computer vision algorithms recent psychophysical studies show people represent objects figure statistical view generative discriminative methods series connected views research develops computational method encode series connected views recognition iris recognition focus sub-problems 
iris acquisition iris localization iris encoding automatic iris capture user interaction design two-camera system based face anthropometry key observation anthropometric measures small variations centimeters races genders ages adaboost-based detector developed face facial landmark detection eye region detected camera control camera high resolution iris image captured localize iris boundaries type high-level knowledge energy function formulated minimizing function iris localization performance improved significantly irises localized normalized issue encode iris pattern set filters designed purpose method higher recognition accuracy faster state-of-the-art methods summarize approaches recognition problems studied dissertation categorization learning vision shown figure figure categorization learning vision approaches thesis contributions thesis focuses learning-based approaches facial image analysis problems face recognition face expression recognition iris recognition major contributions include face recognition representation called face cyclographs order encode continuous views faces research develops computational method inspired psychophysical evidence object representation recognition human head rotates front stationary video camera spatiotemporal face volume constructed based fast face detector slicing technique analyze face volume composite image generated call face cyclograph match face cyclographs dynamic programming technique align match face cyclographs introduce technique normalizing face cyclographs face expression recognition apply recent linear programming method select small number features simultaneously classifier training method originally proposed bradley mangasarian show method works recognizing face expressions small number features kind result reported previous face expression recognition work address problem learning small sample case show technique power learn classifier small sample case dealt original paper iris recognition present two-camera system capturing eye images automatically depending user interaction align eye position center image propose objective function iris localization method incorporates texture difference iris sclera iris pupil addition intensity gradient method improves iris localization performance significantly traditional methods propose method iris encoding based set filters called difference-of-sum filters method higher accuracy faster previous methods thesis outline chapter presents problem moving face representation recognition simplify problem single-axis rotations face video sequence head rotation spatiotemporal face volume constructed slicing technique presented obtain face cyclograph properties face cyclograph representation presented methods developed recognition based face cyclograph representation finally recognition experiments performed video database videos chapter considers problem face expression recognition introduce linear programming formulation developed give simple analysis shows avoid curse dimensionality problem method evaluated experimentally compared methods chapter investigates problem iris recognition present method automatic iris acquisition two-camera system low-resolution face camera wide field view iris camera narrow field view describe method iris localization eye image objective function developed discuss problem model selection circles ellipses representing shape iris present method mask computation remove eyelid occlusion extracted iris images iris localization experiments performed compared existing methods iris encoding present method set filters called difference-of-sum filters experiments iris encoding performed compared previous methods chapter extends idea iris capture cameras images highresolution digital camera enhance low-resolution video images attempt deal planar scene result acquire high-resolution video sequence finally chapter concludes summarizing contributions indicating future research directions chapter face cyclographs recognition representation faces called face cyclographs incorporates views rotating face single image introduced chapter main motivation representation recent psychophysical studies show humans continuous image sequences object recognition face cyclographs created slicing spatiotemporal face volumes constructed automatically based real-time face detection representation compact multiperspective spatiotemporal description face cyclographs face recognition dynamic programming based algorithm developed motion trajectory image eye slice analyze approximate single-axis motion normalize face cyclographs normalized face cyclographs speed matching process motivation years numerous advances capturing multiperspective images combining parts images multiple viewpoints single representation simultaneously encodes appearance views multiperspective images shown growing variety tasks notably scene visualization panoramic mosaics stereo reconstruction fundamental goal computer vision object recognition question asked multiperspective images benefit object recognition normal conditions objects multiple viewpoints continuously moving observer walks object turning object multiple sides suggests multiperspective representation objects recently psychophysical results shown human brain represents objects series connected views psychophysical experiments stone participants learned sequences showed shapes rotating direction participants recognize object rotating opposite direction significantly longer recognize recognition rate decreased result reconciled traditional view-based representations recognition performance depend order images presented argued temporal characteristics learned sequences order images closely intertwined object representation results physiological studies support hypothesis humans represent objects series connected views findings human recognition give practical guidance developing computational object recognition systems ulthoff presented method face recognition based psychophysical results showed experimentally representation connected views recognition performance traditional viewbased methods main idea approach process input sequence frame-by-frame tracking local image patches achieve segmentation sequence series timeconnected key frames views drawback key frames representation heuristically chooses single view images integrating form composite visual representation integrate continuous views object single image representation propose incorporate views object cyclograph object type multiperspective image cyclograph generated object rotates front static camera camera rotates object cyclographs long history photography patent related making cyclographs issued historically names peripheral photographs rollout photographs circumferential photographs typical usage technique archeology rollout display maya vases shown figure basic idea peripheral photograph include photograph front sides back object detail contained surface object technique cylindrical approximately cylindrical objects pistons cylinders earth core samples potteryware peripheral photography human head shown figure details change regular camera strip camera order capture peripheral photographs objects figure left rollout photograph maya vase snapshot maya vase cyclographs computer vision computer graphics including image-based rendering stereo reconstruction knowledge previous work cyclographs object recognition rest chapter organized section short review face recognition approaches section presents analysis spatiotemporal volume continuous views objects generation face cyclographs section describes properties face cyclographs face recognition section presents methods face recognition maya vase images obtained http wide-format-printers mayan maya vase rollout book mayan vase rollout book html head image obtained http rit andpph travel-exhibit html figure peripheral photograph human head face cyclographs experimental results section issues discussed section related work face recognition important biometric feature studied years survey papers cover research topics face recognition type input data face recognition includes image based video based image based face recognition viewed pattern recognition problem issues feature extraction classification feature extraction lots work focuses linear dimensionality reduction principal component analysis pca fisher linear discriminant analysis fld nonlinear dimensionality reduction kernel pca method classification support vector machine svm method shown high recognition accuracy face recognition hand human faces share similar geometrical structure elastic 
bunch graph matching ebgm method proposed wiskott takes advantage facial geometry faces represented graphs nodes positioned fiducial points edges labeled distance vectors node set complex gabor wavelet coefficients scales orientations recognition based labeled graphs kind method commercial face recognition products representative method image based face recognition bayesian method proposed moghaddam basic idea model face recognition problem two-class classification problem intra-person inter-person bayesian rules measure similarities drawback method image stored order compute image difference test face training faces video-based face recognition recent approaches gabor features extracted regular grid tracked monte carlo sequential importance sampling authors reported performance enhancement frame frame matching scheme work framework proposed track recognize faces simultaneously adding identification variable state vector sequential importance sampling method probabilistic appearance manifold represent face faces video clustered k-means algorithm cluster called pose manifold represented plane computed principal component analysis pca connectivity pose manifolds encoded transition probability images pose manifold hidden markov models hmm training stage hmm created learn satistics temporal dynamics individual recognition stage temporal characteristics face sequence analyzed time hmm subject likelihood scores provided hmms compared highest score determined identity face video sequence autoregressive moving average arma model model moving face linear dynamic system perform recognition recognition performed concept subspace angles compute distances probe gallery video sequences hadid pietikinen recently analyzed video-based face recognition approaches methods experimental evaluation conclusion methods systematically improve face recognition results previous video-based face recognition systems extract head motion information explicitly video data input training testing conclusion clear motion information face recognition viewing rotating objects goal develop computational method encodes continuous views faces face recognition psychophysical experiments connected views object captured object rotation direction approach class single-axis rotations appearances basis capturing continuous views faces natural rotations depth faces erect person rotates head resulting approximately single-axis rotation vertical axis objects single-axis rotations natural object random views object cases walk turn object hand spatiotemporal volume suppose object rotates axis front camera shown figure circles represent depths object sequence images captured stacking sequence images -dimensional volume x-y-t built called spatiotemporal volume continuous views contained volume data figure camera captures sequence images object rotates axis circles radii denote depths object psychophysical studies volume data called spatiotemporal signature evidence showing signatures humans object recognition computational representation presented analyze spatiotemporal volume generate computational representation rotating objects volume analysis spatiotemporal volume x-y-t stack x-y images accumulated time x-y image appearance motion information contrary x-t y-t images spatial temporal information called spatiotemporal images x-t y-t images obtained slicing x-y-t volume shown figure figure -dimensional volume sliced image content x-t y-t slices spatiotemporal images volume x-t y-t slices preserve original information loss x-y slices captured camera x-t y-t slices cut volume independently union x-t y-t slices original volume hand slices x-y x-t y-t encode information volume x-t y-t slices spatiotemporal images information object rotates axis parallel image axis x-t slice information object points horizontal line object surface defining motion trajectories points shown figure contrary slice column-wise appearance object surface object rotation axis parallel image axis y-t slices encode appearance object rotates partial examples shown figure convex convex object rotates axis spatiotemporal volume constructed stacking sequence images captured static camera slice intersects rotation axis visible appearance object comparison parallel slices slice distortion shown figure top-down view object rotates point object surface intersects middle slice slices miss parts object sense appearance object observed y-t slices face volume shown figure middle image slice minimizes foreshortening distortion captures visible fronto-parallel surface point normal angle parallel slices figure top-down view object rotating axis circles radii denote depths object surface spatiotemporal face volume represent rotating faces recognition extract spatiotemporal sub-volume face region call spatiotemporal face volume face detector automatically detect faces sequences face images figure shows face detection results frame video sequence face positions reported face detector determine face volume false alarms face detector removed facial skin color information eyes detected similar technique face detector locating motion trajectory image eye-level slice presented section figure face eye detection frontal face image face cyclographs spatiotemporal face volume coordinate normalized analyze face volume slicing based section slice volume information loss y-t slices encode visible appearance object single-axis rotation vertical axis unique slice intersects rotation axis visible appearance object minimum distortion y-t slices result slice rotating face representation face volume slice intersects rotation axis approximately middle slice extracts middle column pixels frame concatenates create image called cyclograph face simply face cyclograph face cyclograph created face video size face cyclograph image determined video length size segmented faces width face cyclograph number frames video height height segmented faces face cyclograph viewed captured strip camera shown figure face cyclograph captures face completely left profiles parts face surface captured equally contrary pin-hole camera shown figure face surface captured poorly camera viewing rays approach grazing angle face surface causing parts face surface captured unequally figure examples face cyclographs head rotates frontal side face videos section details initial face approximately frontal face approximately profile view created face cyclographs half face shown figure create face cyclograph head rotate approximately recognition purpose capture head rotation back head information properties face cyclographs properties face cyclograph representation face recognition problem multiperspective face cyclograph multiperspective image face advantage multiperspective face image faces observed viewpoints integrated single image representation multiperspective face image encodes facial appearance figure face nearly-convex object captured frontal side views captured separately face cyclograph captures parts face surface equally figure y-t slices face volume twenty-pixel interval coordinate face surface viewpoint face cyclograph viewed captured strip camera cylindrical objects faces strip captures frontoparallel views surface strip contrary key frames approach series single perspective images temporal order head rotates continuously direction face cyclograph successively extracts strips spatiotemporal face volume changing temporal order original face sequence temporal order important moving face recognition psychophysical studies computationally temporal order important designing matching algorithm face recognition section recognition algorithm based dynamic programming depends property compact face cyclograph representation compact section y-t slices appearance information spatiotemporal face volume slice intersects rotation axis figure face cyclograph constructed slice slices intersect rotation axis representation largely reduces redundancy spatiotemporal face volume comparison ulthoff key frames approach face cyclograph local strips moving faces overlap partially overlapped 
key frames overlapped local patches key frame face cyclograph concise representation recognition face cyclographs face recognition face cyclograph computed face video sequence rotating face testing face sequence face cyclograph computed matched face cyclographs database recognition problem illustrated figure algorithms developed matching face cyclographs dynamic programming alignment matching face cyclographs monotonicity condition satisfied face cyclographs satisfy keeping temporal order original face sequences method analyzes face motion trajectory image normalizes face cyclographs size matching figure recognition problem defined matching face cyclograph gallery cyclographs matching strips local match measure comparing strips subsection strip vertical column face cyclograph image matching strips face cyclographs image matching problem define similarity strips cyclographs -norm bardbl strip strip bardbl transforms strips respect parameter set characterizes method feature extraction simply pixel color information similarity measure alternatively wavelet transform extract features match strips matching face cyclographs dynamic programming match measure strips step match face cyclographs number strips cyclograph vary general determined number frames input video sequence influenced speed uniformity head rotation algorithm variabilities consideration matching face cyclographs develop method matching face cyclographs based dynamic programming technique effectively align variable-width face cyclographs match simultaneously technique matching face cyclographs temporal order head motion sub-problem matching strips presented section optimization find minimum cost matching cyclographs cyclograph test face cyclograph gallery faces composition sub-problems min minimum cost matching strip pairs cyclographs note indexes face cyclograph cyclograph accumulated costs filled table optimal path traced back cost table final cost corresponds optimal path match face cyclographs smaller cost similar face cyclograph images computational complexity dynamic programming match face cyclographs widths normalized face cyclographs face cyclographs normalized size matching normalized face cyclographs make recognition process faster feature extraction images strips normalize face cyclographs developed method based motion trajectory image analysis motion-trajectory images slices perpendicular rotation axis spatiotemporal volume similar epipolar plane images epi epi scene structure estimation camera moving straight line motion trajectory images face motion analysis face rotating vertical axis horizontal slices face motion trajectory information experimentally found slice eyes richer information slices motion analysis eye slice shown figure cotangent edge direction angles averaged median filtered figure motion trajectory image sliced eye center detected edges cotangent edge direction angles averaged median filtered face cyclograph non-motion part removal eye slice motion-trajectory image detect remove non-motion image frames original sequence face images align remaining frames algorithm consists steps edge detection edges motion trajectory image detected canny edge detector average edge direction average edge directions row edge image estimated diri nisummationdisplay bardbl cot bardbl number edges row motion trajectory image edge direction angle jth edge row diri average edge direction row average improves robustness edge direction estimation median filtering average edge directions computed previous step non-motion detection row motion trajectory image corresponds frame original video sequence diri characterizes amount motion frame average edge direction row vertical motion frame diri small criterion non-motion detection diri smaller threshold experimentally chosen frame motion detected frames motion removed image warping remaining frames image sequence head rotation consecutive frames strips sliced frames concatenated construct face cyclograph face cyclographs moving parts finally face cyclograph normalized fixed size image warping experiments dynamic face database face video database horizontal head rotation captured subject asked rotate head approximately frontal view approximately profile view approximately head rotation single stationary uncalibrated camera capture videos subjects individuals videos captured total videos database number frames video varies ranging resulting total image frames image size image face videos shown figure video face video database matched face videos providing exhaustive comparison pair face videos precision recall measures computed evaluate algorithm performance stand true positives false positives false negatives precision defined tptp recall defined tptp precision measures accurate algorithm predicting positives recall measures total positives algorithm identify precision recall computed respect top matches characterizing faces examined desired level performance face recognition results face cyclographs created face videos database faces missed completely automatic process similarity measure face cyclographs -norm query face cyclograph costs matching remaining face cyclographs computed sorted ascending order precision recall computed respect top matches finally precision recall averaged queries shown figure normalized face cyclograph method performance lower reason linear warping introduces artifacts non-linear warping method consideration face cyclograph algorithms compared volume-based face recognition method face volume matching dynamic programming optimization method figure performance face cyclographs methods close volume-based method terms precision recall recall precision precision recall cycl normalized volume based figure average precision versus recall comparison face cyclographs multiperspective face volume-based method normalized face cyclographs volume disadvantages requires large amount storage slow volume-based matching experiment program hours order obtain precision recall curve shown figure volume data input couple minutes face cyclograph representation discussion chapter face cyclographs face recognition integrating continuous views rotating face single image multiperspective representation object representation recognition tasks basic idea capture object appearance continuous range viewpoints generate single multiperspective image represent object multiple single-perspective images traditional view-based representation assuming simplified head model cylinder ellipsoid face image single viewpoint unwrapped registered head model face texture maps face cyclograph representation require assumptions object shape registration object views difficult extend cyclograph representation object recognition tasks creation face cyclograph simple fast real-time recognition finally unwrapped faces necessarily multiperspective face cyclographs focus approach face representation encodes views rotating face face cyclograph face recognition work recent methods video-based face recognition head motions arbitrary summary motivated recent psychophysical studies chapter presented face representation called face cyclographs face recognition temporal characteristics encoded part representation resulting face recognition performance traditional viewbased representations representation compact robust simple compute spatiotemporal face volume automatically constructed video sequence face recognition performed dynamic programming match face cyclographs normalized face cyclographs based motion trajectory analysis image warping expect multiperspective representation improve results object recognition tasks chapter face expression recognition chapter linear programming technique introduced jointly performs feature selection classifier training subset features optimally selected classifier traditional classification methods computer vision two-step approach feature selection classifier training feature selection hoc heuristics requiring time-consuming forward backward search process difficult determine features features steps separated linear programming technique chapter call feature selection linear programming fslp determine number features features resulting classification function based recent results optimization analyze fslp avoid curse dimensionality problem based margin analysis demonstration performance fslp 
technique computer vision tasks apply problem face expression recognition recognition accuracy compared results support vector machines adaboost algorithm bayes classifier motivation goal feature selection computer vision pattern recognition problems preprocess data obtain small set important properties retaining optimal salient characteristics data benefits feature selection reduce recognition time reducing amount data analyzed cases produce classification accuracy due finite sample size effects feature selection methods involve evaluating feature subsets criterion probability error difficulty approach applied real problems large feature dimensionality high computational complexity involved searching exponential space feature subsets heuristic techniques developed circumvent problem branch bound algorithm assumption feature evaluation criterion monotonic greedy algorithms sequential forward backward search commonly algorithms limited monotonicity assumption sequential floating search provide results cost higher search complexity jain zongker evaluated search algorithms feature subset selection found sequential forward floating selection sffs algorithm proposed pudil performed sffs time consuming number features large vailaya sffs method select features two-class problem reported sffs required days computation time issue feature selection methods curse dimensionality problem feature selection number features large number samples small situation common computer vision tasks object recognition tens training samples images object hundreds candidate features extracted image difficult problem determining features select data set traditional feature selection methods address problem require user choose number features parameter set sound basis recently approach feature selection proposed machine learning community called feature selection concave minimization fsv basic idea jointly combine feature selection classifier training process linear programming technique results method number features features classification function method complete optimal solution order evaluate method problems computer vision pattern recognition investigate performance face expression recognition problem testbed features extracted face image database evaluate small subset features automatically selected losing discrimination accuracy success task encourage future object recognition problems applications including perceptual user interfaces human behavior understanding interactive computer games chapter organized related work reviewed section feature selection linear programming fslp formulation presented section analyze formulation avoid curse dimensionality problem section describe face expression recognition problem feature extraction method section fslp method experimentally evaluated section results compared support vector machines adaboost bayes classifier related work versions face expression recognition problem depending image sequence input dynamic characteristics expressions analyzed single image input expressions distinguished based static differences previous work dynamic expression recognition includes suma analyzed dynamic facial expressions tracking motion twenty markers mase computed firstand second-order statistics optical flow evenly divided small blocks yacoob davis inter-frame motion edges extracted areas mouth nose eyes eyebrows bartlett combined optical flow principal components obtained image differences essa pentland built dynamic parametric model tracking facial motion time donato compared methods feature extraction found gabor wavelet coefficients independent component analysis ica gave representation tian tracked upper lower face action units sequences construct parametric models considerable work face expression recognition single images padgett cottrell pixel blocks feature regions represent expressions cottrell metcalfe principal component analysis feed-forward neural networks rahardja pyramid structure neural networks lanitis parameterized deformable templates represent face expressions lyons zhang demonstrated advantages gabor wavelet coefficients code face expressions reviews approaches face expression recognition facial expressions performed short time period lasting seconds intuitively face expression analysis requires image sequences input expression single pictures faces magazines newspapers shown figure easily recognize face expression picture magazine image sequences single images input data facial expression analysis figure smiling face magazine cover previous work address feature selection problem face expression recognition partly small number training examples previous work noticed features discriminative capabilities knowledge work addresses feature selection problem explicitly face expression recognition instance noticed links weights artificial neural networks face expression recognition method address feature selection problem explicitly feature extraction gabor filters demonstrated good performance gabor filters extract facial features interested face expression recognition single images major focus evaluation methods face expression recognition recently large margin classifiers support vector machines svms adaboost studied machine learning community solving vision problems interested face expression recognition learning small sample case knowledge time large margin classifiers evaluated face expression recognition linear programming formulation early linear programming technique address pattern separation problem robust technique proposed deal linear inseparability recently framework extended cope feature selection problem briefly describe formulation sets points seek linear function function determines hyperplane normal separates points set points represented matrix set points represented matrix normalization satisfy vector dimension practically overlap classes minimize norm average error minw minw bardbl bardbl bardbl bardbl denotes vector components max main reasons choosing -norm easy formulate linear program theoretical properties make computationally efficient -norm sensitive outliers occurring underlying data distributions pronounced tails modeled robust linear programming rlp problem minw subject minimizes average sum misclassification errors points bounding planes represents transpose problem solves classification problem feature selection problem feature selection strategy integrated objective function order simultaneously select subset features feature selection defined suppressing components normal vector separating plane needed obtain acceptable discrimination sets accomplish introduced extra term objective function reformulating minw parenleftbige parenrightbig subject components equal components nonzero components equal components count nonzero elements vector key integrating feature selection classifier training process result problem balances error discrimination sets number nonzero elements element feature removed features nonzero components normal selected linear programming optimization method called feature selection concave minimization fsv developed deal term objective function introduced variable eliminate absolute term replacing adding constraint models vector step function discontinuous concave exponential approximate order smooth solution required introduction additional parameter alternatively computing concave exponential approximation simple term parameter produces final formulation call feature selection linear programming fslp minw parenleftbigg parenrightbigg subject fslp formulation slightly fsv method fslp simpler optimize easier analyze relation margin section noted normal separating hyperplane small number non-zero components large number components experiments features components normal vector discarded non-zero components result user-specified parameter required system features avoiding curse dimensionality authors address issue curse dimensionality focused developing fsv method smooth solution explicitly connected margin analysis experiments data sets number examples larger number feature dimensions show fslp method related margin maximization makes avoid curse dimensionality problem term objective function absolute normal due constraint minimize objective function requires minimizing term summationdisplay summationdisplay bardbl bardbl means minimizing bardbl bardbl -norm normal minimizing bardbl bardbl equivalent maximizing bardblwbardbl objective function maximizes bardblwbardbl recall bounding hyperplanes discriminating hyperplane midway 
hyperplanes distance point hyperplane defined bardblwbardbl point bounding hyperplanes satisfies bardblwbardbl minimum distance bounding hyperplanes bardblwbardbl defined margin similar svms p-norm non-increasing monotonic bardbl bardbl bardbl bardbl equivalent bardbl bardbl bardbl bardbl p-norm bardbl bardblp convex maximizing bardblwbardbl approximately maximize bardblwbardbl result term objective function effect maximizing margin maximizing margin circumvent curse dimensionality problem support vector machines classify data high-dimensional feature spaces fslp method similar advantage incorporates feature selection process based margin size fact term objective function disappears case classification performance worsens describe case section formally remaining terms property maximizing margin term effects feature selection margin maximization curse dimensionality problem occurs computer vision tasks analysis fslp circumvents problem important result demonstration property shown empirically section face expression recognition face expression recognition active research area computer vision investigate face expression recognition static images gabor filters facial feature extraction researchers demonstrated advantages gabor wavelet coefficients code facial expressions two-dimensional gabor function fourier transform written exp bracketleftbigg parenleftbiggx parenrightbigg pijwx bracketrightbigg exp braceleftbigg bracketleftbigg frequency sinusoidal plane wave x-axis space constants gaussian envelope axes filtering signal basis localized frequency characterization filters arbitrary orientation obtained rotation x-y coordinate system earlier applications gabor filtering face recognition face expression classification investigators varied scale orientation filters gaussian envelope parameter fixed methodology questionable area energy distribution filters varies scale gaussian envelope vary filter size designed gabor filter bank based filters previously texture segmentation image retrieval gabor filter bank designed cover entire frequency spectrum words gabor filter set constructed half-peak magnitude filters frequency spectrum touch results formulas compute filter parameters parenleftbiggu parenrightbigg amul tan parenleftbigg bracketrightbigg denote lower upper center frequencies interest indices scale orientation number orientations number scales experiments scales orientations half-peak support gabor filter bank shown figure differences strength responses image regions key multi-channel approach face image analysis amplitudes filtered image selected fiducial points figure filter set spatial-frequency domain total gabor filters shown half-peak magnitude feature vectors face image extracted feature vector length fiducial points typical positions fiducial points shown figure experimental evaluation face expression database face expression database experiments images japanese women person images expressions neutral happy sad surprise anger disgust fear image size pixels examples shown figure information database image collection data description human ranking database experimental results experimental procedure -fold cross-validation database images database divided randomly ten roughly equal-sized parts data parts training classifiers part testing repeated procedure ten times part test set figure fiducial points face image experimentally found parameter set small experiments solve -expression classification problem simple binary tree tournament scheme pairwise comparisons experimental results fslp method shown table feature selection performed pair classes resulting total pairs -expression classification problem column table shows number selected features average pairwise classifiers ranging ten runs average number selected features ten runs sparse set features automatically selected features extracted face image demonstrates fslp significantly reduce number feature dimensions user interaction column table shows total number features selected fslp pairwise classifiers test set features discriminating pair angry happy separating pair angry sad number features selected pairs larger pair instance selected features pairwise classifiers set number smaller figure images face expression database left expressions angry disgust fear happy neutral sad surprise features hand frequency occurrence features pairs classes variable shown histogram figure selected features shown face figure column table lists number classification errors test examples fslp data set average runs comparison svms order verify fslp method good performance terms recognition accuracy compared methods support vector machines give high recognition accuracy practice compared fslp svms constant svms set classification errors linear non-linear svms features run shown columns table non-linear svm grbf kernel experimentally set width parameter maximum error fslp runs larger errors linear svms non-linear svms average number errors runs similar fslp linear svm errors non-linear svm errors recognition accuracies methods table index selected features total number occurences selected feature statistics selected features pairwise classifiers figure histogram frequency occurrence features training set pairwise fslp classifiers comparable notice average number features selected fslp svms computation time fslp fast training recognition phases run times minutes train classifiers linux machine ghz pentium processor matlab implementation cplex standard linear programming optimization recognition accuracy svms comparable fslp major weakness svms high computational cost precludes real-time applications addition svms formulated quadratic programming problem difficult svms feature selection directly researchers proposed approximations svm feature selection training svm training set computing approximations reduce number features two-step approach guarantee selection feature subset finally svm approximations determine automatically features contrary fslp addresses issues figure features histogram figure illustrated face corner left eyebrow nose tip left mouth corner comparison adaboost bayes main goals evaluation fslp feature selection process compared method greedy heuristic methods feature selection adaboost method greedy strategy select features learning phase bayes classifier naive bayes classifier assuming features independent greedy feature selection scheme incrementally adding discriminating features figure shows recognition performance adaboost naive bayes classifiers function number features selected clear features sufficient algorithms naive bayes classifier reached performance features performance deteriorated slightly features recognition accuracy naive bayes classifier shown table features overfitting training data problem naive bayes method feature selection simple greedy method give naive bayes accuracy adaboost method peak performance features table pair classes shown figure features slightly lowered recognition accuracy summary adaboost naive bayes classifiers combined number features selected recognition accuracy face expression recognition adaboost bayes classifier figure recognition accuracies naive bayes classifier adaboost function number features selected greedy feature selection strategy needed larger number features fslp recognition accuracies worse fslp comparison neural nets lda compared recognition performance fslp published methods database neural network recognition accuracy problematic images database discarded accuracy result linear discriminant analysis lda reported included people face images images conclusion fslp comparable results neural network lda methods fslp optimally selects small number features automatically important realtime applications summary chapter introduced linear programming technique called fslp jointly accomplishing optimal feature selection classifier training demonstrated performance face expression recognition main properties method make advantageous existing methods fslp determine features automatically user interaction fslp high recognition performance comparable linear svms non-linear svms neural networks lda adaboost naive bayes classifiers fslp avoids curse dimensionality problem occurs amount training data small fslp feature selection fast compute table performance 
fslp compared linear svm l-svm grbf non-linear svm nl-svm -fold cross-validation average number selected features ave pairwise classifier total number selected features total pairs shown addition number errors test examples run test ave total fslp l-svm nl-svm set set set set set set set set set set ave table comparison recognition accuracy number features naive bayes classifier feature selection bayes naive bayes pairwise-greedy feature selection bayes adaboost linear svm l-svm non-linear svm nl-svm fslp bayes bayes adaboost l-svm nl-svm fslp accuracy features chapter iris recognition wide variety systems require reliable person identification verification biometric technology overcomes disadvantages conventional identification verification techniques keys cards passwords biometrics refers automatic recognition individuals based physiological behavioral characteristics features biometric cues including face fingerprint hand geometry handwriting iris retinal vein voice features iris recognition high accuracy complex iris texture carries distinctive information irises identical twins figure steps iris recognition system text details part iris recognition system begins eye image capture shown figure captured images undergo quality assessment check usability eye image good recognition system locates iris captured image important step iris recognition iris localized correctly system fail recognizing person correctly localized irises normalized rectangular images called unwrapped images predefined size iris features extracted unwrapped images iris matching eyelid occlusions recent work removes eyelids computing mask image typical approaches detect eyelid boundaries eye images propose compute mask works unwrapped image shown flow chart dashed box figure approach advantages previous methods presented detail chapter organized motivation work introduced section previous work reviewed section design two-camera system capture iris images automatically section present method iris localization section finally describe method iris encoding section experimental evaluations performed parts separately motivation iris provide high recognition accuracy easy capture iris images practice classical iris recognition systems daugman wildes users adjust eye positions order capture irises existing systems require users close capturing apparatus design iris capturing system works user interaction great importance practice common observation eye images iris region brighter pupil darker sclera result previous approaches iris localization based intensity gradient edge information methods depend heavily strong intensity contrast pupil iris iris sclera contrasts strong reliable iris localization practice observation iris region texture pupil sclera texture difference discrimination iris pupil work collaboration mike jones merl iris sclera intensity contrast strong iris localization fact rich texture information iris iris recognition based observation goal develop technique combines texture difference iris sclera iris pupil intensity contrast order improve iris localization performance related work problem iris recognition consists parts iris capture iris localization iris encoding review related work parts separately previous work iris capture classical iris capture systems daugman wildes systems require users adjust eye positions recent systems stereo computation reviewed brown real-time stereo implementation makes special-purpose hardware digital signal processors dsp field programmable gate arrays fpga single-instruction multiple-data simd coprocessors intel mmx effort develop system capture iris images automatically user interaction based recent advances real-time face detection complex stereo reconstruction works distance meter user previous work iris localization daugman presented approach computational iris recognition including iris localization proposed integro-differential operator ido locating outer boundaries iris optimization max vextendsingleg contintegraldisplay pir vextendsingle image eye ido searches image domain maximum blurred partial derivative respect increasing radius normalized contour integral circular arc radius center coordinates symbol denotes convolution smoothing function gaussian scale daugman ido behaves circular edge detector ido searches gradient maxima parameter space threshold parameters required canny edge detector wildes proposed detecting edges iris images circular hough transform localize iris boundaries hough transform searches optimum parameters max nsummationdisplay edge point weak point edge detection hough transform approach thresholds edge detection settings threshold values result edges turn affect hough transform results significantly recently methods proposed iris localization minor variants daugman ido wildes combination edge detection hough transform constrain parameter search range speed search process estimated pupil position pixel intensity projections thresholding canny edge detection circular hough transform masek implemented edge detection method slightly canny operator circular hough transform iris boundary extraction cui computed wavelet transform hough transform locate iris boundary daugman ido outer boundary rad gradient vector pairs directions coarsely estimate positions circle daugman ido refine iris boundaries kim mixtures gaussian distributions coarsely segment eye images dark intermediate bright regions hough transform iris localization previous work iris localization image gradient information rate iris extraction high practice daugman wildes methods extract iris patterns casia iris database previous work iris feature extraction daugman present complete iris recognition system iris localized integro-differential operator unwrapped rectangular image set gabor filters applied unwrapped image quantized local phase angles iris encoding resulting binary feature vector called iris code binary iris codes matched hamming distance wildes proposed iris recognition system laplacian gaussian filters applied iris feature extraction irises matched normalized cross-correlation zero-crossings wavelet transform scales set iris rings proposed iris feature extraction wavelet transform quantized form -bit code method deal eye rotation problem common iris capture masek implemented iris recognition system log-gabor filter binary iris code extraction circular symmetric filters computed standard deviation small blocks iris feature extraction feature dimension authors compared methods iris feature extraction concluded method outperforms good daugman iris code recently method based local variation analysis wavelet transform proposed authors reported method comparable recognition accuracy daugman iris code evaluated iris images addition method processing method proposed characterize local gradient direction iris feature extraction claimed method recognition accuracy comparable iris code complicated compute extracted feature vector bytes times bigger iris code conclusion daugman iris code method state-of-the-art algorithm terms recognition accuracy computational complexity develop method simpler faster compute higher recognition accuracy daugman iris code method iris capture section introduce face anthropometry basis algorithm design describe facial landmark detection face images present algorithm learning detected facial landmarks fourth describe map face camera iris camera system face camera video camera iris camera high resolution digital camera finally evaluate system experimentally face anthropometry anthropometry biological science human body measurement anthropometric data applications depend knowledge distribution measurements human populations forensic anthropology conjectures measurements derived anthropometry figure determination individuals appearance remains recovery missing children changing appearance age photographs recently face model construction computer graphics applications property anthropometric measurements develop algorithm automatic iris acquisition anthropometric evaluation begins identification landmark 
points shown partially figure landmarks named greek latin anatomical terminology abbreviations exocanthion outer corner eye nasion point midline nasal root nasofrontal suture series measurements landmarks carefully procedures measuring instruments farkas widely set measurements describing human face large amount anthropometric data system total landmarks measurements face head measures farkas include distance angles subjects grouped gender race age means standard deviations measured group capturing variation occur group figure anthropometric landmarks head face anthropometric measurements obtained listed table table distance measures listed terms race gender age ex-ex denotes distance outer eye corners ps-pi distance upper lower eyelids al-al nose width n-prn distance nasal root nose tip information acquired table ps-pi standard deviation size iris observation anthropometric measures distance variations small respect race gender age instance range variation ex-ex ages years north american caucasian males races genders ages standard deviations maximum variation ex-ex upper limit holds distance measures human faces sum range variations distance measures facial landmarks small races genders ages observation important iris capture algorithm table anthropometric measurements obtained means standard deviations measured groups terms race gender age unavailable distance measures millimeters north american caucasian chinese african-american meas age male female male female male female ex-ex ps-pi al-al n-prn figure camera system setup face camera wfov high resolution iris camera nfov cameras rigidly fixed moved ptu system setup demonstrate anthropometry-based approach automatic iris capture present prototype system cameras design camera system shown figure -camera rig shown figure camera called face camera called iris camera face camera wide field view low-resolution video camera captures tracks face continuously frame face facial landmarks detected iris camera narrow field view high-resolution digital camera capture iris region orientation iris camera adjusted automatically view iris pan-tilt-unit ptu controlled rotate iris camera tracks iris cameras close small baseline approximately parallel optical axes setting guarantees face appears frontal view camera approximately frontal view camera system block diagram shown figure basic operation system continuously detect face frame video sequence captured face camera face found facial landmark feature points located tightly cropped bounding box eyes computed eye region mapped image plane iris camera figure merl -camera rig eye region centered iris camera image eyes captured eye region centered ptu pan tilt cameras eye region approximately centered iris camera image detection faces features subsequent panning tilting cameras iterates eye region centered iris camera image landmarks face images unlike anthropometric face model computer graphics face images generated anthropometric measurements work automatic iris acquisition find landmarks face images control iris capture detect facial landmarks algorithm finds face input images searches landmarks face region face detection detect faces real-time face detector proposed viola jones simple rectangle filters feature extraction adaboost learning algorithm ptucontrol iris region ready depth estimation map iris camera eye region feature distances facial feature detection face detected iris image face cameraface camera iris camera figure system block diagram input video images output captured high resolution iris image text details feature selection classification large number training examples face non-face images adaboost learning algorithm result face detector fast robust facial feature detection face detected facial features landmarks detected face box rectangle filters adaboost learning algorithm face detection train classifiers templates characterizing facial features eye corners nose tips training examples facial feature detectors simply rectangular regions feature feature location precisely hand practice found facial feature points detected robustly left eye corners left eye centers left nose corners nose tip center upper lip bridge nose features correspond landmarks prn anthropometric measures farkas figures detected features displayed white square detected landmarks face images control iris image acquisition details facial landmarks presented learning detected facial landmarks anthropometric measures guide iris acquisition face landmarks compute location iris region capture distances facial landmarks measure face camera smaller distance landmarks farther face camera small range variation anthropometric measures discussed section learn relation distance measures facial landmarks face images distance face camera eye region facial feature points capture high resolution iris images system eye region facial features determine eye region shown figure simple strategy eye corners determine eye region assuming distance eye corners width height eye region image coordinates left eye corners coordinates upper-left bottom-right corners eye region rectangle location eye region low-resolution video image mapped high-resolution camera image technique presented sections distance face camera face detected video frame system distance face camera eye region mapped image plane iris camera decide capture image re-orient camera pan-tilt unit figure facial features detected determine eye region video image outer box face detection result rectangle computed eye region face image euclidean distance eye corners present technique low-resolution face camera compute distance facial features directly technique based geometric optics pinhole camera model image object bigger object closer camera vice versa property mapping facial feature distances depth values computed independent linear regression assume collect data set faces depths face camera face compute facial feature distance measures dij euclidean distance jth pair feature points face depth index depth index linear regression map feature distance dij depth face camera dij compute distance feature solve set linear regressions dnj dnj dnj dnj linear mapping feature distance camera depth pair features straightforward solve singular decomposition feature processed independently call method independent linear regression ilr single depth estimate depth estimates averaged set feature distances linear mappings feature distance set estimated depths lsummationdisplay number feature distance measures test face features detected results robust estimate distance single pair features advantage easily handling missing feature points feature detected linear mapping distance simply depth estimates distance measures averaged yield robust depth measure ilr method procedure depth estimation learning testing phases learning phase divide facial features groups case facial feature points detected face image image distance measure sensitive close feature points points partitioned groups order robust estimate figure illustration compute pairwise euclidean distances point group points groups concatenate distance measures feature vector case distance measures computed -group-division facial features resulting feature vector dimension repeat processes faces captured face camera depths cameras compute regression coefficients ilr method testing phase face system detects locations face facial features pairwise distance measures computed group division learning stage regression coefficients estimate depth face camera equations practice fewer distance measures due missing data ilr algorithm 
easily deal figure facial features white squares detected face box divided groups pairwise feature distance measurement mapping face camera iris camera ilr method detected face landmarks system estimate distance face cameras distance pre-calibrated homographies section projective invariants section map eye region image wide field view face camera narrow field view iris camera camera-camera calibration goal camera-camera calibration enable eye positions detected video image mapped estimated eye positions image plane iris camera achieve full euclidean stereo calibration face camera iris camera full calibration estimate depth face face camera section straightforward find face position iris camera iris camera autofocus full euclidean calibration difficult expensive adopt simpler partial calibration sufficient goal note face depth cameras calibration simple homography computed fronto-parallel plane depth cameras plane approximate model face homography approximately describes mapping features face cameras case face range depths range quantized separate homography computed fronto-parallel plane depth run-time distance face estimated homography distance closest provide mapping face features cameras alternatively interpolate calibrated homographies find mapping facial features depth section computing homography calibration plane pattern shown figure face camera captures full pattern feature points found automatically large squares iris camera narrower field view captures central three-bythree grid small squares features points found automatically squares knowing image feature points euclidean coordinates full pattern straightforward compute homography hvp video image pattern homography hsp image pattern camera-camera homography sphv video image image hvs matrix describes mapping homogeneous feature point video image point image sxv process repeated set depths calibration pattern cameras give set homographies hvs cross ratio projective invariant assume run-time face depth cameras section describes simple technique interpolate homographies depths determine mapping face iris cameras features depth figure calibration pattern computing homography image planes wide-fov face camera captures entire pattern narrow-fov iris camera captures central three-by-three grid small squares cross ratio numbers invariant general homography line shown figure cross ratio defined abbd accd equals cross ratio camera system figure camera centers video camera image plane iris camera image plane pixel viewing line homography depth map point image similarly points mapped assuming homographies depths suppose homography unknown technique section depth estimated cross ratio line computed cross ratio line based invariant property specifically coordinates obtained xcx ycy coordinates image plane computed pre-calibrated homographies depths precomputed homographies depths cross ratio point image mapped depth cameras figure cross ratio computation camera system setup experiments face camera sony dcr-pc video camera image resolution focal length field view degrees iris camera canon digital rebel resolution megapixels telephoto lens field view degrees minimum shooting distance telephoto lens meters iris images captured meters estimate linear mapping facial feature distances camera depth section people asked stand approximately distances meters cameras face camera captured images faces captured total face images images person face detection facial landmark detection performed image ilr algorithm compute linear mappings depth evaluate depth estimation method randomly chose people training set estimate linear coefficients ilr remaining people validation coefficients estimate depth person validation set facial feature measurements result validation set shown figure curve person close straight line deviation consistent main reason deviation adjust individual distance ground truth listed standard deviation depth estimation shown figure means meters standard deviations meters fact system require accurate depth values linear mapping adequate works validation re-computed linear coefficients individuals capture system index distances distance estimate ilr face camera depth estimate ilp index distances distance estimate ilr face camera depth estimate std figure face camera depth estimation validation set compute homographies depths cameras put calibration pattern approximately depths meters method section compute homographies determine eye region based facial features images randomly chosen images depth learning relation eye region size distance eye corners examined images found approximation shown section works practice finally tested prototype system iris capture user stands front cameras distance meters system automatically pans tilts needed capture high resolution images irises system captured people excluding individuals training failure eyes centered high-resolution images note centering automatically pan-tilt unit user adjustment images slightly shifted influence extracting eyes shown figure person left eye zoomed visual inspection iris texture figure high-resolution eye regions captured iris camera middle digitally zoomed view left eye image captured wide-field-of-view face camera shown left summary section presented anthropometry-based approach automatic iris acquisition user interaction method detects facial landmarks estimates distance face camera techniques fast robust involving images stereo reconstruction demonstrate anthropometry-based method iris capture prototype system built cameras face iris cameras mapping cameras computed projective invariants experimental results show prototype system works iris localization section focus improving iris localization accuracy mask computation approach iris localization presented section discuss issue called model selection give solution section mask image computation presented section experimental results section intensity gradient texture difference figure outer zones separated circle iris sclera boundary detection texture difference measured outer zones addition intensity gradient iris localization eyelid occlusion search restricted left quadrants degrees figure illustrates pupil iris concentric pupil iris boundary modeled ellipse circle approach iris localization features intensity gradient texture difference formulation iris localization argmax intensity contrast gradient image domain circle center coordinates radius measures texture difference zone outer zone rings pixels inside circle boundary shown figure parameter constant weight contributions intensity gradient texture difference region inside circle necessarily homogeneous region iris sclera boundary parts pupil iris narrow zone circular boundary measure texture property specific form term term intensity gradient contrast daugman integro-differential operator ido encodes image intensity gradient circular boundary vextendsingleg contintegraldisplay pir vextendsingle term kullback-leibler divergence section measure distance probability distributions derived outer zones question extract texture information zone standard texture features computed gabor filters filtering approaches large region support cross circular boundary general issue texture segmentation regional property characterized boundary textures located precisely iris localization accurate boundaries needed normalize match iris images inaccurate iris localization deteriorates iris recognition accuracy quickly matter discriminative iris feature efficiently extract texture properties negatively influencing iris localization method called local binary pattern lbp small neighborhood local binary pattern local binary pattern lbp operator simple powerful method analyzing textures proposed ojala texture classification basic operation lbp consists steps shown figure thresholding pixel values neighbors intensity center pixel threshold weighting neighbor power summing values neighbors assigning center pixel figure lbp operator 
neighbors threshold neighbors respect center pixel weight neighbor power sum values center pixel pixels region interest encoded integers lbp operator histogram integers zone computed represent probability density function case -neighborhood resulting integer center pixel histogram bins lbp operator applied image histogram computed dynamically search process probability densities computed outer zones denoted simply distance probability distributions measured kl-divergence kl-divergence probability mass functions kullback-leibler divergence relative entropy defined summationdisplay log kl-divergence non-negative true distance distributions symmetric satisfy triangle inequality kl-divergence distance distributions result term computed kl-divergence outer zones separated circle probability densities represented histograms computed lbp operator multi-resolution search optimization search problem order reduce search space speed process avoid local maxima multi-resolution coarse-tofine technique original image smoothed down-sampled smaller image optimum found search starts finer image initial values set result obtained previous coarser resolution process repeats reaching finest resolution image note search resolution restricted left quadrants eyelid occlusions shown figure model selection approaches iris localization circles model outer boundaries iris circles simple compute fit iris boundary camus wildes ellipse model pupil iris boundary circle model iris sclera boundary ellipse model fits boundary circle boundary true circle problem search space search higher dimensional space slower error prone models iris boundaries outer boundaries modeled circle circle ellipse circle call model selection problem model selection data-driven assigned scheme two-step approach circle circle model approximate outer iris boundaries region slightly bigger circle detect edges canny edge detector generate chain codes detected edge points -connectivity choose longest contour generated chains eliminate outliers edge points fit ellipse chosen contour direct ellipse-fitting method compute eccentricity fitted ellipse decide ellipse circle model iris boundary criterion choose ellipse circle theoretically ellipse model fits circular shape choose ellipse circle reason circle model makes simple unwrap iris image rectangular image eccentricity radicalbig ellipse theoretically eccentricity satisfies case circle note standard ellipse major minor axes consistent axes fitted ellipses iris images rotated angle direct ellipse-fitting method solves generalized eigenvalue system estimate ellipse parameters involve iterative computation fast show necessity ellipse fitting real iris images figure shows image casia iris database localized methods results left middle images obtained hough transform ido assuming ellipse ellipse model circle fits visible portion outer boundary figure demonstrate circle model accurate iris boundary iris image circle model fit hough transform left integro-differential operator middle image shows result based direct ellipse fitting circles ellipse drawn pixel wide white line circle model boundary obvious circle fit pupil iris boundary result image direct ellipse fitting boundary fitted precisely mask computation iris partially occluded upper lower eyelids problem daugman excluded top bottom parts iris iris feature extraction recognition ignore information eyelid occlusion exists argued wildes explicit modeling eyelids information simply omitting top bottom iris daugman curves spline fitting explicitly search eyelid boundaries cui parabolic model eyelids fit separately upper eyelid searched eyelash region lower eyelid searched detected edge points masek straight lines approximate eyelids results larger mask previous work explicitly estimates eyelid boundaries original eye images approach problems practice search range eyelids large making process slow eyelids estimated occlude iris address issues propose compute eyelid occlusion unwrapped rectangular image original eye image eyelid region dome unwrapped image shown figure call dome model dome model cases domes unwrapped image shown figure dome eyelid occlusion dome upper lower eyelid occludes domes upper lower eyelids occlude iris figure dome model cases dome domes dome boundaries drawn white curves dome model occlusions upper lower eyelids processed unified extract domes circle model complex models splines parabolas rough model straight lines approach commitment strategy algorithm determines eyelid occlusions exist occlusion exists figure detect dome boundaries occlusions exist algorithm determines domes detects algorithm post-processing stage reduces false alarms detect eyelid occlusions unwrapped image region iris eyelid compared region occlusion occur regions compared distributions raw pixel values chi-squared distance measure compare histograms raw pixel values regions bsummationdisplay histograms bins iris mask computation consists steps extract regions unwrapped image denoted approximately upper eyelid part occlusion region degrees figure lower eyelid original eye images compute histogram pixel values region denoted compute decide occlusions domes testing threshold search dome regions note circle center unwrapped image top arc circle fit eyelid remove false alarms checking maximum detected dome satisfies threshold circle dome extracted dome false alarm experiments evaluate proposed method iris extraction casia iris database iris images iris classes iris images shown section original image names table comparison iris detection rates methods casia database hough transform integro-differential operator gradient structure wildes daugman method experimental results evaluate iris localization rate set balance intensity gradient texture difference outer zones pixel gradient values normalized central difference approximation gradient estimation pixel intervals measure texture information lbp operator -neighborhood pixel small neighborhood helps boundary localization precision outer zones pixels wide radial direction information structure estimation computational load low kl-divergence computed bins negationslash iris localization results shown table method combines intensity gradient texture difference located irises correctly casia database wildes hough transform technique daugman integro-differential operator correctness iris boundaries determined manual inspection examples shown figure show localization results obtained methods upper row figure shows results image intensity contrast iris sclera strong detected edges weak hough transform left image find true boundary ido method middle weak gradient information left part iris detected circle shifted true boundary contrast method deal case weak edges accurate boundary iris image upper row similar analysis holds lower row figure image figure comparison techniques iris boundary extraction left results based hough transform integro-differential operator proposed method iris images row row evaluate model selection method camera viewing direction perpendicular eye perspective makes projection pupil circle addition eyes move freely degree result ellipse circle model circle circle model iris localization cases found iris images eccentricity threshold chosen determine ellipse circle model approach circle circle model search iris boundaries direct ellipse fitting detecting boundary turning search shown figure image hough transform left ido middle methods work circle model boundary contrary ellipse fitting result pupil iris boundary evaluate mask computation method discussed section mask image computed unwrapped images original eye images unwrapped image size details unwrap iris images approach determines eyelid occlusion unwrapped image compute mask regions size pixels obtained starting image bottom 
middle region centered representing part iris occluded eyelids left region centered region histograms computed bins distance computed threshold set empirically left dome exists similarly dome exists domes detected finding domes small search range advantages computing mask unwrapped images left dome horizontal search range pixels left centered range dome centered vertical search range search range radius remove false alarms maximum detected dome checked satisfies set empirically detected dome false alarm casia iris database method extracted domes accuracy found domes detected dome boundaries accurate images comparison results recent work iris localization masek reported iris localization rate casia database hough transform comparison methods presented hough transform gave localization rate casia daugman ido method localization rate casia reported results comparable implementation table hough transform ido localization rates casia database contrast method iris localization rate previous methods authors reported results casia database ido method hough transform localization rates clear cui achieved good results implementations published work show poorer results unwrapped images compute masks give details explain unwrapped images report mask extraction accuracy mentioned problem eyelash highlight removal gabor filtering eyelash detection method verified large iris database casia simple thresholding method eyelash removal casia method general imaging conditions thresholding highlight removal summary presented method iris localization utilizes intensity gradient texture difference iris sclera pupil iris iris localization rate method higher existing techniques hough transform integro-differential operator considered model selection problem proposed solution based direct ellipse fitting finally presented approach mask computation unwrapped image procedure commitment strategy triggers dome detection process iris encoding section method iris feature encoding presented set filters proposed iris encoding section advantages filters discussed section experimental results shown section compared methods difference-of-sum filters iris encoding set filters called difference-of-sum dos filters introduced encode iris features basics dos filters bank dos filters designed specifically iris encoding filtered results binarized robustness compactness fourth intermediate representation called integral image computed makes dos filtering extremely fast finally describe apply dos filters unwrapped iris images basic shapes dos filters basic shapes dos filters iris encoding odd symmetric symmetric shown figure one-dimensional case filter function values support convolving signal computes difference sums signal positive negative parts called difference sum dos filters odd symmetric filter shown figure similar haar wavelet odd symmetric filters sum order eliminate sensitivity filter response absolute intensity values realized effort dos filters unlike gabor filters components biased carefully basic shapes dos filters shown top pair figure figure basic shapes difference sum dos filters odd symmetric symmetric bank dos filters iris feature extraction bank two-dimensional dos filters designed shown figure set dos filters height widths call special design purely horizontal scaling phs found scaling filters horizontal vertical directions degrades recognition performance reason iris patterns dependencies radial angular directions shown figure pairs odd symmetric dos filters widths iris encoding figure bank dos filters multiple scales horizontal direction purely horizontal scaling filters height special design benefit iris feature extraction unwrapped iris images set dos filters designed extract iris features multiple scales sizes filters adjusted based experiments binarization unwrapped iris images filtered set dos filters output real valued sign function binarize filtered values reason binarization make encoding robust important sources noise iris pattern irises captured viewing angles incident angles light source change iris localization perfect binarized representation series bits improves robustness iris feature encoding binarization similar digitizing analog signal alteration analog waveform progressive continuous sensitive noise digital signal robust addition improved robustness creates compact signature iris pattern fast computation dos filtering dos filtering computed rapidly pre-computed integral image crow proposed summed-area tables fast texture mapping viola jones similar idea called integral image rapid feature extraction face detection iris feature encoding dos filters advantage integral image fast computation integral image location sum pixels left inclusive summationdisplay integral image original image summed row row integral image computed quickly pass original image rectangular sum original image computed array integral image shown figure dos filters rectangle filters face detection integral image computation rectangle filters exhaustively search scalings base filters discrimination faces non-faces dos filters designed special iris patterns predefined manner figure rectangular sum region original image computed integral image point sum dos filters applied iris images apply set dos filters unwrapped iris image divided horizontal strips shown figure filters applied strip intervals dos filters height strip advantages dos filters evaluating iris recognition performance dos filters point advantages dos filters gabor filters simple dos filters simple worry complicated implementation issues gabor filter design fast iris feature extraction dos filters fast faster gabor filters required computation dos filtering addition subtraction involving multiplication division dos filters advantage integral image representation computed quickly advance filtering dos filter constant computation time matter big filter traditional filters filtering time proportional filter size bigger filter slower computation figure unwrapped iris image divided horizontal strips applying dos filters table iris image database information database eyes iris localized localization rate intra comps inter comps casia parameters design dos filter bank parameters size width height shape odd symmetric explicit parameters hand daugman iris code gabor filters parameters aspect ratio wavelength gaussian envelope size high accuracy iris features extracted dos filtering highly discriminative shown section dos features gabor features stateof-the-art method terms recognition accuracy experiments evaluate method iris feature encoding casia iris database iris images classes irises localized hough transform localization rate detected irises unwrapped rectangular images recognition intra-class comparisons inter-class comparisons table computed table false accept rate false reject rate frr respect separation points dos filters iris code casia iris database iris code dos filters threshold frr frr decidability fair comparison dos filters iris code dos filters compared implementation iris code argued section aspect ratio wavelength gaussian envelope size gabor filters unknown daugman iris code settings parameters implementation unwrapped iris image size divided rows dos filters gabor filters applied row pixel positions sampling input methods order fair comparison heights dos filters pixels widths pairs odd symmetric filters iris code method gabor filters filter bandwidth octaves wavelengths aspect ratios settings chosen quadrature gabor filter pairs number sampling points result iris code bytes iris image length dos filters binarization resulted binary feature vector bytes computationally dos filtering faster gabor filtering simplicity integral image report specific computation 
times code dos filtering gabor filtering optimized implementations analysis computation section iris matching hamming distance computed shifts shift byte left compensate iris rotation frr intraand inter-class hamming distance distributions methods shown figure top corresponds iris code method bottom dos filters methods feature encoding deliver separated peaks intraand inter-class distributions make quantitative comparison false accept rate false reject rate frr computed separation points shown table dos filters smaller error rates iris code consistently range threshold values show improvement dos filters iris code method visually roc curves figure curve dos filters lower iris code suggests dos filtering smaller error rates iris code separation points comparisons iris features encoded dos filters discriminative iris code method give higher recognition accuracy methods good choice threshold intraand inter-class separation method iris code frr method smaller iris code threshold suggested masek matlab implementation iris code decidability two-choice decision daugman introduced decidability index measure separated distributions distributions means standard deviations decidability index defined radicalbig recognition errors caused overlap distributions decidability measures overlap independent threshold chosen separate distributions shown table features dos filters decidability index higher iris code comparison dos filters performance iris encoding iris code discussion daugman iris code phase information quantized gabor filtering obtain binary bit stream dos filters explicit phase information difference summations iris regions positive negative randomness iris texture sign function extract binary features encoding iris matching mask image needed remove artifacts eyelid occlusions hard problem practice approach bottom rows figure discarded iris encoding remove eyelid occlusions extent similar approach simple strategy error rates iris code dos filtering small comparisons reduced methods mask computation decidability index increased affect comparison methods computing masks difference-of-sum dos filters similar rectangle filters viola jones face detection chose emphasize computation filter shape special design iris feature encoding searching filters general realization filters arbitrary dimensionality higher kinds data interesting investigate dos filters figure scaling iris encoding similar masek approach log-gabor filtering summary presented method iris feature encoding difference-of-sum dos filters special design dos filter bank proposed characterize iris pattern multiple scales nice properties dos filters filtering advantage integral image representation filtering takes constant time matter big filters dos filters conceptually simple computationally fast experimental results demonstrated dos filters give higher recognition accuracy daugman iris code method hamming distance frequency intra class comparisons iriscode hamming distance frequency inter class comparisons iriscode hamming distance frequency intra class comparisons dos filters hamming distance frequency inter class comparisons dos filters figure intraand inter-class hamming distance distributions top iris code bottom dos filters frr iris code dos filters figure roc curves showing performance dos filters iris code terms frr dos filters give smaller error rates iris code method consistently separation points chapter spatial resolution enhancement video images chapter describe extension camera system automatic iris capturing combining images digital cameras video cameras generate video sequence higher resolution original video two-camera design automatic iris acquisition takes advantage cameras video camera capture spatial temporal information identifying object time spatial resolution low hand digital camera high spatial resolution capture extended temporal information question information video camera camera combined capture image data high resolution space time goal developed method increasing spatial resolution video camera planar scene homography computed based detecting matching scale-invariant feature points motivation visual information includes dimensions space time spectrum brightness camera capture information simultaneously result trade-offs dimensions color cameras trade-off spatial resolution multiple dimensions images interested space-time interaction digital cameras capture world times spatial resolution digital video cameras video cameras denser temporal sampling kodak dcsprofessional digital camera resolution megapixels jvc jyhd high definition digital video camera records frames size megapixels consumer products megapixel digital cameras canon powershot common today digital camcorders resolution megapixels digital cameras camcorders spatial resolutions reason physical restriction charge-coupled devices ccds common image sensors digital cameras ccds capture light small photosites surface charge read exposure charges row transferred read-out register signals fed amplifier analog-to-digital converter row read charges read-out register row deleted row enters read-out register rows march row charges row coupled row moves moves fill space row read row time digital video cameras capture frames large quantity charges transfer order temporal sampling rate number charges frame small space-time tradeoff break physical restriction multiple cameras digital cameras digital camcorders combine information kinds cameras enrich practice cameras order reach goal nowadays digital cameras capture short video segments digital camcorders capture digital stills property single digital camera capture high quality digital stills low-resolution video sequences cameras capture short temporal sequences video cameras capture high resolution images combined cameras adequately solve space-time tradeoff goal combining qualities type camera specifically high resolution images enhance spatial resolution video sequence framework approach shown figure problem related existing super-resolution work based signal reconstruction example-based learning reconstruction-based super-resolution multiple low-resolution images registered create higher resolution image review approaches super-resolution image reconstruction learning methods images size-reduced images training pairs learn high frequency information recent work aligns video sequences increase resolution assuming video cameras optical center correction skew translation registration images video video images low resolution video warping viewing planes scaling digital zooming high resolution high resolution figure framework approach present recognition-based scheme align high-resolution images video sequences section robustly estimate mapping images videos section describe factorization technique rotate correct high-resolution images sections experimental results shown section issues discussed section image video alignment recognition order high-resolution images enhance low-resolution video frames establish relationship align register images coming sources video registration challenging problem camera motion viewpoints video sequence change continuously digital images viewpoints illumination camera automatic gain change biggest variation problem difference spatial resolution images matched spatial resolutions addition viewpoint illumination traditional direct methods optical flow local feature corner matching features assumption local image patches images change significantly appearance features lack invariance scale corner features computed template size images matched images scales computed values images order align images video sequences find matching techniques deal image matching scales formulate one-to-many matching problem high-resolution image size-reduced scales local features extracted scale extract scale-invariant features lowe proposed scale-invariant feature transform sift operator successfully object recognition sift operator scale information automatically encoded extracted key point extract features scales image sift feature matching step super-resolution method show sift operator deal large 
resolution differences sift operator identifies key locations scale space locations maxima minima difference-of-gaussian function point generate feature vector describes local image region sampled relative scale-space coordinate frame features achieve partial invariance local variations blurring image gradient locations resulting feature vectors called sift keys nearest neighbor criterion find similar keys images details sift operator homography estimation sift operator feature extraction nearest-neighbor criterion feature matching large number incorrect feature correspondences robust methods ransac remove outlier matches estimate homography images cases planar homography images planar scene viewed arbitrary camera motion images arbitrary scene viewed camera rotating optical center zooming freely moving camera viewing distant scene demonstrate approach paper assume scene planar planar homography sufficient describe relation high-resolution image low-resolution image making image planes parallel assume homogeneous coordinates point lowresolution image point high-resolution image matrix mapping low-resolution image high-resolution image super-resolution purposes knowing mapping goal obtain image pattern highresolution image viewpoint illumination low-resolution image mimicking virtual camera spatial scale difference accomplish high-resolution image rotated parallel low-resolution image shown figure high-resolution image rotated parallel low-resolution image decomposition estimate required rotation factorization homography matrix decomposed matrices factorization figure cameras centers capture low-resolution image high-resolution image rotated viewing plane parallel note rotation image rectification stereo images warped parallel baseline rotation matrix upper triangular matrix inverse defined rotation matrix upper triangular matrix point rotated high-resolution image plane parallel low-resolution image frame point low resolution image mapped point form skew scale factors directions translations practice skew negationslash decompose tsttk skew transform matrix tst transform scale translation purpose analyzing resolution difference decompose tst tst tstt tstttk letting tttkr apply high resolution image ttkq thq apply low resolution image warps high-resolution image parallel low-resolution frame skew translation difference remaining difference scale factor encoded scale low-resolution image find position rotated skew-corrected translation-corrected high-resolution image point note scale transformation summarize mappings shown figure figure relation low-resolution input image high-resolution input image rotated image skew translation corrected image points image scale coherence directions pixels images square non-square determined physical ccds pixel aspect ratio ratio horizontal vertical sizes pixel term refers image display resolution instance image resolution aspect ratio resolution standard aspect ratio traditional television sets computer monitors aspect ratio high-definition wide-screen digital systems super-resolution work high-resolution images low-resolution video frames cameras ars result scale factors directions negationslash eqs goal enhance spatial resolution video frame good idea change aspect ratio low-resolution frames enhancement avoid scale factors normalized common analogous digitally zooming low-resolution images percentage assuming decomposed tsstsc tsctttkr apply high-resolution image apply low-resolution images scale factor low-resolution high-resolution images equal element assuming element equals practice aspect ratios cameras digital camera capture high-resolution images low-resolution videos estimated scale factors image video registration accuracy possibly manufacturing precision scale factors normalized common cases non-uniqueness decomposition unique computed warp highresolution image result invalid rotation rotated points negative coordinates prove non-uniqueness decomposition orthogonal determinant negationslash orthonormal orthonormal upper triangular practice check negative choose note signs capture image positive scale dimension negative scale photometric correction geometrical differences low high resolution images differences intensities images global illumination variation camera automatic gain differences cope photometric variation simple linear method align intensities warped high resolution image low resolution image enew min max min smax smin smin max min maximum minimum intensities region warped highresolution image smax smin maximum minimum intensities region low-resolution image pixel intensity enew applied pixel color channel separately procedure presented sections applied frame video sequence high-resolution image experiments canon powershot digital camera capture high-resolution images size auto mode video sequences frame size video mode scene rug details display purposes images reduced influence demonstrating basic idea figure image extracted video sequence shown top-left high-resolution image shown middle sift operator feature detection points extracted high-resolution image points low-resolution image nearest neighbor matching correspondences found outliers mismatches ransac estimate homography inliers selected displayed images top-right middle figure avoid confusion visualization condition number homography matrix large estimate accurate normalization approach improve results significantly factorization related manipulations performed warp high-resolution image parallel low-resolution image frame correct skew translation zoom low-resolution image scales estimated scales directions changing aspect ratio low-resolution images photometric correction low-resolution image shown top-left figure enhanced highresolution image size shown bottom estimated scale difference bigger image size difference times direction input high-resolution image middle figure low-resolution image result closely selected regions images window cropped low-resolution image top-right figure shown top figure small patch re-scaled bilinear interpolation middle left bicubic interpolation middle shown figure details lost image patch vague image interpolation add information image size bigger patch warped high resolution image cropped shown bottom-left figure clearer flowers middle stripes bottom-left finally photometric correction performed image shown bottom-right figure experimental result low-resolution image greatly enriched information input high-resolution image discussion demonstrated approach high-resolution digital images enhance low-resolution video sequences questions remaining answered high-resolution images needed high-resolution image enhance video sequence regions low-resolution images enhanced parts exist high-resolution image high-resolution images viewpoints capturing videos high-resolution images distortions warping images high-resolution images general non-planar scene warped experiments assumed homography general deal scenes photometric correction complex illumination conditions problems deserve investigation based results summary proposed enhancing spatial resolution video sequences higher resolution digital images recognition-based method invariant features presented register high-resolution images low-resolution video sequences simple robust method based factorization warp high-resolution images order mimic digital zooming effect procedure realizes basic idea still-image-based video enhancement framework extensions method order build real system practical figure top left frame video sequence frame size top features detected sift operator middle high resolution image size bottom resolution-enhanced image size figure top row image block size cropped square shown top image figure middle-left cropped square enlarged bilinear interpolation estimated scale middle-right enlarged bicubic interpolation bottom-left high resolution block extracted warped bottom image figure bottom-right photometrically corrected image bottom-left image chapter conclusions thesis investigated problems facial image analysis targeting face recognition face expression recognition iris recognition learning-based methods attack computer vision problems contributions major contributions dissertation face cyclograph representation developed encoding continuous views faces face cyclograph compact multiperspective recognition face cyclograph representation method presented based dynamic programming experimental evaluations face video database videos showed recognition accuracy developed method normalizing face cyclographs slightly lower recognition accuracy 
linear programming technique face expression recognition advantage method small number features versus original features selected simultaneously classifier training small sample case recognition accuracy high public face expression database two-camera system designed implemented automatic iris capture face camera wide field view control narrow field view iris camera automatic iris acquisition system track users eye positions maintaining eyes center iris cameras image prototype system built evaluated capturing people eyes failure method presented iris localization including features describing texture difference iris sclera iris pupil addition image gradient features performance iris localization improved significantly method extracted iris boundaries precisely eye images casia database contrast wildes daugman methods method proposed iris encoding set filters called difference-of-sum filters designed iris feature extraction filters advantage precomputed integral image makes filtering process constant computation time matter big filters experimental evaluation shows method higher recognition accuracy faster daugman iris code method false acceptance rate reduced comparison iris code method limitations future work face cyclograph representation obtained person head rotates front stationary video camera focus develop concise representation faces face image sequences order extend face cyclograph representation face videos arbitrary head motions pre-processing step required manipulate face video arbitrary head motion synthesize face video single-axis head rotation starting ending designated poses pre-processing step viewed image-based rendering problem face cyclograph generated recognition based techniques presented thesis investigate issue future two-camera system automatic iris acquisition evaluated successfully small number people key idea learning methods computer vision techniques design automatic system replacing human adjustments eye positions order make real product evaluation work people considered infrared illumination current system black eyes infrared light order capture rich iris texture methods iris localization encoding evaluated casia database publicly iris database time recently nist created iris database called ice evaluate methods ice database future learning vision promising research direction wide variety computer vision problems benefit learning techniques object recognition problems applied support vector regression svr outlier detection removal affine motion tracking problem detect remove outliers feature point trajectories tracking method klt tracker clean feature trajectories great importance computer vision problems video sequence alignment structure motion motion segmentation key idea approach develop linear combination representation characterize relation image frames feature trajectories svr method applied directly estimate linear combination coefficients remove outliers experimental results show svr technique works slightly random sample concensus ransac method widely computer vision experimental result shown figure future research investigate learning techniques wider range computer vision problems initial trajectories tracked klt inlier trajectories outlier trajectories figure frame klt tracked trajectories hotel sequence inliers outliers computed trajectory-based linear combination svr method list aggarwal chowdhury chellappa system identification approach video-based face recognition proc int conf pattern recognition volume pages baker kanade limits super-resolution break ieee trans pattern analysis machine intell volume pages bartlett viola sejnowski larsen hager ekman classifying facial action touretzky touretzky mozer hasselmo editors advances neural information processing systems pages mit press cambridge mass belhumeur hespanha kriegman eigenfaces fisherfaces recognition class specific linear projection ieee trans pattern analysis machine intell bennett mangasarian robust linear programming discrimination linearly inseparable sets optimization methods software boles boashash human identification technique images iris wavelet transform ieee trans signal processing bolles baker marimont epipolar-plane image analysis approach determining structure motion int computer vision borman stevenson super-resolution image sequences review proc midwest symposium circuits systems bradley mangasarian feature selection concave minimization support vector machines proc int conf machine learning pages brank grobelnik frayling mladenic feature selection linear support vector machines technical report technical report msr-tr- microsoft brown burschka hager advances computational stereo ieee trans pattern analysis machine intelligence ulthoff wallraven graf view-based dynamic object recognition based human perception proc int conf pattern recognition camus wildes reliable fast eye finding close-up images proc int conf pattern recognition pages canny computational approach edge detection ieee trans pattern analysis machine intelligence capel zisserman computer vision applied super resolution ieee signal processing magazine pages cascia sclaroff athitsos fast reliable head tracking varying illumination approach based registration texture-mapped models ieee trans pattern analysis machine intell casia iris image database http sinobiometrics chellappa wilson sirohey human machine recognition faces survey proc ieee cottrell metcalfe face gender emotion recognition holons advances neural information processing systems volume pages cover thomas elements information theory wiley crow summed-area tables texture mapping proc siggraph volume pages cui wang tan sun fast robust iris localization method based texture segmentation proc spie biometric technology human identification volume pages curtin textbook digital photography http shortcourses daugman uncertainty relation resolution space spatial frequency orientation optimized visual cortical filters opt soc daugman iris recognition works ieee trans circuits systems video technology daugman high confidence visual recognition persons test statistical indenpendence ieee trans pattern analysis machine intelligence davidhazy peripheral photography shooting full circle industrial photography decarlo metaxas stone anthropometric face model variational techniques proc siggraph pages devijver kittler pattern recognition statistical approach prentice hall englewood cliffs donato bartlett hager ekman sejnowski classifying facial actions ieee trans pattern analysis machine intelligence dufournaud schmid horaud matching images resolutions proc computer vision pattern recognition pages duin classifiers empty spaces proc int conf pattern recognition volume pages elad feuer super-resolution reconstruction image sequences ieee trans pattern analysis machine intelligence volume pages essa pentland coding analysis interpretation recognition facial expressions ieee trans pattern analysis machine intelligence farkas anthropometry head face raven press york fasel luettin automatic facial expression analysis survey pattern recognition fischler bolles random sample consensus paradigm model fitting applications image analysis automated cartography comm acm fitzgibbon pilu fisher direct least-square fitting ellipses ieee trans pattern analysis machine intelligence forsyth ponce computer vision modern approach prentice hall upper saddle river freeman pasztor carmichael learning low-level vision int computer vision volume pages freund schapire decision-theoretic generalization online learning application boosting comp sys sci yoav freund robert schapire decision-theoretic generalization on-line learning application boosting computational learning theory eurocolt pages springer-verlag gonzalez wintz digital image processing addison-wesley reading mass g-d guo dyer simultaneous feature selection classifier training linear programming case study face expression recognition proc computer vision pattern recognition volume pages g-d guo dyer spatial resolution enhancement video images technical report truniversity wisconsin madison april g-d guo dyer learning examples small sample case face expression 
recognition ieee trans system man cybernetics part g-d guo dyer face cyclographs recognition technical report truniversity wisconsin madison march g-d guo dyer zhang linear combination representation outlier detection motion tracking proc computer vision pattern recognition volume pages g-d guo jones difference sum filters texture classification january patent filed g-d guo jones method extracting features irises images difference sum filters january patent filed g-d guo jones method localizing irises images gradients textures january patent filed g-d guo jones beardsley system automatic iris capturing technical report mitsubishi electric research labs june g-d guo chan face recognition support vector machines proc int conf automatic face gesture recognition pages hadid pietikinen experimental investigation integration facial dynamics video-based face recognition electronic letters computer vision image analysis hartley zisserman multiple view geometry computer vision cambridge press heisele poggio face recognition support vector machines global versus component-based approach proc int conf computer vision volume pages hough method means recognizing complex patterns patent irani peleg improving resolution image registration graphical models image processing volume pages jain zongker feature selection evaluation application small sample performance ieee trans pattern analysis machine intell jain farrokhnia unsupervised texture segmentation gabor filters pattern recognition jain ross prabhakar introduction biometric recognition ieee trans circuits systems video technology kim cho choi iris recognition wavelet features vlsi signal processing kong zhang detecting eyelash reflection accurate iris segmentation int pattern recognition artifical intelligence lades vorbruggen buhmann lange von der malsburg wurtz konen distortion invariant object recognition dynamic link architecture ieee trans computers lanitis taylor cootes automatic interpretation coding face images flexible models ieee trans pattern analysis machine intell lee yang kriegman video-based face recognition probabilistic appearance manifolds proc computer vision pattern recognition pages chellappa face verification tracking facial features opt soc lim lee byeon kim efficient iris recognition improvement feature vector classifier elec tele res institute liu wechsler probabilistic reasoning models face recognition proc computer vision pattern recognition pages liu chen video-based face recognition adaptive hidden markov models proc computer vision pattern recognition pages liu chen pose-robust face recognition geometry assisted probabilistic modeling proc computer vision pattern recognition pages lowe object recognition local scale-invariant features proc int conf computer vision pages lowe distinctive image features scale-invariant keypoints int computer vision lyons akamatsu kamachi gyoba coding facial expressions gabor wavelets proc int conf automatic face gesture recognition pages lyons budynek akamatsu automatic classification single facial images ieee trans pattern analysis machine intelligence tan wang zhang personal identification based iris texture analysis ieee trans pattern analysis machine intelligence tan wang zhang efficient iris recognition characterizing key local variations ieee trans image processing maenpaa pietikainen texture analysis local binary patterns chen wang editors handbook pattern recognition computer vision pages world scientific mangasarian linear nonlinear separation patterns linear programming operations research manjunath texture features browsing retrieval image data ieee trans pattern analysis machine intelligence mansfield kelly chandler kane biometric product testing final report biometric work group report marr vision freeman publishers san francisco mase recognition facial expression optical flow ieice trans masek kovesi matlab source code biometric identification system based iris patterns school computer science software engineering western australia miyashita neural correlate visual associative long-term memory primate temporal cortex nature moghaddam jebara pentland bayesian face recognition pattern recognition nayar narasimhan assorted pixels multi-sampled imaging structural models proc europe conf computer vision volume pages negin chmielewski salganicoff von seelen venetainer zhang iris biometric system public personal ieee computer volume pages nist iris challenge evaluation ice http iris nist gov ice ojala pietik ainen harwood comparative study texture measures classification based feature distributions pattern recognition padgett cottrell identifying emotion static images proc joint symp neural computation volume pages pantie rothkrantz automatic analysis facial expressions state art ieee trans pattern analysis machine intelligence peleg herman panoramic mosaics manifold projection proc computer vision pattern recognition conf pages proenca alexandre ubiris noisy iris image database int conf image analysis processing pudil novovicova kittler floating search methods feature selection pattern recognition letters rabiner juang fundamentals speech recognition prentice hall englewood cliffs rad safabakhsh qaragozlou zaheri fast iris pupil localization eyhelid removal gradient vector pairs certainty factors proc irish machine vision image processing conf pages rademacher bishop images proc siggraph pages rahardja sowmya wilson neural network aproach component versus holistic recognition facial expressions images proc spie intelligent robots computer vision algorithms techniques volume pages rockafellar convex analysis princeton press princeton samal iyengar automatic recognition analysis human faces facial expressions survey pattern recognition scholkopf smola muller nonlinear component analysis kernel eigenvalue problem neural computation seitz kim space stereo images int computer vision seitz kim multiperspective imaging ieee computer graphics applications november december shechtman caspi irani increasing space-time resolution video proc europe conf computer vision pages shi tomasi good features track proc computer vision pattern recognition pages shum rendering concentric mosaics proc siggraph pages h-y shum kang review image-based rendering techniques ieee spie visual comm image processing pages springer geometry analysis projective spaces freeman company san francisco stone object recognition spatio-temporal signatures vision research stone object recognition view-specificity motion-specificity vision research suma sugie jujimora preliminary note pattern recognition human emotional expression proc int joint conf pattern recognition pages sun tan wang robust encoding local ordinal measures general framework iris recognition eccv workshop biometric authentication szeliski video registration key challenges shah kumar editors video registration pages boston kluwer academic publishers tarr ulthoff object recognition man monkey machine cambridge mit press tian kanade cohn recognizing action units facial expression analysis ieee trans pattern analysis machine intelligence tieu viola boosting image retrieval proc computer vision pattern recognition volume pages tipping bishop bayesian image super-resolution becker thrun obermayer editors advances neural information processing systems pages turk pentland eigenfaces recognition cognitive neurosci vailaya semantic classification image database thesis michigan state vapnik statistical learning theory wiley york viola jones rapid object detection boosted cascade simple features proc computer vision pattern recognition volume pages wallis ulthoff effect temporal association recognition memory proc natl acad sci usa volume pages weston mukherjee chapelle pontil poggio vapnik feature selection svms advances neural information processing systems volume pages wildes iris recognition emerging biometric technology proc ieee wildes asmuth green hsu kolczynski 
matey mcbride system automated iris recognition proc ieee workshop applications computer vision pages reg willson steven shafer perspective projection camera model zoom lenses proc conf optical measurement techniques october wiskott fellous von der malsburg face recognition elastic bunch graph matching ieee trans pattern analysis machine intell wolberg digital image warping ieee computer society press los alamitos wood finkelstein hughes thayer salesin multiperspective panoramas cel animation proc siggraph pages wright linear programming methods lecture notes uw-madison spring yacob davis recognizing facial expressions spatio-temporal analysis proc int conf pattern recognition volume pages zhang feature-based facial expression recognition sensitivity analysis experiments multi-layer perceptron int pattern recognition artificial intelligence zhang lyons schuster akamatsu comparison geometry-based gabor-wavelets-based facial expression recognition multi-layer perceptron proc int conf automatic face gesture recognition pages zhao chellappa rosenfeld phillips face recognition literature survey acm computing surveys zhou chellappa probabilistic human recognition video proc european conf computer vision vol iii pages zomet peleg super-resolution multiple images arbitrary mutual motion chaudhuri editor super-resolution imaging pages boston mass kluwer academic 
merl guodongguo december forexample theclassicaldaugman sandwildessystems copying reproduction allrightsreserved copyrightc broadway cambridge massachusetts merlcoverpageside system automatic iris capturing guodong guo michael jones wisconsin-madison mitsubishi electric research labs gdguo wisc mjones merl paul beardsley mitsubishi electric research labs beardsley merl abstract biometrics increasingly important security applications iris recognition greatest accuracy biometrics accuracy iris recognition greater face recognition fingerprint recognition trivial capture iris images practice users adjust eye positions iris image acquisition classical daugman wildes systems paper describes system capture iris images automatically user interaction works distance meter users experimental results demonstrate performance system introduction wide variety systems require reliable personal identification verification biometric technology overcomes disadvantages conventional identification verification techniques keys cards passwords biometrics refers automatic recognition individuals based physiological behavioral characteristics features biometric cues face fingerprint hand geometry handwriting iris retinal vein voice features iris recognition highest accuracy complex iris texture carries distinctive information irises identical twins difficult capture iris images practice classical iris recognition systems daugman wildes users adjust eye positions order capture irises classical systems require users close capturing apparatus design iris capturing system works user interaction great importance practice motivation work paper present system capturing iris images automatically user interaction distance meters meters paper organized section system hardware system software section experimental setting results provided section finally discussions conclusion system hardware system cameras video camera wide field view wfov high resolution digital camera narrow field view nfov video camera captures change view face appears high resolution digital camera acquire iris images order move twocamera system eye regions aligned nfov camera pan-tilt-unit ptu camera selection camera wfov captures change viewing field face importantly temporal information eye region ready iris capturing camera purposes video camera wfov camera hand temporal motion information iris recognition traditional approaches capture short video sequence iris choose frame quality temporal information current video cameras capture high resolution images chosen high resolution digital camera nfov camera figure camera system setup video camera wfov high resolution digital camera nfov cameras fixed move ptu configuration system setup illustrated figure properties cameras close approximately parallel optical axes setting guarantees face appears frontal view cameras cameras rigidly attached spatial relation camera image planes precalibrated cameras mounted pan-tilt-unit ptu order move cameras eye regions viewed high resolution camera ptu support cameras pan tilt commands issued eye regions field view high resolution camera system software previous section hardware setup basic operation iris capturing system explain algorithms needed run system system block diagram shown figure block specifically basic operation system continuously face wfov video image found facial feature points located tightly cropped bounding box eyes computed eye region mapped image plane nfov camera eye region centered nfov camera photo eyes captured eye region centered ptu pan tilt cameras eye region closer center camera image plane detection faces features subsequent panning tilting cameras iterated eye region centered camera image plane describe components software system detail click camera facial feature detection feature distances eye region map camera nptu control video high res image position estimation face camera depth face detected figure system block diagram input video images output captured high resolution iris image text details face detection capture iris system person scene video camera purpose video image frame face detector called find faces face detector based cascade classifiers simple haar-like features originally selected adaboost learning algorithm advantage face detector speed robustness facial feature detection face detected video image frame facial features detected face box viola-jones style detectors detecting facial feature points left eye corners left eye centers left nose corners nose tip center upper lip bridge nose figure detected features displayed white square training examples facial feature detectors simply rectangular regions feature feature location precisely hand difference feature detectors face detector examples trained detected facial features purposes iris capturing system estimate depth face video camera compute bounding box eye region depth face camera face detected video frame system depth face camera eye region mapped image plane camera decide snap photo control pan-tilt unit traditionally laser range finder stereo techniques cameras obtain depth object camera adds cost complexity system present technique video camera compute depth facial features directly estimate face depth camera technique based geometric optics pin-hole camera model image object bigger object closer camera vice versa property mapping facial feature distances depth values learned independent linear regression assume collect data set faces depths video camera face compute facial feature distance measures euclidean distance pair feature points face depth index depth discrete depth index linear regression map feature distance depth video camera compute distance featurea solve set linear regressions linear mapping feature distance camera depth pair features straightforward solve equation singular decomposition svd technique feature processed independently call method independent linear regression ilr single depth estimate depth estimates averaged set feature distances linear mappings feature distance set estimated depths real number feature distance measures test face features detected results robust estimate distance single pair features advantage easily handling missing feature points feature detected linear mapping distance simply depth estimates distance measures averaged yield robust depth measure ilr method procedure depth estimation learning running phases learning phase divide facial features groups case facial feature points detected face image image distance measure sensitive close feature points points partitioned groups order robust estimate figure illustration compute pairwise euclidean distances point group points groups concatenate distance measures feature vector case distance measures computed -group-division facial features resulting feature vector dimension repeat processes faces captured video camera depths cameras compute regression coefficients ilr method figure facial features white squares detected face box divided groups pairwise feature distance measure note small box collar detected face features detected inside shows feature detection correcting false positive face detections running phase face running stage system detects face facial features pairwise distance measures computed group division learning stage regression coefficients estimate depth face camera equations practice obtain fewer distance measures missing data problem ilr algorithm easily deal calibration goal calibration enable eye positions detected video image mapped estimated eye positions image achieve full euclidean stereo calibration video camera camera full calibration estimate depth face video camera section straightforward find face position camera camera autofocus full euclidean 
calibration arduous adopt simpler partial calibration completely adequate goal note face depth cameras calibration simple homography computed fronto-parallel plane depth cameras plane approximate model face homography describes approximately mapping features face cameras assuming face depth acceptable types situation user instructed stand line floor access point constrained situation flexible systems require user head specific position case face lies range depths range quantized separate homography computed fronto-parallel plane depth run-time distance face estimated homography distance closest provide mapping face features cameras alternatively interpolate calibrated homographies find mapping facial features depth section computing homography calibration plane pattern shown figure video camera captures full pattern feature points found automatically large squares camera narrower field view captures central threeby-three grid small squares features points found automatically squares knowing image feature points euclidean coordinates full pattern straightforward find homographya video image pattern homography image pattern homography video image image matrix describes mapping homogeneous feature point video image point image process repeated set depths calibration pattern cameras give set homographies figure calibration pattern computing homography image planes wide-fov video camera captures entire pattern narrow-fov camera captures central three-by-three grid small squares cross ratio projective invariance assume run-time face depth cameras section describes simple technique interpolate homographies depths determine mapping video cameras features depth cross ratio numbers invariant general homography line shown figure cross ratio defined equals cross ratio camera system figure camera centers video image plane high resolution camera image plane image pixel viewing line homography depth map real point image plane similarly points mapped assuming homographies depths suppose homography unknown technique section depth estimated cross ratio line computed cross ratio line based invariant property coordinates obtained equations coordinates image plane computed pre-calibrated homographies depths precomputed homographies depths cross ratio point image plane mapped depth cameras figure cross ratio computation camera system setup text details eye region facial feature points capture high resolution iris images system eye region facial features determine eye region shown figure simple strategy eye corners determine eye region assume distance eye corners width height eye region image coordinates left eye corners coordinates upper-left bottom-right corners eye region rectangle eye region video image plane mapped high resolution image plane technique presented section figure facial features detected determine eye region video image outer box face detection result rectangle computed eye region face image euclidean distance eye corners pan-tilt unit control eye capture eye region contained video images view high resolution camera variations users heights standing positions left high resolution camera move view person eyes case eye region video image mapped high resolution image region contained high resolution image plane center mapped eye region close image center high resolution camera immediately captures image includes eyes system pans tilts cameras iteratively video frame eye region approximately centered high resolution camera experiments video camera sony dcr-pc high resolution digital camera canon digital rebel resolution megapixels capture iris images distance telephoto lens added camera minimum shooting distance telephoto lens meters iris images captured meters estimate linear mapping feature distances camera depth section persons asked stand distances meters cameras video camera captured image frames faces captured total face images images person face detection facial feature detection executed face images ilr algorithm learn linear mappings depth compute homographies depths cameras fixed calibration pattern depths meters method section compute homographies determine eye region face images randomly chosen images depth learning relation eye region size distance eye corners examined images found approximation shown section works practice tested system number people found person eye region typically captured seconds improve control strategy pan-tilt unit make faster system works automatically capturing high resolution images irises examples shown figs figures full high resolution image automatically captured shown zoomed image eye shows level detail captured high resolution image texture iris regions clear visually irises pixels diameter resolution iris recognition capture eyes benefit high resolution camera eyes provide contextual information recognition match large number in-plane rotations current approaches capture irises estimate center iris compute in-plane rotation derotate image degrees note impossible capture eyes traditional video cameras lack resolution discussion previous systems video cameras capture iris images system high resolution camera advantages eyes captured simultaneously sacrificing resolution eyes provide contextual information iris recognition image captured focus previous systems video camera capture short video sequence choose frame recognition comparison iris capturing system referred merl system table reptable comparison system merl system previous iris capturing systems compared capturing distance eye camera camera type iris capturing number cameras system requiring user interaction number eyes captured simultaneously systems cap dis iris cam cams user inter eyes daugman video wildes video sensar video tan video panasonic bm-et video panasonic bm-et video merl system high-res dig resentative systems table table previous systems user close camera system operate sensar system cameras stereo computation iris capturing special hardware stereo computation needed system system capture eyes provide contextual information eye iris recognition performance panasonic iris systems obtained product manuals current system near-infrared illumination capturing black eyes difficult add system main goal capture eyes automatically conclusion developed system automatic iris capture user interaction system works distance meter user robust image data involving complex computation work takes step practical iris biometric acknowledgements john barnwell helping build rig fix cameras pan-tilt unit daugman high confidence visual recognition persons test statistical indenpendence ieee patt anal mach intell volume pages john daugman iris recognition works ieee trans circuits systems video technology yoav freund robert schapire decision-theoretic generalization on-line learning application boosting computational learning theory eurocolt pages springer-verlag hartley zisserman multiple view geometry computer vision cambridge press jain ross prabhakar introduction biometric recognition ieee trans circuits systems video technology tan wang zhang personal identification based iris texture analysis ieee patt anal mach intell volume pages mansfield kelly chandler kane biometric product testing final report biometric work group report negin chmielewski salganicoff von seelen venetainer zhang iris biometric system public personal ieee computer volume pages springer geometry analysis projective spaces freeman company viola jones rapid object detection boosted cascade simple features ieee conference computer vision pattern recognition volume pages wildes iris recognition emerging biometric technology proc ieee wildes asmuth green hsu kolczynski matey mcbride system automated 
iris recognition proc ieee workshop applications computer vision pages reg willson steven shafer perspective projection camera model zoom lenses proceedings conference optical measurement techniques october figure captured high resolution eye regions image size eye shown visual inspection view image electronic file printed figure captured high resolution eye regions 
sequential monte carlo methods physically based rendering shaohua fan dissertation submitted partial fulfillment requirements degree doctor philosophy computer sciences wisconsin madison copyright shaohua fan rights reserved family acknowledgments indebted advisor stephen chenney inspiration valuable guidance phd work years feel fortunate opportunity work stephen supportive patient encouraging stephen taught lot computer graphics aspects life sharp researcher extremely nice person stimulating insights discussions research tremendously kindness encouragement make experience working enjoyable owe great deal co-advisor chuck dyer approached chuck years ago research position work computer science courses computer vision data structure graduate student computer science class mathematics background simply nice turn chuck chance put faith brought computer science program year taught years research writing papers chuck great mentor needed advice committee members mike gleicher kam-wah tsui jerry zhu mike strong believer lab environment makes lab pleasant place work benefit mike constructive comments feedbacks work presented group meetings stimulate thoughts kam graduate student statistics department regular discussions sampling theory pleasant iii collaboration lastly jerry serving committee taking time review thesis express sufficiently enjoyed computer graphics vision group environment learned group members movie nights lab organized michael wallick rachel heck mention lucus kovar mankyu sung discussions sharing experience prelim oral exams yu-chi lai feng liu lunch meetings fun relaxing chats special yu-chi discussion cooperation research matt pharr gerg humphreys wonderful book physically based rendering well-designed system pbrt matt time kindness answering questions giving feedbacks paper drafts extremely grateful julia foster american granny house-mate home full love teaches english patience creativity years read articles newspapers correct pronunciation laughs hearing strange words mouth remember papers letters helped proofread family friendly generous invite family party treat rest family members provided unique opportunity learning american culture feeling family deeply forget finally deepest gratitude dandan discard page table contents page list tables vii list figures viii nomenclature abstract xiii introduction global illumination problem summary contributions thesis outline monte carlo methods monte carlo methods history estimators properties monte carlo integration variance reduction techniques importance sampling control variates defensive importance sampling mixture sampling multiple importance sampling stratified sampling adaptive sampling mcmc metropolis-hastings sampling sequential monte carlo methods sampling importance resampling sir population monte carlo pmc page global illumination radiometry brdf function rendering equation monte carlo methods rendering equation path integral formulation rendering equation monte carlo algorithms global illumination metropolis photon sampling related work light paths photons photon locations photon storage sampling paths proposal strategies user path proposals candidates user paths user path transition functions photon map proposal results discussion limitations extensions conclusion population monte carlo rendering related work population monte carlo pmc pmc-ip image-plane sampling pmc-ip kernel function adapting pmc-ip kernel deterministic mixture sampling pmc-ip results pmc-hi adaptive hemispheric integrals sampling pmc-hi kernel function adapting pmc-hi adaptive direct lighting results pmc path tracing pmc-pt kernel function page resampling adapting pmc-pt results discussion relationships existing algorithms designing adaptable kernel functions pmc rendering pipeline limitations conclusion optimizing control variate estimators rendering estimating irradiance integrals related work deterministic mixture sampling optimizing control variates ocv rendering results ocv rendering pipeline limitations conclusion discussion conclusion contributions system limitations future research list appendices appendix statistical proofs discard page vii list tables table page monte carlo algorithms global illumination statistics images rooms lantern cornell box scenes measurements comparing pmc-ip uniform image-plane sampling equal total sample counts measurements comparing pmc-hi sampling mis equal total sample counts measurements comparing energy redistribution path tracing erpt pmc-pt measurements comparing mis ocv direct lighting computations discard page viii list figures figure page image direct lighting image global illumination global illumination image noise distribution smc distributions checker scene consists area lights sizes surface materials difficult paths control variates metropolis sampling algorithm sir algorithm generic population monte carlo algorithm pmc sampling resampling steps bidirectional reflectance distribution function room scene compare photon mapping algorithm metropolis photon sampling algorithm photon distributions room scene variance control due user path proposal strategy photon distributions jack-o-lantern scene jack-o-lantern scene demonstrating mps efficient placement samples figure page user input box scene mirror ball rear mirror wall images scenes chapter generated path tracing mps place physically based rendering pipeline pmc-ip algorithm comparison adaptive uniform image-plane sampling direct lighting cornell box image computed path tracing scene constructed demonstrate optimal sampling strategy varies image mixture pdf maps show mixture component weights pmc-hi vary image iterations checker images generated algorithms number samples image involving complex soft shadows glossy surfaces pmc-pt iteration loop cornell box image computed pmc-pt left erpt room scene computed pmt-pt top erpt pmc physically based rendering pipeline results mis ocv buddha model mis ocv correlated sampling images checkers scene results mis ocv room scene results mis ocv irradiance caching computations box scene ocv physically based rendering pipeline figure page physically based rendering system diagram discard page nomenclature radiant power flux irradiance intensity radiance bidirectional reflectance distribution function vectorp surface point light transport path path contribution function integraltext bias efficiency estimator estimator samples brdf bidirectional reflectance distribution function dis defensive importance sampling ddis deterministic defensive importance sampling xii dms deterministic mixture sampling erpt energy redistribution path tracing mcmc markov chain monte carlo mis multiple importance sampling mps metropolis photon sampling ocv optimizing control variate pdf probability distribution function p-eff perceptually-based squared efficiency pmc population monte carlo pmcr population monte carlo rendering sir sampling importance resampling spp samples pixel smc sequential monte carlo sequential monte carlo methods physically based rendering shaohua fan supervision assistant professor stephen chenney professor charles dyer wisconsin-madison goal global illumination generate photo-realistic images taking account light interactions scene simulating light transport behaviors based physical principles main challenge global illumination simulating complex light interreflections expensive dissertation statistical framework physically based rendering computer graphics presented based sequential monte carlo smc methods framework substantially improve efficiency physically based rendering adapting reusing light path samples introducing bias applications framework variety problems global illumination demonstrated task photo-realistic rendering light paths reach image plane important paths contribute final image visual importance-driven algorithm proposed generate visually important paths photons paths cached photon maps reuse handle difficult paths path space technique presented including user-selected paths sampling process general statistical method light path sample adaptation reuse studied context sequential 
monte carlo based population monte carlo method unbiased adaptive sampling method presented works population samples samples sampled resampled distributions modified time information found iteration guide subsequent iterations introducing bias final result obtaining samples multiple distributions optimal control variate algorithm developed samples multiple distribution functions combined optimally stephen chenney charles dyer xiii abstract goal global illumination generate photo-realistic images taking account light interactions scene simulating light transport behaviors based physical principles main challenge global illumination simulating complex light interreflections expensive dissertation statistical framework physically based rendering computer graphics presented based sequential monte carlo smc methods framework substantially improve efficiency physically based rendering adapting reusing light path samples introducing bias applications framework variety problems global illumination demonstrated task photo-realistic rendering light paths reach image plane important paths contribute final image visual importance-driven algorithm proposed generate visually important paths photons paths cached photon maps reuse approach samples light transport paths connect light eye accounts viewer sampling process information improve photon storage paths sampled metropolis-hastings algorithm exploits coherence important light paths handle difficult paths path space technique presented including user-selected paths sampling process user provide hints important paths reduce variance specific parts image general statistical method light path sample adaptation reuse studied context sequential monte carlo based population monte carlo method unbiased adaptive sampling method presented works population samples samples sampled resampled distributions modified time information found xiv iteration guide subsequent iterations introducing bias final result application population monte carlo method computer graphics samples multiple distributions estimator constructed monte carlo integration big impact variance rendered images combining idea importance sampling control variate optimal control variate algorithm developed samples multiple distribution functions combined optimally optimizing nature addresses major limitation control variate estimators rendering users supply generic correlated function optimized estimate single highly-tuned work population monte carlo rendering framework optimized unbiased estimator result efficient robust algorithms global illumination significant improvements results demonstrated commonly existing environments scenes non-uniform variance image planes scenes difficult important paths chapter introduction applications special effects product design demand realistic physically based renderings complex scenes images physically based rendering algorithms plausible accurately predict appearance real world virtual environment realism predictiveness images answer questions theater arrange lights locations installing lights building theater result physically based rendered images find applications fields light design movies architectural design pilot training fine art rigorous applications computer games virtual reality walk-throughs physically based rendering greatly enhances visual appeal differences non-physically based rendered image physically based rendered image figure shows image direct lighting ambient lighting left realistic misses important lighting effects color bleeding soft shadows caustic show physically based rendered image goal thesis develop efficient algorithms off-line physically based rendering interesting applications non-physically based rendering nonphotorealistic rendering interactive rendering sacrifice realism artistic expression interactive speed principles physics simulate light transport physically based rendering aids understanding fundamental principles image rendering makes evaluate rendered images basis non-physically based applications figure image direct lighting image global illumination reminder chapter presents statement problems summary contributions overview methods developed subsequent chapters global illumination problem input physically based rendering system full description scene including light sources scene geometry surface materials camera information order generate physically accurate images simulate inter-reflections lights objects scene model called global illumination problem physical foundation image synthesis global illumination rendering equation finite element monte carlo methods applied finite element methods radiosity algorithms effective purely diffuse scenes generalizations non-diffuse surfaces complex geometries turn difficult practically theoretically hand monte carlo methods physically based rendering handle general reflectance functions geometric representations kajiya proposed unbiased monte carlo path tracing algorithm introduced range sampling strategies improve method demonstrated general robust method main disadvantage monte carlo global illumination expensive compute applied naively samples noise appears resulting images noise reduced slowly increasing samples limited global illumination production environments industry reports average computation time rendering single complex scene multiple hours modern computers years researchers continued develop monte carlo algorithms trade-offs speed accuracy generality efficiency rendering improved significantly samples concentrated part sample space matters high-contribution samples reused computer rendered images areas impact human perception regions complex detailed regions high contrast regions capture human attention figure shows noises vary image plane global illumination image left image noise level shadowed ground regions perceptually higher un-shadowed ground noise level difference orders magnitude noise due variation incoming illumination shadow boundary occluded light samples contribution high contribution high sample variance rendered image variance reduced putting image rays shadow boundary regions adapt image plane casting shadow rays visible light occluded light adapt hemispheric direction goal thesis develop robust efficient unbiased monte carlo methods global illumination problem adaptively generating samples reusing important samples demands present statistical framework based sequential monte carlo smc methods physically based rendering demonstrated sequential monte carlo methods efficiently generate reuse path samples physically based rendering figure global illumination image noise distribution whiter regions image higher noise left image mathematically problem stated target probability distribution defined common measurable space measurement function introduce sequence intermediate proposal distributions calibrated converge iterations monte carlo estimator integraltext based samples distributions converge quickly low variance unbiased figure shows sequential monte carlo methods sampling target distribution target distribution modes assume combination underlying distributions weight functions unknown sequence note weighting functions nonlinear values depend priori information weighting functions initial step set uniformly generate samples sequence based samples previous iteration importance function adjusted closer target distribution sequence repeating process results sequence intermediate distributions converges address problem context global illumination subdivide sub-problems design evolve sequence distributions distributions improved based performance previous distributions monte carlo algorithms global illumination problem essential good sampling techniques noise rendered image reduced quickly optimal sample technique difficult choose depends parameters values sampling process material geometry surface point sampled ray intersects checker scene figure area lights sizes surface materials diffuse specular glossy pre-set fixed sampling strategy brdf sampling light sampling good region bad regions light sampling works diffuse surfaces poor job specular regions front big area light problem detect lighting conditions crate importance function introducing bias order efficiently estimate direct lighting surface points sampling strategy account combination factors affect sampling adjust sampling technique fly based performance samples thesis shows population monte carlo method solve problem scene detected light sampling technique specular 
regions front big area light generate high variance samples brdf sampling generate samples reuse high-contribution difficult samples single target distribution due geometric setting material properties light path samples difficult detect sample space caustic path cornell box scene light paths starting back room passing ajar door room scene figure samples generated reused locally explore nearby important paths present algorithm based metropolis sampling photon caching samples reuse population monte carlo optimally combine samples sequence distributions minimize estimation variance introducing bias computing direct lighting checker scene figure estimator combines samples brdf sampling light sampling makes big difference image variance naive linear combination samples sampling techniques work sampling techniques high variance estimator produced linear combination high variance ocv estimator proposed address problem sequential monte carlo methods provide mechanism meeting requirements key idea samples previous distribution sequence provide information improve proposal distributions reused discover high-contribution samples smc techniques offer major advantages existing methods reduce estimation variance choosing samples correlated distributions introducing bias make easier find important rare light paths sharing information distributions provide natural discard low contribution samples retain high contribution samples based sample weight framework unifies existing rendering algorithms path tracing metropolis light transport energy redistribution path tracing multiple importance sampling adaptive importance sampling summary contributions introduce applications sequential monte carlo method computer graphics lead adaptive sampling algorithms physically based rendering main contributions metropolis photon sampling mps generating reusing important path samples propose visual importance-driven algorithm populating photon maps approach samples light transport paths join light eye accounts viewer sampling process information improve photon storage paths sampled metropolis-hastings algorithm exploits coherence important light paths present technique including user selected paths sampling process introducing bias user provide hints important paths reduce variance specific parts image population monte carlo rendering pmcr based population monte carlo develop unbiased adaptive sampling method works population samples sample population iterated distributions modified time information found iteration guide subsequent iterations introducing bias final result optimizing control variate ocv combining idea importance sampling control variate ocv samples multiple distribution functions combined algorithm optimizing nature addresses major limitation control variate estimators rendering users supply generic correlated function optimized estimate single highly-tuned work thesis outline chapter thesis overview monte carlo methods history monte carlo methods principle monte carlo integration monte carlo simulation estimate integration variance reduction techniques importance sampling control variates introduced introduce concept mcmc metropolis sampling sequential monte carlo methods approaches applicable computer graphics discussed sampling importance resampling population monte carlo chapter introduces basic concepts related global illumination physically based rendering providing definition commonly terms radiometry surface brdf rendering equation presented summary existing representative rendering algorithms involving monte carlo methods solve global illumination problem chapter presents metropolis photon sampling mps visual importance-driven algorithm populating photon maps technique including user-selected paths sampling process introducing bias presented chapter presents statistical framework image rendering called population monte carlo rendering pmcr pmcr works population samples iterated distributions modified time show application number problems realistic rendering chapter discusses optimizing control variate estimator estimator monte carlo rendering combines samples distributions provably good chapter concludes summary original contributions thesis identifies future research directions pdf sequence pdf sequence pdf sequence pdf sequence figure smc distributions sequence shows target distribution underlying basis distribution sequence importance distribution generate samples based samples sequence weighting functions adjusted importance distribution closer samples generated updated density repeating process leads importance distribution close target distribution sample variance low figure checker scene top consists area lights sizes surface materials light sampling bottom-left poorly specular region front big area light brdf image bottom-right appears noisy diffuse surface poorly glossy regions figure difficult paths cornell box scene light paths shown top-right image difficult sample bounce mirror region glass ball form caustic light paths marked room scene bottom-right difficult pass narrow door bouncing wall door chapter monte carlo methods chapter introduces basic statistical concepts monte carlo methods overview monte carlo methods principle monte carlo integration introduced number variance reduction techniques importance sampling control variate deterministic mixture sampling present metropolis-hastings sampling monte carlo method dependent samples basic building block markov chain monte carlo mcmc sequential monte carlo smc methods extend idea generating samples single distribution sequence distributions good basic monte carlo methods include kalos whitlock hammersley handscomb spanier gelbard book authoritative source monte carlo applications nuclear transport problems advanced topics monte carlo methods found gilks excellent starting point mcmc details sequential monte carlo methods website http www-sigproc eng cam smc maintained cambridge smc related research monte carlo methods history generic term monte carlo method refers numeric methods involving statistical sampling processes approximate solutions quantitative problems probabilistic problems non-probabilistic problems optimization numerical integration application domains range economics nuclear physics computer sciences earliest documented monte carlo computation experiment comte buffon performed experiment throwing needle length random board marked parallel lines distance infer probability needle intersect lines laplace pointed experiment comte buffon estimate suppose needle throw times random variable number times needle intersects line expectation difficult analytically obtain probability connecting equations rearranging monte carlo estimator captain fox experiments estimate interestingly fox improved experiment rotating ruled board drops eliminate bias due position dropping needle experiment adjusted values needle cross multiple lines single toss reduced sample variance estimation improved estimation attempt experiment similar numbers drops hall published paper experimental determination isolated examples monte carlo methods include lord kelvin random sampling estimate time integrals kinetic energy student gosset random sampling discover t-distribution modern history monte carlo methods starts early scientists los alamos systematically research tool work developing nuclear weapons key figures stanislaw ulam polish mathematician worked john von neumann world war ulam invent statistical sampling method solve quantitative problems long development electronic computer eniac ulam realize potential computers automate statistical sampling process john von neuman nicolas metropolis developed algorithms explored means convert non-random problems random forms statistical sampling solution published papers topic metropolis ulam monte carlo suggested metropolis famous monaco casino estimators properties function random variables called estimator unknown population quantity usable approximation numerical instantiating random variables sample data called estimate quantity exist estimators generally monte carlo estimators provide good estimates reasonable amount computational time order choose estimator criteria needed criteria based properties estimator squared error bias consistency efficiency 
worth pointing cases exist clear choice estimators cases estimators squared error quality estimator generally judged squared error squared error mse estimator quantity defined expected square difference mse bias called unbiased estimator expected true difference bias advantage unbiased estimator guaranteed correct samples expected unbiased estimator correct number samples makes easier analyze error estimator rewriting equation mse var var estimator unbiased means mse estimator variance order estimate error unbiased estimator compute sample variance estimator hand biased estimator give correct estimate infinite number samples error biased estimator generally difficult estimate unbiased estimator cases biased estimator desirable properties smaller variance unbiased estimator reasons preferable limit oneself unbiased estimators generally seek estimator minimizing mse combination bias variance consistency estimator called consistent quantity converges probability number samples infinity prob limn note condition consistency stronger simply requiring bias number samples approaches infinity sufficient condition estimator consistent variance bias increases exist situations unbiased estimator consistent variance infinite biased estimator finite variance estimator consistent bias diminishes increases efficiency estimator increasing computation time decreases variance tradeoff decrease compensate increase time efficiency monte carlo estimator defined inverse product variance running time reach variance monte carlo integration important class applications monte carlo methods greatly evaluate integration functions equivalently expectations functions difficult formulate quantity expectation propose naive monte carlo estimator trivial sense application monte carlo method represented definite integral suppose evaluate integral integraldisplay domain region multiple-dimensional space integrand idea monte carlo integration estimate integral expected random samples interpreted expected random variable random variable uniformly distributed draw set samples uniformly approximation obtained arithmetic nsummationdisplay based law large numbers unbiased estimator call equation crude monte carlo estimator variance crude monte carlo estimator var var nsummationdisplay nvar standard error var conclusions drawn variance equation standard error crude monte carlo estimator decreases square root sample size suffer curse dimensionality computation increase exponentially dimensionality integral methods newton-cotes rules simpson method suffer curse dimensionality statistical error independent dimensionality integral statistical error crude monte carlo estimator remains constant high-dimensional problems potential difficulties uniformly sample arbitrary space high-dimensional space function interest regions high values small regions uniformly sampling variance extremely large trivial manipulation rewrite equation integraldisplay integraldisplay pdf uniformly sampling generate samples compute estimator nsummationdisplay easy unbiased estimation variance integraldisplay integraldisplay crude monte carlo estimator special case estimator chosen uniform distribution function estimator properties crude monte carlo estimator statistical error decreases affected dimension sample space major advantage monte carlo methods integration easy understand simple thing needed density function generate samples ability evaluate sample weights advantage monte carlo methods flexibility applied wide range problems situations high-dimensional integration monte carlo methods feasible solution problem global illumination computer graphics evaluate integral space light paths domain infinite dimension monte carlo methods provide natural handling variance reduction techniques major disadvantage monte carlo methods integration rms error converges slow rate means quadruple number samples order reduce standard deviation half order speed monte carlo simulation users techniques variance reduction early applications monte carlo los alamos von neumann ulam refined simulations variance reduction techniques russian roulette splitting variance reduction methods commonly include importance sampling control variates stratified sampling advanced variance reduction techniques discussed sections importance sampling variance var monte carlo estimator equation depends choice density function draw samples intelligently choosing reduce variance monte carlo estimator called importance sampling called importance density sample called importance weight constraints importance sampling generate samples evaluate importance weights equation suggests samples put important regions sample space high values important highdimensional problems target function nonzero values small portion sample space uniformly sampling sample space doomed fail simulations optimal density function minimizes asymptotic variance constant term integraltext leads variance optimal density function practical requires knowledge normalization constant involves desired integral suggests good importance sampling density shape similar typically function obtained factors approximating major components taylor expansion obtained generate samples set control variates important technique variance reduction control variates basic idea control variates replace evaluation unknown expectation evaluation figure control variates difference unknown quantity expectation integrated analytically assuming interested integral equation find function integrated analytically property var var estimator form integraldisplay nsummationdisplay lower variance equation generally good choice control variate function sum terms taylor series kalos whitlock showed terms taylor series exp control variate monte carlo variance reduced uniform samples function approximation good control variate importance sampling density general approximately constant absolutely uniform control variate correlated sampling efficient importance sampling hand constant uniform importance density importance sampling integrable analytically control variate easy sample importance sampling density defensive importance sampling common pitfall importance sampling importance sampling fail target function heavier tail importance sampling density function roughly shape situation sample generated tails importance weight sample orders magnitude larger typical values samples modes high variance estimate extreme case decreases faster moves tails variance defensive importance sampling dis technique fixes problem importance sampling assume compute integral integraldisplay target density function probability density function close optimal importance sampling density importance density function defensive importance sampling defensive mixture distribution form defensive mixture distribution makes sample weight bounded guarantees variance defensive importance sampling equal times variance simple monte carlo estimate uniform distribution target distribution defensive mixture unknown difficult sample mixture distribution components important regions sample space represented decomposed product density functions pdf easy sample mixture distribution general form nsummationdisplay kqk summationtextnk mixture sampling mixture sampling defined owen zhou combines importance sampling control variates mixture density importance sampling employing mixture components control variates suppose pdfs construct mixture density summationtextmi ipi summationtextmi owen zhou mixture components control variates generate samples estimator results integral integraltext mixture sampling nsummationdisplay summationtextmi ipi msummationdisplay set real-valued variables estimator unbiased variance integraldisplay parenleftbiggf summationtextm ipi msummationdisplay parenrightbigg optimal set minimizes owen zhou showed minmi words samples mixture control variate estimate worse drawing samples component mixture obtain estimate multiple regression predictors method practice deterministic mixture sampling dms preferred ordinary mixture sampling dms provably smaller variance dms number samples component allocated deterministically total number samples generate independent samples xij estimator msummationdisplay nisummationdisplay xij summationtextmi ipi xij xij msummationdisplay multiple importance sampling target distribution multiple modes sampling single importance density capture important regions integrand pdf constructed generate samples specific important regions estimation integral equation suppose pdfs generate samples question combine samples manner minimizes estimation 
variance introducing bias simply averaging samples generally produce optimal result veach guibas introduced multiple importance sampling mis context global illumination studied problem samples estimate desired integral multiple-sample estimator defined nsummationdisplay nisummationdisplay weighting functions give weight sample drawn order multiple-sample estimator unbiased weighting functions satisfy summationtextni obvious choice weighting functions cipi ckpk summationtexti obvious sense sample mixture pdf equation classical importance sampling estimator give estimation multiple importance sampling estimator weighting functions set proportional number samples pdf summationtexti leads nipi summationtext nkpk weighting strategy called balance heuristic balance heuristic weighting optimal means combination appendix show mis balance heuristic weighting treated special case defensive importance sampling stratified sampling basic idea stratified sampling divide full integration space mutually exclusive subspaces strata perform monte carlo integration subspace suppose interested estimating integraltext disjoint subspaces union generate samples subspace estimator stratified sampling msummationdisplay nisummationdisplay xij unbiased estimator variance var msummationdisplay variance subspace shown stratified sampling higher variance plain unstratified sampling stratified sampling techniques population heterogeneous homogeneous sub-populations separated subgroups stratified sampling scale high-dimensional integration dimensions refine adaptive sampling adaptive sampling strategies adjusting sampling pattern depending observations made sampling process similar importance sampling adaptive sampling puts samples important regions integral major difference adaptive sampling importance sampling distribution adaptive sampling modified fly learn performance previous samples distribution importance sampling set priori sampling starts number applications adaptive sampling computer graphics photo-realistic rendering goal algorithms concentrate samples affect quality rendered image central issues adaptive sampling algorithms refinement criteria avoid bias generate samples refinement distribution reach areas work rendering literature developing refinement criteria main disadvantage adaptive sampling introduce bias care bias avoided two-stage sampling solution put adaptive sampling importance sampling framework thesis work develop unbiased adaptive rendering algorithms reuse samples account spatial temporal coherence rendering mcmc metropolis-hastings sampling markov chain monte carlo mcmc methods markov chain simulation sample target distribution state space target distribution mcmc algorithm generates random walk distribution depends current state chain conditional probability density called transition kernel chain chain stationary distribution large number iterations burn-in phase chain sequence dependent samples approximately monte carlo point view represented samples burn-in means computation expectations integrals estimated acceptable degree accuracy dependent samples markov chain problem construct markov chain stationary distribution target distribution turns surprisingly easy metropolis-hastings algorithm generating markov chain proposing candidate state information algorithm accepts candidate rejects retains pseudo-code initialize set generate random number figure metropolis sampling algorithm function computes acceptance probability current sample computed min proposal distribution tentative transitional function denoting probability density state current state remarkably form chain generated metropolis-hastings algorithm stationary distribution argument transition kernel metropolis-hastings algorithm parenleftbigg integraldisplay parenrightbigg indicator function part matter based compute acceptance probability eqs obtain called detailed balance equation detailed balance sufficient condition guaranteeing stationary distribution metropolis-hastings sampling general sample arbitrary complex probability distribution function normalizing constant long evaluated proposal distribution form chain eventually converge relationship significant impact convergence rate chain number samples required good result integral estimation key designing good mcmc sampler designing good proposal distributions sequential monte carlo methods sequential monte carlo smc methods set sampling techniques generate samples sequence probability distribution functions smc methods flexible easy implement parallelizable applicable general settings variety ways smc sampling approaches applicable graphics importance sampling context sample re-used reweighted resulting sampling importance resampling sir procedure framed importance sampling markov chain monte carlo context leads population monte carlo framework sampling importance resampling sir assume estimate integral integraldisplay sampling importance resampling method extends importance sampling achieve simulation target distribution resampling sir proceeds stages stage draws independent samples proposal distribution sample importance weight computed stage generates samples resampling samples stage based importance weights algorithm outlined generate independent samples proposal distribution compute importance weights generate samples resampling replacement probability proportional weights figure sir algorithm sir estimator constructed nsummationdisplay converges approximately distributed importance sampling efficiency sir strongly depends choice proposal distribution resampling scheme multinomial resampling resampling algorithms stratified resampling optimal terms variance minimum entropy resampling population monte carlo pmc population monte carlo algorithm iterated importance sampling scheme scheme sample population approximately distributed target distribution generated iteration samples iterations form unbiased estimates integrals distribution adaptive algorithm calibrates proposal distribution target distribution iteration learning performance previous proposal distributions assume interested estimating integral integraltext sample target distribution generic pmc sampling algorithm figure generate initial population adapt generate resample population figure generic population monte carlo algorithm line creates initial population jump-start algorithm method generate samples provided sample non-zero probability generated probability outer loop iterations iteration algorithm kernel function determined line information previous iterations kernel function responsible generating population current takes existing sample input produces candidate sample output line distinguishing feature pmc kernel functions modified step based information gathered prior iterations kernels adapt approximate ideal importance function based samples dependent sampling introduce bias proven result unbiased consistent depending normalizing constants kernels applications rendering problem kernels pdfs weight computed sample essentially importance weight resampling step line designed cull candidate samples low weights promote high-weight samples takes candidate population braceleftbig bracerightbig produces population ready iteration resampling kernel conditional distribution resampling kernel adaptation lines iteration examples demonstrate cases figure shows sampling resampling steps smc algorithm illustrated figure iteration pmc estimator nsummationdisplay unbiased integraldisplay integraldisplay kit kit dxg integraldisplay integraldisplay dxg integraldisplay vector past random variates contribute kit arbitrary distribution concludes unbiased estimator settings constant scale factor estimator self-normalized term nsummationdisplay nsummationdisplay case unbiasedness property estimator lost consistent practice average iterations improve estimate cumulative selfnormalized pmc estimator iterations defined tsummationdisplay parenleftbigg nsummationdisplay nsummationdisplay parenrightbigg weights combine estimates iterations optimal choices minimize variance mint tsummationdisplay variance estimator iteration work introduce population monte carlo method computer graphics apply adapting reusing samples global illumination context pdf sequence pdf pdf figure pmc sampling resampling steps top diagram shows initial samples proposal distribution bottom-left shows weights initial samples bottom-right shows samples resampling based weights chapter global illumination chapter background global illumination render photo-realistic images simulate transport light starting light sources interacting surfaces scene finally reaching camera chapter physical quantities equations light transport global illumination computation rendering equation mathematical foundation global illumination problem path integral formation rendering equation makes convenient applying monte carlo methods solve equation generate photo-realistic images representative monte carlo based algorithms global illumination 
literature summarized strengths weaknesses algorithms discussed radiometry flux total energy passing surface flux power measured watts joules light source definition emits power visible spectrum light bulb watts irradiance flux unit surface area unit un-occluded point light source irradiance surface point vectorp distance point light fact explains surfaces point light source darker irradiance falls squared distance light intensity flux solid angle unit radiance flux unit projected area unit solid angle unit sterd radiance attenuate distance due unit solid angle definition impression brightness wall radiance important quantity measured radiometry quantity required quantitatively analyzing directional effects bidirectional reflectance radiance frequently term computer graphics major reasons terms derived radiance integrating radiance solid angle irradiance integrating radiance area intensity integrating radiance solid angle area flux radiance remains constant ray free space convenient rendering algorithms ray tracing brdf function photo-realistic rendering light interacts surfaces scene essential simulating light transport bidirectional reflectance distribution function brdf describes light reflected hits material brdf defined ratio outgoing radiance direction incoming differential irradiance direction function incoming direction outgoing direction surface point vectorp vectorp dlo vectorp vectorp dlo vectorp vectorp cos figure bidirectional reflectance distribution function note brdf defined ratio unitless units brdf inverse solid-angle understand brdf defined brdf compute radiance leaving surface point vectorp outgoing direction vectorp sum reflected radiance incoming radiance directions hemisphere denote brdf term ratio vectorp moment vectorp summationdisplay hemishpere vectorp ratio vectorp obvious choice define ratio vectorp ratio radiances vectorp vectorp vectorp ratio vectorp radiance leads side equation irradiance due sum left side radiance brdf definition cancel term vectorp cos major properties brdf models properties considered physically plausible helmholtz reciprocity rule incoming outgoing direction pair brdf symmetric directions vectorp vectorp energy conservation law energy conservation law quantity light reflected equal quantity incident light direction integraldisplay vectorp cos rendering equation goal global illumination algorithm generate photo-realistic images taking account light interactions scene simulating light transport behaviors based physical principles mathematically solution global illumination problem solution rendering equation understand rendering equation rewrite definition brdf equation dlo vectorp vectorp vectorp cos integrate incoming radiance hemisphere incoming directions centered vectorp outgoing reflected radiance reflection equation vectorp integraldisplay vectorp vectorp cos law energy conservation exitant radiance surface point outgoing direction equal sum emitted reflected radiances energy balance equation vectorp vectorp vectorp plugging reflection equation energy balance equation results vectorp vectorp integraldisplay vectorp vectorp cos free space radiance ray constant define ray-casting function vectorp vectorp vectorx surface point visible vectorp direction incident radiance outgoing radiance connected vectorp vectorp rewriting equation dropping subscript brevity obtain rendering equation vectorp vectorp integraldisplay vectorp vectorp cos monte carlo methods rendering equation rendering equation form fredholm equation kind solve unknown quantity appearing sides equation monte carlo methods solve kind problem traced back decades statistical literature path integral formulation rendering equation apply monte carlo solve rendering equation global illumination convenient convert integral hemisphere integral surfaces result rendering equation expressed integral path space path sequence surface vertices length follow path integral framework introduced veach rendering equation path integral form integraldisplay integral set light transport paths begin light source end eye surface area measure path defined productdisplay function takes path passes image plane point path radiance emitted light point brdf surface point geometry term points cos cos bardblxi bardbl angles surface normals visibility term context computing rendering equation integral monte carlo method draw samples random light transport paths chosen density function compute estimate nsummationdisplay monte carlo algorithms global illumination kajiya introduced unbiased monte carlo based solution called path tracing solving rendering equation years algorithms developed solving rendering equation briefly summarize important algorithms provide historical timeline path tracing introduced james kajiya paper rendering equation path tracing general light transport algorithm compute complete global illumination solution path tracing builds random ray trees rooted eye considers valid transport path sample path tracing generates path starting ray camera recursively tracing ray scene ending light sources bounce direction sampled distribution brdf function cosine function contribution path image plane evaluated radiance path carries weighted probability path generated variation algorithm trace rays light sources camera called light tracing particle tracing backward ray tracing light tracing dual algorithm path tracing physics light transport change path reversed advantages disadvantages algorithms coupled improve image results algorithm combing path tracing light tracing called bidirectional path tracing discussed bidirectional path tracing bidirectional path tracing developed independently lafortune veach formulated algorithms based statistical frameworks veach introduced multiple importance sampling basis bidirectional importance sampling algorithm lafortune formulated recursive evaluation global reflectance distribution function grdf bidirectional path tracing generalization standard path tracing algorithm main observation bidirectional path tracing sub-paths efficiently sampled starting light backward efficiently sampled starting eye forward backward sub-paths provide important information forward sub-paths vice verse pair backward forward sub-paths connected vertices form multiple full paths full paths combined weights form estimator choice weights great impact variance estimator multiple importance sampling theoretical basis near-optimal setting weights path tracing bidirectional path tracing unbiased handle arbitrary geometry lighting combines advantages path tracing light tracing bidirectional path tracing dramatically reduce variance indirect lighting estimation compared path tracing image created bidirectional path tracing noisy samples converge subpaths connected form valid full paths bidirectional path tracing suitable scenes forward backward subpaths visible advantage combining visual importance lights power disadvantage path independent difficult path located random chance irradiance caching irradiance caching technique exploits fact indirect lighting slowly diffuse surfaces indirect lighting computed accurately sparse set scene locations cached data structure indirect lighting locations approximated interpolation cached values works extant radiance diffuse point computed irradiance cache looked acceptable nearby samples exist interpolated irradiance samples compute radiance accurate irradiance point estimated stored irradiance cache make method work questions answered acceptable nearby cached values approximate irradiance location estimates interpolated data structure store computed irradiance values fast gradients irradiance determine irradiance location approximated reasonable accuracy interpolated nearby cached values approach takes account distances nearest surfaces irradiance gradient due change position orientation approach require samples simply sophisticated analysis samples irradiance estimate irradiance cached information directional distribution incoming radiance lost technique diffuse surfaces metropolis light transport metropolis light transport mlt robust global illumination algorithm applies metropolis sampling photo-realistic rendering metropolis sampling markov chain monte carlo mcmc 
technique generate sequence dependent samples non-negative function stationary distribution chain requires constant scale evaluated point domain words analytical form veach guibas showed metroplis sampling applied infinite dimensional path space global illumination algorithm starts generating set path samples bidirectional path tracing paths modified mutation strategies obtain tentative paths tentative path accepted path acceptance probability computed metropolis sampling algorithm mutation strategies mlt correspond proposal distribution greatly affects convergence markov chain make mlt efficient mutation strategies designed path space efficiently explored path random walk mutation strategies proposed mlt paper included bidirectional mutation perturbations lens subpath mutation bidirectional mutations make big path guarantee path space visited ensure ergodicity markov chain key advantage mlt coherent structures path space explored result difficult sample path found path reused exploited mlt efficient handling traditionally difficult scenes light ajar door advantage mlt metropolis sampling framework ensures unbiasedness mlt competitive previous unbiased algorithms simple scenes photon mapping photon mapping two-pass global illumination algorithm pass standard light tracing shoot photons light sources photon intersects non-specular surface diffuse glossy intersection point incoming direction flux photon stored cache called photon map pass renders image taking advantage photon maps built pass significantly speeds rendering process photon mapping algorithm divides integrand components direct lighting specular reflection caustic indirect lighting multiple diffuse reflection direct lighting specular reflection accurately evaluated standard monte carlo ray tracing caustics evaluated caustic map indirect lighting computed final gathering global photon map estimate incoming radiances radiance estimate photon map based nearest neighbor density estimation well-studied discipline statistics note radiance estimate photon map introduces bias photon mapping handle illumination phenomena including caustics color bleeding specular reflection efficient manner advantage photon map depend underlying scene geometry means scales scene complexity make final gathering step efficient irradiance caching compute indirect lighting diffuse surfaces final gather ray hits diffuse surface irradiance cache searched single nearby good sample found irradiance estimate outgoing radiance multiplying brdf computing irradiance photon density estimation adding irradiance cache irradiance cache avoids repeating density estimation sampling importance resampling direct lighting recently algorithms direct lighting proposed based sampling importance resampling method sir bidirectional importance sampling bis resampling importance sampling ris algorithms outgoing direction radiance estimated incoming direction samples generated importance distribution brdf sampling light sampling importance weights samples computed samples generated resampling initial samples based importance weights estimator direct lighting vectorp msummationdisplay vectorp vectorp cos parenleftbigg nsummationdisplay parenrightbigg light visibility test surface point vectorp direction estimator interpreted computing reflected radiance direction samples visibility testing scaling average result visibility tests samples big contributions radiance orders magnitude larger key observation algorithms generally cheaper generate direction samples visibility testing algorithm gains postponing visibility testing resampling step tests needed visibility tests performed high-contribution directions talbot showed choose achieve optimal variance reduction algorithms good generating samples pdf decomposed factors cheap compute incorporates variance expensive compute low variance application direct lighting due visibility test initial sampling algorithm work partially occluded regions algorithm fail scenario ball floor lighted lights light brighter shadow region occluded bright light visible dim light direct light computation bis ris algorithms poor resampled samples bright light turn useless estimation due occlusion additionally choice makes big difference efficiency algorithm target distribution samples end low importance weights means low contribution light estimation designing good algorithm trivial task energy redistribution path tracing cline introduced energy redistribution sampling method estimate integrals correlated application sampling global illumination problem energy redistribution path tracing erpt hybrid global illumination algorithm combines ideas metropolis light transport path tracing sense erpt algorithm understood parallel mlt algorithm starts set initial paths path tracing initial path seed markov chain mlt current path mutated tentative path tentative path accepted probability maintain detailed balance chain path mutation strategies designed redistribute energy samples image plane reduce variance bidirectional mutation mlt guarantee ergodicity markov chain erpt re-generates totally path path tracing non-zero probability mutation strategies include lens perturbation caustic perturbation algorithm post-processing noise filters reduce image noise introduces bias year algorithm pros cons path tracing unbiased general solution slow converge rendering equation indirect lighting irradiance fast diffuse scenes biased fails caustics caching shadow boundaries works diffuse surfaces bidirectional path unbiased efficient efficient compute slowly tracing indirect lighting path tracing varying diffuse components photon mapping works practice biased wrong density estimation industry standard lead light leaking inefficient lights reach image plane mlt unbiased reuses path samples difficult implement handles difficult paths sir direct unbiased good scenes works direct lighting lighting occlusion bad partially occluded regions erpt easier understand implement biased filter mlt mlt features table monte carlo algorithms global illumination chapter metropolis photon sampling photon mapping current choice industry scenes general surface primitives reflectance functions initial pass populate photon maps samples power arriving points scene final gather pass maps estimate contribution indirect illumination visible pixels essential initial pass populate maps photons final gather standard technique fails common scenes chapter introduces metropolis photon sampling mps monte carlo sampling algorithm constructing photon maps produces high-quality results situations standard photon map construction fails mps users technique control variance image standard photon mapping traces particles lights distributed lights power distribution deposits photons particles interact surfaces performs poorly lights total power arrives locations important final gather situation uncommon practice indoor environments lights contribute unevenly image figure scenes light paths occluded figure local views outdoor scenes sun power forest canopy downtown city streets poor sampling results excess noise indirect illumination estimates derived map low photon density leads larger search radii accessing photons inappropriate samples included severe energy bleeding effects evidenced left image figure based photon distribution left figure figure leftmost plan scene small portion lights total power contributes image left image produced standard photon mapping under-samples regions over-samples resulting image noise severe energy bleeding adjacent room incorrect illumination edges rear wall result paths joining eye light sampled photons stored important locations insets show zoomed sections center-left images demonstrate method lower reduces noise avoids energy bleeding underlying poor sample distribution lack visual importance information sampling light camera location contribution technique metropolis photon sampling mps builds photon maps complete light paths join light eye linking eye account visual importance identify photon storage locations final gather figure reduces image noise energy bleeding artifacts 
scenes paths traced lights irrelevant image figure mps metropolis-hastings algorithm sample paths general framework supports sampling methods sampling strategy light paths difficult find randomly lead image artifacts monte carlo rendered images photon mapping manifest smooth incorrect results pure monte carlo framework result noise frequently difficult paths obvious user light pass small opening focused scene element contribution enables user provide small set important light transport paths sampling process reduce variance figure photon distributions figure standard photon mapping generates photons short period time left located places relevant final image result identical computation time samples locations final gather operation bias introduced result user defined paths sampling difficult geometric arrangements give user local control variance image instance figure user suggested paths carry light doorway neighboring room technique rendering literature including specific user-defined sample paths monte carlo framework related work rendering equation physical foundation image synthesis monte carlo based algorithms proposed solve equation path tracing bidirectional path tracing chapter summary kollig keller addressed problem quasi-monte carlo methods exploit coherence random number space assumption paths generated similar random choices similar paths necessarily case mildly complex scenes veach presented metropolis light transport mlt markov chain monte carlo mcmc algorithm designed exploit coherence path space mcmc views sampling markov process good sample found step improve subsequent samples mcmc multiple sampling strategies combined introducing bias enables incorporate user-guided sampling veach multiple importance sampling combined strategies support user input form propose alternate mcmc approach rendering proposed kelemen sampling path space sampled high-dimensional unit cube mlt extended support participating media pauly single sample representative illumination large region radiance varies slowly case scenes significant indirect diffuse illumination particle tracing algorithms photon mapping exploit re-use light paths arvo heckbert collins proposed algorithms illumination-maps store irradiance arriving sampled paths photon mapping particles traced lights require parameterized geometry maps method shirley traces particles builds polygonal mesh representation rendered real time varying viewpoints chen worked maps addition offered progressive refinement solution sampling method existing techniques modification particle storage ward radiance system traced rays eye cached diffuse contributions subsequent estimates irradiance caching technique determine cached samples provide adequate estimate rendering algorithms developed exploit visual importance christensen survey specific particle tracing importon techniques trace particles eye construct importon map estimate visual importance peter pietrek importon map construct importance sampling distributions scattering event particle tracing phase algorithm expensive due cost computing distributions particle bounce local decisions produce globally important path importance sampling produces photons highly variable power keller wald importon maps avoid photon storage areas contribute final image technique reduces memory usage maintains roughly uniform photon power control generation samples place suykens willems algorithm considers current sample density photon map storing sample redistributes power result excess density modifying photon generation unlike existing methods algorithm samples complete paths joining light eye efficiently accounts visual importance importons complete paths provide information important photon storage locations reduce redundant photons variance typically controlled samples designing algorithms natural tool end-users ward users surfaces important secondary light sources system builds outgoing irradiance functions indirect illumination technique targeted large secondary sources windows fails secondary source easy reach light surface significant warrant attention approach user paths multiple reflections places restrictions surfaces pieces surface affected related idea user input sampling based pilot paths found random initial pass previous frame animation dmitriev discuss approach animation context relies similarity random number space compute path perturbations user input random variables paths approach applied light paths photons incorporate visual importance photon map construction extracting photons complete light paths join point light source eye number scattering reflection transmission events complete paths identify point path photon stored assume moment produce sample light paths section address photons extracted paths photon locations light path identify point points accessed photon map lookup depends final gather performed standard photon mapping final gather jensen refer reader motivation details estimation radiance global photon map takes place points lie diffuse bounce paths traced eye possibly intervening specular bounces store photon diffuse point path sampler produces estimation caustic photons occurs diffuse bounce caustic paths store photon global caustic map diffuse point case refer photon storage location path storage point nearest neighbors point interest estimating radiance maps neighbors assumed representative incoming radiance requires radiance vary slowly region assumption true estimate density photons increases neighbors fall smaller region algorithm ensures stored photons lie points final gather estimates formed improves quality estimate map-building effort memory footprint kd-tree photon storage removes surface parameterization allowing wider range surfaces fast neighbor lookup decouples photons surface properties severe light bleeding occur due breakdown slowly varying radiance assumption hard detect surface information major problem scenes light back side thin divider figure common practical solution store normal vector photon require similar normal point estimate reduces bleeding concave corners fails scenes instance floor oriented sides wall figure importon based methods section fail address energy bleeding walls problem importance leak energy allowing photons stored unimportant regions points back side wall diffuse bounce path eye method automatically avoids storing significantly reduces energy bleeding unimportant areas scene photon storage standard photon mapping photon store location incoming ray direction radiant flux power section describe computed sampled path discussion based particle tracing framework introduced veach applied photon mapping pharr humphreys expressed terms sampling path space require photon power bracketrightbigg integraldisplay fmap sum set photons region area solid angle integral set light transport paths begin light end region surface area measure path fmap defined fmap productdisplay point path radiance emitted light point bidirectional scattering distribution function surface point geometry term points cos cos bardblxi bardbl angles surface normals visibility term region interest points accessed final gather equation takes form monte carlo estimate integral sum left photons map integral evaluates total power arriving map bmap sample paths distribution pmap fmap bmap photons power bmap store photons points relevant final gather discussion assumes sampling paths terminating points designation storage points relies complete path eye order count number diffuse bounces sub-path eye obtain information mps samples space paths join light eye stores photons desired sub-paths sample probability distribution function pdf peye feye beye feye productdisplay function takes path passes image plane beye normalizing constant case total power arriving image satisfy beye 
integraldisplay eye feye eye space paths join light eye veach path tracing estimate integral path tracing samples required averaging pixels peye target distribution resulting samples longer distributed pmap required correct photon map estimation equation accounted standard importance sampling re-weighting fmap map peye beye fmap map feye xmap sub-path sampled path form photon stored global map sub-path path caustic photon storage note longer require bmap sampling peye generate paths result photon storage form case fmap photon stored metropolis-hastings sampler provide paths storage point incoming ray direction due rejection candidate paths case entire path repeated path mutation retains storage point changing part path section generating photon cases accumulate power single photon reduce photon storage cost look-up time practice paths contribute photon resulting per-photon power variation create artifacts scattering function wavelength dependent evaluate standard rgb channels compute fmap feye sampling process attach single probability path luminance channel feye computed rgb xyz color conversion path probability red power stored photon green blue similar beye fmap map feye framework developed point depend method finding sample paths pdf peye sampling technique capable generating paths light eye bidirectional path tracing chose metropolis-hastings sampler exploit coherence path space support user input sampling paths metropolis-hastings algorithms markov process designed obtain sequence samples distribution converges target pdf veach estimate radiometric quantities sample path space transport paths joining light eye eye target pdf peye path segments parameterized surface intersection points scattering event occurs final point point light source particle emitted markov process generates sample sequence proposing candidate based previous sample accepting candidate rejecting repeating pseudo-code initialsample propose uniformrandom procedure initialsample chooses paths generated path tracing computation beye distribution peye initial sample chosen unbiased start-up bias markov chain proposal function propose produces light path applying random modification current sample correctness conditions modifications difficult satisfy strategies employed primary factor determining efficiency algorithm number samples required good estimate describe mutation strategies function computes acceptance probability current sample min braceleftbigg feye feye bracerightbigg function feye proportional target pdf peye normalization constant cancels transition function proposal distribution probability choosing means note reverse transition function required metropolis-hastings sampler equal proposal strategies techniques propose procedure mcmc algorithm key efficient correct operation conflicting goals designing good proposal candidate path current path rapidly move sample state space time sufficiently similar exploit coherence high-power paths technical conditions propose ensure non-zero probability move non-zero probability paths gilks acceptance probability specifically designed proposal strategy meets conditions properly encoded transition functions create unbiased sampler introduce mutation strategies user path proposals make user hints paths important final result section variance estimate reduced paths photon map proposals explore paths contribute global photon map section change sample path retaining sub-path eye addition proposal types previously mlt suitable bidirectional proposals modify sub-paths current path aim rapidly exploring sampling space caustic perturbation lens perturbation proposals modify sub-paths time aim exploiting coherence high-power localized features finally lens sub-path proposals stratify samples image ensures samples captured darker regions scene implement strategies manner mlt time propose procedure called choose strategies random fixed distribution proposetype selected probability ptype type options summationtexttype ptype computing transition function proposals generate considered summationdisplay type ptypettype acceptable function derived proposal strategy chosen generate tchosen combination strategies equation avoids computation unnecessary transition functions equation required user path proposals section user path proposals user path proposal strategy increases proportion candidate paths supplied user results variance reduction estimate based paths photon map evaluation applications difficult paths transport paths hard find randomly lead large variance found give high contribution found give contribution images caustic caused light bouncing mirror glass ball box scene figure fits description light shining keyhole commonly thought common practice user supply paths meet geometric constraints ensure feature adequately sampled user control variance regions image important center perceptually important region user supply paths leading region interest sampled lower variance regions figure page resampling user defining paths previous sampling operation earliest experiments paths initial path tracing pass estimate beye alternatively user identify paths coarse run algorithm re-use final render resampling enable adaptive unbiased monte carlo rendering provide handle low-variance physically-accurate animation rendering leave topics future work figure compares images rendered metropolis light transport algorithm user paths image million iterations producing variance measurement var section image user input requires million samples time achieve similar results user input reducing variance area image lead increased variance zero-sum game user paths lead global reduction variance increase average acceptance probability number paths sampled case figure acceptance rate rose introduction user paths event users choose make trade-off based situation user path proposal essential achieving good results metropolis-hastings sampling enhance control algorithm image figure proposal result figure good user paths candidates user paths path provided user start light end diffuse surface obtain paths built simple interface box scene allowed user interactively vary origins directions rays light traced scene extracted user paths tools readily included modeling packages figure paths hand based knowledge geometry path input system sequence surface points scattering occurs stored set unup nup paths step proposal choose uniformly random input paths path forms skeleton perturb form candidate path perturbation explores space user path avoiding accumulation large power single photon candidate path built starting light randomly generate direction cone axis sampling angle axis direction uniform azimuthal angle uniform surface point struck direction point candidate path repeat process times direction axis sample cone form complete path eye sub-path sample joining eye diffuse point hit appended candidate candidate rejected diffuse point setting lower values good exploring tightly constrained paths higher values give variation user path reduce variance larger area user path segment candidate path pass opaque surface case visibility term feye path rejected user path specular interactions specular surface found index perturbed path follow specular bounce sampling perturbed direction user path specularity matched perturbed path perturbed path intersects unmatched specular surface candidate rejected restrictions ensure specular bounces cancel computing acceptance probability veach user path transition functions transition probability ways proposal generated candidate tup nupsummationdisplay productdisplay pjg cos candidate generated path product terms accounts probability perturbed bounce bounce non-specular specular bounce random choice geometry terms required convert solid angle measure surface area measure geometry cosine term convert direction sampled solid angle 
measure sampled surface area measure angle normal direction compute perform procedure building candidate creating candidate check point common ray direction lies sample cone finally resulting number path segments correspond reverse transition probability tup similarly computed proposal generates path close user path previous path cases path generated manner paths close user defined path tup cases leads acceptance probability problem proposed path generate proposal candidate proposal path non-zero transition probability combine proposal strategies computing transition functions chosen puptup pbdtbd pup pbd tiered proposal selection process decide proposal up-bd hybrid probability pup pbd apply equation selection hybrid chosen decide apply equation combination proposals computing transition functions key idea enabling user input samples acceptance probability mechanism metropolis-hastings sampler sampling processes proposal strategies combined acceptance criteria ensures final distribution unbiased provided transition functions target pdf values correctly computed intuitively algorithm rejects proportion candidates ensure final result biased values pup pbd influence performance algorithm assume reverse transition function tup small pup pbd ratio proposals pup pbd increases acceptance probability equation decrease resulting chain repeating path results fewer photons stored user path fewer candidates paths proposed increases power photons resulting noisier image user path effect counterbalanced ratio feye terms favors transitions important paths including user paths proposed user paths overcome hard-to-find paths ratio pup pbd higher provide user candidates accepted due high feye context user-guided variance reduction ratio smaller avoid frequent rejection user path candidates higher variance result regions user paths varying ratio user control influence paths distribution variance image users providing paths user-path proposal extended include hints important surface patches reflectance directions important surface patches instance candidate path constructed randomly choosing points patches joining terms inside product equation modified account probabilities choosing points algorithm unchanged photon map proposal photon mapping proposal generates complete paths eye sub-paths similar final gather phase photons derived complete paths locations gathering tracing back light diffuse surface point closest eye find sub-path form sub-path back number specular bounces possibly diffuse bounce ending diffuse surface light candidate path modifies direction back similar final gather operation distributes rays estimate indirect illumination modify central portion sequence perturbing direction ray angle uniform uniform proposal examples chapter set precise impact results ray traced back specular bounces diffuse hit forming sequence inserted place original resulting angbracketleftbig angbracketrightbig diffuse light points end modified segment non-zero probability candidate path carry power scene resolution tmap tfg total photons rms error mps mps mps mps mps rooms lantern box table statistics images rooms lantern cornell box scenes timing mps photon mapping time estimate beye tmap photon sampling time tfg final gather time mps spends time sampling fewer well-distributed photons reduced time required final gather give number photons stored memory usage maps linear number photons bytes photon pbrt implementation finally give rms errors images compared path tracing solutions ran days figure transition probability similar proposal perturbed choice number specular bounces tpm cos productdisplay cos results discussion rendering system libraries code pbrt toolkit including final gather operation variety parameters algorithm mlt-style proposals veach photon mapping final gather parameters formula computing maximum search distance photons dmax suykens maximum number photons estimate set introduced parameters probability choosing proposal strategy ptype per-image basis introduced parameters controlling perturbation user path varied image perturbation photon map sub-path timing results statistics images chapter provided table images comparison methods generated equal total computation time reconstructed gaussian kernel width pixels irradiance caching speed photon map estimation tone reproduction reinhard parameter ymax implemented optimization borrowed mlt storing rejected paths store photon power reduced acceptance probability reduced power repeated path compensate increases number photons stored extracts benefit rejected paths cost increased variance photon power found benefits increased usable photons outweighed increase variance computed error measurements respect long running path tracing estimate image pixel computed relative error tone mapping iref ref iref pixel luminance path tracing image table report rms errors entire image mps sampling standard photon map sampling mps out-performs photon mapping cases negligible amount box note expect error image noise room scene figure primitives photon mapping mps images samples pixel final gather rays sample estimating indirect illumination scene contained user paths hand caustics set user path mutation proposal probabilities pup pbd ppm pcp plp pls proposal probabilities chosen give roughly equal proportion strategy scene mps spent significantly time photon mapping sampling photons regained faster final gather phase mps smaller number well-distributed photons improved performance nearest neighbor searching photon map rendered scene photon mapping million photons hour reduced noise result failed remove energy bleeding problems orders magnitude memory mps managing difficult transport paths significant advantage mps ability store photons relevant figure demonstrates scene photon mapping stores photons inside lantern remain unused gathering wall pixels contrast mps places samples walls room results reduced energy bleeding table box noise image images samples indirect illumination estimate samples pixel scene contained user paths important transport paths hard sample caustics proposal probabilities pup pbd ppm pcp plp pls figure shows variant cornell box scene complex caustic paths wall rear ball mirrors front ball glass ten user paths scene caustic ball perturbed segments light mirror wall segments light direct glass ball set pup pbd ppm pcp plp pls photon mapping requires photons resolve small caustic due light bouncing mirror glass ball mirror wall subtends large area light difficult concentrate photon sampling caustic producing region caustic photons sparsely stored rear wall excess noise due high power photons caustic good mps limitations extensions mps slower photon standard photon mapping greater proportion stored photons typically increase per-photon cost terms evaluated determine acceptance probability candidate path tracing phase required cost amortized stored photons significant improvement photon distribution achieved mps fewer photons typically reduces cost final gather giving images computational effort lost view invariance standard photon map construction method visual importance viewer path eye location variable included sampling process locations area light source vary samples metropolis-hastings algorithm correlated due markov process chain time explore space adequately independent particles traced light show spatial correlation stratified light surface outgoing direction important scenes photons parallel markov chains generate samples improve distribution samples short runs found made difference results photon counts required scenes alternate methods sample paths bidirectional path 
tracing path tracing eye simpler implement computationally expensive lack ability mps exploit correlation power neighboring paths production system support multiple algorithms populating photon maps share final gather code modules including ray-tracing brdf sampling system built store photons single point sampled path point relevant final gather operation points path case box scene diffuse surface point called compute radiance estimate chose store additional points memory overhead energy bleeding problem alternative importon map measure visual importance surface points store photons sufficiently important point path reduce number iterations required mps simple scenes cost importon map construction phase target pdf feye considers paths carry power lights image important support forms importance perceptual metrics shading discontinuities simply modifying weye component feye potential downside increase variability power stored photons increase noise final image user path proposal unmodified metropolis light transport figure impact greater variance mlt disguised final gather operation conversely mlt offers variance reduction technique implement brightness image pixels estimated pass modify path probabilities make pixels equally probable implemented mps importon maps modify probability paths result large variance photon power finally work extended atmospheric scattering combining photon mapping participating media pauly mcmc sampler photon mapping algorithm important global illumination approaches widely industry disadvantage current photon mapping method scenes enormous number photons traced order places good results final rendering mps solves problem metropolis sampling create photons guaranteed contribute final gathering mps traditional photon mapping share photon data structure final gathering phase easy incorporate mps method existing photon mapping system replace part generating photons figure shows mps fit traditional rendering pipeline modifying photon generating phase photon mapping conclusion metropolis photon sampling succeeds generating photon map samples meet final gather phase wasting storage computation time unnecessary photons achieves sampling light transport paths reach image storing photons points path photon distribution results photons contribute visually important locations fewer irrelevant places improves estimates map due higher photon density reduces chance inappropriate photons reduces energy bleeding artifacts time mps users supply information sampler form important paths achievable monte carlo algorithms sampler suited scenes small portion lights power arrives visually important areas method require modification final gather phase photon mapping conjunction standard particle tracing sampler depending scene sampler preventing methods fill map scenes multiple light sources contribute differently image improvements final gather phase photon mapping apply equally metropolis photon sampling figure variance control due user path proposal strategy top image rendered user paths center result user ten paths passing doorway bottom zooms wall intersection table regions user paths left user paths mlt images directly visualize sampled light paths improvements final gather present apparent box interior room walls figure photon distributions jack-o-lantern scene left column photon mapping column mps top row shows interior box light lower row interior room effective gathering samples room case mps figure jack-o-lantern scene demonstrating mps efficient placement samples photon mapping scene stores excess photons inside box insufficient number walls room resulting significant energy bleeding base box table noise image figure box scene mirror ball rear mirror wall front ball glass left image included ten paths user contribute large caustic glass ball bounce mirror ball contribute smaller caustic center scene user paths caustics show high variance photon mapping image box scene computed equivalent time large number photons cast resolve small caustic result slightly greater noise right-rear box figure images scenes paper generated path tracing figure mps place physically based rendering pipeline replace sampling phase traditional photon mapping sampling phase mps chapter population monte carlo rendering monte carlo integration methods offer general solution physically accurate lighting simulation production applications algorithm efficiency primary concern image noise variance low practical computation times present sampling techniques significantly improve rendering efficiency image-plane sampling hemispheric integrals global illumination derived population monte carlo sampling framework technique adapts sampling distributions time enables sample re-use theoretical guarantees error computational overhead pmc algorithms iterate population samples simplest sampler image-plane sampling pmc-ip population set image-plane locations pixels population initialized stratified sampling pmc-ip generates image information stage adapt kernel function produces population image-plane sampling perceptually-weighted variance intermediate images construct kernel function resulting image plane samples regions high variance procedure iterated sample adapt sample result unbiased algorithm case direct lighting hemispheric integrals general importance sampling primary variance reduction tool poor choice importance function increase variance importance function vary rendering depending things surface properties lighting configurations presence shadows ideal importance function semi-gloss surface depends primary lobe points light source surface shadow configurations vary surface difficult discover sampling begins choice importance functions typically made remains fixed pmc hemispheric integrals pmc-hi improves sampling efficiency dynamically choosing importance functions based information gathered rendering sample re-use reduce variance rendering algorithms produce independent samples sample locates small important region domain information lost samples markov chain monte carlo algorithms global illumination metropolis light transport energy redistribution path tracing enable sample reuse mutating existing samples choice good mutation strategies non-trivial major impact image quality pmc path tracing pmc-pl exploits information important samples re-use mutation process adapted on-the-fly resulting algorithm self-tuning large extent population monte carlo general purpose framework variants challenge applying rendering lies small sample counts hard-to-evaluate distributions visual sensitivity noise contribution specific tools rendering framework image-plane sampler pmc-ip adapts guide samples perceptually high variance image regions cheap compute maintains stratification unbiased hemispheric integral sampler pmc-hi adjusts sampling directions evaluate hemispheric integrals point supports variety importance functions acting instance avoid over-sampling light source surface point shadow brdf specular lobe makes contribution guide samples important illumination directions found previous samples adding bias pmc path tracing pmc-pt adapts amount energy redistribution pixels area energy redistributed pixels sharp shadow boundary attempt widely distribute energy smooth diffuse image region distribute wide area include results comparing algorithm existing approaches discuss rendering problems benefit approach find pmc-based algorithms improve efficiency factor existing methods related work focus specific areas related work adaptive image-plane sampling sampling irradiance integrals methods re-use samples overview monte carlo rendering general pharr humphreys typically adaptive image-plane algorithms perform pass small number samples pixel resulting values label pixels adequately sampled refinement algorithm iterates pixels requiring samples labeling pixels based initial sample introduces bias problem physically accurate renderings required develop unbiased easy implement method metrics proposed test 
trigger additional sampling lee sample variance based metric dipp wold estimated change error sample counts increase painter sloan purgathofer confidence interval test tamstorf jensen extended account tone operator mitchell proposed contrast based criterion humans sensitive contrast absolute brightness schlick included stratification algorithm contrast metric bolin meyer ramasubramanian farrugia eroche models human visual perception variant recently rigau introduced entropy-based metrics algorithm views image plane single sample space purposes sampling dayal similar view context frameless rendering variancebased metric control kd-tree subdivision samples drawn uniformly adaptively sized cell subdivision stokes global approach perceptual metric large body work computing irradiance integrals direct lighting concerned importance sampling functions veach thesis provided good description basic methods analysis variance importance functions commonly based surface brdfs pharr humphreys overview light sources recent advances include wavelet-based importance functions environmental lighting resampling algorithms avoid visibility queries samples unimportant applicable environment maps throws samples requires a-priori choice importance functions existing importance sampling approach irradiance integrals offers adaptable importance functions work adaptive pdfs importance sampling focused path tracing irradiance caching applications dutr willems piecewise linear functions determine shooting directions light sources particle tracing application dutr willems piecewise constant functions pietrek peter wavelets build adaptive pdfs sampling gather directions path tracing diffuse surface piecewise constant pdf assumption required reduce number coefficients manageable level high sample counts required important note bad approximation increase variance lafortune willems tree build approximation radiance scene importance sampling path tracing framework problems sample counts approximation errors arise work algorithm works arbitrary brdfs low-parameter adaptive model minimize sample count required control adaptation adaptive algorithms suggested shadow computations ward proposed algorithm scenes lights shadow tests insignificant lights replaced probabilistic estimates ward approach works light sources tens hundreds technique works sources ohbuchi aono adaptively sample area light source introduces bias achieve good stratification employing quasimonte carlo qmc techniques place samples technique sample re-use markov chain monte carlo mcmc algorithms powerful means exploiting hard-to-find light transport paths global illumination metropolis light transport algorithm approach large numbers samples required stratification difficult energy redistribution path tracing erpt attempts address problem starting well-stratified set initial samples locally redistributing energy mcmc noise-reduction techniques propose introduce bias pmc path tracing algorithm automatically adapts parameters erpt-like algorithm unbiased population monte carlo pmc population monte carlo algorithm iterated importance sampling method dynamically adaptive importance functions approach target distribution iterations outlined general pmc algorithm section steps required apply pmc rendering problems decide sampling domain population size computational concerns stratification typically drive choice domain image-plane case working discrete pixel domain continuous makes stratification simpler implement sampling efficient discuss choice population size context algorithm discussion define kernel functions adaptation criteria important task give examples applications suggest general principles discussion rendering applications key concerns degree kernel supports stratification works small population size low hemispheric integrals sampler choose techniques sampling kernel functions resampling step deterministic sampling significantly reduces variance stratification sections describe samplers detail conclude results general discussion pmc rendering problems pmc-ip image-plane sampling physically based rendering algorithms compute intensity pixel estimating integrals integraldisplay wherei image plane measurement function pixel non-zero support reconstruction filter radiance leaving point direction determined projection function camera ignoring depth field effects necessitate integration directions pixel motion blur require integration time image-plane sampler selects image-plane locations equation simplicity assume working ray-tracing style algorithm shoots eye scene adaptive sampling aims send rays image locations high noise avoiding bias final result taking importance sampling view set samples importance function pixel estimated nsummationdisplay source bias existing adaptive image-plane samplers revealed unbiased importance sampling function non-zero target function non-zero case pixel explicitly cut sampling pixel adaptive sampling bias avoid decisions terminate sampling individual pixel entire image plane decide number samples cast pixel non-zero brightness non-zero probability chosen sample estimated error note equation broken integrals support pixel provided sub-domain global nature important pmc-ip kernel function kernel function starting point creating pmc algorithm adaptive image-plane sampling function adaptable parameters cheap sample supports stratification achieved mixture model component distributions hip pixel msummationdisplay hip msummationdisplay number components mixture model component uniform domain single pixel integral parameters distribution values change iteration achieve unbiased result small positive constant enforce adaptive process assurance overlook important contributions referred defensive sampling mixture kernel results d-kernel pmc algorithm sampling distribution achieved choosing component sampling hip low-discrepancy sampler pixel giving sub-pixel stratification stratification entire image plane achieved deterministic mixture sampling describe shortly important correctly determine importance function equation pixel samples attributed pixel single component components probability producing pixel sum hip notice kernel function conditional kip kip image-plane sampling include resampling step pmc algorithm samples re-used knowledge gained prior samples adapt kernel function adapting pmc-ip kernel adaptation method responsible determining populations previous iterations information image computed pixels require samples high component covers pixel define pixel criterion assigns proportional estimate perceptually-weighted variance pixel algorithm tracks sample variance power samples contribute pixel account perception result divided thresholdversus-intensity function tvi introduced ferweda normalization accounts tvi ksummationtext iteration algorithm samples uniformly image plane criteria computed left images figure show map initial image perceptual term error image prevents high errors bright regions problem unweighted variance dark areas problem luminance-weighted variance deterministic mixture sampling randomly sampling discrete distribution defined produces excess noise pixels fewer samples problem avoided deterministic mixture sampling dms designed give component pixel number samples roughly proportional deterministic mixture sampling lower variance compared random mixture sampling proved hesterberg number samples iteration population size fixed small multiple number pixels typically balances spending effort iteration overhead computing set kernel parameters pixel deterministic sampler computes target number samples pixel takes samples pixel component remaining un-allocated samples sampled residual distribution probability pixel suitably normalized figure summarizes pmc-ip algorithm generate initial image compute perceptually-weighted variance image compute pixel dms allocate samples generate samples accumulate image figure pmc-ip algorithm pmc-ip results adaptive image-plane sampling situations pixel samples required iterative algorithm employed implemented context direct lighting multiple importance sampler mis global illumination path tracing potential applications include bidirectional path tracing photon-mapping algorithms concerned physical correctness served simpler biased criterion figure shows buddha direct lighting surface diffuse area light source pixel sample illumination samples images rendered statistics presented table introduce perceptually-based squared efficiency figure comparison adaptive uniform image-plane sampling 
direct lighting leftmost initial image pmc-ip sampling image initial image samples pixel image result pmc-ip sampling iterations spp average center spp image uniformly distributed zooms show shadow buddha base pmc-ip top uniform bottom variance images note variance image pmc-ip sampler high variance regions lower contrast general representing distribution error p-eff metric comparing algorithms computed err summationtext pixels tvi p-eff err difference intensity pixel ground truth running time algorithm image p-eff measure longer shorter run algorithm reach perceptual quality final adaptive image shown unweighted average sub-images initial iterations weighting sub-image helpful context clear samples iteration per-sample parameters obtained samples places needed samples path tracing algorithm differs standard version pixel locations chosen improvement due pmc-ip sampling pronounced situation areas image caustic instance higher error due difficulty sampling paths figure pmc-ip sampling total spp produces lower error uniform sampling spp time ran examples fixed number iterations bounded computation time working error bound continuing iterating pmc-ip sampler total error figure cornell box image computed path tracing spp adaptively sampled left spp uniformly distributed half computation time uniform image spp adaptive image superior quality caustic hardest region sample dropped bound note pmc-ip sampler evenly spreads variance image image error bound leave high-error pixels pmc-hi adaptive hemispheric integrals sampling hemispheric samplers generate incoming directions surface point application direct lighting assumes light leaving surface point evaluated integral composed terms light emitted reflected integraldisplay light emitted hemisphere directions light reflected direction direction lin cos light arriving direction brdf angle normal image method spp err p-eff buddha uniform pmc-ip box uniform uniform pmc-ip table measurements comparing pmc-ip uniform image-plane sampling equal total sample counts buddha image computed direct lighting mis method total lighting samples pixel sample pmc-ip sampling improves perceptual-based rms error factor uniform sampling computation time corresponds improvement efficiency cornell box images path tracing compute global illumination including caustics comparing images ssp pmc-ip improves efficiency factor standard importance sampling algorithm samples directions importance function computes estimate nsummationdisplay variance estimator improves closely approximates proportional local direct lighting situation common choice proportional lin cos normalized approximation alternative break integral sum individual light sources sample points lights generate directions environment map lighting situation wavelet product approach clarberg choose individual importance functions behaves cases figure demonstrates difficult cases importance sampling floor consists checker based pattern diffuse glossy squares types gloss settings lights large small pixels image diffuse squares importance function based lights highly glossy pixels reflect large light brdf sampling glossy pixels reflect light sampling light rough glossy pixels benefit brdf light sampling knowing a-priori practitioners brdf sampling rough glossy regions reflect light sampling light wasteful algorithms sample equally total emitted power multiple importance sampling mis addresses problems importance functions combining results reducing variance wasteful cases importance functions techniques assume knowledge strategy dominate pmc-hi sampler generates directions point adapting kernel function match integrand interest lin cos direct lighting case leftmost images figure relative usefulness importance functions pixel pmc framework enables important samples iteration guide sampling subsequent iterations figure scene constructed demonstrate optimal sampling strategy varies image checkerboard diffuse glossy squares near-pure specular reflection back rougher front light sources pmc-hi kernel function direct lighting estimate takes place single surface point small step larger computation surface point target function essentially re-appears choose adapt per-estimate basis avoids store information adaptation state surface points interpolate find information points number samples base adaptation low examples mixture distribution candidate importance functions good starting point component good approximation expect adapt function catch cases good sampling directions hard find include component hcone samples based important sample directions previous iteration light mixture brdfhbrdf lighthlight conehcone term brdf-based importance function light light multiple lights cone perturbation function cone function samples direction uniformly cone directions axis half-angle set based population previous iteration situations partial shadowing previous samples found visible portions light generate samples reach light figure shows mixture pdf component pdfs population pmc-hi set sample directions surface point estimating population size large obtain reasonable estimates values iteration large increase computation times significantly typically population size number mixture components sufficient size benefits adaptation result figure demonstrates adapting pmc-hi initial population samples braceleftbig bracerightbig generated cone equal summing deterministic mixture sampling select number samples component sample tagged mixture component generate importance weights computed resampling step direct lighting sample size small resampling unduly favor high-weight directions expense reducing degree sampling explores domain cone mixture component incorporate information previous samples component weights determined parameters hcone cone direction found taking weighted average population samples weights cone size set standard deviation samples component weights set based sample importance weights summationtext isummationtext wheresk set samples generated component iteration sample cone perturbation set cone adjust factor make sum begin iteration set samples generated deterministic mixture sampling kernel weights computed kernel function updated based weights form estimate equation sample weighted equation adaptive direct lighting results present results examples pmc-hi direct lighting checker scene figure plant rendering complex shadows glossy brdfs figure timing image method spp err p-eff checks mis mis pmc-hi plant mis pmc-hi table measurements comparing pmc-hi sampling mis equal total sample counts cases single direct lighting estimate pixel checks scene pmc-hi improves efficiency factor takes times samples uniform mis reach approximately perceptual based variance err efficiency gain plant scene error comparisons mis existing algorithms scenes table checkerboard image resolution plant image checker scene demonstrates adaptation stable process finds good kernel function evenly weights components dominates figure cone component helpful case visibility simple timing results show pmc-hi halves variance sample count compared mis computation time plant scene demonstrates usefulness cone function partially shadowed regions shows major improvement soft shadow boundaries table pmc path tracing pmc path tracing pmc-pt algorithm motivated energy redistribution path tracing erpt adaptively selects pixels redistribution adapt algorithm parameters erpt originally proposed traces path scene pixel path tracing form complete light transport paths eye light pixel path initial state markov chain monte carlo mcmc sample chain redistributes path energy nearby pixels finds additional light paths intuition pixels find initial paths information conveyed neighboring pixels markov chain due space limitations discuss erpt detail readers referred original paper erpt constant length chain pixel energy initial path carries differs neighbors sub-optimal 
pixels high energy initial paths longer redistribute neighborhood light transport paths similar redistribution achieves address problem cline designed filters introduce bias calculation making image darker pmc-pt algorithm basic premise erpt high-energy paths mutated distribute information carry neighboring pixels sample population set light transport paths scene kernel function mutates paths create paths resampling step removes low energy paths regions low image variance duplicates high-energy paths regions high variance result work focused important transport paths pmc-pt kernel function kernel function pmc-pt conditional kernel generates sample iteration sample iteration figure mixture distribution hlens hlens hlens component hlens performs lens perturbation erpt detail cline perturbation takes existing path moves image point passes case lens location uniformly sampled square halfside-length parameter kernel remainder path reconstructed pass image point retaining existing path original erpt work size perturbation parameter fixed startup sized perturbations mixture large perturbation effective redistributing information wide area smallest image regions illumination changing quickly include component caustic perturbation erpt metropolis light transport improve performance scenes significant caustic transport practice found unnecessary smallest lens perturbation achieved similar effect resampling adapting startup phase pmc-pt creates initial image path tracing spp generated paths valid terminated russian roulette point sees light valid kth initial population chosen give desired population size pmc-pt resample adapt mixture component weights lower frequency iterate kernel number kernel iterations resample step resample moderately expensive advantage adapting iteration exploring values found wide range values effective optimal depends population size relative cost kernel perturbations compared resampling resampling step achieves purposes samples energy redistribution carried forward round information samples chosen resampling guides adaptation opportunity add completely paths population proportion samples survive resampling component survival rate usefulness component sampling set resampling standard technique forms discrete distribution existing sample set samples replacement population generate deterministic sampling residual method sample population resampling probabilities importance weights sample tagged kernel mixture component generated resampling set mixture weights proportion surviving samples generated component add completely paths resample fewer paths population create remaining paths original path tracing algorithm create paths initial sample aim adding paths limit potential resampling produce repeats high weight paths include component mixture create paths scratch limits extent path energy redistributed probability survive loop iterations low adding paths add bias resampled population samples biased union biased practice resample population generate remaining scratch step loop figure accumulate weights pixels form image computing weights requires kernel function probabilities called transition probabilities cline provide excellent detailed discussion computation functions pmc-pt techniques terminology pmc-pt results compared pmc-pt energy redistribution path tracing erpt algorithm cornell box scene basic room scene cases population size box scene began spp path tracing erpt performed iterations initial path pmc-pt resampling iterations mutation iterations scene rendered resolution pmc-pt achieves reduction rms error erpt computation time table images figure demonstrate pmc-pt expends effort difficult regions ceiling glass ball caustic image method total time err p-eff box erpt pmc-pt room erpt pmc-pt table measurements comparing energy redistribution path tracing erpt pmc-pt roughly equal number mutations efficiency gains pmc-pt box scene room scene lower variance regions expense slightly higher variance parts image recurring property pmc image plane sampler pmc-pt pmc produces distribution noise lower noise levels higher parts image over-sampled non-adaptive techniques room scene figure rendered spp obtain initial paths erpt performed iterations initial path pmc-pt resampling iterations mutation iterations note pmc-pt erpt implementations filter original erpt paper smooth final image discussion important parameter pmc algorithm population size small population reduces number samples iteration flexibility total sample count algorithm time spent adapting mixture parameters quality adapted functions lower derived information small populations hemispheric integrals case aim total number samples estimate low kernel function small number parameters larger populations result robust adaptation overhead general favored population large benefits adaptation lost samples drawn mal-adapted importance function equation full mixture distribution importance function form rao-blackwellization reduces variance expense additional computation algorithm remains correct mixture component sample compute mixture functions cases resulting reduction computation exceed increase noise rendering greatest cost obtaining sample evaluating probabilities relationships existing algorithms pmc algorithms presented viewed generalizations existing algorithms mis special case deterministic mixture sampling corresponds fixing weights ahead time fixes number samples function mis balance heuristic results estimator improve mis adapting weights time avoids wasting samples unimportant component functions pmc-pt viewed form metropolis light transport multiple parallel chains population allowed die split resampling pmc framework places sound statistical setting designing adaptable kernel functions pmc kernels literature mixture models mixtures typically formed combining components expected cases adaptation step determines input mixtures unrelated functions combined light area importance function brdf importance function equation environment map present include wavelet importance functions clarberg mixture typically common rule choosing importance functions applies product unrelated functions good choice mixture components proportional factor adaptable functions kernel functions gaussian distributions parameterized standard deviation choice single gaussian unknown size thought sufficient acting ability simultaneously sample functions lost common reason non-mixture kernels aim pmc finding adapted parameters samples kernel function chosen represent expected form underlying statistical model pmc rendering pipeline limitations pmc easily incorporated physically based rendering system pipeline figure image-plane sampler direct lighting integrator common components rendering algorithms pmc-ip sampling plugin component essentially algorithm forms light paths eye including gather phase photon-mapping bidirectional path tracing irradiance caching pmc-hi sampler situation estimates integral hemisphere required irradiance caching benefit greatly pmc sampler computation cached photon-mapping pmc sampler final gather expect improvement apparent notable limitation pmc high sample counts required kernel adaptable parameters precludes instance component light lights strategy appealing efficient sampling complex shadow situations components lights wouldn sample count required adequately determine mixture component weights large single mixture component lights rely cone perturbation component favor visible lights work illumination sources widely spaced alternate approach integrating functions defined surfaces store mixture component weights surface map interpolate amortizes cost adapting surface points explore possibility offers potential multi-light problem cases light transport paths constructed scene bidirectional path tracing photon mapping rely deterministic mixture sampling achieve stratification image-plane sampler lesser extent samplers satisfactory pmcpt mutation kernels responsible moving samples image plane stratified addressed techniques similar metropolis light transport greater complexity conclusion shown algorithms adaptive image-plane sampling hemispheric integral computations energy redistribution path tracing derived pmc framework case 
algorithm learns effective sampler based results earlier iterations alleviates greatest problems monte carlo rendering choice importance functions parameters pmc approach family iterated importance sampling algorithms kalman filter well-known common techniques idea sample re-use resampling adaptation sampling parameters iterations computer graphics offers opportunities exploit properties big area light small area light big area light small area light big area light small area light big area light small area light figure mixture pdf top brdf sampling light sampling cone sampling bottom linear combination top sampling strategies figure maps show mixture component weights pmc-hi vary image iterations bright means high weight left left light weight light weight brdf cone image limited large light dominates regions light glossy reflection light favored nearby diffuse squares brdf component favored large light specularly reflected pixel images noise-free small sample counts total samples estimate indicating adaptation mechanism converges consistent result figure checker images generated algorithms number samples pmc-hi image top-left mis image top-right glossy region front big area light sampling light sampling brdf works light sampling bottom-left poorly specular region front big area light brdf image bottom-right appears noisy diffuse surface figure image involving complex soft shadows glossy surfaces top-left pmc-hi sampling top-right mis equal total sample count note significant improvement soft shadows achieved pmc-hi shown zoomed images bottom pmc-hi left mis determine generate resample population figure pmc-pt iteration loop figure cornell box image computed pmc-pt left erpt improvement pmc-pt evident caustic glass ball ceiling biased filters cline remaining bright spots figure room scene computed pmt-pt top erpt pmc-pt fewer artifacts pmc-pt improves erpt sharing information paths re-using high contribution paths figure population monte carlo rendering physically based rendering pipeline chapter optimizing control variate estimators rendering monte carlo integration methods offer general solution physically accurate lighting simulation handle near-arbitrary geometry material properties participatory media monte carlo methods require estimator takes information found samples determines single final good estimator unbiased low variance rendering unbiased property guarantees image average correct pixel values variance determines noise levels image neighboring pixels tend differ estimators combines samples final answer focus unbiased estimators good strategy choose minimizes variance remaining fast compute common estimator rendering sample importance weighted alternatives exist multiple importance sampling mis estimator control variate estimators referred correlated sampling chapter apply optimizing control variate ocv estimator problem estimating irradiance integrals direct lighting basic problem sub-component rendering algorithms irradiance caching photon-map gathering demonstrate results ocv estimator solves small optimization problem find good control variate distribution set samples unlike existing control variate methods require single control variate distribution estimates ocv distribution vary scene depending surface properties lighting conditions users burdened finding optimal correlated function provide generic parameterized function estimator optimizes ocv works deterministic mixture sampling dms framework constructing importance functions sampling computing estimates samples addition providing estimators dms multiple importance sampling functions combined general optimizing nature estimator ensures combination samplers performs ocv viewed generalization multiple importance sampling estimating irradiance integrals chapter concentrates problem computing integrals hemispheric domains common integral rendering computes radiance leaving point direction integraldisplay light emitted hemisphere directions light reflected direction direction lin cos light arriving direction brdf angle normal monte carlo renderers statistical sampling estimate integral reflected component standard importance sampling algorithm samples directions importance distribution computes estimate nsummationdisplay variance estimator improves closely approximates differs constant scale local direct lighting situations common choice normalized version cos approximation refer brdf-based importance sampling alternative light-based sampling integral broken sum individual light sources points sampled lights generate directions environment map lighting situations wavelet product approach clarberg choose control variate approaches section introduce correlated function property close constant estimator integraldisplay nsummationdisplay difficulty applying approach rendering problems finding function sufficiently close places solve problem defining parameterized function optimizing vector parameters order approximate mis estimator multiple importance functions draws fixed number samples computes estimators simplest balance heuristic msummationdisplay njsummationdisplay summationtextm ckpk proportion samples drawn major advantage mis enables importance functions combined unbiased manner slightly estimator power heuristic weight samples coming poor importance functions implicitly reduced final estimate related work simplest effective control variates cases incoming illumination approximated constant ambient term lafortune willems technique offers improvement complex illumination szirmay-kalos improve radiosity obtain estimate diffuse illumination serves correlated function monte carlo step accounts illumination works diffuse environments specular surfaces ecsi combined control variate importance sampling estimators equations linear combination weights optimized reduce variance approach limited brdfs handled note approach combines estimates sampling strategies single importance sampling function chosen alternate estimator weighted importance sampling particle tracing algorithms bal azs scene discretization required improvement specific brdf lighting configurations work lafortune willems adaptive brdf sampling includes control variate component built d-tree approximation radiance scene importance sampling control variate estimation sense optimizing control variate estimator large sample counts required adequately adapt functions failure adapt correctly increases variance algorithm lowparameter function control variate distribution samples required optimize ocv deterministic mixture sampling offers combine samples multiple importance functions discussed veach mis existing approach problem dms includes balance heuristic equation special case improve mis simple optimization process selecting estimator pixel deterministic mixture sampling optimizing control variate estimator begins deterministic mixture sampling process generate samples practically equivalent mis step generating fixed number samples multiple importance functions motivated differently mixture pdf composed weighted sum component pdfs msummationdisplay jpj number components vector mixture weights summationtextmj simplest draw sample mixture density select component probability sample rendering mixture include importance function typically include component sampling brdf light source environment lighting conditions component sampling environment map included break brdf sub-components diffuse glossy experiment note environment map sampling clarberg viewed mixture wavelet basis function component deterministic mixture sampling chooses fixed number samples component samples drawn component total sample size view form stratification mixture components hesterberg showed reduces variance note mis equation re-written terms nsummationdisplay construct control variate estimate mixture functions correlated distribution addition importance distribution msummationdisplay nsummationdisplay vector real valued variables estimator unbiased writing integraldisplay summationtextm jpj msummationdisplay integraldisplay msummationdisplay integraldisplay msummationdisplay integraldisplay note pdf integrates variance estimator equation integraldisplay summationtextm jpj msummationdisplay true integral estimated improvement importance sampling set estimator equation free choose variety ways sum solve optimization problem results ocv estimator optimizing control variates natural strategy choosing minimize variance equation don estimate 
form linear problem minimizes objective function respect nsummationdisplay parenleftbiggf summationtextm jpj parenrightbigg standard linear squares problem modify ways include intercept term optimization evaluates nsummationdisplay summationtextmj jpj putting equation simplifying simpler form ocv estimator msummationdisplay problem condition summationtextmj required make distribution function means terms linearly dependent solved dropping optimization setting leaves minimizing bardbly bardbl problem occurs samples component rendering due occlusion factor radiance directions deal penalized squares penalty term pushing resulting objective function isbardbly bardbl bardbl bardbl solution problem transpose identity matrix found good practice ocv rendering optimizing control variate estimation rendering evaluating integrals single domain pdf sample choice importance functions veach showed bidirectional path tracing application practice conditions met gather integrals integrate incoming irradiance point sampling hemisphere integrals arise direct lighting irradiance caching photon-mapping radiosity show examples applications choosing components mixture set weights experiments single brdf-based component component light environmental lighting made conservative choice half samples brdf brdf remainder divided equally lights reason user thought sampling function succeed weight component increased set weights adaptively aware paper experiments ocv estimator summarize time require estimate integral equation draw fixed number direction samples importance function mixture trace rays sample determine incoming radiance lin sample direction evaluated form matrices vectors solve equation finally equation evaluated compute estimate outgoing radiance direct lighting irradiance integral estimate obtained surface point hit pixel sample irradiance caching application implemented incoming irradiance estimated diffuse surface points nearby cached estimate irradiance integral broken terms integraldisplay lsources integraldisplay lind irradiance point lsources incoming radiance due light environmental sources lind radiance due indirect lighting implementation lind computed path tracing point path evaluates direct lighting integral ocv irradiance due sources indirect lighting estimates happen diffuse surfaces samples directly hit light contribute accounted brdf-based importance sampling importance function suitable ocv form mixture note irradiance integral evaluated part path tracing procedure ocv contribute indirect lighting results experimented scene figure demonstrates importance including multiple sampling functions direct lighting lights half samples sampling brdf-based component quarter sampling area yellow light quarter blue light table presents timing error results error perceptually weighted error metric summationdisplay pixels parenleftbiggl true tvi ltrue parenrightbigg image method spe spp time err checks mis ocv buddha mis ocv room mis ocv box mis ocv table measurements comparing mis ocv direct lighting computations spe sample count estimate spp estimates pixel err error computed equation number pixels luminance result ltrue true luminance tvi perceptual threshold-vs-intensity function introduced ferwerda perceptual weighting avoid giving weight bright dark areas image ground truth image computed mis running hours figure shows comparison mis ocv correlated sampling approach ecsi images rendered resolution highlight primarily multiple importance functions correlated sampling ocv performs mis scene additional computation time improvement form lower variance apparent glossy region reflected yellow light scene ocv estimator results improvement image quality computation time buddha images figure show marked improvement ocv mis images rendered resolution ocv estimator results improvement time scene greater variety lighting conditions ranging tight specularities occluded regions final direct lighting test room scene figure ocv estimator produced lower error compared mis additional computation cost resulted comparable rendering efficiency scene requires samples obtain good estimate light sources small limited occlusion method performs occlusion complex larger light sources due optimization ocv results worse alternative methods cornell box scene figure demonstrates ocv estimates irradiance caching perceptual rms error equation standard implementation ocv reduces computational time compare algorithms based number samples computational time presetting number samples makes implementation efficient taking advantage stratified sampling efficiency measured perceptual rms error computational time product fair comparison algorithms running number samples ocv rendering pipeline limitations ocv indirect lighting component irradiance caching integral techniques forming mixture result single component form mixture sub-dividing hemisphere component sub-region things occluded paths accounted estimator stated ocv estimator situations samples mixture distribution bidirectional path tracing means per-path basis mixture component method forming path path tracing ruled path length hits set material properties pdf integrals form equation common ocv cover large set practical cases figure shows ocv construct estimator accumulating sample contributions traditional rendering pipeline primary limitation ocv estimator relationship number components mixture number samples required larger mixture requires samples obtain reliable values optimized samples components mixture components samples increases cost optimization extent mis perform computation time small sample counts situations light sources problems constructed mixture many-light situation nearby lights grouped component environmental lighting approach conclusion presented estimator computing irradiance gather integrals ocv estimator maximizes benefits control variate sampling optimizing correlated function estimate reduces user burden finding correlated functions addition ocv multiple importance functions combined function works entire image importance sampling applications mixtures defensive sampling component mixture heavier tails integrand ensure finite variance estimate rendering situations defensive component rare glossy surface environmental lighting dominant reflectance lobe blocked occluder wavelet product sampling cosine-weighted mixture component defensive choice situations alternative importance functions components interesting possibility low-frequency wavelets clarberg potential advantage wavelets representing occluded directions weight estimate reduced advantage approach adapts mixture weights avoids sampling occluded directions figure results mis ocv buddha model mis left noticeably higher variance soft shadow boundary base buddha variance images reveal significant reduction variance ocv entire image figure images checkers scene left mis center ocv correlated sampling correlated sampling performs poorly choose importance function rendering begins typically brdf-based choice obvious bottom perceptually-based variance images show variance direct illumination estimates obtained pixel significant improvement ocv mis apparent left glossy reflection large light source note variance expected large material property boundaries pixel samples hitting materials figure results mis left ocv room scene images similar variance images reveal improvement ocv mis figure results mis ocv irradiance caching computations box scene standard irradiance caching mis estimates left version ocv estimators figure ocv physically based rendering pipeline construct estimator based samples mixture multiple distributions chapter discussion conclusion monte carlo method general robust method solving global illumination problem major challenges monte carlo rendering sample path space efficiently construct good estimators reduce variance rendered images promising avenue face challenges adaptively sample important regions integrand reuse high-contribution path samples thesis introduced statistical framework adapting reusing samples demonstrated applications global illumination problem chapter presents summary main contributions work discussion future work contributions idea adaptive sampling explored image rendering researchers major 
disadvantage adaptive sampling introduce bias special care pointed kirk arvo adaptive algorithms literature biased analysis bias affects final rendering results two-stage sampling proposed kirk arvo eliminates bias wastes samples stage adjust sampling stage sequential monte carlo puts sample adaptation sample reuse statistical framework enables repeated updates importance distributions based performance sampling process specific type smc method population monte carlo algorithm makes easier construct adaptive sampling schemes introducing bias allowing samples dependent previous samples straightforward sample reuse resampling importance weights samples high-contribution samples reuse prunes low-contribution samples population working importance sampling framework pmc removes ergodicity issue mcmc framework applications framework demonstrated variety problems physically based rendering task photo-realistic rendering light paths reach image plane important paths contribute final image generating reusing important path samples proposed visual importance-driven algorithm metropolis photon sampling mps populating photon maps photon mapping context sampling strategy independent photon mapping generate visually important paths photon maps exploit sample reuse metropolis photon sampling succeeds generating photon map samples meet final gather phase wasting storage computation time unnecessary photons achieves sampling light transport paths reach image storing photons points path photon distribution results photons contribute visually important locations fewer irrelevant places improves estimates map due higher photon density reduces chance inappropriate photons reduces energy bleeding artifacts time mps users supply information sampler form important paths difficult paths achievable monte carlo algorithms demonstrate utility sequential monte carlo framework physically based rendering problems population monte carlo rendering algorithm proposed applied number problems realistic rendering applications adaptive image-plane sampling pmc-ip hemispheric integral sampling pmc-hi path tracing pmc-pt adaptive image-plane sampler selects pixels refinement perceptually-weighted variance criterion statistical bias adaptive hemispheric integrals sampler learns importance sampling function computing common rendering integrals adaptive energy redistribution path tracing concentrates computation regions high variance important light transport paths algorithm derived generic population monte carlo statistical framework image-plane sampler direct lighting integrator common components rendering algorithms pmc-ip sampling plugin component essentially algorithm forms light paths eye including gather phase photon mapping bidirectional path tracing irradiance caching pmc-hi sampler situation estimates integral hemisphere required irradiance caching benefit greatly pmc sampler computation cached photon mapping pmc sampler final gather expect improvement apparent final gathering smooth result address problem optimally constructing estimators combine samples pdfs presented optimizing control variate estimator estimator rendering importance sampling control variate method important issue population monte carlo rendering framework samples generated sequence distributions estimator combines big impact image variance based deterministic sampling framework ocv multiple importance sampling functions combined general viewed generalization multiple importance sampling method optimizing nature ocv addresses major problem control variate estimators rendering users supply generic correlated function optimized estimate single highly-tuned work basic problem sub-component rendering algorithms irradiance caching photon-map gathering system limitations algorithms presented dissertation easily combined separate components speed rendering process commercial rendering system figure shows algorithm global illumination rendering pipeline algorithms proposed thesis deal problems generate reuse samples build efficient estimators algorithm selected independently plugged pipeline adaptive image plane method monte carlo ray tracing algorithm contributing samples eventually penetrate image plane practical simple implement overhead generating pixel samples based mixture distribution adaptive image plane strategy promises great efficiency gain images regions highly varied rendering complexities scene mixed high noise regions soft shadows caustics requires samples low noise regions plain direct lighting non-textured plane similarly optimal control variate algorithm rendering pipeline algorithm samples generated multiple sampling distributions efficiently combined ocv algorithm adaptive hemispherical integral algorithm situations multiple samples needed estimating irradiance hemisphere cases include direct lighting final gathering phase photon mapping sampling distributions adaptive sampling optimal control variate deterministic mixtures small number sampling distributions preferable samples required adequately determine mixture component weights large future research pmc approach family sequential monte carlo methods common techniques idea sample re-use resampling adaptation sampling parameters iterations problems computer graphics integrals specific form evaluated sampling process employed offers opportunities exploit properties sequential monte carlo methods solving rendering equation essentially approximating integral photo-realistic rendering problems potentially benefit sequential monte carlo framework algorithms interactive rendering animation rendering improved efficiency samples reused adapted context rendering questions open user guidance interactive global illumination rendering interactive global illumination rendering important applications lighting design architectural modelling speed critical interactive rendering computing global illumination solution expensive conflicting requirements suggest algorithms trade rendering accuracy speed reviews interactive global illumination rendering specific regions objects important viewer scene product design photo-realistic appearance objects modified materials user cares speed rendering process user guidance incorporated sampling strategy important regions rendered higher accuracy provide nice tool users interactive material design adaptive transitional kernels path space pmcr current applications population monte carlo rendering domain adaptation image plane hemisphere local direction bounce adapt sampling process path space transitional kernel change path restricted construct transitional kernels bidirectional path mutations lens mutations mlt adaptively select mutation strategies based path performance provide automatically tune mlt energy redistribution path tracing algorithms optimal estimator samples sequence correlated distributions ocv provably good combine samples distributions assumed samples generated independently un-correlated distributions population monte carlo rendering work distributions sequence correlated weighting samples based sample variances iteration valid combining samples efficient ways exist worth study sequential monte carlo animation rendering animation rendering samples neighboring frames provide hints generating good samples current frame sample high importance found exploited temporally reusing path samples create temporal coherence lighting distribution subsequent animation frames dramatically reduce temporal flickering effects applying smc methods global illumination animation rendering context offer major advantages existing methods reduce temporal noise choosing samples correlated frames introducing bias make easier find important rare light paths frame sharing information obtained neighboring frames provide natural discard low contribution samples retain high contribution samples based sample weight figure physically based rendering system diagram inside dotted box traditional rendering system flowchart bold boxes show potential plugins presented dissertation list sameer agarwal ravi ramamoorthi serge belongie henrik wann jensen structured importance sampling environment maps siggraph proceedings annual conference computer graphics interactive techniques pages christophe andrieu arnaud doucet joint bayesian model selection estimation noisy sinusoids reversible jump mcmc ieee transactions signal processing james arvo backward ray tracing developments ray tracing acm siggraph notes james arvo transfer functions global illumination acm siggraph notes global illumination pages benedek 
bal azs aszl szirmay-kalos antal orgy weighted importance sampling shooting algorithms proceedings spring conference computer graphics pages mark bolin gary meyer perceptually based adaptive sampling algorithm siggraph proceedings annual conference computer graphics interactive techniques pages david burke abhijeet ghosh wolfgang heidrich bidirectional importance sampling direct illumination rendering techniques proceedings eurographics symposium rendering pages capp guillin jean-michel marin christian robert population monte carlo journal computational graphical statistics shenchang eric chen holly rushmeier gavin miller douglass turner progressive multi-pass method global illumination siggraph proceedings annual conference computer graphics interactive techniques pages christensen adjoints importance rendering overview ieee transactions visualization computer graphics christensen industrial-strength global illumination siggraph notes pages petrik clarberg wojciech jarosz tomas akenine-m oller henrik wann jensen wavelet importance sampling efficiently evaluating products complex functions siggraph proceedings annual conference computer graphics interactive techniques pages david cline justin talbot parris egbert energy redistribution path tracing siggraph proceedings annual conference computer graphics interactive techniques pages steven collins adaptive splatting specular diffuse light transport rendering techniques proceedings eurographics workshop rendering pages crisan particle filters theoretical perspective sequential monte carlo practice pages abhinav dayal cliff woolley benjamin watson david luebke adaptive frameless rendering rendering techniques proceedings eurographics symposium rendering pages mark dipp erling henry wold antialiasing stochastic sampling siggraph proceedings annual conference computer graphics interactive techniques pages kirill dmitriev stefan brabec karol myszkowski hans-peter seidel interactive global illumination selective photon tracing rendering techniques proceedings eurographics workshop rendering pages douc guillin marin robert convergence adaptive sampling schemes technical report paris dauphine douc guillin marin robert minimum variance importance sampling population monte carlo technical report paris dauphine doucet freitas gordon sequential monte carlo methods practice springer-verlag doucet freitas neil gordon introduction sequential monte carlo methods sequential monte carlo methods practice pages thomas driemeyer rendering mental ray springer edition philip dutr yves willems importance-driven monte carlo light tracing proceedings eurographics workshop rendering pages philip dutr yves willems potential-driven monte carlo particle tracing diffuse environments adaptive probability functions rendering techniques proceedings sixth eurographics workshop rendering pages shaohua fan stephen chenney kam-wah tsui yu-chi lai optimizing control variate estimators rendering computer graphics forum proceedings eurographics shaohua fan stephen chenney yu-chi lai metropolis photon sampling optional user guidance rendering techniques proceedings eurographics symposium rendering pages eurographics association shaohua fan stephen chenney yu-chi lai population monte carlo rendering review jean-philippe farrugia bernard eroche progressive rendering algorithm adaptive pereptually based image metric computer graphics forum proceedings eurographics james ferwerda sumanta pattanaik peter shirley donald greenberg model visual masking computer graphics siggraph proceedings annual conference computer graphics interactive techniques pages walter gilks sylvia richardson david spiegelhalter markov chain monte carlo practice chapman hall glassner principles digital image synthesis morgan kaufmann cindy goral kenneth torrance donald greenberg bennett battaile modeling interaction light diffuse surfaces siggraph proceedings annual conference computer graphics interactive techniques pages gordon salmond smith approach nonlinear non-gaussian bayesian state estimation iee proceedings radar signal processing volume pages eric haines introductory tour interactive rendering ieee computer graphics applications hall experimental determination messeng math halton relative merits correlated importance sampling monte carlo integration proceedings cambridge philosophical society hammersley handscomb monte carlo methods john wiley sons hastings monte carlo sampling methods markov chains applications biometrika paul heckbert adaptive radiosity textures bidirectional ray tracing siggraph proceedings annual conference computer graphics interactive techniques pages hesterberg advanced importance sampling phd thesis stanford tim hesterberg weighted average importance sampling defensive mixture distributions technometrics david immel michael cohen donald greenberg radiosity method nondiffuse environments siggraph proceedings annual conference computer graphics interactive techniques pages henrik jensen global illumination photon maps rendering techniques proceedings eurographics workshop rendering pages henrik wann jensen realistic image synthesis photon mapping peters henrik wann jensen christensen efficient simulation light transport scenes participating media photon maps siggraph proceedings annual conference computer graphics interactive techniques pages james kajiya rendering equation siggraph proceedings annual conference computer graphics interactive techniques pages kalos whitlock monte carlo methods volume basics john wiley sons csaba kelemen aszl szirmay-kalos orgy antal ferenc csonka simple robust mutation strategy metropolis light transport algorithm computer graphics forum proceedings eurographics pages alexander keller ingo wald efficient importance sampling techniques photon map proc vision modelling visualization pages david kirk james arvo unbiased sampling techniques image synthesis siggraph proceedings annual conference computer graphics interactive techniques pages genshiro kitagawa monte carlo filter smoother non-gaussian nonlinear state space models journal computational graphical statistics march thomas kollig alexander keller efficient bidirectional path tracing randomized quasi-monte carlo integration fang hickernell niederreiter editors monte carlo quasi-monte carlo methods pages springer-verlag eric lafortune yves willems bidirectional path tracing proceedings international conference computational graphics visualization techniques compugraphics pages eric lafortune yves willems ambient term variance reducing technique monte carlo ray tracing photorealistic rendering techniques proceedings eurographics workshop rendering pages eric lafortune yves willems tree reduce variance monte carlo ray tracing rendering techniques proceedings sixth eurographics workshop rendering pages mark lee richard redner samuel uselton statistically optimized sampling distributed ray tracing siggraph proceedings annual conference computer graphics interactive techniques pages jun liu rong chen tanya logvinenko theoretical framework sequential importance sampling resampling sequential monte carlo practice pages jun liu monte carlo strategies scientific computing spinger-verlag jun liu rong chen sequential monte carlo methods dynamic systems journal american statistical association barbara meier painter rendering animation siggraph proceedings annual conference computer graphics interactive techniques pages metropolis beginning monte carlo method necia grant cooper editor cardinals chaos reflections life legacy stanislaw ulam cambridge press los alamos science special issue stan ulam book published metropolis ulam monte carlo method journal american statistical association nicholas metropolis arianna rosenbluth marshall rosenbluth augusta teller edward teller equation state calculations fast computing machine journal chemical physics don mitchell generating antialiased images low sampling densities siggraph proceedings annual conference computer graphics interactive techniques pages pierre moral arnaud doucet ajay jasra sequential monte carlo samplers royal statist soc nicodemus richmond hsia gins-berg limperis geometric considerations nomenclature reflectance monograph page ryutarou ohbuchi masaki aono quasi-monte carlo rendering adaptive sampling technical report ibm tokyo research laboratory art owen zhou safe effective importance sampling journal american statistical association james painter kenneth sloan antialiased ray tracing adaptive progressive refinement siggraph proceedings annual conference computer 
graphics interactive techniques pages mark pauly thomas kollig alexander keller metropolis light transport participating media rendering techniques proceedings eurographics workshop rendering pages ingmar peter georg pietrek importance driven construction photon maps rendering techniques proceedings eurographics workshop rendering pages matt pharr greg humphreys physically based rendering theory implementation morgan kaufmann georg pietrek ingmar peter adaptive wavelet densities monte carlo ray tracing skala editor wscg conference proceedings pages werner purgathofer statistical method adaptive stochastic sampling proceedings eurographics pages mahesh ramasubramanian sumanta pattanaik donald greenberg perceptually based physical error metric realistic image synthesis siggraph proceedings annual conference computer graphics interactive techniques pages erik reinhard michael stark peter shirley james ferwerda photographic tone reproduction digital images siggraph proceedings annual conference computer graphics interactive techniques pages jaume rigau miquel feixas mateu sbert contrast measures pixel supersampling proceedings cgi pages springer-verlag jaume rigau miquel feixas mateu sbert entropy-based adaptive sampling proceedings graphics interface pages christian robert george casella monte carlo statistical methods springer-verlag edition donald rubin noniterative sampling importance resampling alternative data augmentation algorithm creating imputations fractions missing information modest sir algorithm journal american statistical association rubinstein simulation monte carlo method john wiley sons christophe schlick adaptive sampling technique multidimensional integration ray-tracing photorealistic rendering computer graphics proceedings eurographics workshop rendering pages peter shirley bretton wade phillip hubbard david zareski bruce walter donald greenberg global illumination density-estimation rendering techniques proceedings eurographics workshop rendering pages peter shirley changyaw wang kurt zimmerman monte carlo techniques direct lighting calculations acm transactions graphics jan jerome spanier ely gelbard monte carlo principles neutron transport problems reading mass addison-wesley pub william stokes james ferwerda bruce walter donald greenberg perceptual illumination components approach efficient high quality global illumination rendering siggraph proceedings annual conference computer graphics interactive techniques pages frank suykens robust monte carlo algorithms multi-pass global illumination phd thesis computer science leuven belgium frank suykens yves willems density control photon maps rendering techniques proceedings eurographics workshop rendering pages aszl ecsi mateu sbert aszl szirmay-kalos combined correlated importance sampling direct light source computation environment mapping computer graphics forum proceedings eurographics szirmay-kalos csonka antal global illumination combination continuous random walk finite-element based iteration computer graphics forum proceedings eurographics aszl szirmay-kalos monte carlo methods global illumination spring conference computer graphics pages invited talk eric tabellion arnauld lamorlette approximate global illumination system computer generated films siggraph proceedings annual conference computer graphics interactive techniques pages justin talbot david cline parris egbert importance resampling global illumination rendering techniques proceedings eurographics symposium rendering pages rasmus tamstorf henrik wann jensen adaptive sampling bias estimation path tracing rendering techniques proceedings eighth eurographics workshop rendering pages steven thompson george seber adaptive sampling york wiley luke tierney note metropolis-hastings kernels general state spaces annals applied probability parag tole algorithms progressive computation accurate global illumination phd thesis cornell parag tole fabio pellacini bruce walter donald greenberg interactive global illumination dynamic scenes siggraph proceedings annual conference computer graphics interactive techniques pages acm press eric veach robust monte carlo methods light transport simulation phd thesis stanford eric veach leonidas guibas bidirectional estimators light transport rendering techniques proceedings eurographics workshop rendering pages eric veach leonidas guibas optimally combining sampling techniques monte carlo rendering siggraph proceedings annual conference computer graphics interactive techniques pages eric veach leonidas guibas metropolis light transport siggraph proceedings annual conference computer graphics interactive techniques pages gregory ward adaptive shadow testing ray tracing photorealistic rendering computer graphics proceedings eurographics workshop rendering pages gregory ward radiance lighting simulation rendering system siggraph proceedings annual conference computer graphics interactive techniques pages gregory ward paul heckbert irradiance gradients proceedings eurographics workshop rendering pages gregory ward francis rubinstein robert clear ray tracing solution diffuse interreflection siggraph proceedings annual conference computer graphics interactive techniques pages appendix statistical proofs relationships ddis mis dms set sampling techniques deterministic defensive importance sampling ddis multiple importance sampling mis deterministic mixture sampling dms provide constructing estimators combine samples ddis linear combination samples mis weighting methods combine samples dms incorporates correlated sampling importance sampling derivation shown ddis special case mis mis balance heuristic weights special case dms ddis summationtextmj jpj summationtextmj takes samples density xji independent estimator ddis iddis msummationdisplay njsummationdisplay xji xji plugging summationtextmk kpk nkn equation iddis msummationdisplay njsummationdisplay xji summationtext kpk xji msummationdisplay njsummationdisplay xji summationtext xji msummationdisplay njsummationdisplay xji summationtext nkpk xji msummationdisplay njsummationdisplay njf xji summationtext nkpk xji mis balance heuristic weights number samples summationtextmj xji independent estimator mis imis msummationdisplay njsummationdisplay xji xji summationtextmj balance heuristic weights mis njpj summationtextm nkpk mis estimator balance heuristic imisbal msummationdisplay njsummationdisplay njpj xji summationtext nkpk xji xji xji msummationdisplay njsummationdisplay njf xji summationtext nkpk xji summationtextmj dms summationtextmj jpj summationtextmj takes samples density xji independent estimator dms idms msummationdisplay njsummationdisplay xji summationtextmk kpk xji xji msummationdisplay msummationdisplay njsummationdisplay xji summationtextmk kpk xji summationtext ipi xji msummationdisplay set plug njn idms msummationdisplay njsummationdisplay xji summationtext xji msummationdisplay njsummationdisplay njf xji summationtext nkpk xji iddis equation imisbal equation ddis mis balance heuristic weights difference ddis mis coefficients ddis determine samples generated combine samples weights mis combine samples comparing imisbal equation idms equation obvious mis balance heuristic weights special case dms means dms optimal mis balance heuristic 
screw-transform manifolds camera calibration russell alan manning dissertation submitted partial fulfillment requirements degree doctor philosophy computer sciences wisconsin madison copyright russell alan manning rights reserved discard page table contents page notation abstract viii overview camera calibration applications camera calibration calibration manifold intersection contributions dissertation structure dissertation history context image-based rendering sampling versus simulation calibration scene reconstruction introduction camera calibration multiview geometry platonic labels coordinate systems pinhole cameras basic mathematical definition physical interpretation history physical derivation pinhole camera matrix meaning internal calibration concepts projective geometry epipolar geometry scene reconstruction hierarchy scene reconstructions hierarchy camera reconstructions triangulation projective reconstruction fundamental matrix absolute quadric metric reconstruction page finding point correspondences practice finding fundamental matrices practice screw-transform manifolds screw transformation views upgrading weak calibration parameterizing rising-turntable scenarios parameterizing relative calibration screw-transform manifolds calibration kruppa-constraint manifold calibration kruppa-constraint manifolds stratified calibration modulus constraint modulus-constraint manifolds non-general camera motions classifying pairwise camera motions turntable motion transfocal motion tests classifying pairwise camera motions manifold intersection algorithms surface fitting voting-based algorithm monte-carlo markov-chain approach experimental evaluation calibration screw-transform manifolds experimental results surface-fitting algorithm synthetic data sets nomenclature answer question algorithm correctness answer question algorithm speed answer question advantage extra views answer question number mutual intersection points answer question performance real cameras implementation details experimental results mcmc-based algorithm synthetic data sets nomenclature answer question algorithm correctness answer question algorithm speed iii appendix page answer question advantage extra views answer question choosing mcmc parameters answer question comparison surface-fitting algorithm calibration views calibration image-based rendering dynamic scenes overview screw-transform manifolds dynamic scenes linear algorithm affine calibration scene motion introduction notation preliminary concepts motion-based affine calibration generalizing multiple objects experiments synthetic data experiments real data conclusion view interpolation dynamic scenes apparent linear motion introduction static view morphing dynamic view morphing finding relative camera calibration applications experimental results conclusion view interpolation turntable motion turntable sequences conclusion summary accomplishments conclusions bibliography appendices appendix mathematical details appendix implementation details appendix page index discard page notation matrix capital latin letter math bold font matrix dimensions capital greek letter math bold font vector lower-case latin letter math bold font real number lower-case latin greek letter math italic font camera capital latin letter math italic font cameras labeled letters numbers camera matrix camera entry row column matrix equality scale quantities equal nonzero scale factor assignment operator symbol left assigned def definition symbol left defined equal def definition scale symbol left defined equal nonzero scale factor n-tuple vector written horizontally matrix notation space spanned set vectors ransac algorithm referred short title small caps font psif variable pseudocode bold teletype font combination choose assertion statement number hold platonic label concept math italic font platonic direction vector platonic vector measured coordinate system note set single vector platonic vector measured coordinate system abbreviated form cases meaning clear tildewidep homogeneous representation position camera projection function verorigin variable assigned descriptive single letter computer program slanted latin letters frob function assigned descriptive single letter standard practice functions cos log latin letters math variation cent part n-tuple defining camera written function latin letters math variation screw-transform manifolds camera calibration russell alan manning supervision professor charles dyer wisconsin-madison dissertation concerns mathematical theory screw-transform manifolds camera calibration camera calibration function maps scene points image points photographs camera photographs positions exists pairwise constraint called fundamental matrix computed directly images photographs captured camera fundamental matrix induces surface calibration space called screw-transform manifold manifold represents internal calibration camera acquiring pairwise fundamental matrices compute screw-transform manifolds internal calibration camera member manifold finding intersection point manifolds camera calibration determined process determining calibration directly images camera called calibration contributions dissertation include theory screw-transform manifolds original algorithms determining mutual intersection points collection manifolds papers written calibration previous methods posed solutions global minima objective function performing global optimization problematic easy locate local minimum finding global minimum cases attraction basin global minimum small algorithm essentially guess solution order find approaches created part dissertation called stm-surfit avoids optimization altogether locates global minima solutions internal calibration problem single pass running vii modern home computer general approach avoiding difficulties optimization wider applicability camera calibration tutorial multiview geometry assumes knowledge linear algebra included provide mathematical background related history previous work calibration image-based rendering presented part theory screw-transform manifolds theorem introduced partitions monocular view pairs categories based underlying screw displacement camera simple test determining category addition methods calibration image-based rendering dynamic scenes presented image-based rendering techniques require camera calibration limited applicability adding growing body evidence camera calibration image-based rendering charles dyer viii abstract dissertation concerns mathematical theory screw-transform manifolds camera calibration camera calibration function maps scene points image points photographs camera photographs positions exists pairwise constraint called fundamental matrix computed directly images photographs captured camera fundamental matrix induces surface calibration space called screw-transform manifold manifold represents internal calibration camera acquiring pairwise fundamental matrices compute screw-transform manifolds internal calibration camera member manifold finding intersection point manifolds camera calibration determined process determining calibration directly images camera called calibration contributions dissertation include theory screw-transform manifolds original algorithms determining mutual intersection points collection manifolds papers written calibration previous methods posed solutions global minima objective function performing global optimization problematic easy locate local minimum finding global minimum cases attraction basin global minimum small algorithm essentially guess solution order find approaches created part dissertation called stm-surfit avoids optimization altogether locates global minima solutions internal calibration problem single pass running modern home computer general approach avoiding difficulties optimization wider applicability camera calibration tutorial multiview geometry assumes knowledge linear algebra included provide mathematical background related history previous work calibration image-based rendering presented part theory screw-transform manifolds theorem introduced partitions monocular view pairs categories based underlying screw displacement camera simple test determining category addition methods calibration image-based rendering dynamic scenes presented image-based rendering techniques require camera calibration limited applicability adding growing body evidence camera calibration image-based rendering chapter overview perspective object sheet glass surface marked things glass leonardo vinci camera calibration fig depicts devices aimed stonehenge-like menhir device rectangular window eyepiece consisting small open loop wires strung window form grid eyepiece gazing window menhir positions menhir assigned coordinates grid process depicted figure dashed lines drawn lower left corner menhir center eyepiece 
devices appeared renaissance mathematically analogous simple type modern camera called pinhole camera important component modeling complicated cameras term pinhole camera dissertation generic label devices real pinhole cameras pinhole camera position orientation defines mapping called camera calibration positions world positions local grid fact camera calibration studied continuously early decade daguerreotypes calotypes publicly exhibited indicator usefulness difficulty determining main subject dissertation real pinhole camera wire grid physical analogy measurements made photographs figure pinhole cameras approach determining camera calibration developed graduate student approach classified calibration calibration determined directly measurements acquired wire grid measurements photographs information world camera makes automatically calibrate real camera information contained photographs takes self-calibration techniques applied video stream captured hand-held camera determine orientation position camera frame sequence information video stream approach differs significantly earlier self-calibration algorithms important advantages previous algorithms geometric constraints called epipolar geometry define nonlinear objective function global minimum camera calibration general approach problematic global optimization complicated objective functions difficult global extremum attraction basin small optimization algorithm essentially guess correct answer approach define objective function epipolar geometry constraints define collection surfaces camera-calibration space surface representing set legal camera calibrations mutual-intersection points collection surfaces represent legal calibrations camera standard global optimization problem exchanged direct manifold-intersection problem demonstrate solved efficiently robustly presenting algorithm accompanying mathematics screw-transform manifolds dissertation emphasizes applications camera calibration image-based rendering modeling discusses larger issues true meaning image-based rendering limitations global optimization upside computationintensive algorithms summaries section section comprehensive list contributions applications camera calibration camera calibration primary application determining positions world process called triangulation menhir fig illustrates triangulation works lower left corner menhir sited device determine grid coordinates corner calibration function device sketch dashed lines portrayed figure intersecting dashed lines determine location corner menhir scene reconstruction triangulation appeared early history photogrammetry science photographs measurement measure buildings construction sites survey battlefields aim artillery measure heights mountains archaeological application document ruins persepolis scene reconstruction triangulation modern computer graphics ways acquire models real objects perform motion capture place synthetic objects real scenes movie special effects marr paradigm computer vision acquiring full partial models objects viewed considered key step object recognition scene understanding three-dimensional models prove scene understanding acquired significant evidence psychology human beings understand estimating structure application camera calibration machine vision determination ego motion meaning camera position orientation world time robotics triangulation plenoptic modeling note areas fall rubric computer graphics actively investigated machine vision researchers distinguish fields computer vision concerned image understanding computer graphics concerned image creation important computer graphics concept requires camera calibration plenoptic modeling refers modeling light passes point space direction modeled information generate images world constructing models examples plenoptic modeling real photographs published camera calibration makes allowing rays light pass camera grid tracked major application photogrammetry computer graphics techniques combining photographs make larger synthetic photographs called mosaics goal mosaicing make synthetic photographs correct sense obtained single wide-angle camera mosaicing create detailed maps aerial views terrestrial maps maps surface moon create panoramic views single viewing position surface mars viking probes mosaicing limited form plenoptic modeling camera calibration assist creating high-quality mosaics mosaicing plenoptic modeling scene reconstruction techniques image-based rendering subject discussed detail chapter importance dissertation calibration manifold intersection mentioned earlier camera-calibration method self-calibration method meaning calibration determined information present photographs captured camera photographs object locations exists epipolar constraint views represented fundamental matrix detailed explanations terms found chapter time fundamental matrix calculated pair views places constraints calibration constraints camera calibration calibration located calibration space imposing constraints limit calibration position manifold calibration space constraints meaning manifolds determine camera calibration finding mutual-intersection point manifolds order make approach calibration work practice efficient robust methods intersecting collections manifolds developed chapter methods computationally intensive avoid pitfalls global optimization method called surface fitting trapped local minima alternative general-camera self-calibration algorithms involve global optimization objective function fail attraction basin global minimum small shortcuts optimizing complicated objective functions global extrema potentially hidden full solutions inherently involve computations note term computationally intensive relative existing hardware century square root number computed hand iterations newton method square root finding reasonable computation perform early century analog computers commonly perform computations feasible hand analog torpedo data computers developed aiming torpedoes submarines banks analog calculators operated people perform calculations manhattan project shortly digital computers invented metropolis algorithm published algorithm randomness part computation inefficient algorithm digital computers simply computationally intensive monte carlo methods successfully applications years hough torpedo fired moving vehicle vehicles moving directions speeds torpedo fired straight ahead submarine curved trajectory target guided gyroscope computations involved aiming device significant published voting method automatically locating straight-line paths subatomic particles moving bubble chambers hough method standard computer vision techniques pushed limit abilities computers created larger point made computer hardware powerful algorithms infeasible time feasible important design algorithms today computers tomorrow directly intersecting manifolds find camera calibration case point approach feasible typical hardware due memory computational requirements run modern home computer related claim made algorithm designer mind potential hardware limited feasible past hardware designed combination algorithms biological vision systems extremely reliant specialized hardware human brain devoted vision achieve comparable performance machine vision radically algorithms designed combination hardware make algorithms feasible final point made work dissertation global optimization panacea simply expressing solution problem terms global minima objective function problem solved large number machine vision papers based approach global optimization represent ideal solution cases global objective provably easy determine convex function researchers attempt prove empirically analytically objective functions created feasible solve demonstrated dissertation good alternatives global optimization exist problems needing weaken modify problem contributions dissertation dissertation contributions theory practice camera calibration image-based rendering non-linear optimization mathematical theory screw-transform manifolds stm-surfit algorithm calibration general pinhole camera algorithm derived theory screw-transform manifolds global optimization finds potential calibrations single pass runs quickly conjunction ransac great robustness noise theorem partitioning pairwise rigid displacements natural categories simple test category algorithms manifold intersection extensive experimental evidence showing performance stm-surfit related algorithms experiments demonstrate things high-quality scene reconstructions calibration provided input data high quality empirical demonstration calibration views solutions lowest proven bound solutions algorithms image-based rendering dynamic scenes earliest published methods topic linear algorithm affine camera calibration dynamic scenes apparent linear motion demonstration direct intersection manifolds form practical advantageous alternative nonlinear optimization conditions structure dissertation 
overview chapter chapters read prior knowledge chapter presents history image-based rendering camera calibration purpose present facts past research express opinions development ultimate significance fields chapter complete tutorial multiview geometry ground target audience graduate students machine vision computer graphics exposure multiview geometry linear algebra assumed projective geometry avoided chapters read independently dissertation prove helpful students interested area heart dissertation chapters chapter presents mathematics screw-transform manifolds chapter presents general-purpose algorithms finding mutual intersection points collection manifolds combining ideas chapters leads complete algorithm calibration chapter demonstrates performance algorithm simulated real data sets chapter calibration issues relation dynamic scenes methods presented self-calibrating cameras information present dynamic scenes algorithms presented performing image-based rendering dynamic scenes calibration information results evidence negative sense calibrated cameras ibr techniques chapter detailed technical summary contributions dissertation appendices provided technical derivations mathematics screw-transform manifolds removed chapter order make chapter accessible readable appendix key implementation details manifold intersection algorithms chapter chapter history context image-based rendering sampling versus simulation conventional wisdom paradigm creating computer graphics called image-based rendering ibr appeared early starting landmark paper chen williams chapter meaning history image-based rendering presented argued perspective history ibr existed part larger trend engineering extending bounds computer graphics general ibr concerns methods converting pre-existing highly-detailed realistic images photographs realistic images pre-existing images called views images called virtual views synthetic views problem chen williams considered specifically views photographs highly-detailed computer graphic images generated rendering algorithm goal generate interpolation sequences pre-existing views manner efficient run real-time opposed algorithm generated views interpolation sequence series images forming smooth transition views task creating interpolation sequences view interpolation return subject image-based rendering existed chen williams forms formal designation paradigm classic realistic pre-existing images create realistic computer graphics texture mapping originated texture mapping realistic-looking computer graphic image wood floor generated mapping photograph surface real wood floor simple geometric model floor plane shortly invention texture mapping catmull technique reflection mapping environment mapping published blinn newell environment mapping image environment surrounding object rendering object instance object mirror surface surrounding environment reflected surface adding sense realism diffuse surfaces affected mirrored surfaces reflect incoming light differently environment mapping great success movie special effects inserting synthetic objects real scenes mapping surrounding real environment movie set surface computer-graphic model computer-generated object made part original scene meet perceptual expectations viewers movie original work blinn newell environment map hand-drawn computer graphic image work instance movies photographs real environments distinguished work chen williams earlier methods give impetus graphics paradigm extent views texture environment mapping models created rendered traditional manner vertex coordinates surface normals views add level detail hard model specifically photograph wood floor filled details grain wood variations color knots scratches dirt patina effects covering model texture drawn photograph model instantly details present photograph needing specifically model dirt scratches contrast paper chen williams dispensed traditional models rendered views directly views models synthetic views generated chen williams physically correct meaning arguably information existed create projective reconstruction projective reconstruction implicitly explicitly computed execution algorithm shape properties lighting properties generated models landmark paper published year earlier work chen williams beier-neely morphing algorithm algorithm generate computer graphic images portraying smooth transition existing photographs generating interpolation sequence photographs real scenes gave sequence high level realistic-seeming detail practical create hand traditional computer graphics paradigm beier-neely algorithm required computational power comparison apparent realism results guarantee interpolation sequences physically correct respect underlying model scene chen williams work noted beier neely algorithm starting image warping morphing years prior private companies producing commercials movie special effects private companies algorithms produced researchers working independently early graphics researchers started realize highly-detailed computer graphics created manner existing highly-detailed images real photographs computer graphics images generated computationally expensive algorithms ray tracing radiosity synthetic imagery physically correct paper chen williams simply realistic-looking detail morphing warping made image-based rendering paradigm distinct traditional computer graphics emphasis acquiring detail existing images generating detail elaborate models physical simulation years researchers disparate fields general conclusion sampling nature cases efficient simpler desirable simulating nature prime electronic music devices electronic organs built-in synthetic drum machines started home market machines create cymbal-like sound passing random electronic white noise series filters electronic organs emulate wide range musical instruments electronic tricks effect synthetic sounding electronic instruments made sampled sounds produced real instruments simply played back producing effect essentially identical original instrument examples areas voice synthesis motion capture research performed physically simulate human voice box artificially replicate phonemes dudley work simplest turns method speech synthesis sample phonemes produced human speakers recombine produce arbitrary words make computer graphics realistic movement facial expression attempt model muscles physics motion easier record real movement people animals attach data computer models highly-realistic facial animation short movie jester achieved manner researchers worked blending reshaping captured motion data create motions voice synthesizers recombine phonemes pronounce arbitrary words wake chen williams number papers published imagebased rendering sampling rendering research ibr point branched directions linear path development present survey important results series disjoint micro-sections micro-section includes title indicating content convenient micro-sections sufficient read order listing exhaustive intended give reader sense wide variety work ibr importance field development mosaicing mosaicing szeliski process stitching photographs make large photograph views cases synthetic sound sought success album switchedon bach released genre music space share common optical center mosaic physically-correct view optical center mcmillan bishop process create cylindrical views seminal paper plenoptic modeling alternatively mosaics created sequences orthographic views make large orthographic view traditional application photogrammetry making maps burt adelson image pyramids remove seams piecing images mosaic specifically interested creating seamless mosaics space-exploration imagery sawhney studied problem correcting noise point correspondences creating very-large-scale spherical mosaics szeliski shum studied problems large-scale mosaics local deformations correct ghosting artifacts video brush system create mosaics real time incrementally adding central slice successive view growing mosaic rousso projection cylinder create lateral mosaics forward-looking views captured camera moving forward irani image registration increase image resolution authors utilized scene motion mosaics irani work creating mosaics video sequences scene movement viewed context final large-view mosaic davis removed motion create static mosaics dynamic scenes caspi irani motion register views visible overlap development view interpolation view synthesis view interpolation process creating sequence images representing smooth continuous transition views image morphing view interpolation 
morphing create short special effects stylistic imagery movies commercials music videos creators commercial morphing product elastic reality awarded oscar technical achievement view interpolation profound impact establishment image-based rendering important discipline recently kanade view interpolation part virtualized reality project joint view triangulation technique approximately solving dense correspondence problem implicit view interpolation create realistic-looking interpolation sequences creating physically-correct view interpolation sequences extra challenge formal papers interpolation objective ullman work arguably earliest view interpolation created physically-correct interpolation sequences orthographic views seminal paper chen williams commonly birth image-based rendering fits category seitz dyer demonstrated technique making beier-neely morphing algorithm physically correct manning dyer extended view morphing technique dynamic scenes apparent linear motion interpolating environment maps view synthesis closely related view interpolation difference interpolation sequences necessarily goal avidan shashua demonstrated ability synthesize physically-correct views arbitrary viewing positions uncalibrated views trilinear tensor similar work based fundamental matrices stable published laveau faugeras irani anandan demonstrated view-synthesis technique require multiview relationships fundamental matrices plane views required ideally scene discrete objects separated empty space development plenoptic modeling plenoptic modeling describes ibr techniques rays light entering region directions directly stored synthesize views mcmillan bishop seminal paper plenoptic modeling initial driving forces ibr idea plenoptic function formalized early important technique light field rendering closely-related lumigraph technique appeared year mcmillan bishop paper light field rendering simply computerized hologram technique user view scene direction random-access manner person tilt hologram views scene smoothly interpolating closely-spaced views determination point correspondences optical flow drawbacks technique precise camera calibration large amount data stored great advantage scene reconstruction unnecessary difficult correspondence problem solved light field rendering produces highly-compelling results subsequent work produced nyquist-like limit number views required light field rendering demonstration plenoptic modeling performed conjunction calibration development image-based modeling term image-based rendering emerged evident image-based rendering techniques involved scene reconstruction term image-based rendering modeling ibrm replace earlier phrase image-based modeling building scene models photographs acquisition devices ccd goal high-quality models computer graphics term model refer shape light-reflectance properties physical attribute incorporate engineering tool improve model acquisition process utilized cameras calibrated motion cameras scene objects controlled point correspondences precisely acquired structured light tool acquiring precise models laser range scanner cybertron scanners commonly ibrm research digital michaelangelo project model acquisition simple low-cost equipment self-calibration play role seminal facade system debevec published demonstrated power models approximate models ibr scene reconstruction views photogrammetry mid century facade system accompanying demonstration movies convinced people ibrm technique special effects designer highly-successful movie matrix decided ibrm movie demonstrations produced facade hired key researchers facade project implement special effects facade system small number calibrated views scene captured human user machine assistance simple geometric shapes rectangular prisms planes pyramids approximately model views system architecture made simple geometric shapes scene approximately modeled virtual views scene acquired arbitrary positions arbitrary virtual cameras complete effect texture mapped scene models blending textures nearest views model texture depended viewing position leading view-dependent texture reason approach works human brain good estimating scene shape visual cues shadows present textures simple geometric models virtual views produced facade looked generated highly-detailed models retained details original views image-based modeling standard tool movie special effects approximate scene models constructed camera views create virtual views angles place synthetic objects scene time expensive survey crews acquire precise sparse models film sets assist special effects addition expense required lot preplanning prevented spur-of-the-moment movie dinosaur required outdoor shots mesas located movie studio survey crews flown site acquire local geometry large white markers physically scene tie surveying information visuals markers digitally removed film theory calibration reconstruct scene images mesa surveying area made last-minute easy accomplish development image-based lighting image-based lighting involves acquiring illumination information real scenes information light synthetic renderings alternatively concern synthetic lighting real objects compositing order match lighting destination scene image-based lighting necessarily image-based rendering fits larger paradigm sampling simulation development images rademacher bishop produced stylistic images conjunction compression video streams camera moved computer-generated scene information camera calibration stored center strip view central strips pasted sequence formed unusual compelling images mosaicing techniques properties pipe-projection mosaicing rousso interesting note images century museums document flat images designs ancient pottery fig achieved instance placing vase turntable recording vase special camera captures thin vertical strip instant vase rotated turntable camera film translated horizontally produce final flat image depicting design vase curved surfaced development texture synthesis texture synthesis probability distribution colors intensities acquired small sample texture synthesize texture large area key paper area due effros leung based observation shannon development view augmentation virtual reality view augmentation placement synthetic object real view key method special effects movies provide information person viewing real scene head-mounted display key problems keeping track camera calibration person view external calibration applications reconstructing scene viewed kanade developed stereo system calculate scene depths real-time place synthetic objects scene correct occlusions development hallucination synthesis techniques baker kanade created technique termed hallucinating faces technique probabilistic information acquired large database faces fill missing details images faces face partially occluded photograph database complete missing portion technique applied face recognition related ibr techniques exist synthesizing classes objects blanz vetter acquired range-scan data faces hundreds subjects treated data vector space spanned small number significant basis vectors models faces database effectively synthesized linear combinations basis vectors approach demonstrated creating face models famous celebrities single photograph person lighting scene photograph estimated face vector space searched find good fit lighting shadows evident image similar approach database face images cootes edwards taylor synthesize expressions face view make face older younger blend face blending male female face development time dilation shechtman demonstrated technique regular video cameras orthographic configuration create slow-motion video sequence dynamic scene cameras filming frames produce frames-per-second slow-motion sequence calibration scene reconstruction mathematicians engineers studied camera calibration shortly birth photography calibration key component photogrammetry science measuring distances photographs related phenomena generically called photogrammes mathematics photogrammetry originated study perspective painting renaissance questions perspective lead development projective geometry researchers girad desargues blaise pascal mid century poncelet formalized study projective geometry eary century projective geometry photogrammetry fields confused horn points real cameras constraints projective geometry models general nature projective geometry lead undesirable unnecessary ambiguity horn states projective geometry rarely photogrammetry citing wolf slama mathematicians published work specifically 
related camera calibration photogrammetry century hauck perspective photogrammetric constructions neue konstruktionen der perspektive und photogrammetrie finsterwalder geometric foundation photogrammetry die geometrischen grundlagen der photogrametrie kruppa working framework projective geometry made important contributions photogrammetry early century kruppa equations commonly today specially-constructed equipment part photogrammetry photogrammetrists started automated techniques called analytic methods beginning analytic methods made intensive computations turn opened approaches photogrammetry discussion end section era analytic methods succeeded digital era digital images replaced photographs algorithms designed utilize ever-increasing computational power digital computers early digital era photogrammetry longuet-higgins published seminal paper camera calibration computer algorithm reconstructing scene projections paper introduced linear algorithm finding external calibration cameras internal calibration information camera views method involved determination matrix essential matrix views paper longuet-higgins set motion chain research leading ultimately camera calibration dissertation springs important chain landmark papers published faugeras european conference computer vision paper introduced fundamental matrix views general form essential matrix require knowledge internal calibration paper demonstrated physically-valid views scene created existing uncalibrated perspective views needing build model scene parlance faugeras performed projective scene reconstruction order create views important point calibrate cameras build models resembling original scene note ullman published similar result uncalibrated orthographic views simpler uncalibrated perspective views paper coauthored luong maybank introduced possibility camera calibration mentioned earlier calibration process calibrating camera images captured camera calibration move camera scene taking pictures determine camera position orientation internal properties directly resulting photographs kinds calibration algorithms requirements producing amounts information algorithm faugeras produced internal camera properties assumed calibration papers camera modeled pinhole camera algorithm built kruppa constraints published utilized fundamental matrix fundamental matrix part larger group multiview relationships began late trilinear tensor called trifocal tensor ultimately emerged section stein relates origins trilinear relationships trilinear tensor relates camera views exist relationships higher numbers views quadrifocal tensor ultimately equivalent trilinear tensors trilinear tensor fundamental matrix determined point line correspondences views combinations point line correspondences stein performed work direct determination optical flow trilinear tensors closely-spaced views brodsky performed related research calibration optical flow general closely-spaced views appears multiview relationships require knowledge point line correspondences calibration active area research paper faugeras reasons interest topic long-held belief marr paradigm held scene reconstruction important part image understanding camera calibration scene reconstruction calibration provide missing step converting images directly models growing importance image-based rendering emerged separate discipline time calibration calibration makes model acquisition easier model building important ibr section reason calibration mathematical topic results calibration accompanied proof correctness perfect input data papers calibration tend produce eternal results correct part scientific knowledge forever contrasts papers machine vision tend heuristic nature summary developments calibration meant give reader sense wide variety work topic exhaustive items listed prior unrelated faugeras work pollefeys technical overview developments calibration terminology summary defined chapter methods involve finding external calibration position orientation camera relative camera simply considered structure-from-motion algorithms calibration algorithms included reasons involving relationship full calibration algorithms development direct calibration direct calibration determination metric internal calibration directly pairs fundamental matrices intermediate steps projective scene reconstruction affine calibration relative camera orientations determined direct calibration term exists literature created contrast style calibration stratified calibration original calibration method faugeras category method manning dyer hartley zisserman express pessimism direct calibration successful practice development stratified calibration contrast direct calibration stratified calibration proceeds series stages calibration determined stage projective reconstruction scene including cameras performed projective reconstruction upgraded affine finally metric advantage approach views share measurement basis step algorithm instance plane infinity absolute conic located position camera prime stratified calibration modulus-constraint approach pollefeys van gool pollefeys asserts stratified approach produces calibration results direct method faugeras development projective weak calibration stage stratified calibration projective reconstruction projective reconstruction camera views fundamental matrix views case views weakly calibrated relative research determining fundamental matrices epipolar geometry directly camera views research projective calibration development affine calibration affine reconstruction occurs reconstructed plane infinity coplanar true plane infinity phase stratified reconstruction reconstructed cameras affine reconstruction affinely calibrated affine reconstruction close metric reconstruction most-complete reconstruction camera views solely variety linear interpolation scene motion view interpolation sequences cases affine calibration determined metric calibration views separated translational displacement authors representative work affine calibration development orthographic affine views orthographic camera views affected distance scene perspective effects views captured distance telephoto lens y-coordinates views represent direct measurements scene assuming square pixels tomasi kanade produced elegant factorization method calibration scene reconstruction orthographic views shapiro extended approach general affine cameras non-square pixels authors shown affine views directly calibration instance ullman showed camera views created directly orthographic views interpolating point correspondences koenderink van doorn showed affine scene reconstruction affine views development absolute quadric triggs introduced studied absolute quadric quadric represented matrix conic represented matrix matrix encodes information internal camera calibration location plane infinity calibration triggs self-calibration algorithm required nonlinear optimization absolute quadric discussed section detailed provided absolute quadric calibration main advantages mathematically simple cameras calibrated internally identical constraints property basis marr-prize-winning paper pollefeys koch van gool property arises absolute quadric makes relate internal calibration parameters directly projective camera matrices drawbacks absolute quadric nonlinear optimization argued manning dyer note assumptions made internal calibration linear calibration algorithm subtle relationships absolute quadric internal calibration projective camera matrices section constraints arising numerically unstable introduction bias selected camera view absolute quadric calculated considerations part horn general complaint projective geometry camera calibration nonetheless absolute quadric popular calibration development mosaics mosaics theoretically created uncalibrated views knowing calibration stabilize errors due noise lead natural-looking output hartley pointed single camera fixed internal parameters create mosaic single optical center camera calibrated views utilized mcmillan performed limited form calibration conjunction mosaicing development critical motion sequences sturm investigated critical motion sequences collections monocular camera views captured camera calibration yield unique results pollefeys expanded list critical motion sequences development variable focal length self-calibration work assumes camera constant internal parameters generally good assumption short time sequences closely-spaced views internal parameter change camera focal length due zooming pollefeys studied problem calibration unknown focal length camera zooms change principal point focal length fortunately determining principal point incorrectly affect scene reconstruction development radial lens distortion calibration research assumes pinhole camera model account lens distortions effects exist real camera views prominent lens distortion effect radial distortion called fish-eye barrel pincushion distortion 
projected light moved image center based distance image center stein showed -view trilinear tensor determine radial distortion calibration requires views means radial distortion internal calibration determined camera views farid discussed possibility determining radial lens distortion directly power spectrum image sawhney kumar mosaicing correct radial distortion development dynamic scenes multiple independently-moving objects perform calibration investigated manning dyer fitzgibbon zisserman wolf shashua single moving object present scene static background information single moving camera viewing static scene multiple moving objects introduces information due motion objects relative stein accumulation motion information time provide point curve correspondences views subsequently assist camera calibration development stereo rigs pair cameras rigidly connected unchanging relative orientation called stereo rig cameras mounted rigidly robot stereo rigs interest recovery dense stereo correspondence information typically stereo rig moved scene calibration cameras determination relative orientations performed subsequent views researchers demonstrated approaches calibration stereo rigs deriche investigated weak calibration stereo rigs quan sturm quan zisserman studied affine calibration stereo rigs horaud csurka investigated metric calibration stereo rigs stein investigated calibration external parameters optical flow -camera rig manning dyer demonstrated linear algorithm affine calibration stereo rig presence apparent linear scene motion development nonstandard cameras calibration work assumed pinhole camera model work involving alternative camera geometries catadioptric cameras extra parameters usual parameters camera calibration curvature mirror surface geyer daniilidis investigated problem kinds catadioptric cameras authors investigated potential benefits cameras development horn critique projective geometry calibration horn advocated quaternions solving relative orientation problem problem finding angle rotation direction displacement cameras internal calibration horn approach iterative involves direct physical modeling cameras stated earlier projective geometry cases generalizes calibration problems leading spurious solutions reason horn questioned unnecessary cases leads linear algorithms unconstrained calibration internal parameters projective geometry potential solutions considered chapter introduction camera calibration multiview geometry chapter presents formal concepts notation remainder dissertation serves stand-alone introduction multiview geometry goal basic advanced mathematics linear algebra favor projective geometry providing narrative tutorial subject matter presented series disjoint vignettes outline style mathematical definitions examples comments make easier reader refer back meaning individual concepts dissertation reader skip topics familiar complete discussion concepts related camera calibration image-based scene reconstruction excellent recent books hartley zisserman faugeras luong older book faugeras concepts presented sufficiently basic covered general machine vision textbooks addition recent dissertations relating calibration scene reconstruction provide alternative presentations introductory material resources listed build presentations projective geometry mathematical concepts tensors scientists exposed stated earlier major goal dissertation present material alternative manner basic mathematics minimum formal projective geometry platonic labels coordinate systems tip nose tip nose instant time represents position space tip nose platonic concept exists abstract sense concept assign label denote concept label called platonic label dissertation concept labeled represents position space specialized notation label platonic vector serves denote platonic concept position space give specific meaning coordinate systems fig shows position platonic concept demonstrates specific coordinate systems measuring position measuring position coordinate systems expressing idea languages idea remains words platonic labels denoting idea independently representation note coordinate system platonic concept assign platonic label chapter lower case latin letters math font platonic labels coordinate systems expedient typesetting produces formulas easier read notation denote platonic vector measured coordinate system note chapters capital letters coordinate systems times chapter simpler notation explicit platonic labels key notational device dissertation concept assigned platonic label platonic labels concepts screw displacement scenario image plane pinhole camera image coordinate system lines planes positions directions computer scientists analogies platonic labels analogy denotational semantics computer program language exists abstractly precise meaning assigned figure left position center coordinate system measured alternative coordinate system language constructs program platonic concept applying denotational semantics assigning coordinate system platonic vector analogy specific platonic labels dissertation instances structures computer languages pascal coordinate system thought data structure origin basis vectors coordinate system data fields structure struct coordinatesystem vector origin vector basisx basisy basisz platonic label coordinate system variable representing instance data structure coordinatesystem alternative coordinate systems variables labels underlying structure notation orig represent parts platonic concept denoted case orig origin coordinate system note origin orig platonic vector notation orig origin coordinate system measured coordinate system computer programmers preferred full-blown functional notation originof easy-to-remember mnemonic member-reference notation origin originof chosen mathematical-style notation analogous standard cos log notation cosine logarithm brevity labels convenience formulas keeping mathematical customs platonic labels uppercase latin letters math italics cases expedient lowercase letters mentioned lowercase letters denote coordinate systems chapter subscripts platonic concepts convenient number cameras viewing scene convenient number cameras refer camera platonic label index standard mathematical usage letters indices letters platonic labels integers confusion result reader aware platonic vectors express vector coordinate system notation number platonic label notation notation represent instance coordinate vector x-coordinate vector notation coordinates general superscript components vectors z-coordinate pinhole cameras present abstract mathematical definition pinhole camera discussing history physical meaning devices relationship cameras lenses basic mathematical definition pinhole camera real device dissertation term refer mathematical abstraction device refer function maps section develops abstract definition pinhole camera introduces important concepts world coordinates image coordinates camera coordinates definition pinhole camera pinhole camera triplet rotation matrix upper-triangular non-singular matrix comment intuitive meaning camera triplet vector represents position camera matrix tilt camera relative chosen coordinate system matrix describes internal characteristics camera definition optical center platonic vector labels optical center camera definition scene scene part universe consideration definition camera view term view formal generic expression light collected camera typically modern camera photographic film charge-coupled device ccd capture light photograph video image camera view views dissertation flat authors considered lower-dimensional views comment views versus cameras camera capture views scene positions logical call triple view camera term camera follow standard usage dissertation term camera camera instant time location orientation term view refer camera sees means object definition camera projection function informally projection function camera function maps positions scene positions camera view mapping called calibration camera definition world coordinates domain called world coordinates platonic label world coordinates assumed world coordinate system orthonormal basis vectors world coordinate system length angles orthnormal coordinate system measuring scene refer alternative world coordinate system platonic label definition image coordinates range called image coordinates intuitively image coordinates represent grid superimposed photograph measuring objects photograph easy determine image coordinates 
scene point opposed denoting location fact makes calibration scene reconstruction discussed dissertation definition projection function pinhole camera basic projection function pinhole camera defined matrix algorithm fig platonic form form fig basis-specific platonic discussed presently definition camera matrix matrix called camera matrix camera comment camera matrix specific camera specific world coordinate system fully define camera matrix labels pinhole camera labels world coordinate system camera matrix written notation symbolizes transformation world coordinates camera coordinates specific world coordinate system respect coordinate system note matrix change scale factor orthonormal world coordinate systems notation fig make clear matrices depend chosen world coordinate system definition internal external calibration matrix called internal calibration camera matrix vector called external calibration alternative expressions authors intrinsic extrinsic internal external orientation calibration terms combination intrinsic orientation extrinsic calibration term orientation preferred photogrammetry literature algorithm basic pinhole projection denote world coordinates denote pinhole camera camera matrix ifq denotes scene position projection image plane camera algorithm determine undefined figure camera matrix define projection function pinhole camera algorithm basic interpretation pinhole projection figure diagram real pinhole camera imaging christmas-tree shape arrow photographic film back wall camera note focal length negative number imaging plane negative z-axis image upside-down mirror image treat image plane positive z-axis avoid definition camera coordinates world coordinate system transformation affine mapping called camera coordinates origin camera coordinates expressed world coordinates point basis latticetop latticetop latticetop platonic scene position expressed coordinates camera written fig definition image plane image plane camera plane camera coordinates definition image point position mapping called image projection image plane camera physical interpretation history real pinhole camera closed light-proof chamber small hole wall light enter fig typically means recording light chamber device simply viewing recording performed photographic film charge-coupled device ccd light falls alternatively light recorded hand drawing small hole chamber called iris hole small light entering chamber focused leading sharp image photographic film hole small interference effects light waves significant enjoyable basic introduction light focused small iris found feynman strange automatic method recording light entering chamber concept pinhole cameras greatly predates photographic film ccd early pinhole cameras simply viewing recording novelty mechanical aid drawing capacity camera obscura term camera latin chamber physical derivation pinhole camera matrix grid depicted fig serves coordinate system origin system marked basis vectors labeled embedding grid plane fig assume world coordinate system plane negationslash u-axis grid parallel x-axis world coordinates position plane point represents location location plane represent location fig similarly basis vectors represent direction vectors shown fig denote vectors note vectors represented world coordinates form thinking origin world coordinates iris pinhole camera light traveling straight line iris intersect grid direction ray light world coordinates linearly independent written linear combination figure image-plane coordinates note similarly line intersects grid grid coordinates notice z-component observe bracketleftbig uvq bracketrightbig form spanning basis relationship abstract pinhole cameras section discussion grid projection plane grid represents image plane camera photographic plate ccd notation plan denote image plane camera grid represents image measured sampled grid represents image coordinates origin basis vectors conversion world coordinates camera coordinates bracketleftbig uvq bracketrightbig note upper-triangular matrix form mentioned earlier vector camera coordinates mapped image plane converted image coordinates dividing z-component vector step algorithm fig complete pinhole camera matrix projection algorithm fig represent transformation steps translate world coordinates origin optical center camera rotate world coordinates -plane world coordinates parallel camera image plane plane parallel image plane world x-axis parallel camera u-axis map lines light travel world origin camera optical center positions camera image plane multiplying camera coordinates dividing resulting z-component image coordinates remains discussed represents grid specifically models measurement actual camera views real pinhole camera scene projected upside-down mirror-reversed image plane fig represented taking result coordinates multiplied conversion camera coordinates image coordinates alternatively pinhole camera thought portrayed fig device figure person view scene grid drawing scene accurate perspective projection grid positioned viewer scene situation modeled taking prefer interpretation coordinates signs preserved conclude section physical analogies showing grid model measurement positions real camera view video digital image captured ccd camera grid represent positions sensors ccd properly-manufactured ccd camera skew basis vectors close perpendicular world coordinates position sensors ccd form rectangles squares vectors lengths pinholeprojection scenario depicted fig grid direct literal interpretation system string-lines stretched window case real pinhole camera photographic film grid represents measurement system laid photograph device called alberti grid renaissance artist wrote measurement performed pixels photograph scanned computer meaning internal calibration physical meaning respect ccd camera intuitive directly bracketleftbig prime prime prime bracketrightbig horspace horrowoffset hororigin verrowoffset verorigin vector prime nonzero component horspace horizontal distance sensors measured units world coordinate system prefixes hor ver horizontal vertical horizontal vertical directions image plane nonzero components prime verrowoffset horrowoffset measure shifted successive row sensors measured units world coordinate system components prime hororigin verorigin give position origin image coordinates grid measured world coordinates offset measured world coordinates image-coordinate origin z-axis z-component prime denoted called focal length pinhole camera photography performed lens term focal length means distance optical center focal point lens image plane camera focused infinity theoretically pinhole cameras infinite depth field distance including infinite distance focus focal length pinhole camera distance optical center image plane grid thought embedded image plane camera plane section z-axis world coordinates intersects image plane point corresponds position grid point camera view called principal point camera location image coordinates multiplication dividing resulting z-component bracketleftbig bracketrightbig latticetop normalized make previous equation implies position principal point image plane measured image coordinates remaining elements simple intuitively-meaningful interpretation discussed concepts projective geometry goal section present variety concepts related projective geometry branch mathematics devoted dimensionality-reducing projective maps emphasis homogeneous coordinates duality representations induce define platonic labels mathematical objects pinhole camera scene position image image plane camera notation concepts definition homogeneous coordinates position -vector tildewidep def latticetop represent position homogeneous coordinates positive scalar multiple tildewidep equivalent representation type representation projective geometry commonly machine vision computer graphics vector tildewidep measured coordinate system expressed tildewidep def tildewide latticetop notice homogeneous vectors transformed world coordinates camera coordinates matrix multiplication tildewidep tildewidep notation equality scale notation means vectors equal nonzero scale factor comment scale homogeneous vector matter stated tildewidep tildewidep equivalent representations position reasons 
equivalence original position recovered tildewidep dividing tildewidep component traditionally labeled w-coordinate confused world coordinates projection algorithm fig determining tildewidep yield image position step algorithm tildewidep step removes scale factor dividing component result needed restriction image sphere image plane comment homogeneous representation image point notice tildewidep homogeneous -vector representing notice equivalent homogeneous -vector representation positive scalar multiple set positive scalar multiples ray vertex optical center camera pierces point image plane camera image plane thought plane plan section fig illustrates ray subject discussed relation duality finally notice maps homogeneous -vector representation homogeneous -vector representation definition direction vectors vector thought position space thought direction imagine vector arrow pointing origin direction arrow pointing direction represented vector vector points direction x-axis directions platonic concepts figure homogeneous coordinates left three-dimensional diagram scene point projection camera vector homogeneous representation position diagram overhead labeled hat important realize hat reminder vector treated direction position hat function transformation vector direction north platonic direction suppose magnetic compass scene needle compass point direction north label direction platonic direction vector instance vector represents compass needle pointing world coordinate systems vector represented differently negationslash meaning asa direction remains specific coordinate representation definition directions homogeneous coordinates homogeneous coordinates direction vector form component vector called point plane infinity projective geometry notation tildewide def latticetop denote direction represented vector homogeneous coordinates camera coordinates revisited note tildewidep tildewide comment meaning plane plane infinity homogeneous coordinates positive scalar multiple vector represents direction presence slots vector arbitrary real numbers degrees freedom representation leading term plane plane infinity comment representing planes homogeneous coordinates formal explanation term plane plane infinity method representing planes vectors plane position normal point plane latticetop -vector tildewidem latticetop latticetop latticetop thought normal plane expressed homogeneous coordinates tildewidem latticetop tildewidep latticetop latticetop plane infinity plane defined -vector homogeneous representation origin comment meaning infinity plane infinity multiplying point plane infinity camera matrix column camera matrix represents camera position irrelevant cameras viewing point plane infinity cameras essentially location effect points cameras relative distance cameras homogeneous vector grows arbitrarily large terminology infinity plane infinity definition h-infinity matrix define platonic matrix camera hmat def relation specific world coordinate system notation def matrix represents transformation directions world coordinates camera coordinates platonic direction tildewide projective geometry terms represents planar homography induced plane infinity explains notation comment duality lines planes line image plane camera plane defined optical center camera note correspondence lines image plane planes optical center exists refer duality lines planes point plane optical center camera completely vector normal plane duality lines planes vector specifies line note nonzero scalar multiple represents plane line note homogeneous representation line homogeneous representation planes discussed earlier comment representing planes homogeneous coordinates comment duality points lines point image plane camera line defined optical center camera note correspondence points image plane lines optical center exists refer duality points lines point line optical center camera completely vector parallel line duality points lines vector specifies point note nonzero scalar multiple represents point line homogeneous representation point notation interchangeably understanding homogeneous representation comment intersection lines advantage representing line image plane vector lines camera image plane intersect single point define lines define point intersection lines derive equation equate camera optical center origin normals planes origin planes intersect line intersect origin cross product nonzero vector contained planes intersection line line intersects image plane point contained lines point line defined note platonic labels object line image plane notation emphasizes vector representation object future rarely additional platonic label platonic vectors dual labeling emphasis comment points define line distinct points camera image plane line image plane points derive equation equate camera optical center origin plane origin plane defines line perpendicular comment point line test point line camera image plane point contained line latticetop derive equation note perpendicular vector plane origin defined vector comment care coordinate system equations hold coordinate system long vectors represented coordinate system equations platonic concepts sense comment changing coordinate system planes recall matrix represents change coordinate system change basis direction vectors discuss transpose matrix change coordinate system plane origin camera define plane cent note origin camera define plane cent parallel plane plane thought line view plane line view latticetop relation proven applying distinct direction vectors visible line view line view direction vectors points plane infinity line define called line plane infinity vanishing line set parallel planes planes cent cent definition field-of-view field-of-view fov camera refers camera point scene camera field-of-view projected camera view field-of-view specific angle measure camera view vertex angle cone vertex optical center scene point visible rough expression breadth camera wide narrow field-of-view comment image sphere concept image plane meant model flat film ccd viewing plane exists real camera viewing sphere natural mathematically makes model cameras field-of-view larger recall image plane plane camera coordinates image sphere sphere centered origin radius camera coordinates step basic projection algorithm fig ray light camera coordinates projected image plane dividing z-coordinate finding point ray z-coordinate equal rays non-positive z-coordinate considered image plane image sphere ray rays projected image sphere scaling length replaces step basic projection algorithm image sphere model cameras light directions omnicameras image spheres projection process grossly distort original scene regions project image plane principal point finally distinct lines image sphere parallel intersection points expression note passing surface abstracting light-collection process cylinders advantage authors epipolar geometry observing point line correspondences pinhole camera views determine epipolar geometry views determined epipolar geometry places constraints determination future point correspondences makes easier find point correspondences dissertation epipolar geometry determine internal calibration matrix camera process calibration knowledge epipolar geometry enabling projective scene reconstruction denote pinhole cameras prime prime prime optical centers definition epipoles epipole view respect pairing views location optical center camera view formally cent cent prime platonic direction vector non-zero scalar multiple vector tildewide cent prime called epipole view position prime view called epipole view similarly non-zero scalar multiple cent epipole view definition homography induced plane infinity plane viewed cameras induces planar homography views plane infinity induces planar homography written def prime prime hmat hmat note homography view view reverse written homography discussed earlier transforms direction vectors coordinate system comment world camera world coordinate system thought coordinate system abstract pinhole camera 
labeled triplet careful basis kri hmat intuitive meaning hmat planar homography transforming direction vectors world coordinates camera coordinates notation cross-product matrix cross product vectors computed matrix-vector multiplication define cross-product matrix def definition fundamental matrix fundamental matrix camera view camera view def definition nonzero scale factor fundamental matrix rank rank invertible comment physical interpretation fundamental matrix platonic direction optical center camera set line parallel call line assume line prime optical center camera assume parallel tildewidep tildewide tildewide tildewidep tildewide tildewide latticetop latticetop latticetop equations vector simultaneously perpendicular camera coordinates defines line image plane camera note line image line view arbitrary image point figure pencil planes position view change position view remains definition epipolar planes epipolar lines vectors optical centers prime define planes space called epipolar planes planes intersect image planes camera camera lines called epipolar lines line called epipolar line homogeneous sense vector comments duality lines planes similarly view note vectors define plane space plane optical centers point set epipolar planes pair cameras set planes optical centers line optical centers set planes line called pencil planes projective geometry fig comment fundamental matrix invertible physical interpretation fundamental matrix explains rank fundamental matrix invertible point epipolar plane fundamental matrix maps vector scale factor camera coordinates points plane mapped line kernel mapping dimensionality line optical centers definition point correspondence scene position visible camera views points conjugate points point correspondence views point-line duality homogeneous notation point correspondences section discussing point correspondences determined practice comment determining fundamental matrix point correspondences scene points visible camera views latticetop equation places linear constraint components naively matrix constraints needed uniquely determine provided exists matrix satisfy linear constraints form simultaneously matrix exists long cameras optical centers scalar multiple satisfy constraints means determined scale factor constraints degrees freedom linear equations determine point correspondences considerations defined nonzero scale factor set matrices satisfying constraints multidimensional non-multiple satisfy system linear combination matrices fact sets scene points lying plane uniquely identified conditions set determined uniquely scale factor authors general randomly-chosen set scene points determined uniquely scale factor linear system arising constraints practice linear system properly normalized handle noise point-correspondence data property rank constraint incorporated linear constraints utilizing extra constraint number points correspondences needed find reduced hartley zisserman shown smallest number correspondences determined views required smallest number line correspondences importance fundamental matrices dissertation methods calculating discussed greater detail section comment transpose fundamental matrix switching labels cameras fundamental matrix true transpose latticetop prove physical interpretation fundamental matrix transformation positions measured coordinate system epipolar planes measured proof requires fact latticetop change basis planes simplest prove versus transpose latticetop latticetop latticetop latticetop latticetop fact fundamental matrices uniquely determined constraints form comment extracting epipoles fundamental matrix immediately obvious left null eigenvector latticetop rank unique left null eigenvector latticetop unique null eigenvector null eigenvectors reliably extracted matrix singular-value decomposition standard numerical linear algebra golub van loan excellent implementation golub reinsch fundamental matrix determined directly point correspondences views epipoles extracted fundamental matrix eigenvectors referred epipole left epipole comment equivalence epipolar geometry fundamental matrix knowledge epipolar geometry camera views means knowledge location epipoles correspondence epipolar lines pairs lines views induced epipolar plane information provided fundamental matrix scene reconstruction scene reconstruction process building model scene camera views process called image-based modeling focus dissertation camera calibration important side effect calibration ability reconstruct scenes note scene reconstruction includes recovering location orientation characteristics cameras viewing scene fact circumstances scene reconstruction means note scene reconstruction broad meaning includes wide variety unintuitive reconstructions reconstructions measurements angles experience usual interactions scene begin discussing hierarchy scene reconstructions hierarchy scene reconstructions hierarchy scene reconstructions levels listed general specific projective affine metric term euclidean metric understand hierarchy reverse ways distorting original scene set position vectors homogeneous notation representing original scene assume vectors measured orthonormal coordinate system meet intuitive expectations scene shape concrete square original scene vectors representing vertices square vertices form transforming arbitrary invertible matrix prime prime set vectors prime called projective reconstruction scene expression term projective transformation matrices versions prime square shown fig note figure plane infinity mapped real plane meaning points form mapped set coplanar points form demonstrates unintuitive projective scene reconstructions restricting bottom row matrix arbitrary non-zero scale factor transformation represented matrix called affine transformation matrix called affine matrix intuitively affine transformation linear transformation translation fact usual mathematical definition affine transformation vectors prime form called affine reconstruction fig affine reconstruction square affine transformations important property fix plane infinity meaning vectors mapped plane represent transformation single matrix homogeneous coordinates thinks matrices representing linear transformations added translations figure hierarchy scene reconstructions original scene square infinity plane infinity property definition affine transformations restricting affine transformation scaled rotation matrix upper left block transformation called euclidean transformation reconstruction prime resulting transformation called euclidean metric reconstruction dissertation term metric reconstruction fig sample metric reconstruction square note euclidean transformations affine affine transformations projective reverse true making proper hierarchy hierarchy transformations defines hierarchy scene reconstructions fig intuitive hierarchy fig venn-diagram representation hierarchy projective scene reconstructions easiest create camera views intuitive affine reconstructions easiest create intuitive metric reconstructions hardest create represent original scene arbitrary rotation scaling meet intuitive expectations scene intuitive expectations kind reconstruction everyday interactions world deal rigid objects picked rotated translated time move object manner euclidean displacement object metric reconstruction true form metric reconstruction achieved calibration reconstruct scene original scale requires knowledge specific measurements scene side square meter length hierarchy camera reconstructions preceding section set measurements scene positions acquired orthnormal world coordinate system transformed matrices create alternative representations scene called reconstructions similar cameras viewing scene measured orthonormal world coordinate system resulting camera figure hierarchy scene reconstructions portrayed venn diagram matrices transformed matrices create hierarchy reconstructions cameras express formally cameras capture views scene camera matrices views transformed camera matrix pre-multiplied ensure camera views remain set cameras called reconstruction original cameras note inverse projective affine euclidean transformation projective affine euclidean transformation class transformation unchanged inversion classify camera reconstruction class transformation create scene reconstructions significance stratification fact projective reconstruction cameras viewing scene created fundamental matrices camera views fundamental matrices calculated directly point correspondences means projective camera reconstructions created directly information camera views shown projective camera reconstructions upgraded affine metric reconstructions circumstances 
information camera views process calibration central topic dissertation triangulation triangulation simplest form illustrated fig direction target position space determined locations information induces lines intersected yield coordinates camera views provide triangulation information provided projection camera view inverse projection function view location optical center camera note function mapping points rays combine provide direction optical center camera target process triangulation reconstruct scene point correspondences set camera views calibrated finding calibration functions set camera views shared coordinate system means reconstructing camera views projective reconstruction camera views determined projective reconstruction scene created section levels reconstruction elaborate forms triangulation important simultaneous camera views triangulate target position creates over-constrained problem greatly stabilizes triangulation process relative noise positions stabilization process makes scene reconstruction real data slight errors positions inverse projection functions lead large errors triangulated position section hartley zisserman linear solution over-constrained problem form triangulation presented seitz anandan involves placing probability distribution measured projection represent likelihood true projection position measured distribution induces distribution cone intersection cones distribution position projective reconstruction fundamental matrix fundamental matrix determined immediately create projective scene reconstruction denote left epipole invertible matrix note found directly determined scale factor write create matrices bracketleftbig bracketrightbig bracketleftbig bracketrightbig camera matrices projective reconstruction original cameras derived fundamental matrix prove claim find projective transformation recall original metric camera matrices chosen world coordinate system specific form key finding realize latticetop vector fact form proven determined unknown scale unknown scale handled set latticetop latticetop determined test correct determine observe bracketleftbig bracketrightbig latticetop bracketleftbig latticetop latticetop latticetop bracketrightbig bracketleftbig bracketrightbig bracketleftbig prime bracketrightbig bracketleftbig prime bracketrightbig bracketleftbig prime bracketrightbig set latticetop note world coordinates chosen make world origin optical center camera latticetop latticetop reappears section projective camera reconstruction created projective scene reconstruction created triangulating points camera image planes note material presented section discussed faugeras albeit significantly form involving choice projective basis absolute quadric metric reconstruction convenient juncture discuss absolute quadric provide concrete absolute quadric previously mentioned section part history context camera calibration absolute quadric popular calibration relative simplicity ability directly utilize constraints internal calibration matrix series camera matrices metric frame def projective reconstruction cameras invertible matrix choosing world coordinates form letting absorb term latticetop define matrix def latticetop latticetop latticetop latticetop latticetop latticetop latticetop latticetop matrix dual image absolute quadric terminology technical understanding meaning discussion form matrix product latticetop kiri bracketleftbig bracketrightbig latticetop latticetop latticetop latticetop bracketleftbig bracketrightbig latticetop latticetop latticetop latticetop latticetop latticetop latticetop bracketleftbig bracketrightbig latticetop latticetop latticetop latticetop latticetop latticetop latticetop latticetop bracketleftbig bracketrightbig latticetop latticetop latticetop latticetop latticetop latticetop latticetop note projective camera matrices determined directly images cameras method section two-camera projective reconstruction requirement camera internal calibration significance entries projective camera matrices directly related entries internal calibration matrices camera properties internal calibration matrices skew assume predetermined principal point latticetop letting abcd befg cfhi dgij equation determine entries constraints arising camera views constraints exist determine pollefeys koch van gool details note determined projective reconstruction upgraded immediately metric determined potential problem approach requirement assumptions made internal calibration entries independent treated independent invoked problem defined relative specific camera camera introducing bias figure physical explanation point correspondences ambiguous fundamental matrix rank deficient invertible knowledge scene point projects location right-hand view reveals epipolar line left-hand view scene point project finding point correspondences practice cameras view scene point pair points called point correspondence views concept generalized obvious views point correspondences ambiguous depicted fig point right-hand view shown correspond line left-hand view identifying point correspondences views step self-calibration scene-reconstruction algorithms determining accurate point correspondences paramount history photogrammetry point correspondences determined manually computers opened possibility automatically determining point correspondences small number point correspondences determined views correspondence sparse large number correspondences determined correspondence dense labor involved dense correspondence feasible determined mechanically computer algorithm data views output computer graphics algorithm rendering synthetic scene engineered means structured light software algorithms determining point correspondences rely presence texture scene means identifiable surface variations markings writing dirt decorations small holes shadows fixed light source apparent correspondences caused occluding boundaries erroneous mislead algorithms reliable fundamental matrix views great assistance finding point correspondences fundamental matrix views feature point view point view epipolar line search line nearby finding fundamental matrices practice fundamental matrices notoriously difficult determine reliably find fundamental matrix large field view reliable methods eliminating lens distortion point correspondences locate point correspondences sub-pixel accuracy equivalently high-resolution views determine correspondences hand avoid outliers photogrammetry applications special cameras lens distortion suggestion relevant machine vision applications non-specialized cameras photogrammetrists derisively call amateur equipment suggestion traditional part photogrammetry desirable option machine vision algorithms automated automate process ransac method typically cull outliers discussed greater detail outline standard automatic technique finding fundamental matrix views step find feature points views step find potential conjugate pairs feature points step ransac find fundamental matrix matches greatest number potential conjugate pairs step fundamental matrix eliminate potential conjugate pairs outliers step optional return step reduced set feature points step remaining conjugate pairs simultaneously find best-fit fundamental matrix step optional calculated fundamental matrix find feature points potential conjugate pairs approximately match epipolar geometry fundamental matrix return step step accomplished corner detectors comparison goal find positions stand detected nearby view speck dirt blank wall makes good feature step performed comparing neighborhoods feature point cross-differencing fundamental matrix calculated conjugate points step involves repeatedly choosing small number conjugate point pairs finding fundamental matrix points checking matrix fits conjugate pairs fundamental matrix fits conjugate pair generates correct epipolar line pair correctness measured distance point epipolar line smaller distances ransac process continues fundamental matrix found fits large number conjugate pairs step reasonable fundamental matrix found potential conjugate pairs disagreement fundamental matrix considered bad eliminated optional step assumes eliminating bad conjugate pairs improved chances ransac randomly finding correct fundamental matrix step assumes remaining good conjugate pairs stabilize fundamental matrix calculation optional step part determining dense correspondence views feature point determined view search nearby epipolar line view half conjugate pair epipolar line found estimated fundamental matrix optional steps treated relaxation manner gradually tightening bounds repeated iterations algorithm reasonable problems practice substitute good input data suggestions beginning section crucial importance fundamental matrices determined line correspondences combinations line points correspondences researchers experimented determining trilinear trifocal tensors 
fundamental matrices extracted theory trilinear tensors determined views stricter requirements pairwise epipolar geometry determined reliably determining trilinear tensor extracting fundamental matrices reliable determine fundamental matrices practice trilinear tensor extremely sensitive noise possibly lead worse estimates epipolar geometry direct calculation fundamental matrix stein discussed possibility determining trilinear tensors fundamental matrices directly optical flow chapter screw-transform manifolds screw transformation views shown chasles apparently earlier cauchy mozzi rigid object arbitrarily moved location movement object represented screw transformation means exists line space called screw axis rotation screw axis translation parallel screw axis mathematical-style notation intended convey concept informally thought matrices representing rigid transformations homogeneous coordinate system fig sample screw transformation term screw transformation refers screw turns moves parallel axis camera fixed internal parameters captures views scene exists screw transformation moves camera viewing location orientation screw transformation defining world coordinate system cameras coordinate system chosen z-axis equal screw axis position latticetop equal optical center camera view letting upper-triangular matrix denote camera fixed internal parameters camera matrices screw axis rotation translation rotation translation figure screw transformation rigid-body motion decomposed purely rotational component purely translational component form screw transformation components composed order recreate original motion views written coordinate system letters refer view matrix rotation matrix representing tilt camera relative coordinate system matrix cos sin sin cos note parameters screw transformation amount translation parallel screw axis amount rotation screw axis distance optical center view screw axis basic unit measurement coordinate system amount screw translation terms units camera matrices arise alternative scenario camera motionless scene undergoes transformation equal opposite original camera motion physically occurs camera mounted position latticetop scene viewed rests rising turntable rotation axis equal z-axis rising turntable turntable rotates axis moves parallel axis refer alternative interpretation rising-turntable formulation viewing scenario refer duality interpretation camera relativism fundamental matrix views derived directly camera matrices section resulting fundamental matrix terms underlying screw transformation sin cos cos bracketleftbig latticetop latticetop bracketrightbig sin bracketleftbig latticetop latticetop bracketrightbig -tuple conveniently formally refer viewcapturing scenario fma denote fundamental matrix arising scenario hin denote krk called relative calibration arising scenario homography induced plane infinity note fma hin calculated directly knowledge question sections information knowledge knowledge -tuple provide question interest found directly pairs views identifying feature-point correspondences information internal relative calibration found directly camera views upgrading weak calibration fundamental matrix views views weakly calibrated stronger forms calibration affine calibration knowledge relative calibration views metric calibration knowledge internal calibration camera term monocular fundamental matrix describe fundamental matrix arising views camera fixed internal parameters goal section show monocular fundamental matrix upgraded affine metric calibration knowledge real numbers related underlying screw decomposition camera motion choice real numbers lead legal affine metric calibrations clear weak calibration immediately upgraded information importantly parameterization real numbers leads method calibration section parameterizing rising-turntable scenarios rising-turntable scenario fundamental matrix fma scenarios prime prime prime prime prime give rise fundamental matrix fma prime fma define set scenarios consistent fundamental matrix consce prime fma prime letting denote mapping algorithm fig fixed wehavethe conjecture consce exists triplet real numbers statement presented conjecture theorem extremely difficult prove formally confidence conjecture true reasons step algorithm derived mathematically step-by-step derivation appendix computer experiments consistent conjecture assuming conjecture true isolated special cases function represents parameterization set consce member consce triplet real numbers section shown parameterization leads screw-transform manifolds method calibration note algorithm defines camera undergoes general motion meaning negationslash negationslash screw axis intersect optical center additional nontrivial motions occur leads definition cases called turntable motion transfocal motion discussed section parameterizing relative calibration previous section introduced set consce rising-turntable scenarios sharing fundamental matrix scenario consce relative calibration set relative calibrations consistent defined conhin hin prime prime consce letting denote mapping algorithm fig fixed conjecture conhin exists pair real numbers present statement conjecture theorem extremely difficult prove formally conjecture true algorithm deduced mathematically appendix appendix computer experiments consistent validity function function represents parameterization set conhin case relative calibration consistent fundamental matrix corresponds algorithm invertible matrix left epipole latticetop find unique null eigenvector latticetop bracketleftbig bracketrightbig note latticetop latticetop unknown scalar determined step solve over-determined system cos cos sin extract eigenvector step perform decomposition recover figure algorithm mapping scenario consce consistent monocular fundamental matrix underlying motion assumed general alternative motions section fig fig algorithm perform steps algorithm fig find algorithm fig find figure algorithm mapping hin scenario consce consistent monocular fundamental matrix underlying motion assumed general algorithm invertible matrix left epipole latticetop latticetop latticetop solve system find null eigenvector latticetop latticetop cos latticetop determined step find latticetop figure algorithm determining pair real numbers section function define modulus-constraint manifold earlier function define kruppa-constraint manifold screw-transform manifolds calibration fundamental matrix views limited information camera calibration section describe existing self-calibration methods converting information affine metric calibration show parameterizations section induce objects called screw transform manifolds lead algorithms calibration kruppa-constraint manifold published self-calibration method due faugeras luong maybank based kruppa constraints scenario fma hin epipole viewed camera latticetop observed fkk latticetop latticetop latticetop latticetop krk latticetop krk latticetop latticetop equation places constraints latticetop determined directly camera views determined monocular fundamental matrices determined found cholesky decomposition notice technique metric calibration internal calibration matrix found immediately weak calibration fundamental matrices determining affine calibration refer style calibration direct calibration contrast stratified approach section define notation kma frob frob frobenius norm section definition frobenius norm normalize matrix reduce dimensionality internal-calibration search space matrix recovered scale factor self-calibration algorithm define conkma kma consce mapping conkma mapsto kma note conkma immediately subset easy create injective mapping conkma matrix conkma mapped recovered -vector assuming frob kruppa-constraint manifold defined image mapping refer set parameterization manifold attempt formally prove properties define manifold empirically term manifold good descriptor steps defining algorithm continuous places set mapping referred coordinate system manifold calibration kruppa-constraint manifolds camera fixed internal calibration capture series views assume pairs views overlap sufficiently determine fundamental matrices camera relativism view pair equivalent rising turntable scenario fma conjecture manifold intersectiondisplay words found intersecting kruppa-constraint manifolds arising pairwise fundamental matrices domain three-dimensional range five-dimensional kruppa-constraint manifold three-dimensional manifold five-dimensional space manifold removes degrees uncertainty location intersection manifolds yields zero-dimensional space disjoint union points work modulus constraint pollefeys van gool showed fundamental 
matrices points satisfy modulus constraints imposed fundamental matrix section schaffalitzky reduced upper bound point screw-transform manifold satisfies modulus constraint imposed fundamental matrix generating manifold size set mutual intersection points experimental evidence suggests size smaller section observations presented form basis self-calibration algorithm capture views find pairwise fundamental matrices views determine kruppa-constraint manifolds fundamental matrices find mutual intersection point manifolds difficult part efficiently finding mutual intersection point algorithms task presented section stratified calibration modulus constraint section stratified approach calibration internal camera parameters determined stages specifically initial weak calibration determined upgraded affine calibration finally converted metric calibration views scene captured camera fixed internal parameters camera moved scene views related solely rotations translations camera matrices views written bracketleftbig bracketrightbig bracketleftbig bracketrightbig matrix rotation matrix choosing metric coordinate system assume stratified self-calibration paradigm step finding finding place camera matrices common projective basis initial projective camera matrices labeled related metric camera matrices invertible matrix representing transformation projective basis bracketleftbig bracketrightbig refer initial set camera matrices common projective basis projective reconstruction scene usual approach obtaining projective reconstruction identify feature points scene visible camera reconstruct features common projective basis fundamental matrices find projective camera matrices relating reconstructed features viewed positions camera image planes features implicit part projective reconstruction refer choose projective basis bracketleftbig bracketrightbig assumptions form latticetop form commonly values scalar simply lead scale factors final metric reconstruction metric reconstruction involves recovering scene scale factor choose convenience stage stratified calibration upgrade projective reconstruction affine reconstruction equivalent finding final stage upgrade affine reconstruction metric finding step performed simple solving linear system hard step finding stage pollefeys introduced elegant method determining called modulus constraint notice assumption latticetop leading latticetop left-hand side conjugate rotation matrix eigenvalues modulus absolute leads constraints similarly latticetop latticetop left-hand side conjugate rotation matrix leading additional constraints denote right-hand side replaced generic vector latticetop latticetop latticetop expanding characteristic equation modulus constraint pair jleads fourth-order multivariate polynomial components vanishes satisfies modulus constraint eigenvalues modulus specific form note represents sufficient condition legality ifh conhin reverse necessarily true property pairs argmin summationdisplay large single solution special collections views called critical motion sequences algorithm find instance solve latticetop matrices treated column vectors null eigenvector found scale factor divide component correct algorithm negationslash solved remaining steps algorithm task define solve scalar closed-form solution least-squares approach preferable equation solve latticetop solved step latticetop figure algorithm determining view pair solutions mentioned section solved nonlinear minimization techniques modulus-constraint manifolds cameras projective basis initial projective reconstruction section simpler form screw-transform manifold key advantage alternative form longer needed parameterization -dimensional manifolds -dimensional space kruppa-constraint manifolds manifolds -dimensional exist -dimensional space cameras projective basis define function previous section note unknown determined algorithm fig ave mapsto denote mapping step-bystep derivation algorithm appendix define set vectors consistent fundamental matrix conave ave conhin remember relative calibration views screw decomposition motion views hin scale factor conhin conave method restricting location enumerate relative calibrations consistent fundamental matrix vectors set formally set introduced section discussed conhin parameterized real numbers mapping define mapping conave mapsto ave classification pairwise camera motions screw axis location classification motion negationslash pure translation negationslash optical center unifocal motion negationslash optical center turntable motion negationslash negationslash optical center transfocal motion negationslash negationslash optical center general motion table classification pairwise camera motions modulus-constraint manifold defined set parametrization kruppa-constraint manifold attempt formally prove set parameterization form manifold mathematical sense term descriptively fig visualization modulus-constraint manifolds term a-space refers range space calibration modulus-constraint manifolds achieved calibration kruppa-constraint manifolds finding mutual intersection point sufficient number manifolds modulus-constraint manifold -dimensional exists -dimensional space manifold places constraint location manifolds restrict -dimensional set disjoint set points non-general camera motions section screw decomposition categorize pairwise motion camera categories arise cases called general motion turntable motion transfocal motion screw-transform manifolds general motion case presented section remaining cases discussed conclude section theorem simple test differentiating motion case classifying pairwise camera motions pairwise camera motion rigid-body transformation takes camera position orientation camera internal parameters unchanged table shows partition pairwise camera motions categories based screw decomposition elements decomposition amount rotation amount translation location screw axis element binary question resolved determined nonzero indicating rotation translation determined screw axis intersects optical center camera views categories table previously labeled investigated context calibration authors partition natural translational motion cases studied simplicity affine reconstruction case call unifocal motion meaning rotation camera optical center studied extensively mosaicing hartley showed metric calibration achieved unifocal motion authors mcmillan davis unifocal motion self-calibrate simplified camera models creating mosaics turntable motion investigated calibration context actual turntables arising planar motion knowledge case call transfocal motion specifically identified investigated trivial case motion remaining motions termed general selfcalibration papers require camera change location rotate papers simultaneously cover general motion turntable motion transfocal motion show section transfocal motion information calibration arbitrary rigid-body transformations called displacements terminology kinematics cases make degenerate case earlier calibration methods collections camera motions called critical motion sequences information metric coordinate frame uniquely identified critical motion sequences exist motion categories critical motion sequence consist general motions turntable motions combination turntable motion turntable motion arises translational component screw decomposition screw axis intersect optical center case negationslash fundamental matrix formula sin cos bracketleftbig latticetop latticetop bracketrightbig note applicable derivation section applicable assuming screw axis intersect optical center true transfocal motion case discussed section note published earlier fitzgibbon zisserman context self-calibration turntable motion proof earliest equation aware obvious turntable motion occur stationary camera views object rotating turntable occur camera translated parallel plane rotating axis perpendicular plane case general motion discussed section screw-transform manifolds arise turntable motion suitable direct calibration stratified calibration simply defined algorithm fig defined algorithm fig note replaced symbolic variable prime parameterizations algorithm latticetop sin cos sin find find null eigenvector bardbll bardbl bardblh bardbl find fact cos latticetop arbitrary scale factors rows denotes rotation matrix rotation axis angle rotation note related amount screw translation case perform decomposition recover figure algorithm mapping prime scenario consistent monocular fundamental matrix arising turntable motion algorithm perform steps algorithm fig find algorithm fig find figure algorithm mapping hin scenario consistent turntable motion assumed assumed parameter prime longer related screw decomposition simply unknown scaling factor prime treated parameter algorithms section 
transfocal motion transfocal motion arises screw axis intersects optical center negationslash position screw axis means rising-turntable model changed longer assumed camera optical center latticetop camera latticetop latticetop note assume amount screw translation simply lead scaling factor internal calibration scene reconstruction self-calibration achieved scaling factor sufficient assume screw translation play role equations arising transfocal motion notation describe transfocal motion scenario notation notation section fundamental matrix fma cot bracketleftbig latticetop latticetop bracketrightbig derive eqs taking limit scaled works rising-turntable scenario measures amount screw translation multiple distance optical center screw axis making grow equivalent shrinking distance optical center screw axis alternative direct derivation section framework describing screw-transform manifolds transfocal motion general turntable motion extra parameter needed algorithm deterministically pick arbitrary line serve line latticetop latticetop denotes rotation matrix rotation axis angle rotation tan latticetop bardblh bardbl prime prime figure algorithm mapping prime transfocal motion scenario consistent algorithm perform steps algorithm fig find algorithm fig find note step figure algorithm mapping hin transfocal motion scenario consistent type manifold defined algorithm fig defined algorithm fig definitions leads -dimensional manifold -dimensional search space leads -dimensional manifold -dimensional search space perform direct calibration transfocal motions fundamental matrices needed unclear transfocal motions stratified calibration intersection screw-transform manifolds a-space -dimensional manifold smaller entire search space restricted domain intersection manifolds sufficiently restrict location presence noise found complete certainty intersection process improved restricted limited range intersection algorithms section applied suitable modifications introduced account increased number parameters tests classifying pairwise camera motions table simple test identifying class pairwise camera motion tests important self-calibration algorithm automatically correct screw-transform manifold alternative calibration method cases translational unifocal motion note class motion matrix fundamental matrix tests performed directly matrices proving correctness tests theorem concept abstract feature points introduced abstract feature point projected location position space camera views determined camera matrix abstract features behave real feature points exist information provide invisible camera field view stating theorem proof information abstract feature points assumed oracle perform tests concept abstract feature points needed avoid situations tests fooled placing photographs views front camera moving camera simply information perform tests camera featureless room views overlap theorem made correct times visual information practice performing tests requires sufficient visual information tests fooled impossible perform lemma views scene captured arbitrary cameras statements true cameras share optical center exists planar homography mapping view mapping abstract feature point view abstract feature point views induce fundamental matrix cameras optical centers views induce fundamental matrix exist planar homography mapping view proof cameras share optical center case planar homography mapping view prime prime internal calibration matrices cameras rotation matrix screw decomposition case fundamental matrix defined prime displacement vector optical centers expressed metric coordinate system express prime optical centers fundamental matrix defined proving implies assume optical centers differ exists planar homography maps abstract feature points view denote optical centers cameras spacial location abstract feature point point line notation prime denote projection spacial point views note view prime negationslash prime view contradicts existence planar homography maps prime prime existence implies optical centers location proving implies square lemma fundamental matrix rank proof fundamental matrix defined invertible rank represents cross-product operation rank square lemma views captured camera fixed internal parameters undergoing turntable general motion underlying screw rotation multiple motion turntable det proof call cameras involved camera camera denote epipole camera camera det null eigenvector examine assume det negationslash logic fixed-camera rising-turntable formulation optical center origin camera fixed position origin viewing scene undergoes screw transformation camera denote camera views transformation camera denote camera views transformation vectors denote space spanned line image plane induced space scene point projection camera denoted null space negationslash corresponds position view epipolar line view represented latticetop latticetop latticetop latticetop latticetop conclude coplanar arbitrary scene point projects line view equals line linear combination implying lies plane plane words points project line view project line view screw transformation planes identical lies rotation axis happen multiple assume case represent distinct lines view intersect point scale factor point rotation axis space projection screw motion case screw motion translates screw axis fixed-camera formulation positions axis line line line leading conclusion contradiction square theorem views scene captured camera fixed internal parameters assume negationslash amount screw rotation integer denote homography views exists denote fundamental matrix induced views denote left epipole latticetop statements true exists identity matrix views identical camera underwent motion exists equal identity matrix camera underwent unifocal motion camera rotated optical center iii exists antisymmetric main diagonal camera underwent translational motion exists negationslash camera underwent transfocal motion exists negationslash det camera underwent turntable motion exists det negationslash camera underwent general motion proof observe statement theorem well-defined lemma exists exists motion classes table partition set pairwise camera motions class defined series binary tests negationslash claims proven conditions motion class hold underlying motion class conditions distinct motion classes hold simultaneously proof claim motion views identical optical centers equal exists unifocal motion exists lemma negationslash negationslash translational motion equals left epipole transfocal motion shows negationslash linearly independent internal calibration matrix invertible turntable general motion lemma establishes det turntable motion det negationslash general motion note condition lemma turntable motion cos sin leading cos sin negationslash linearly independent multiple proof claim notation statement hold sufficient show conditions statement met ifh exists iii statement assume exists symmetric antisymmetric main diagonal statement iii implies iff statement immediately follow det finally det statement square tests classifying pairwise camera motions classification test degrees freedom notes affine metric motion views identical pure translation cross-product matrix unifocal motion homography exists views defined homography views turntable motion det negationslash transfocal motion negationslash general motion det negationslash table tests determining category pairwise camera motion belongs point correspondences views chapter manifold intersection algorithms discussed section section self-calibration achieved finding mutual intersection point screw-transform manifolds case kruppaconstraint manifolds mutual intersection point internal calibration matrix unknown scale factor finding mutual intersection point set kruppa-constraint manifolds represents direct self-calibration technique meaning calibration determined immediately fundamental matrices generated pairs views creating initial projective reconstruction cameras upgrading affine reconstruction case modulus-constraint manifolds mutual intersection point vector upgrade initial projective reconstruction affine affine camera matrices determined pairwise relative calibrations upgrading metric reconstruction finding simple matter modulus-constraint manifolds 
stratified self-calibration technique kruppa-constraint manifolds pairwise fundamental matrices required approach initial projective reconstruction cameras required camera matrix projective basis self-calibration approaches mutual intersection screw-transform manifolds set disjoint points special critical-motion sequences involved cases find set mutual intersection points eliminate incorrect points criteria additional screw-transform manifolds utilized manifolds incorporated set mutual intersection points grows smaller coincidental manifolds cases figure piecewise-linear approximate surfaces fitted modulus-constraint manifolds a-space determining mutual-intersection point manifolds makes upgrade projective reconstruction affine metric reconstruction easily determined inset shows modulus-constraint manifold notice lone discontinuity dimensions grid underlying approximate surface correct self-calibration remains note experiments suggest finding mutual intersection point modulus-constraint manifolds sufficient restrict set points section key task creating efficient fast robust algorithm finding mutual intersection manifolds experimented approaches surface-fitting technique voting algorithm monte-carlo markov-chain scheme approach briefly summarized details voting algorithm found appendix note approach kruppa-constraint manifolds modulus-constraint manifolds general-purpose algorithms determine mutualintersection points set manifolds irrelevant direct stratified calibration performed surface fitting direct approach solving intersection problem fit approximate piecewiselinear surface screw-transform manifold find mutual intersection points approximate surfaces method involves imposing coordinate grid manifold fig visualization feasible range determined underlying screwtransform parameter underlying parameter represents screw rotation range range bounded large positive negative values sufficient finite range parameter decided treat parameter real number range grid imposed manifold obvious pseudocode modulus-constraint manifold case grid array -vectors grid psif theta kappa psif denotes function theta kappa denote predetermined conversion functions desired range kruppa-constraint algorithm surface fitting goal find mutual-intersection points set manifolds preconditions finite number mutual intersection points parameterization manifold finite search range determined parameter manifold find approximate piecewise-linear surface section denote set approximate surfaces pick surfaces find set mutual intersection points section determine fits surfaces repeat step fixed number times fit sufficiently good standard ransac protocols determine loops return mutual intersection point fit largest number surfaces figure manifold intersection algorithm surface fitting ransac manifold grid array -dimensional -vectors additional conversion function gamma loop grid established grid square cube divided triangles tetrahedrons square delimited grid grid triangles vertex sets grid grid grid grid grid grid set triangles tetrahedrons forms desired piecewise-linear surface approximation manifold surface approximations established case intersecting manifolds process steps pairs intersecting triangles manifolds determined triangle pairs tested intersection triangle manifold pseudocode pairwise set triangle pairs pairwise foreach triangles foreach triangles intersect pairwise pairwise mutual set points mutual foreach triangles foreach pairwise intersect mutual mutual intersection point trianglesi set triangles forming approximation manifold intersect boolean function indicating triangles intersect simple algorithm made efficient data structures bounding boxes quickly eliminate cases triangles intersect manifolds successive loops pare set mutual presence noise set manifolds well-defined mutual intersection point note noise level small set manifolds true mutual intersection points albeit incorrect locations observation generally good practice dealing noisy data make extra manifolds manifolds minimum combining ransac triangle-based intersection algorithm ransac feasible surface-fitting intersection algorithm runs quickly section manifolds drawn set manifolds random sample meaning small number draws confident result complete ransac-style surface-fitting manifold-intersection algorithm shown fig general approach outlined section works extremely practice experiments section demonstrate drawbacks algorithm stem process sketching manifold fitting approximate surface grid takes amount memory hold amount time sketch amount memory time required proportional square resolution variable pseudocode modulus-constraint manifolds cube resolution kruppa-constraint manifolds experiments suggest resolution bare minimum usable results higher resolutions produce finer results voting-based algorithm section present voting scheme determining intersection points manifolds voting scheme thought hough transform calibration approach strengths presence noisy data hough transform large numbers inliers consistently vote correct answer small numbers outliers vote random incorrect answers correct answer receive support answer data simultaneously unlike ransac-based approaches minimal subset data considered single iteration drawback large memory requirement storing votes length time algorithm run reliable winner emerge voting process crucial drawback coarse resolution voting grid wrong area search space correct early stages voting algorithm misdirecting entire search process define m-dimensional manifold dimensional space define set mutual intersection points assume manifolds point common meaning goal find element assume hypercube identified mutual intersection points search region idea voting scheme uniformly divide search region equal-size hypercubes called voting voxels count manifolds intersect voxel voxel member receive maximum number votes votes voxel search region entire voting process repeated place refer reduction search space size zoom-in step iteration search region smaller mutual intersection point directly determined linear intersection method discussed practice directly count manifolds intersect voting voxel counting process statistically approximated voting points randomly generated manifold ideally forming uniform sampling manifold voxel points manifold receives vote manifold note voxel allowed vote manifold voxel receives votes labeled safe volume voxel search region region half size centered centroid votes received neighbors full algorithm fig sample points generated manifold randomly selecting underlying coordinates step algorithm case direct calibration kruppaconstraint manifolds real numbers chosen random predetermined range sample point algorithm algorithm voting goal find member set mutual-intersection points set manifolds members m-dimensional manifolds preconditions parameterization manifold finite search range determined parameter choose volume members partition equally-sized voting voxels k-dimensional hypercubes finer subdivision slows algorithm improves success real data noise voxels large manifolds close intersecting manifold randomly select point serve coordinates calculate point manifold determine voxel vote cast provided manifold voted repeat step voxel receives votes fraction maximum number votes zoom step define volume half size centered winning voxel return step smaller volume place manifolds generated sample points search region eliminated future consideration algorithm continues sufficient resolution reached manifolds approximately linear current search region figure voting-based manifold intersection algorithm hough transform calibration continues search region smaller smaller simply picking parameters random efficient sample point lie reduced search region underlying parameters restricted range correspond points reduced search region range determined set sample points lie current search region discussion range dithering appendix note process sampling manifold based underlying parameters sampling small region manifold restricting range parameters made existence parameterization search region smaller manifolds continue intersect linear search region inherent property manifolds stemming fact manifolds smooth derivatives search region reduced size times search algorithm attempt fit hyperplane sample points manifold lie good fit achieved manifolds desired point intersection determined step intersecting hyperplanes manifolds approximated hyperplanes hyperplane defined normal vectors point lying hyperplane mutual 
intersection point determined immediately series equations linear system bracketleftbig bracketrightbig latticetop bracketleftbig bracketrightbig latticetop experiments kruppa-constraint manifolds typically zoom-in steps manifolds sufficiently linear find directly case direct calibration kruppa-constraint manifolds choosing initial search region easy internal calibration upper-triangular matrix scale factor irrelevant assumed matrix frobenius norm equal largest search space internal calibration matrices identified hypercube point region corresponds upper-triangular matrix xyz modulus-constraint manifolds a-space empirical evidence suggests close latticetop provided initial projective reconstruction chosen properly implementation searches initial projective reconstruction fairly rounded meaning standard deviation position scene point centroid scene direction principle component assuming close latticetop initial search region chosen small larger initial choice fails real applications manifolds intersect single well-defined point noise self-calibration algorithms deal fact explicitly calculate manifolds voting algorithm advantage find small region intersected manifolds provide measure confidence region true solution manifolds region smaller reliable solution importantly voting algorithm inherently robust outliers fundamental matrix severely incorrect outlier generate manifold sporadically intersects screw-transform manifolds consideration votes generated manifold coincide votes generated inlying manifolds erroneous manifold influence zooming-in process algorithm zoom-in steps incorrect manifold reduced search region dropped consideration monte-carlo markov-chain approach strictly speaking monte-carlo markov-chain mcmc algorithms calculate estimates expected values search global extrema section abuse mcmc technique find mutual-intersection point manifolds process field stochastic optimization monte carlo methods including mcmc-based techniques simulated annealing genetic algorithms figure state mcmc search space represents position manifolds integers manifold figure shows quadruple mapped position manifold converted range position upper triangle lattice square colored gray triangles handled separately lattice point lives lattice square skew quadrilateral formed non-coplanar triangles equivalent searching global maximum inverse-distance function mcmc efficiently search global maximum stochastic process underlying mcmc spend running time states high likelihood case states high likelihood mutual intersection points manifolds algorithm stumble mutual-intersection points close small amount time present algorithm context finding mutual-intersection points set modulus-constraint manifolds algorithm kruppa-constraint manifolds discussed section approach grid laid manifold section portrayed fig grid size state state space form entries integers state positions manifold intersect entries position manifold shown fig numbers lattice point grid manifold thought lattice position numbers sub-lattice position represent position triangles shown fig triangles cover lattice square metropolis algorithm exploring state space algorithm state assigned likelihood highest likelihoods belonging mutual intersection points highest likelihoods belonging states close mutual intersection points accomplished easily inverse mutual distance likelihood dist dist dist epsilon dist means euclidean distance points manifolds state represents epsilon simply small number prevent division power factor influences search process small difference likelihood states making search process undirected large search process trapped local maxima taking long time continue exploring regions state space choice critical making usable algorithm converges reasonable number iterations note theory mcmc algorithms global maximum eventually found choice state eventually visited metropolis algorithm proceeds random starting state state satisfactory max iterations performed begin random state comments random real number range begin begin state end end end approach picking state coarse fine search simultaneously critical making working algorithm random real number range random integer integers chosen randomly set nonzero begin mod mod end begin mod mod end test true modified coarse-level search performed modified fine-level search performed avoid trapped local maximum state occasionally chosen state space random adding step makes clear state space fully connected required mcmc algorithms theory resolution grid increased make coarse-level search equivalent fine-level search time memory constraints prevent manifold grids arbitrary resolution main loop repeated set number iterations state found sufficiently close mutual intersection point end iterations state determined state represents positions manifold position triangle fig finish algorithm mutual intersection point triangles found mutual intersection point contained triangles algorithm failed restarted random state triangles mutual intersection point algorithm succeeded refine result zoom-in step performed algorithm repeated finer grid centered approximate mutual intersection point experiments zoom-in step proven unnecessary piecewise-linear approximation screw-transform manifold grid represents sufficiently good make working higher resolution unnecessary algorithm parameters chosen experimentation factors number iterations likelihood choosing random balance factor coarse fine search experiments typically values equal balance coarse fine search section discussion number mcmc iterations perform mcmc approach easily modified work kruppa-constraint manifolds kruppa-constraint manifolds -dimensional state space requires extra parameters manifold coarse-level search fine-level search states form entries integers algorithm works obvious modifications required extra parameters final state found algorithm represent position manifold position lie tetrahedron triangle dimensional search space tetrahedrons intersect single point mutual intersection points manifolds close approximation tetrahedrons intersect algorithm restarted random starting state note manifolds intersect place algorithm return mutual intersection point true voting algorithm section experimental evidence suggests modulus-constraint manifolds intersect locations section algorithm rerun intersection points found represents obvious inefficiency strength surface-fitting algorithm section finds mutual intersection points single pass chapter experimental evaluation calibration screw-transform manifolds experimental results surface-fitting algorithm experiments real simulated data performed answer questions surface-fitting algorithm surfit section algorithm work noise-free data mathematics screw-transform manifolds correct surface fitting find required mutual-intersection point manifolds performance degrade noise increases fast algorithm run views improve results points contained mutual intersection screw-transform manifolds a-space method work views real camera necessarily follow pinhole model reconstructions explanation fourth question important discussion section questions answered respect surfit sections similar questions respect mcmc-based algorithm section answered section experimental results voting algorithm section manning dyer presenting surfit experimental results discuss section synthetic data sets generated introduce error measure experiments introduce nomenclature describing synthetic data set synthetic data sets nomenclature experiments performed randomly-generated synthetic data sets typical data set created internal calibration matrix generated randomly realistic ranges parameter matlab-style pseudocode shows specifically generated note randpm returns random number range simulated image size dimensions simulated image pixels randpm randpm make pixel height similar width lens width factor wide lens lens width factor medium lens lens width factor lens width factor randpm skew factor randpm make principal point middle randpm image dimension simulated image size simulated image size object consisting perpendicular squares feature points uniformly spread squares created series cameras internal calibration randomly view feature point object fig sample scene fig sample camera view simulated views pixels answer question quantifying self-calibration algorithm works measuring distance internal calibration matrix prime calculated algorithm true internal calibration matrix algorithm ideally determined distance metric 
frobenius norm widely self-calibration literature error prime frob frob prime frob prime figure randomly-generated synthetic scene left scene object cameras viewing scene figure typical camera view synthetic scene view pixels box boundary view note object span full view making accurate calculation fundamental matrix difficult synthetic data sets figure signature fig wide fig wide medium wide fig wide medium wide fig wide fig medium fig medium medium medium table description synthetic data set experiments section frobenius norm defined frob abc def ghi exact significance error measure difficult error perfect results achieved unclear interpret small errors instance scene reconstruction ultimate goal qualitatively-good reconstruction achieved frobenius error large factors important baseline distance views amount rotation pairs cameras number views stabilizes triangulation rule thumb frobenius error means good reconstruction results larger errors internal calibration yield excellent reconstructions data set terms ntrials nviews noise nka nth object width wide medium viewing angle meaning ntrials number random trials contained data set nviews number cameras noise uniform noise pixels added feature point viewed camera image plane pixels uniform noise means feature point displaced direction amount pixels equal likelihood note means feature displaced pixels true location noise range means trial random chosen uniform random noise radius added feature trials levels noise data set nka nth dimensions approximate surface grid fit screw-transform manifold pseudocode start section dimensions array grid nka nth correspond directions object width measure image plane spanned object viewed object width data set means object width pixels image plane camera data set trial greater width specific measure object width single view standard deviation feature points camera image plane viewing angle experiments rough measures viewing angle called wide medium exact meaning terms pseudocode beginning section roughly wide viewing angle close medium viewing angle close table signatures synthetic data set experiments section listed figure data set generate fig signature wide signature means randomlygenerated trials performed cameras wide viewing angles pixels uniform noise medium-size pixels minimum retinal object width approximate surfaces fit manifold grids full range uniformly sampled locations self-calibration algorithms paper operate directly fundamental matrices calculation fundamental matrices crucial standard normalized-linear method results easy reproduce improved nonlinear methods calculating fundamental matrices improve performance calibration algorithms fraction trials error frobenius distribution error views pixels noise fraction trials error frobenius error distribution views wide lens medium object views medium lens large object views wide lens medium object figure error distribution surface-fitting algorithm applied synthetic data noise radius pixels table full description data set figure comparison error distributions data sets table detailed descriptions answer question algorithm correctness question answered graphs figs fig shows error decreasing noise decreases indicating surface-fitting algorithm work perfectly absence noise graph noise reach pixels error rises camera wide-view case indicating surfacefitting algorithm performs presence noise figures generated noisy data sets noise radius fig fixed pixels fig varied pixels histograms show vast majority trials small error demonstrating surface-fitting algorithm performs presence noise answer question algorithm speed surface-fitting algorithm distinct phases projective reconstruction calibration phase part research include timing implementation performs simple brute-force search order find initial projective reconstruction round search process slow order seconds minutes understanding closed-form solutions exist problem execute instantaneously initial projective reconstruction found phase calibration involves upgrading reconstruction affine metric upgrading affine metric closed-form solution performed instantaneously surface-fitting algorithm tested section concerns part problem upgrading projective reconstruction affine algorithm fundamental matrices time ransac process section total running time algorithm depends iterations ransac performed ransac continue error level reached triplet fundamental matrices chosen initial set triplets chosen probability success achieved meaning triplet good inlying fundamental matrices chosen leading good calibration ransac process involves indeterminate number iterations time algorithm timing long ransac iteration takes histogram per-iteration run times fig histogram shows typical iterations seconds camera views calibration fundamental matrices iterations ransac expect runtime seconds calculation account fact iterations significantly execute surface-fitting algorithm requires preprocessing step fundamental matrix screw-transform manifold manifold surface fitted surface-fitting process runs fixed time dependent desired resolution surface manifold sample point takes fixed amount time calculate implementation running sun ultra sparc required seconds time compute grid point approximate surfaces resolution experiments required seconds surface time improved surface generated fixing iterating moving median error frobenius noise pixels median error noise views wide lens medium object views medium lens large object views wide lens medium object fraction trials time sec iteration time ransac iteration views wide lens medium object figure relationship noise error data sets figure distribution run times calculations involving performed calculations involving performed loop steps step algorithm fig performed knowledge timings include efficiencies slower answer question advantage extra views views improve calibration question answered fig generate graph hundreds trials run noise radius chosen randomly pixels data sets specifically wide medium wide notice data sets views set views -view data sets differ camera viewing angle retinal object size data plotted data set trial noise radius pixels identified median error subset calculated median error plotted x-coordinate pixels process repeated noise radii range pixels pixels fraction trials mutual intersection points distribution mutual intersection points fraction trials mutual intersection points distribution intersection points varying granularities figure distribution number mutual intersection points modulus-constraint manifolds figure distribution mutual intersection points modulus-constraint manifolds differing granularities resulting graph shows noted section shows error decreases noise decreases shows views produces notably results views ceteris paribus finally shows wide field view greatly lowers error medium-size field view observation significant wide field view rarely calibration reconstruction general apparently improvement arises fundamental matrix calculation stable field view increases calibration technique dependent fundamental matrices answer question number mutual intersection points question answered fig fig figure shows distribution number mutual intersection points found trial data set signature medium approximately trials mutual intersection points roughly found intersection points due finite granularity surfaces fitted manifold trials showed mutual intersection points results suggest three-view calibration problem solutions cameras general arrangement interpretation results showing intersections errors arising approximate surface-fitting technique graph shows granularity fitted surface affects number mutual intersection points found term granularity means values generate approximate surface values means approximation means longer runtime memory consumption granularity means values uniformly spaced domain domain mapping appendix figure solid line corresponds data previous figure fig 
represents highest granularity tested lines show effect reducing granularity independently results worse low granularity general results consistent granularity showing spike mutual intersection points data sets lower granularities spikes histograms diminished expected answer question performance real cameras subsection discuss results experiments performed real cameras goal experiment acquire extremely high-quality data real camera order test self-calibration reconstruction algorithms perform ideal circumstances experiment tested algorithms realistic cluttered scene experiment high-quality data make high-quality data set created calibration object cardboard box removing sides box walls remained meeting single vertex covered inside faces walls dot pattern printed laser printer fig order establish separate -dimensional coordinate system dots face dots face unique appearance dots served positions local coordinates remaining dots face represented lattice points local coordinate system set photographs box camera fixed internal parameters minimal radial lens distortion photographs positions orientations face visible photo views captured center dot determined automatically lighting uniform faces manual preprocessing step performed equalize appearance dark light regions black dots white paper extracting dot centers faces manually partitioned view order identify face dot belonged center mass dot appeared view approximate projection dot true center view approximation dot assigned identifying coordinates view coordinate faces dot belonged coordinate dot positions face local coordinate system note dot assigned coordinates view point correspondences automatically determined views hundred point correspondences views correspondences covered complete field-ofview camera facts made ideal circumstances calculating pairwise fundamental matrices fundamental matrices calculated calibration reconstruction performed calibration methods tested data direct calibration voting scheme stratified calibration voting scheme stratified calibration surface-fitting technique paper results case essentially identical indicating extreme high quality low noise data set reconstructions perfect face perpendicular feature face lying plane features face forming orthonormal lattice grids fig voting algorithms camera views perform calibration surface-fitting algorithm figure photo calibration box figure reconstructed calibration box orthographic overhead view showing regularity dot pattern reconstructed surface note analysis experimental results presented empirical analytical interested describing apparent visual quality results comparing results physical measurements original scene camera reasons true internal calibration camera calibrate camera alternative calibration technique alternative technique contend noisy data ultimately produce approximation true internal calibration camera experiments pinhole camera true internal calibration matrix camera begin analytical analysis self-calibration results compare approximation importantly self-calibration algorithms tested synthetic data determine capacity finding correct internal calibrations experiments algorithms determine true internal calibration pinhole camera arbitrary degree precision provided input data sufficiently accurate data generated calibration box experiment good verging synthetic serve reinforce results synthetic-data experiments real applications input data lower quality feature points determined subpixel accuracy fewer feature points features cover complete camera view experiment realistic scene experiment scene more-natural objects calibration box experiment scene consisted objects mostly-flat patterned rug flat floor front flat wall perpendicular floor fig objects chosen shape color texture object cardboard box chosen visible walls perpendicular ground reconstruction features walls flat surfaces coplanar final reconstruction measure quality feature correspondences independent correctness metric reconstruction coplanar points remain coplanar projective reconstruction note cardboard box matte surface-reflectance properties limited surface texture point correspondences object inflatable plastic globe shape globe spherical viewed overhead north pole globe rounded hexagonal cross section plastic surface globe fairly reflective potentially introducing correspondence problems object furry toy monster object complicated anthropoid shape overly-detailed good testing capabilities reconstruction furry surface texture provided challenge determining point correspondences surfit calibration algorithm tested data set algorithm applied views fig chosen views closely positioned space making calibration reconstruction task difficult due small baselines small rotation angles reconstruction results shown fig algorithm returned single internal calibration calibration reconstructions note walls cardboard box close perpendicular sphere spherical toy monster correct anthropoid shape feature points produce realistic reconstruction horns lacking note correct chin brow ridges distinct rounded legs flat floor back wall planar reconstruction indicating highly-quality feature point correspondences problems back wall perpendicular floor texture rug uniformly proportioned texture appears larger regions uniform original rug problems due close fact box back box experiment figure scene reconstructed closely-spaced views inset spacing original views reconstruction wall perpendicular floor fit input data reconstruction produced algorithm cameras impossible determine back wall slanted perpendicular floor noise data hand cameras positioned view wall floor edge evident algorithm data wall floor perpendicular important recurring problem scene reconstruction noise data incorrect reconstructions fit data correct reconstruction practical standpoint important problem stems fact objects viewed side reconstructed limited fashion views angles produce complete scene reconstruction parts scene adequately visible parts objects floor reconstruct scenes widely-separated views introduces problems due accumulation errors difficulty finding point correspondences wide baselines smile workshops dedicated topic note full camera calibrations including position orientation determined algorithm wide variety techniques visualize scene more-complete manner important class visualization techniques scene reconstruction light field lumigraph techniques light-field rendering requires dense set views full camera calibration view point correspondences required recovered scene reconstruction performed starting dense set views self-calibration techniques recover camera calibration view light-field rendering approach alternatively knowledge camera calibration conjunction view interpolation techniques produce virtual camera views transitioning original views control end user interpolation techniques work directly manipulating original input images potentially produce detailedlooking output scene reconstruction detail visible original views more-or-less present interpolated views quality density feature correspondences dynamic view morphing requires affine camera calibration moving objects present finally knowledge camera calibration makes scene reconstruction space carving voxel coloring full camera calibration find dense correspondences camera views building voxelized scene reconstruction side effect dense-correspondence-finding algorithm koch requires full camera calibration dense correspondences determined detailed scene reconstruction performed variety ways producing triangle mesh output facade system utilizes full camera calibration user interaction create scene reconstructions view interpolation techniques texture-mapped scene reconstructions benefit view-dependent texture mapping facade camera calibration required view-dependent texture mapping implementation details complete discussion experimental results surfit algorithm discuss important implementation details details relevant experimental results mcmc-based algorithm presented section measuring goodness mutual intersection point experimental trial involves performing series ransac iterations ransac iteration number mutual intersection points determined surfit algorithm case mcmc-based algorithm mutual intersection points determined mutual intersection point converted internal calibration matrix assigned number indicating meets expected criteria internal calibration call goodness mutual intersection point successive ransac iterations performed calibration algorithm remembers mutual intersection point highest goodness score iterations performed 
intersection point highest goodness considered answer calibration point returned algorithm goodness mutual intersection point measured important implementation detail note goodness error measure term goodness error error measured correct solution priori sense relationship error goodness relationship probability likelihood measure goodness involved components mutual intersection point internal calibration goodness criterion reasonable real camera specifically required denote height width camera view pixels condition specifies camera rhomboid pixels arbitrary parallelogram-shaped pixels condition principal point central view test lenient information expected internal calibration camera tests made tighter meet basic criteria implementation gave poor goodness score adding large penalty criterion goodness based point recover matrix pair camera views place left-hand sides rotation matrix correct internal calibration found data noise free holds summationdisplay frob latticetop sum pairs views fundamental matrix provided fact rotation matrices orthogonal left-hand side scaled properly determinant scaling close sum criteria goodness essentially sum main error measure candidate internal calibration calibrations meet criteria severe penalty single number measuring goodness mutual intersection point produced pollefeys measure goodness experiments goodness candidate internal calibration based met expectations form expected represent camera square pixels principal point center view candidate solution closest expected form highest goodness returned final answer contrasts technique goodness based candidate calibration induces rotation matrices pairs views expected form internal calibration eliminate solutions represent reasonable cameras approach recovery cameras pixels unknown reasonable shape instance assuming pixels aspect ratio normalizing search space screw-transform manifolds provide explicit representation set legal camera calibrations fundamental matrices contrast kruppa constraints modulus constraint provide implicit representations important benefit explicit representation normalize search space provide maximum separation metric search space alternative solutions calibration fig shows modulus-constraint manifolds a-space find mutual intersection points triplet manifolds implementation fits plane manifold transforms search space fitted planes corresponded -plane -plane -plane manifolds made distinct transformation mutual intersection points lie vicinity origin outer reaches manifold maximally separated basis idea empirical observation fig manifold consists broad flat outer regions surrounding small curved region general manifold runs roughly directions a-space technique transforming search space create cloud points uniformly sampling lattice points approximate manifolds find principle components cloud principle components a-space dimensions search space normalized translating center mass cloud points origin mapping principle components unit vectors stretching space standard deviation cloud points direction principle component manifold approximately planar shape simple technique meet objectives normalization stated earlier normalizing search space section performed experiments section section surfit algorithm normalization makes bounding boxes meaningful stabilize triangle-intersection tests mcmc algorithm normalization crucial ensures distance sample points close mutual intersection point large experimental results mcmc-based algorithm section discusses results self-calibration experiments performed mcmcbased manifold-intersection algorithm section questions addressed experiments algorithm work noise-free data algorithm correct performance degrade noise increases fast algorithm run views improve results mcmc-iterations ransac-iterations algorithm perform mcmc-based algorithm compare surface-fitting algorithm interpreting results section note implementation details section surfit algorithm apply mcmc-based algorithm synthetic data sets nomenclature section experiments randomly-generated synthetic data sets performed nomenclature sets section additional data fields required store parameters specific mcmc-based algorithm mcmc iterations number iterations mcmc loop performed ransac iteration returning answer found ransac iterations number iterations ransac loop performed experimental trial data set terms ntrials nviews noise nka nth object width wide medium viewing angle mcmc iterations ransac iterations table signatures synthetic data set experiments section listed figure comments section apply experiments section synthetic data sets figure signature fig wide wide wide wide fig wide wide fig wide fig wide fig wide wide wide wide wide fig wide wide wide wide wide table description synthetic data set experiments section median error frobenius noise pixels median error noise views wide lens medium object views wide lens medium object views wide lens medium object views wide lens medium object median error frobenius noise pixels median error noise surfit views wide lens medium object mcmc views wide lens medium object figure relationship noise error data sets figure direct comparison surfit mcmc-based algorithms answer question algorithm correctness question mathematics screw-transform manifolds correct calibration answered experiments section graph fig showing error converging noise implies correctness mathematical theory question mcmc-based intersection algorithm locate mutual-intersection point screw-transform manifolds answered convergence fig histograms figs histograms demonstrate absence noise mutual-intersection point found mcmc-based algorithm high-probability success results noise-free experiments shown fig demonstrate granularity approximate surface increases making surfaces approximate algorithm finds correct answer high granularity algorithm finds correct answer time fig note histogram fig suggest mutualintersection point screw-transform manifolds misleading instance mutual-intersection points mcmc-based algorithm return intersection points success rate due unknown property mathematics mutual intersection points happened correspond fraction trials error frobenius distribution error views noise fraction trials error frobenius distribution error views noise fraction trials error frobenius distribution error views noise figure increasing granularity smoothness approximate manifold surfaces leads improved convergence mcmc-based intersection algorithm left dimensions manifold sampling grids numbers dimensions axii note grids experiments dissertation similar internal calibrations implementation adds severe penalty factor potential solution mutual-intersection point represent reasonable internal calibration criteria fairly lenient discussion section added penalty factor mutual-intersection points exist tend produce unreasonable internal calibrations discarded algorithm results section suggest mutual intersection points typically histogram fig imply single mutual-intersection point answer question algorithm speed ransac iteration mcmc-based algorithm runs constant speed speed directly proportional number mcmc iterations performed takes seconds implementation perform mcmc iterations mhz pentium iii complete runtime parenleftbigg number fundamental matrices parenrightbigg parenleftbigg time create manifold grid parenrightbigg parenleftbigg number ransac iterations parenrightbigg parenleftbig seconds parenrightbig time needed construct initial projective reconstruction part research ransac process short circuited internal-calibration matrix sufficient goodness score section found process fast chose fixed number ransac iterations experiments comparison timing results section experiments performed slower computer seconds time compute manifold grid point mhz pentium iii surface resolution seconds compute manifold based run times experiments section divided roughly comparison results section answer question advantage extra views question answered plot fig significant decrease error camera views minimum views produce results views note number ransac iterations performed trials ransac iterations -view -view cases produced results cases triplets manifolds explore ran experiments test ransac iterations cost longer run time answer question choosing mcmc parameters common complaint machine-vision algorithms carefully tune algorithm parameters order achieve good performance case intersection 
algorithms ran experiments surface-fitting algorithm parameters create approximate manifold surfaces granularity determine goodness potential solutions performance algorithm hinge choosing ideal parameters suggested values parameters dissertation additional parameters set mcmc-based algorithm fraction trials error frobenius distribution error views pixels noise fraction trials error frobenius distribution error views pixels noise figure histogram showing likelihood successful calibration views noiseless data figure histogram showing likelihood successful calibration views noiseless data number ransac iterations perform number mcmc iterations perform ransac iteration explain surface-fitting algorithm number ransac iterations depended solely anticipated number outlying fundamental matrices iteration yield mutual-intersection points chosen triplet manifolds re-explore triplet mcmc-based algorithm produces solution triplet produce solutions trapped local minimum error function perform extra ransac iterations increase probability success chose perform fixed number ransac iterations number experimental trial graph fig shows effect numbers ransac iterations table description data sets expected ransac iterations increased likelihood success chose iterations experiments section ransac iteration consists drawing manifolds random mcmc-based search process attempt locate mutual intersection point manifolds section search process starts random state representing points median error frobenius mcmc iterations median error mcmc iterations views wide lens medium object median error frobenius ransac iterations median error ransac iterations views wide lens medium object figure median error amounts iterations mcmc loop figure median error amounts iterations ransac loop a-space position manifolds states explored stochastically tendency explore states positions a-space potentially close mutual-intersection point number mcmc iterations perform parameter tuned higher numbers reliability slow algorithm graph fig shows results numbers mcmc iterations fixed number ransac iterations experiments iterations graph suggests iterations doubling runtime produced benefit reducing error answer question comparison surface-fitting algorithm surface-fitting algorithm produce results mcmc-based algorithm rely underlying approximate surfaces surface-fitting algorithm finds mutual intersection points mcmc-based algorithm find mutual intersection points mcmc-based algorithm significant practical advantages important performs relative surface-fitting algorithm graph fig shows direct comparison results algorithms significant advantages mcmc-based algorithm simple implement dimensionality manifolds sample store approximate surfaces manifolds manifolds sampled fly albeit significantly slower runtime property extremely important intersecting higher-dimensional manifolds storage preprocessing time creating approximate surfaces infeasible important potential implementation algorithm low-powered portable platforms memory potentially slow runtime offset low-powered microprocessors working parallel algorithm arbitrarily scalable calibration views section explain question section important recall screw-transform manifold a-space -dimensional a-space -dimensional intersection manifolds general set discrete points points represents original internal calibration camera meaningless provide alternative legal internal calibrations camera turns intersection manifolds yields set point calibration achieved camera views alternatively number mutual intersection points large camera views order make set smaller number mutual intersection points instance suggest camera calibration dual calibration consistent observed data set fundamental matrices words calibration problem unique solution sufficient number camera views incorporated number mutual intersection points number legal camera calibrations critical solving calibration minimizing error function optimization algorithm levenberg-marquardt gradient descent run time global minimum global minimum corresponds legal internal calibration optimization algorithm run time starting locations find global minima bad cases global minimum small attraction basin optimization algorithm run hundreds thousands times succeed knowing mutual intersection points exist impossible global minima found search process stop noise-free data legal internal calibrations correspond global minima error function noise real data legal internal calibrations correspond local minima global minima knowing legal calibrations supposed exist differentiate meaningless local minima local minima correspond legal internal calibrations legal calibrations supposed exist algorithm return local minima smallest error measure ransac smaller sample size faster reliably algorithm works camera views leads internal calibrations ransac sample size views sample unique calibration ransac infeasible algorithm run slowly inlying fundamental matrices good sample considerations importance existing calibration algorithms rely minimizing error function find calibration cite mcmc-based algorithm section falls category note surface-fitting method section energy-minimization method suffer drawbacks listed surface-fitting method determines mutual intersection point pass makes ideal experimentally determining number mutual intersection points three-view case pollefeys pointed camera views upper bound mutual-intersection points eliminating impossible cases schaffalitzky reduced number number large make calibration views infeasible experiments surface-fitting method suggest instances mutual intersection points fig experiments section calibration views feasible experiment shown fig performed views chapter calibration image-based rendering dynamic scenes overview point scenes motion called static scenes scene considered static camera views captured simultaneously alternatively static scene evolve time opposite static scene dynamic scene scene motion time dynamic scenes present challenges researchers beginning investigate present opportunities gaining information scene cameras viewing scene standard term scene reconstruction structure motion confused kind motion chapter define structure motion structure motion reconstruction rigid scene scene camera views due change camera positions orientations displacement scene combination structure motion problem apply static scenes long camera moves motion constrast issues discussed chapter concern dynamic scenes exclusively dynamic scenes objects undergoing motions substitute motion camera motion objects moving object scene represents separate classical structure-from-motion problem instance camera calibration determined separately moving object results adjusted arrive solution optimal objects simultaneously movement scene objects relative presents source information calibration reconstruction extra information section conjunction screw-transform manifolds section produce linear algorithm affine calibration major camera calibration scene reconstruction produce views scene vantage points physically-correct views input views cases physically-correct views scene created determining camera calibration projective level performing scene reconstruction section section methods interpolating views dynamic scene section addresses dynamic scenes moving objects apparent straight-line trajectories section addresses dynamic scenes rotating objects examing view interpolation performed camera calibration camera calibration determined uncalibrated view interpolation severely limits control position orientation virtual camera require virtual camera change time introducing undesirable distortion dynamic scenes calibration information produce constant velocities moving objects special-case dynamic scenes interpolated camera calibration specialized algorithms preconditions required case contrast camera calibration scene reconstruction leading unlimited control camera scene motion observations add evidence camera calibration necessity ibr techniques screw-transform manifolds dynamic scenes begin discussion dynamic scenes showing theory screwtransform manifolds conjunction dynamic scene data fixed cameras possibly internal parameters view moving object assume object rigid structure undergo displacement camera capture view moving object time leading views alternatively cameras stereo rig moved static scene views separate cameras fixed positions fundamental matrices cameras place cameras projective basis note distinct fundamental matrices induced system fundamental matrices monocular generated views share internal parameters monocular fundamental matrix induces screwtransform manifold 
a-space note legitimate refer single a-space distinct internal parameters camera camera cameras projective basis vector a-space upgrade projective reconstruction affine lives intersection screw-transform manifolds intersection -dimensional manifold a-space clever limit location screw-transform manifold parameterized parameters creating search space called -space adding extra dimension a-space correspond coordinate mapped position a-space mapped position space screw-transform manifolds consideration induce pair manifolds -space mapping note coordinate manifolds a-space moving scene object undergoes rotation viewed cameras means intersection screw-transform manifolds -space point coordinate point rotation angle true amount screw displacement object measured multiple distance camera axis screw rotation camera dependent moving object note intersection manifolds space -dimensional set set discrete points manifolds general configuration affine calibration determined searching -space a-space manifolds consideration intersect manifold a-space expected images -space intersect manifold making problem indeterminate shown problem form stereo-rig problem unique solution key difference technique section zisserman technique presented works fundamental matrices linear algorithm affine calibration scene motion introduction section present linear algorithm utilizes relative motion objects dynamic scene determine affine calibration cameras viewing scene algorithm finds homography induced plane infinity views scene things knowledge affine calibration affine scene reconstruction intermediate step metric self-calibration algorithm finds affine calibration directly fundamental matrices moving objects fundamental matrices required additional incorporated naturally linear system providing greater numerical stability cameras optical centers stationary background elements scene give rise standard fundamental matrix incorporated linear system views moving rigid-body object give rise fundamental matrix matrix algorithm object motion meets conditions simplest form conditions object undergo rigid translational motion views scene algorithm basic condition generalized notice views captured times dynamic nature scene relevant missing interval time views captured missing interval object undergo motion long total change object location equivalent single rigid translational motion condition met scene apparent linear motion term object specific meaning section defined general condition object group particles scene exists fixed vector particle total motion missing time interval equal section objects assigned numbers notation represent motion vector object problem finding affine calibration views widely studied great machine vision affine calibration recovered affine scene reconstruction immediately triangulation things affine reconstruction affine model-based object recognition tracking augmented reality feature transfer view generation image-based rendering finding affine calibration essential intermediate step stratified approach metric selfcalibration instance views scene captured camera constant internal parameters affine calibration recovered pair views metric calibration camera determined realm pure image-based rendering shown affine calibration directly generate linear interpolation sequences dynamic scenes apparent linear motion scene reconstruction techniques finding affine calibration pairs views published authors fact views captured fixed camera undergoing rigid translational motion infinity homography views identity matrix faugeras alternative approach affine calibration involves pure translational motion techniques developed restricted case planar camera motion camera internal parameters change camera undergoes translations rotations parallel fixed plane techniques directly related dynamic scenes place restrictions camera motion technique places restrictions object motion camera motion direct method finding affine calibration identify conjugate directions points plane infinity coplanar planar homographies infinity homography completely determined behavior points pollefeys demonstrated affine calibration views camera determined conjugate directions modulus constraint utilized conjugate direction determined motion moving object scene techniques applicable moving objects present technique presented section usable moving object present static background provide fundamental matrix additionally cameras approach technique presented zisserman expanded horaud applies general class problems technique completely mathematical approach zisserman algorithm stereo rig viewing static scene locations mathematically based projective reconstruction conjugate points contrast technique works directly fundamental matrices reconstruction additional errors introduced projective reconstruction errors introduced triangulation avoided technique strictly identify conjugate points fundamental matrices determined means stein presented direct method finding trilinear tensor views optical flow required fundamental matrices determined trilinear tensor technique applied stereo rig problem static scenes rig undergoes rigid translation section general apply zisserman technique dynamic scenes considered recently sections published dynamic scene information types calibration fitzgibbon zisserman studied problem metric calibration multiple moving objects techniques presented nonlinear minimization problems technique present linear closely related problem presented shashua wolf developed technique finding dual htensor views dynamic scene objects move straight-line paths algorithm linear principal dual htensor find relative calibration views optical centers views lie line alternatively entire scene scene motion single plane technique requires views restrictions apparent linear motion requirement earlier finally stein presented method finding weak calibration widely-separated views statistics acquired dynamic scene extended period time technique unrelated present work discussed notation preliminary concepts assume camera views captured times pinhole cameras denoted camera camera section fixed-camera formulation meaning cameras treated location world moving accomplished subtracting displacement cameras motion vectors objects scene reformulated scene object moves stationary background object moves fixed-camera formulation camera matrices camera represents basis basis induced camera called basis reiterate choose reinterpret cameras sharing optical center actuality cameras locations completely internally note vectors platonic section express vector basis simply subscript curly braces subscript basis camera note distinguishing platonic directions platonic positions cameras locations original scene nonzero exists fundamental matrix cameras representation figure fixed-camera formulation left cameras view dynamic scene positions camera captures view time camera time scene moving object labeled stationary object labeled object translates time displacement optical centers views captured alternative scenario cameras share optical center object translates object translates denotes cross product matrix homography induced plane infinity quantity seek calculate cameras share optical center fundamental matrix meaning moving object scene define kind fundamental matrix switching fixed-camera formulation object moving direction fundamental matrix object epipoles vanishing points object viewed cameras epipolar lines trace trajectories points object notice fixed-camera formulation stationary background original scene moving object provided nonzero fixed-camera formulation create single mathematical theory applies pairs cameras locations pairs cameras share optical center views single camera undergoing zoom rotating optical center motion-based affine calibration show affine calibration computed directly motion scene objects moving parallel objects indexed set observe rank invertible matrix rank rank rank deficiency arises -dimensional vector space real numbers specifically basis matrices basis parallel denotes subspace generated set vectors find scalar find nonzero element intersection accomplished finding matrices notice spanned exist scalars equality means bracketleftbig bracketrightbig latticetop treat matrices column vectors solved standard techniques linear algebra singular decomposition find eigenvector eigenvalue found find scalar formally show left-most matrix rank rank solution vectors form linearly independent set 
parallel scalars contradiction rank rank column vectors linearly independent reliance linear independence column vectors crucial linearly independent algorithm unstable objects move parallel directions generalizing multiple objects moving objects present scene mathematics presented generalized incorporate object fundamental matrix simultaneously large linear system objects numbered denote matrix denote matrix filled construct matrix method start equal null matrix parallel enlarge matrix appending matrix bottom bracehtipdownleft bracehtipdownright bracehtipdownleft bracehtipdownright bracehtipdownleft bracehtipdownright constructed system solved singular decomposition latticetop affine calibration determined holds experiments synthetic data extensive experiments synthetic data conducted test approach section summarize experimental method present results experimental procedure general pattern trial run objects generated random translation assigned object cameras random internal parameters created randomly positioned objects time visible camera objects time visible camera noise added projected points image plane method section recover affine calibration cameras trials scale object magnified reduced distance objects moved scaled amounts amount noise varied error recovered measured error metric error metric treating matrices vectors vectors denoting calculated true error calculated note quantity cos angle vectors error metric based frobenius norm represented distance matrices points matrices equal sign factor erroneously large error avoid issue sign cosine angle matrices measuring parallelness object consisted points selected randomly unit sphere density points uniform sphere internal parameters cameras randomly generated ranges realistic actual cameras image size pixels fact crucial interpreting results follow measurements noise added pixels framework outlined scenarios created simulate conditions algorithms section practice scenario time objects space time objects moved arbitrary direction viewed camera camera space scenario objects located arbitrarily circle allowed move parallel plane circle cameras positioned randomly circle higher elevation objects scenario iii objects located sphere radius units cameras located larger co-centered sphere sphere objects objects move direction positioning cameras close scenario simulates hand-held camera camera travel views compared objects travel scenario simulates parking lot vehicles drive flat surface lot surveillance cameras positioned buildings lot scenario iii tests algorithm fully general conditions note objects case scenario corresponds motion vehicles level terrain vectors mutually parallel plane final detail noted noise added projected points retinas outliers created specifically trial run called average pixels noise uniform noise radius pixels added point conjugate point pixels true position retina assumed practice outliers removed earlier steps processing lack outliers accurate fundamental matrices found normalized linear method results table shows calibration error related number conjugate points average amount noise added conjugate point expected error decreases number conjugate points increases amount noise decreases large standard deviations stem occasional outliers scatter graphs fig give visual indication error values distributed recall algorithm unstable objects move parallel considered fixed-camera formulation instability demonstrated fig notice outliers angles approximately remaining scatter graphs table presented trials angle object motion vectors eliminated trial scatter graphs conjugate points object average pixels noise added point scatter graph fig shows error reduced noise reduced notice outliers small noise levels general trend clear calibration error average noise added point pixels pixels pixels pixels pixels points error error error error error points points points table calibration error amounts object points noise levels calibration error objects objects objects points points points points table positive effect moving objects angle object motion vectors degrees error actual noise pixels error average object size pixels error smallest retinal object motion pixels error figure calibration error angle degrees object motion vectors considered fixed-camera formulation calibration error average noise added point calibration error object area image plane calibration error retinal object motion time time object object figure views left source views box find fundamental matrices calibration views camera left views camera top pair shows object moving camera bottom pair shows object moving laterally rightmost views show affine reconstruction box angles fig demonstrates error reduced objects larger image plane notice average object size covers pixels image error increases rapidly hypothesized algorithm stabilized greater projected object motion fig shows error affected amount apparent motion objects image plane ranges tested expected amount motion approached noise level error increase tested finally table shows result stabilized moving objects note improvement gained conjugate points due increased stability brought conjugate points compute fundamental matrices experiments real data section present results experiments performed real scenes experiment experiment designed produce reliable data object experiment covered regular dot pattern fig center dot determined subpixel accuracy automatic algorithm found center mass dot cameras fixed position experiment actual object moved directions served objects means objects visible time fact irrelevant algorithm cameras fixed positions relative stereo rig situation occurs pair fixed cameras monitoring intersection roads occasionally lone vehicles cross intersection direction vehicle give rise fundamental matrix time affine calibration accurately computed ground truth affine calibration views acquired threedimensional calibration grid hundred points positions camera matrix computed directly correspondences stemming calibration grid prior radial distortion corrected separate step ground truth affine calibration determined directly full camera matrices affine calibration determined motion box distance matrices error metric synthetic experiments treating matrices vectors figure views experiment left view camera time view camera time view camera time experiment experiment utilized objects natural texture fewer reliable point correspondences obtained experiment objects piece section section slid table simulate motion objects cameras object viewed cameras fixed position experiment input images experiment shown fig notice center view zoomed radial distortion left view left center views camera camera form pair representing object time pair fundamental matrix recovered standard techniques point correspondences selected hand object slid table manner approximating pure translation final view captured camera shown rightmost view fig fundamental matrix computed center views point correspondences selected hand algorithm applied fundamental matrices yielding affine calibration ground truth affine calibration determined vanishing points regular grid viewed cameras orientations space vanishing figure additional test affine calibration determined experiment affine reconstruction planar calibration grid performed views grid left views reconstructed surface shown points grid found automatically separate program represent conjugate directions views points infinity sufficient finding affine calibration affine calibration determined agreement good potential sources error experiment distance matrices error metric additional test accuracy affine calibration determined algorithm reconstruct regular planar grid points viewed cameras fig reconstruction shows curvature grid lines resulting part residual lens distortion errors reconstruction ground truth affine calibration yielded similar curvature artifacts radial distortion prominent camera camera distortion corrected 
separate preprocessing step method experiment distortion remained agreement affine calibrations determined distinct methods conclusion dynamic scenes sources information present static scenes methods exist utilize extra information section presented linear algorithm utilizes dynamic scene information determine affine calibration generallypositioned camera views algorithm shown work synthetic real data experiments synthetic data shown algorithm degrades gracefully noise results improve moving objects incorporated remains investigated ideas section extended utilize views trilinear tensor arising views stabilize fundamental matrix calculation improve results compute affine calibration directly pairs trilinear tensors view interpolation dynamic scenes apparent linear motion introduction view interpolation involves creating series virtual views scene represent continuous physically-correct transition views scene previous work view interpolation restricted static scenes dynamic scenes change time evident views captured times view interpolation dynamic scenes portray continuous change viewpoint continuous change scene order transition smoothly views fig approach problem based earlier technique called view morphing method interpolating widely-spaced views static scene technique strengths make suitable practical applications views assumed require camera calibration provided calculate camera parameters method works sparse set correspondences views information figure dynamic scene times goal view interpolation dynamic scenes synthesize view camera middle frame starting views cameras left frames views information added control output increased realism addition view morphing numerous existing methods create view interpolations static scenes methods directly applicable dynamic scenes avidan sashua provide method recovering geometry dynamic scenes objects move straight-line trajectories geometry recovered dynamic view interpolations created standard graphics pipeline algorithm apply problem discussed section assumes views camera matrix view recovered mosaicing techniques dynamic scenes mosaicing involves piecing small-field views create single large-field view view interpolation involves synthesizing views vantage points set original view morphing algorithm assumes static scene refer static view morphing distinguish dynamic view morphing technique presented section seek perform view interpolation directly views additional information scene missing interval time views captured impossible occurred missing interval goal work deduce manner scene changed interested portraying scene changed portrayal physically correct continuous method dynamic scenes satisfy apparent-linear-motion assumption object scene object undergoes missing time interval equivalent single rigid translation term object specific meaning section defined condition object group particles scene exists fixed vector particle total motion missing time interval equal method dynamic view interpolation physically accurate unsatisfactory portrays objects moving unreasonable trajectories instance portraying car driving bridge essential car stay bridge entire sequence address problem developed techniques portraying straight-line motion camera-based coordinate frame straight-line constant-velocity motion camera world coordinate frames brevity refer style portrayal linear motion fig depicts linear motion view interpolation cameras share position world coordinates virtual camera shares position straight-line motion relative virtual camera implies straight-line motion world coordinates case virtual camera moves view interpolation fig demonstrates easy show objects portrayed undergoing linear motion camera coordinates virtual camera considered undergoing linear motion world coordinates case objects undergo linear motion world coordinates static view morphing static view morphing works prewarping views make image planes parallel prewarp conjugate points views linearly interpolated produce physically-accurate view scene locations conjugate points guide morphing algorithm filling remainder virtual view interpolated figure round object filmed moving trajectory straight line camera frame object shown equal time intervals move constant velocity camera motion filming object follow straight-line trajectory world coordinates conjugate points guaranteed viewed correct physically-accurate locations increasing density conjugate points virtual view made arbitrarily accurate prewarp performed information fundamental matrix calculated directly conjugate points complete details algorithm found dynamic view morphing preliminary concepts assume views captured time time pinhole cameras denoted camera camera fixed-camera formulation meaning assume cameras location world moves accomplished subtracting actual displacement cameras motion vectors objects scene fig assumption camera matrices camera equivalent basis note assumption made cameras share optical center camera matrices completely denote world coordinate frame notation transformation basis basis camera matrix interest work matrix note capital script letters represent matrices identity matrix patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar 
patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar figure cameras share optical center viewing point object translates image planes cameras parallel interpolation produce physically-correct view object image plane line parallel shown fundamental matrix cameras locations representation denotes cross product matrix cameras share optical center fundamental matrix meaning moving object scene define kind fundamental matrix making fixed-camera assumption moving direction fundamental matrix object epipoles vanishing points viewed cameras epipolar lines trace trajectories points view interpolation single moving object assume cameras share optical center viewing point part object translation vector denote position time fig assume subsection image planes cameras parallel half condition means row equals row scaled constant half means denotes z-coordinate vector note condition met retroactively standard rectification methods part prewarping views mentioned section setting linear interpolation projection cameras define virtual camera matrix def linear interpolation equal projection scene point image plane camera homogeneous coordinates def def notice depends camera matrices starting location linear interpolation conjugate projected object points factor creates physicallyvalid view camera entire object translated note represented basis difficult general characterize trajectory world coordinates greater control interpolation process prove straight-line motion achieved constant-velocity straight-line motion linear motion achieved fig assume scalar multiplying sides yields multiplying sides left derived image planes parallel conjugate directions equal scalar scalar physically correct depicts straight line motion motion constant velocity prewarps make interpolation figure interpolation sequence related preconditions views stricter preconditions lead increased control output multiplying sides yields basis longer plays role virtual trajectory straight-line basis virtual object moves constant velocity results basis multiplying results hold world coordinates camera coordinates completing proof mind world coordinate system context origin shared optical center cameras camera matrix transformed camera matrix view camera time transformed view camera time producing views scene camera times reason call camera-to-camera transformation applying earlier results special case derive corollary forms basis algorithm section camera matrices equal camera matrix virtual camera virtual object moves constant velocity straight-line path linear motion dynamic view morphing algorithm present dynamic view interpolation algorithm portray linear motion algorithm requires knowledge original view layer background layer layer transparent figure view divided layers layer corresponds moving object single background object objects translate amount step segment views layers layer representing moving object order layers nearest object farthest object fig step transform layer view creating view camera step apply static view morphing layer separately step recombine virtual layers correct depth order step optional postwarp view step virtual camera layer corollary previous section layer portray object undergoing linear motion step produces desired linear portrayal entire scene special case parallel motion section examine special-case scenarios dynamic view interpolations produced knowledge assume fixed-camera formulation denote displacement position object time position time scene consists parallel motion parallel space dynamic view morphing algorithm parallel motion case segment view layers objects apply static view morphing layer recomposite results algorithm works fundamental matrix respect object prewarp works layer prewarp make direction motion object parallel x-axis views virtual objects follow straightline trajectories measured camera frame assume background object motion world coordinates virtual camera moves parallel motion objects virtual object motion straight-line world coordinates special case planar parallel motion case parallel fixed plane space note objects translating plane note case applies moving objects recall section requirement virtual view physicallyaccurate portrayal object translates image planes views parallel planar parallel motion case prewarp views image planes parallel displacements objects simultaneously dynamic view morphing algorithm planar parallel motion case segment view layers objects view find single prewarp sends coordinate vanishing point object prewarp apply static view morphing layer recomposite results algorithm guarantees physical correctness straight-line linear motion appearance straight-line motion created making conjugate motion vectors parallel prewarp step dynamic scene hierarchy section interrelates algorithms previous sections assume fixed-camera formulation meaning choose interpret views captured cameras shared optical center classifying object scene based direction translation vector objects class translation vectors parallel natural hierarchy emerges based number distinct parallel motion classes scene scenes motion class class corresponds null direction vector scene static view interpolation reduces mosaicing direction vector non-null view interpolations produced parallel motion algorithm section scene motion classes planar-parallel motion algorithm applies section motion classes determined section directions classes linear motion algorithm applies section scenes motion classes planar-parallel algorithm applies approximated making reasonable assumptions cameras affine cameras mathematical development affine cameras includes 
orthographic cameras similar pinhole cameras special cases camera-to-camera transformation exists cameras typically impossible guarantee linear motion virtual objects hand interpolation conjugate points produces physically-valid virtual view needing make image planes parallel prewarps applied align conjugate directions achieve straight-line motion general align conjugate directions complete discussion finding relative camera calibration problem determining central linear motion algorithm section determined conjugate directions well-known result mosaicing conjugate directions conjugate points treat cameras co-centered fundamental matrix determined objects scene objects moving parallel determined directly fundamental matrices previous fact proven method approximating conjugate directions making reasonable assumption internal parameters typical cameras applications dynamic view morphing potential applications list filling missing gap movie creating hand-off sequence switch camera view creating virtual views scene removing obstructions moving objects sequence adding synthetic moving objects real scenes projecting motion future past stabilizing compressing movie sequences creating movies images experimental results tested concepts section variety scenarios fig shows results tests series frames view interpolation sequence left-most right-most frames strip original views center frames virtual views created algorithm figure experimental results create sequence preprocessing steps performed manually views divided layers moving objects layer set conjugate points views determined implementation beier-neely algorithm morphing step determined series line-segment correspondences point correspondences sequence line-segment correspondences counting layer sequences camera calibration completely unknown focal lengths cameras locations sequence test involving moving objects counting background object approximated appearance straight-line motion achieved aligning conjugate directions motion object prewarp step object direction motion epipoles object fundamental matrix calculating objects fundamental matrices determined epipoles directly vanishing points tape roads sequence involves moving objects counting background object dramatic change focal length sequence demonstrates parallel motion algorithm section scene static pillar foreground remaining background elements treated separate objects moving parallel conclusion section presented method interpolating views dynamic scene method requires object scene movement occurs views equivalent rigid translation algorithm produces virtual views portray version occurred scene image planes cameras parallel motion object interpolated view object physically correct conditions cameras object portrayed moving straight-line path moving constant velocity straight-line path interpolated views complete dynamic scene synthesized separately creating interpolated views scene component objects combining results choosing interpret views coming position space single theory created applies situations theory applies original cameras co-centered impossible views original cameras positioned relative fixed-camera formulation natural default assumption virtual camera chosen move trajectory choice simply alters interpretation virtual views fixed-camera formulation simple intuitive development underlying mathematics theory topics section additional topics observations discussed greater detail view interpolation turntable motion section view interpolation views dynamic scene purely rotational motion demonstrated method analogous dynamic view morphing method section virtual camera constant internal parameters avoiding undesirable distortion effects object motion rotational straight-line result similar result fitzgibbon explicit scene reconstruction performed purest image-based-rendering sense pixels shifted flat images create physically-correct views unclear result fitzgibbon generate interpolation sequences goal scene reconstruction extra information metric scene reconstruction impossible turntable views meaning scene simply reconstructed rotated turntable sequences chasles theorem mentioned section series rotations applied sequence produce transformation equivalent rotation single axis discussing arbitrary rotational motion rotation single axis purely-rotational scene motion equivalent turntable setup depicted fig scenario single camera mounted tripod fixed orientation internal parameters views object turning invisible turntable fixed-camera formulation rotational motion views scenario internal parameters results derive assumption apply scenarios cameras internally calibrated scenario fig equivalent turntable scenario recognizable vision researchers consists cameras locations viewing static scene fundamental matrix views fundamental matrix derived solely correspondences views regard patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar figure turntable scenario patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar figure original turntable setup alternative equivalent interpretation views principle relativism axis rotation figure view left column shows view epipole conjugate scene points epipolar lines views superimposed axis rotation found fitting line intersection epipolar lines views captured fundamental matrix turntable scenario depicted fig view fixed camera fig turntable rotates denote camera time point lies axis rotation stay location rotation point rotation axis latticetop latticetop equation sufficient finding axis rotation fundamental matrix perfect fundamental matrices notoriously difficult compute accurately found approach works real data arbitrary position space thinking scenario fig notice camera optical centers position define epipolar plane plane intersects rotation axis position projects position view switching back fixed-camera formulation fig epipolar lines drawn fixed view epipolar lines intersect point lies rotation axis arbitrary finding intersection points conjugate epipolar lines locate points rotation axis axis rotation determined intersecting conjugate epipolar lines conjugate point pairs provided find linear regression fit line intersection points fig notice conjugate point pairs find reused combination find axis rotation numerical stability algorithm axis found solely data noise original conjugate point set information points rotation axis satisfy term biepipolar plane denote unique plane perpendicular rotation axis world coordinates optical center camera fixed-camera formulation fig term refers fact epipoles contained line defined plane intersecting image plane line termed biepipolar line found plotting epipoles single view drawing line note point biepipolar plane latticetop biepipolar line epipolar line set latticetop projected camera view consists axis rotation biepipolar plane view biepipolar plane important interpolation process interesting note internal calibration cameras unknown rotation axis turntable sequence determined views conjugate points typically find fundamental matrix fact determined minimal amount input data section discusses create synthetic interpolation sequence views showing object undergoing complete cycle turntable turntable view synthesis algorithm overview algorithm detailed explanation step algorithm assumes fixed-camera formulation fig makes single view step find epipoles fundamental matrix views axis rotation step transform view epipoles 
plane axis rotation line views parallel y-axis step find apply view affine transformation makes orbit feature point circle process includes finding center rotation conjugate point pair step rotate feature points respective centers rotation produce synthetic view scene step postwarp synthetic view applying inverse transformations applied steps step discussed step straight-forward transformation accomplished ways step complicated part algorithm steps camera view biepipolar plane internal calibration camera begin transformations introduced correct euclidean frame hold conjugate-point pair lies circle center axis rotation arc length conjugate pair measured radians circle pair amount turntable rotated needed affine transformation biepipolar plane makes conditions true axis rotation path rotation figure overhead view biepipolar plane step figure views created rotating point circular path fig shows view biepipolar plane correct affine transform applied conjugate pairs view view center rotation pair angle rotation pair note positions camera view writing euclidean conditions directly matrix representing sought-after affine transform rotation matrix prime prime step view transformed axis rotation parallel y-axis set prime unknown x-coordinate axis rotation note underlined capital letters unknowns summary key insight realize matrices meet desired conditions instance works rotation matrix sought-after geometric relationships preserved rotations relationships preserved scaling defined transforms basis vectors prime prime satisfactory solution modify rotation scaling prime prime assume affine transform preserves y-basis vector final insight simply fix solve remaining unknowns fix true happen alternatively unknowns found choice satisfactory scene choice correct setting cos sin rewritten linear system solving unknowns equation conjugate pair conjugate pair differs large linear system large small sample conjugate point pairs find unknowns conjugate pair determined separately single closed-form equation step illustrated fig step views straight biepipolar plane plane viewed correctly euclidean coordinates accuracy center rotation conjugate pair straight forward rotate point fixed amount center rotation step postwarp step making synthetic view original views easy achieve simply undoing transformations applied view final synthetic image show turntable scene rotated euclidean sense turntable axis rotation relative starting position view chosen conjugate points synthetic view dense correspondence views reasonable acquire views closely spaced synthetic view dense realistic sparse correspondence determined techniques image morphing complete synthetic view scene polyhedral techniques create dense correspondence real turntable sequence stationary background rotating turntable cases layering create realistic synthetic views simply place background turntable separate layers leave background unchanged recomposite synthetic turntable image stable background arbitrary numbers turntables visible views layering create synthetic view separately recompositing final result works synthetic view camera original camera separate turntables rotated amounts multiple turntables visible scene rotation axes parallel space extract full euclidean calibration left future work sample results applying algorithm real views fig errors visible output due incorrect point correspondences cases missing information due occlusions nonetheless shape house model evident extreme rotation angles figure experimental results top row original views conclusion section method view interpolation views rotating object presented interpolation sequence show object rotating constant velocity virtual camera fixed internal parameters sequence interpolation sequence distortions evident view morphing techniques internal calibration virtual camera change sequence views captured cameras internal parameters calculate fundamental matrix views notoriously difficult determine correctly long epipoles biepipolar line determined conjugate points notably axis rotation determined directly point correspondences interpolation algorithm represents ibr purest form virtual views created moving pixels scene reconstruction chapter summary accomplishments dissertation achieved concept underlying theory screw-transform manifolds presented formal mathematical proofs conjectures lacking logical derivation screw-transform manifold algorithms algorithms define ample experimental evidence synthetic real data suggests truth conjectures detailed formal proofs steps screw-transform manifold algorithms provided general-purpose algorithms finding mutual-intersection point series manifolds presented algorithms variety camera calibration calibration achieved finding mutual intersection point screw-transform manifolds voting algorithm section presented algorithms presented extensive experiments section section demonstrated efficacy performance characteristics surfit mcmc-based algorithms detailed metric scene reconstruction closely-spaced views real scene demonstrated surfit algorithm section fig experiments shown calibration reliably achieved camera views established experiments surfit algorithm showed trials performed camera views noise yielded calibrations correct calibration section detailed discussion successful reconstruction real camera views section demonstrated mathematics screw-transform manifolds specialized motions non-general motions presented section case turntable motion presented case transfocal motion presented case general motion presented important theorem partitioning pairwise monocular camera motions categories theorem section table table presented simple test provided category knowledge case called transfocal motion formally labeled studied manning dyer test turntable motion presented minor flaw proof test corrected manning dyer important details needed implementing algorithms presented detailed tutorial multiview geometry provided assumes knowledge linear algebra tutorial prove friendlier existing texts early graduate students advanced undergraduates interested topic history survey image-based rendering camera calibration presented linear algorithm affine calibration stereo rig dynamic scenes presented algorithm requires apparent linear motion scene algorithm published dynamic scenes camera calibration nonlinear algorithm affine calibration stereo rigs directly fundamental matrices presented time views static scene required alternatively rig view rigid object undergoing general motion ibr method generating physically-valid interpolation sequences views dynamic scene apparent linear motion presented method perform physically-valid view synthesis dynamic scenes viewpoints ibr method generating physically-valid interpolation sequences views dynamic scene turntable motion presented time conclusions time graduate student studying image-based rendering broad conclusions image-based rendering part larger trend engineering sampling efficient solve problems speech synthesis ibr techniques require camera calibration ibr dynamic scenes camera calibration highly restrictive terms classes motion portrayed kinds virtual views created echoes sentiment expressed werner doctoral thesis calibration general pinhole camera provided data point correspondences sufficiently-low noise completely-accurate internal calibration produce usable scene reconstructions ego-motion estimates finally mutual-intersection points collection manifolds determined quickly reliably direct intersection low-dimensional manifolds represents ideal alternative nonlinear optimization performing camera calibration bibliography adelson bergen plenoptic function elements early vision pages mit press cambridge aloimonos low level visual computations phd thesis rochester appel techniques shading machine renderings solids afips spring joint computer conf volume pages armstrong zisserman beardsley euclidean structure uncalibrated images proc british machine vision conference pages armstrong zisserman hartley self-calibration image triplets proc european conference computer vision lncs pages springer-verlag avidan shashua view synthesis tensor space proc computer vision pattern recognition conf pages avidan shashua non-rigid parallax linear motion proc image understanding workshop pages ayache lustman trinocular stereo vision robotics ieee trans pattern analysis machine intelligence bajura neumann dynamic registration 
correction video-based augmented reality systems ieee computer graphics applications baker kanade limits super-resolution break proc computer vision pattern recognition conf pages baker kanade hallucinating faces fourth international conference automatic face gesture recognition march beardsley zisserman affine calibration mobile vehicles mohr chengke editors europe-china workshop geometrical modelling invariants computer vision pages xidan press china beardsley torr zisserman model aquisition extended image sequence proc european conference computer vision pages beier neely feature-based image metamorphosis proc siggraph pages blanz vetter morphable model synthesis faces proc siggraph pages blinn newell texture reflection computer generated images communications acm october bottema theoretical kinematics north-holland publishing company york breasted history egypt charles scribner sons york bregler covell slaney video rewrite driving visual speech audio proc siggraph pages brodsky fermller aloimonos shape video proc computer vision pattern recognition conf volume pages burt adelson laplacian pyramid compact image code ieee trans communications carlos switched-on bach audio recording caspi irani alignment non-overlapping sequences proc int conf computer vision volume pages catmull subdivision algorithm computer display curved surfaces phd thesis utah salt lake city chai chan shum tong plenoptic sampling proc siggraph pages chen williams view interpolation image synthesis proc siggraph pages cootes edwards taylor active appearance models proc european conference computer vision volume pages davis mosaics scenes moving objects proc computer vision pattern recognition conf pages debevec rendering synthetic objects real scenes bridging traditional imagebased graphics global illumination high dynamic range photography proc siggraph pages debevec wenger tchou gardner waese hawkins lighting reproduction approach live-action compositing acm transactions graphics july debevec taylor malik modeling rendering architecture photographs hybrid geometryand image-based approach proc siggraph pages dellaert seitz thorpe thrun structure motion correspondence proc computer vision pattern recognition conf pages demey zisserman beardsley affine projective structure motion hogg boyle editors proc british machine vision conference leeds pages springer-verlag september deriche zhang luong faugeras robust recovery epipolar geometry uncalibrated stereo rig proc european conference computer vision pages devernay faugeras projective euclidean reconstruction proc computer vision pattern recognition conf pages dudley parallel bandpass vocoder machine synthesizing human voice trucco verri introductory techniques computer vision prentice-hall upper saddle river edwards taylor cootes learning identify track faces image sequences proc sixth int conf computer vision pages efros leung texture synthesis non-parametric sampling proc int conf computer vision pages farid popescu blind removal image non-linearities proc int conf computer vision pages faugeras luong maybank camera self-calibration theory experiments proc european conference computer vision pages faugeras luong geometry multiple images mit press cambridge massachusetts faugeras three-dimensional computer vision geometric viewpoint mit press cambridge faugeras dimensions uncalibrated stereo rig proc european conference computer vision pages faugeras stratification -dimensional vision projective affine metric representations journal optical society america faugeras quan sturm self-calibration projective camera application self-calibration projective camera proc european conference computer vision pages springer-verlag june feiner macintyre hollerer webster touring machine prototyping mobile augmented reality systems exploring urban environment int symp wearable computers october feynman surely joking feynman adventures curious character norton york feynman qed strange theory light matter princeton press princeton finsterwalder die geometrischen grundlagen der photogrametrie jahresbericht deutscher mathematik pages fischler bolles random sample consensus paradigm model fitting applications image analysis automated cartography communications acm june fitzgibbon cross zisserman automatic model construction turn-table sequences koch van gool editors proc workshop structure multiple images large-scale environments smile pages springer fitzgibbon zisserman multibody structure motion reconstruction independently moving objects proc european conference computer vision pages springer-verlag june forsyth ponce computer vision modern approach prentice hall upper saddle river friedman submarines illustrated design history united states naval institute gap khakis swing television commercial geyer daniilidis catadioptric camera calibration proc seventh int conf computer vision pages gleicher projective registration difference decomposition proc computer vision pattern recognition conf pages golub loan matrix computations johns hopkins press baltimore golub reinsch singular decomposition squares solutions numerische mathematik gondry buffin rolling stone music video goral torrance greenburg battaile modelling interaction light diffuse surfaces computer graphics july gortler grzeszczuk szeliski cohen lumigraph proc siggraph pages greene environment mapping applications world projections ieee computer graphics applications november harris stephens combined corner edge detector proc alvey vision conf pages hartley camera calibration line correspondences proc image understanding workshop pages hartley projective reconstruction line correspondences proc computer vision pattern recognition conf pages hartley self-calibration multiple views rotating camera proc european conference computer vision pages hartley linear method reconstruction lines points proc int conf computer vision pages hartley zisserman multiple view geometry cambridge press york hartley euclidean reconstruction uncalibrated views zisserman forsyth editors applications invariance computer vision lncs pages springerverlag hartley projective reconstruction invariants multiple images ieee trans pattern analysis machine intelligence hartley defence -point algorithm proc int conf computer vision pages hauck neue konstruktionen der perspektive und photogrammetrie crelle math pages heigl koch pollefeys denzler van gool plenoptic modeling rendering image sequences hand-held camera proc dagm pages heyden geometry algebra multiple projective transformations phd thesis lund institute technology lund sweden heyden astrom euclidean reconstruction constant intrinsic parameters proc int conf pattern recognition pages horaud csurka self-calibration euclidean reconstruction motions stereo rig proc sixth int conf computer vision pages horn relative orientation int computer vision january horn projective geometry considered harmful published internet horn relative orientation revisited journal optical society america hough machine analysis bubble chamber pictures international conference high energy accelerators instrumentation irani anandan hsu mosaic based representations video sequences applications proc int conf computer vision pages irani hassner anandan scene scene point proc european conference computer vision pages irani peleg improving resolution image registration cvgip graphical models image processing isard miller diphone synthesis techniques proceedings iee international conference speech input output pages jain kasturi schunck machine vision mcgraw-hill louis kanade rander narayanan virtualized reality constructing virtual worlds real scenes ieee multimedia koch automatische oberflaechenmodellierung starrer dreidimensionaler objekte aus stereoskopischen rundum-ansichten phd thesis hannover koch van gool editors proc workshop structure multiple images large-scale environments smile springer koenderink van doorn affine structure motion opt soc kruppa zur ermittlung eines objektes aus zwei perspektiven mit innerer orientierung sitz ber akad wiss wien math naturw abt iia kutulakos seitz theory shape space carving proc seventh int conf computer vision pages kutulakos 
vallino calibration-free augmented reality ieee trans visualization computer graphics laveau faugeras scene representation collection images proc int conf pattern recognition pages levoy hanrahan light field rendering proc siggraph levoy pulli curless rusinkiewicz koller pereira ginzton anderson davis ginsberg shade fulk digital michelangelo project scanning large statues proc siggraph pages lhuillier quan image interpolation joint view triangulation proc computer vision pattern recognition conf volume pages longuet-higgins computer algorithm reconstructing scene projections nature lourakis deriche camera self-calibration kruppa equations svd fundamental matrix case varying intrinsic parameters technical report inria march lucas kanade iterative image registration technique application stereo vision proceedings international joint conference artificial intelligence pages lucasfilm willow film maccurdy editor notebooks leonardo vinci page george braziller york manning dyer metric calibration screw-transform manifolds proc computer vision pattern recognition conf pages manning dyer stratified calibration screw-transform manifolds proc european conference computer vision volume pages manning dyer research calibration minimization technical report computer sciences department wisconsin-madison manning dyer dynamic view morphing technical report computer sciences department wisconsin-madison manning dyer interpolating view scene motion dynamic view morphing proc image understanding workshop pages manning dyer interpolating view scene motion dynamic view morphing proc computer vision pattern recognition conf volume pages manning dyer dynamic view interpolation affine reconstruction leonardis solina bajcsy editors confluence computer vision computer graphics pages kluwer dordrecht netherlands manning dyer environment map morphing technical report computer sciences department wisconsin-madison manning dyer affine calibration moving objects proc eighth int conf computer vision volume pages manning dyer screw-transform manifolds technical report computer sciences department wisconsin-madison marr vision freeman san francisco mcmillan image-based approach three-dimensional computer graphics phd thesis north carolina chapel hill chapel hill mcmillan bishop head-tracked stereoscopic display image warping proc spie vol pages mcmillan bishop plenoptic modeling proc siggraph pages metropolis rosenbluth rosenbluth teller teller equation state calculations fast computing machines chemical physics miller hoffman illumination reflection maps simulated objects simulated real environments notes advanced computer graphics animation siggraph mohr buschmann falkenhagen gool koch cumuli panorama vanguard project overview koch van gool editors proc workshop structure multiple images large-scale environments smile pages springer moons van gool proesmans pauwels affine reconstruction perspective image pairs relative object-camera translation ieee trans pattern analysis machine intelligence january narayanan rander kanade constructing virtual worlds dense stereo proc sixth int conf computer vision pages nayar catadioptric omnidirectional camera proc computer vision pattern recognition conf pages neal probabilistic inference markov chain monte carlo methods technical report crg-tr- toronto york institute technology interface film okutomi kanade multiple-baseline stereo ieee trans pattern analysis machine intelligence oskarsson zisserman astrom minimal projective reconstruction combinations points lines views proc british machine vision conference pages pacific title mirage studio jester short film pacific western terminator judgment day film peleg herman panoramic mosaicing videobrush proc image understanding workshop pages pollefeys self-calibration metric reconstruction uncalibrated image sequences phd thesis katholieke universiteit leuven belgium pollefeys koch van gool self-calibration metric reconstruction spite varying unknown internal camera parameters proc sixth int conf computer vision pages pollefeys van gool stratified approach metric self-calibration proc computer vision pattern recognition conf pages pollefeys van gool stratified approach metric self-calibration modulus constraint technical report leuven esat-mi pollefeys van gool stratified self-calibration modulus constraint ieee trans pattern analysis machine intelligence august pollefeys van gool editors proc workshop structure multiple images large-scale environments smile springer pollefeys van gool oosterlinck modulus constraint constraint selfcalibration proc int conf pattern recognition pages pryor furness viirre virtual retinal display display technology scanned laser light proc human factors ergonomics society annual meeting pages quan affine stereo calibration relative affine shape reconstruction proc british machine vision conference surrey england pages quan invariants points projective reconstruction uncalibrated images ieee trans pattern analysis machine intelligence quan uncalibrated projective camera affine reconstruction lines proc computer vision pattern recognition conf pages quan kanade factorization method affine structure line correspondences proc computer vision pattern recognition conf pages rademacher bishop images proc siggraph pages rose cohen bodenheimer verbs adverbs multidimensional motion interpolation ieee computer graphics applications rothwell csurka faugeras comparison projective reconstruction methods pairs views proc int conf computer vision rousso peleg finci rav-acha universal mosaicing pipe projection proc sixth int conf computer vision pages roy meunier cox cylindrical rectification minimize epipolar distortion proc computer vision pattern recognition conf pages sawhney kumar true multi-image alignment application mosaicing lens distortion correction ieee trans pattern analysis machine intelligence sawhney hsu kumar robust video mosaicing topology inference local global alignment proc european conference computer vision vol pages sawnhey kumar true multi-image alignment application mosaicing lens distortion correction proc computer vision pattern recognition conf pages schaffalitzky direct solution modulus constraints proceedings indian conference computer vision graphics image processing bangalore pages schmid mohr bauckhage comparing evaluating interest points proc int conf computer vision pages seitz anandan implicit scene reconstruction probability density functions proc computer vision pattern recognition conf pages seitz dyer view morphing proc siggraph pages seitz dyer photorealistic scene reconstruction voxel coloring proc computer vision pattern recognition conf pages seitz dyer view morphing uniquely predicting scene appearance basis images proc image understanding workshop pages shade gortler szeliski layered depth images proc siggraph pages shapiro affine analysis image sequences cambridge press cambridge england shashua algebraic functions recognition ieee trans pattern analysis machine intelligence shashua projective structure uncalibrated images structure motion recognition ieee trans pattern analysis machine intelligence shashua wolf homography tensors algebraic entities represent views static moving planar points proc european conference computer vision pages springer-verlag june shechtman caspi irani increasing space-time resolution video proc european conference computer vision pages shum rendering concentric mosaics proc siggraph pages silberman matrix wired magazine sinha perceiving recognizing three-dimensional forms phd thesis massachusetts institute technology cambridge slama theurer henriksen editors manual photogrammetry fourth edition american society photogrammetry remote sensing falls church virginia spetsakis aloimonos structure motion line correspondences int computer vision spetsakis aloimonos unified theory structure motion proc image understanding workshop pages stein lens distortion calibration point correspondences proc computer vision pattern recognition conf pages stein model based brightness constraints direct estimation structure motion proc computer vision pattern recognition conf pages stein geometric photometric constraints structure views phd thesis massachusetts institute technology cambridge june stein tracking multiple 
view points self-calibration space time proc computer vision pattern recognition conf pages sturm critical motion sequences monocular self-calibration uncalibrated euclidean reconstruction proc computer vision pattern recognition conf pages sturm quan affine stereo calibration proc international conference caip prague czech republic pages september szeliski image mosaicing tele-reality applications proc workshop applications computer vision pages szeliski video mosaics virtual environments ieee computer graphics applications szeliski shum creating full view panoramic image mosaics environment maps proc siggraph pages revolution company eyevision tomasi kanade shape motion image streams orthography factorization method int computer vision torr zisserman robust parameterization computation trifocal tensor image vision computing triggs autocalibration absolute quadric proc computer vision pattern recognition conf pages ullman interpretation visual motion mit press cambridge universal pictures jurassic park film van gool moons proesmans van diest affine reconstruction perspective image pairs obtained translating camera proc int conf pattern recognition pages vieville faugeras luong motion points lines uncalibrated case int computer vision january village roadshow productions matrix film walt disney pictures flight navigator film walt disney pictures dinosaur film weng huang ahuja motion structure line correspondences closed form solution uniqueness optimization ieee trans pattern analysis machine intelligence werner image-based visualization real scenes phd thesis czech technical prague czech republic werner hersch hlavac rendering real-world objects view interpolation proc int conf computer vision pages whitted improved illumination model shaded display computer graphics special siggraph issue august wiley hahn interpolation synthesis articulated figure motion ieee computer graphics applications williams pyramidal parametrics proc siggraph pages july wolberg digital image warping ieee computer society press los alamitos wolf shashua projection matrices applications computer vision proc int conf computer vision volume pages wolf elements photogrammetry mcgraw-hill yang boyer kak range data extraction interpretation structural light proc ieee conf artificial intelligence appl pages debevec malik hawkins inverse global illumination recovering reflectance models real scenes photographs proc siggraph pages zhang deriche faugeras luong robust technique matching uncalibrated images recovery unknown epipolar geometry artificial intelligence zisserman beardsley reid metric calibration stereo rig ieee workshop representation visual scenes pages zongker werner curless salesin environment matting compositing proc siggraph pages appendix mathematical details derivation fundamental matrix section show detail rising-turntable formulation fundamental matrix derived purely mechanical straight-forward properties matrix arithmetic provide list mathematical equalities stemming rising-turntable formulation matrix properties begin stating general matrix properties appendix appendix property matrix inverse invertible matrix observe det latticetop latticetop latticetop det inverse matrix unique det latticetop latticetop latticetop property cross-product matrix cross-product operator property matrix multiplication bracketleftbig abc bracketrightbig latticetop latticetop latticetop latticetop latticetop latticetop property alternative cross-product expression complicated expression cross-product operation appendix form basis spans uniquely expressed latticetop latticetop latticetop latticetop det det det det det latticetop latticetop similarly latticetop latticetop det property intersection lines arbitrary nonzero linearly independent vectors vector simultaneously perpendicular intersection plane normal plane normal linearly independent intersection line note lies line projective geometry terms identity line intersects line point identity appendix derivation direct derivation fundamental matrix derive fundamental matrix formula fundamental matrix written left-most matrices simply form cos sin sin cos cos sin sin cos cos sin sin cos evaluating straight forward involves terms working stages multiply left epipole cos sin cos sin cos sin cos sin sin cos sin cos cos sin cos cos sin sin sin cos cos sin sin cos sin cos cos sin cos cos sin sin sin cos cos sin sin cos sin cos sin cos cos sin calculation finished multiplying det sin cos sin latticetop cos sin cos latticetop cos sin latticetop sin latticetop cos latticetop sin latticetop cos latticetop sin latticetop cos latticetop cos latticetop sin latticetop cos latticetop latticetop sin latticetop latticetop sin latticetop latticetop cos latticetop latticetop cos latticetop latticetop sin latticetop latticetop sin cos properties screw-transform decomposition fundamental matrix identities derived eqs straight-forward multiplication sin cos cos sin sin cos sin cos letting sin cos wehave sin cos sin cos cos sin cos sin cos cos sin cos cos cos sin finally epipoles parenleftbig latticetop parenrightbig cos sin latticetop cos sin latticetop cos sin latticetop latticetop cos sin derivation parameterization algorithms section shows detail algorithms derived note fundamental matrix views found directly images identifying point correspondences means determined latticetop latticetop derivation algorithm step define latticetop left epipole easy verify direct multiplication choice produces satisfies note well-known satisfy equation form easy find matrix step step note property image parameterized single real variable expanding equation quadratic equation elegant parameterization derivation latticetop latticetop latticetop fact lies cone latticetop suggests varies real numbers trace cone experiments suggest case step property appendix cos sin cos sin step sin sin section vector latticetop null space matrix sin sin matrix nonzero rank matrix null eigenvector nullity array dimensionality rank nullity add minimum dimension nullity vector generates null space scalar determined step step note stage algorithm step straight-forward multiplication definition cos sin sin cos cos sin summary vanishing points axes camera view determined directly provided real parameters method determined single unknown real parameter scale determined metric internal calibration camera found metric scene reconstruction naively upper triangular matrix interested scale factor degrees freedom analysis shows parameterized real numbers fact degrees freedom shown demonstrated specific parameterization great deal intuitive meaning rotation angle views corresponds vanishing point rotation axis amount translation multiple distance optical center axis rotation screw axis screw transformation derivation algorithm note case turntable motion step step simply defines quantity step sin notice fixing scale scale scale determined steps consistent scale step cos sin recall shorthand notation step shown -dimensional null space null space eqs negationslash negationslash proves conditions form spanning basis practice found finding null eigenvector eigenvector indeterminate scale factor step needed find scale makes consistent step found step scaled correctly consistent bardblh bardbl bardblh bardbl proper scale factor converting step vector represented scalars observe cos latticetop cos cos cos cos cos cos cos relationship true negationslash hold latticetop latticetop latticetop proving cos latticetop unknown scale factors columns latticetop scale factor column similarly columns scale factor column latticetop latticetop latticetop form basis determined column step lie plane perpendicular determined previous step vector lies plane choice vector rotated plane procedure step point direction plane scenario 
produces correct direction sufficient purposes paper empirical evidence suggests choice produces collinear scenario consistent step arbitrary scale factor converting case normal physical interpretation amount screw translation note scale decoupled scale case turntable motion derivation algorithm step clear step optical center lies axis rotation serves z-axis clear choice direction x-axis earlier cases arbitrary line chosen xz-plane determine step fundamental matrix line chosen step parameterization point line restricts range reduce search space order make algorithm description easier selected collinear step step step parameterization point line step makes scale step ifs define formula note computed step find latticetop bardblu bardbl step prime serves unknown scale factor makes consistent prime step prime derivation algorithm linear system step interest conhin element satisfies linear system arises placing constraints properties satisfy attempt prove system unique null eigenvector determine conditions eigenvector unique cite experimental results evidence approach leads unique correct properties angle underlying screw rotation encoded scaled correctly conjugate rotation matrix fixes points rotation axis vanishing line planes perpendicular rotation axis fixed views latticetop assume scaled det making conjugate rotation matrix scale factor makes equality latticetop property listed latticetop leading rows linear system rows property latticetop latticetop latticetop row angle rotation encoded conjugate rotation matrix eigenvalues exp exp trace matrix sum eigenvalues cos exp exp parenleftbig parenrightbig derivation algorithm step assumption goal find holds latticetop equation equality scale factor coefficient meet coefficient condition steps negationslash ensuring resulting screw-transform manifolds scale set matrices vectors self-calibration process scale factor makes left-hand side equal latticetop linear system solved step null eigenvector found scale factor divide component eigenvector recover correct scale steps pattern latticetop latticetop scale factor makes right-hand side equal left work stages solving recovering rearranging leads latticetop latticetop latticetop right-hand side rank matrix columns -dimensional space left-hand side cross-product columns left-hand side vanish defining solved covers steps alternative solution step fig arises multiplying latticetop leading latticetop latticetop latticetop solved quadratic equation solutions arise satisfies determined step directly logic step vector correct scale derived missing scale factor determined separate step words derivation ensures coefficient appendix implementation details voting algorithm details section discusses important implementation details voting-based manifoldintersection algorithm section part reason presenting details underlying ideas voting algorithm screw-transform manifolds conditioning section needed screw-transform manifolds parameterization conditioning specific voting algorithm forced-spread sampling voting scheme determining manifold intersection points section simple principle care sample manifolds efficiently samples generated completely random manner zoom-in steps randomly-generated samples lie current smaller search volume algorithm converge slowly samples generated high probability lying current search range cover search range uniformly areas convergence accounted section present approach sampling termed forced-spread algorithm meets goals practice algorithm leads convergence quickly provided fundamental matrices close true fundamental matrices recall sample point manifold generated underlying parameters thought coordinates sample forced-spread algorithm generates sample points slightly altering coordinates existing previously generated samples ensure uniform spread samples manifold sample region allowed create samples sample point termed fecund samples generates thought offspring ensure fast spread sample points manifold most-recently generated samples allowed fecund allowed offspring encourages exploration newly populated filled areas manifold recall general description voting algorithm section search volume subdivided voting voxels hypercube subdivided equally nvotevoxelsperside side denote dimensionality search space case direct calibration k-space case stratified calibration space nvotevoxelsperside voting voxels needed -dimensional array integers needed tally votes cast voxel -dimensional array booleans needed manifold track manifold cast vote voting voxel manifold allowed cast vote voting voxel keeping track fecund samples requires similar mechanism current search region subdivided fecund voxels voting voxels fecund sample allowed fecund voxel handled -dimensional array booleans nfecundperside denote number fecund voxels side array stores nfecundperside boolean variables array needed manifold true nfecundperside nvotevoxelsperside integer achieve uniform spread fecund samples voting voxels typically larger defeats purpose fecund-sample mechanism force samples spread quickly manifold forced-spread algorithm stated comments algorithm explanation variables choose initial search volume mutual intersection point section initialize arrays -dimensional array small integers track votes cast voxel manifold -dimensional arrays booleans tracking manifold voted voxel marking region search space fecund sample manifold -dimensional array array indices size array dimension array size fecund sample allowed fecund voxel non-reproducing samples allowed lie fecund voxel seed manifolds screw-transform manifold generate random points manifold choosing random triplets doublets depending lies initial search region clear lists set variables manifold initialize empty lists list hold samples generated manifold lie current search volume list hold fecund samples add seed sample points step lists mark manifolds active generate samples denote size list manifold marked active minimumfecundcount nallowedtoreproduce good recently created fecund samples manifold produce offspring range dithering approach appendix generating offspring add offspring samples list offspring lies voting voxel manifold voted cast vote voxel mark voxel manifold vote offspring lies fecund voxel fecund samples manifold add offspring list mark fecund voxel manifold fecund samples affect manifolds fecund voxel manifold unable generate fecund samples reasonable amount mark manifold active manifold keeping pace manifolds thrown manifold marked active minimumfecundcount return step minimumfecundcount sufficientfecundcount increase minimumfecundcount minimumfecundcountincrement return step determine voting proceeded long determine voxel votes votes threshold needed zooming increase minimumfecundcount return step time minimumfecundcount continues incremented mutual intersection point found signal failure exit algorithm alternatively algorithm backtrack previous larger search region voxel led current failure barred receiving votes future check linear solution check linearity manifolds marked active sufficiently linear find point intersection linear manifolds return answer accompanying text zoom-in step linear solution exists perform zoom-in process steps reset minimumfecundcount initial return step determine smaller search region prime determine center prime typically voting voxels max voxel step large number votes soughtafter point mutual intersection find center mass voting voxels volume centered center search region instance find center mass voting voxels voxels mass voting voxels number votes received width search region half width search region reset clear arrays track votes arrays step array sizes remain reallocate memory entries correspond voxels smaller search region prime manifold marked active create initial samples list prime search region prime keeping samples lie prime treating members prime newly generated samples follow procedure step cast votes search region follow procedure step create initial fecund samples list prime mark fecund voxels replace prime prime prime manifolds considered 
active time manifolds outliers longer presence current search region manifolds marked active thenceforth considered manifolds difficulty generating samples current search region due bad parameterization marked active variable minimumfecundcount number fecund samples manifold equal mechanism manifold shape parameterization manifolds fecund samples easy generate arise slowly manifold reaches quota fecund samples set variable minimumfecundcount generate samples manifolds catch typically initialize variable minimumfecundcount constant minimumfecundcountincrement constant sufficientfecundcount step prevent voting decisions made sufficient number votes cast manifold forced-spread algorithm meets goals efficient sampling fecund samples spread helping ensure uniform coverage manifold current search region fecund samples reproduce samples generated evenly manifold finally recently-generated fecund samples reproduce unexplored areas frontiers expansion receive samples older fecund samples allowed continue producing offspring lots samples generated areas manifold sampled wasting computational effort range dithering points screw-transform manifold similar underlying manifold coordinates similar values closer points closer manifold coordinates zoom-in steps samples manifold similar manifold coordinates key efficiently generating samples manifold coordinates range existing samples current search region step returning step manifold find maximum minimum values samples list call min max max min step fecund sample generate child manifold coordinates offspring sample chosen slightly altering dithering parent coordinates guide slightly altering means specific method implementation pseudocode modulus-constraint manifolds involve coordinate code dka dth denote goal produce manifold sample point sample point range dithering input coordinates manifold point dka dth discussion output coordinates newka newth sample point notes rand returns random number range randnp returns random number range rand begin newka randnp dka newth randnp dth end begin newka randnp dka newth randnp dth end begin newka randnp dka newth randnp dth end begin newka randnp newth randnp end return manifold point coordinates newka newth conditioning parameterization important realize equation find step fig represent ill-conditioned system means conditions small lead large discuss condition system note image vanishing point screw axis considers viewing sphere camera optical center locations form -dimensional manifold surface sphere infinity approaches direction manifold manifold negative infinity approaches direction large close stops changing meaningful assume fixed sufficiently-large means treat real number mapped observation finite range condition equation establish map produces approximately regularly-spaced intervals -dimensional manifold viewing sphere approximate estimate internal calibration stretch viewing sphere regularly-spaced intervals meaningful euclidean distance sample normalized unit length roughly equal metric space approximating internal camera calibration conditioning map implementation sends equally-spaced guide numbers numbers yield evenly-spaced approximate metric space remaining members mapped linearly interpolating image nearest guides fig shows conditioning algorithm simplicity method conditions samples effectively ideas similar bisection methods immune problems arise calculate derivatives unstable system implementation bardbl ebardbl iterations loop steps iterations condition parameterization completely parameterization recall latticetop lies cone simply parameterize points intersection cone unit sphere camera space normalized estimate internal calibration experimented parameterization work algorithm conditioning goal find real numbers bardblf bardbl approximately note range space comment iteration efficient precompute store values array changing entry loop initialize equally spread pick samples random avoiding endpoints equal random number find distance image images neighbors bardblf bardbl bardblf bardbl change image equally-spaced images neighbors repeat step fixed number times dependent experiments performed ahead time determine good general-purpose number iterations figure algorithm conditioning coordinate system manifold index a-space absolute quadric abstract feature points affine calibration affine matrix affine reconstruction affine transformation apparent linear motion biepipolar line biepipolar plane calibration calibration space camera coordinates matrix obscura projection function triplet view camera matrix derivation platonic form specific basis camera relativism camera-to-camera transformation conjugate points coordinate system manifold coordinates grid homogeneous direction image position world position image camera transforming directions planes world camera critical motion sequences cross-product matrix direct calibration direction vectors displacements dual htensor duality lines planes points lines dynamic scene dynamic view morphing ego motion environment mapping epipolar constraint epipolar geometry epipolar lines epipolar planes epipole calculating left equality scalar essential matrix euclidean reconstruction euclidean transformation external calibration fecund sample fecund voxel field-of-view fixed-camera formulation rotational motion focal length forced-spread algorithm fundamental matrix calculating definition equivalence epipolar geometry object monocular invertible physical interpretation transpose general motion goodness solution granularity h-infinity matrix homogeneous direction representation image coordinates intersection lines line representation plane representation world coordinates homography induced plane infinity ibr image-based rendering ibrm image-based rendering modeling image coordinates image point image plane image sphere image-based rendering image-based rendering modeling internal calibration coordinate system upper-triangular matrix interpolation sequences iris internal calibration kruppa-constraint manifold lattice position line plane infinity linear motion manifold metric calibration metric reconstruction model modulus constraint modulus-constraint manifold monocular fundamental matrix mosaics object background object width offspring optical center pairwise camera motion parallel motion pencil planes photogrammes photogrammetry physically correct pinhole camera basic projection algorithm history physical interpretation projection function plane infinity platonic concept direction equations label matrix vector plenoptic modeling point correspondence dense finding individual sparse point plane infinity point-on-line test prewarping principal point projection function projection point projective geometry projective reconstruction fundamental matrix projective transformation range dithering reconstruction affine euclidean hierachy hierarchy metric projective projective reconstruction views reflection mapping relative calibration rising turntable rising-turntable formulation sampling scene scene reconstruction screw axis screw transformation search region calibration sketching manifold static scenes static view morphing stereo rig stratified calibration structure motion sub-lattice position surface fitting synthetic views texture texture mapping tilt camera torpedo data computer transfocal motion triangulation turntable motion unifocal motion view interpolation view morphing view-dependent texture virtual views voting voxels weak calibration weakly calibrated wire grid world camera world coordinates zoom-in step 
active surface modeling perception-based differential-geometric primitives liangyin dissertation submitted partial fulfillment requirement degrees doctor philosophy computer science wisconsin madison copyright liangyin rights reserved abstract computational vision biological vision system functions emulate performance computers central topics thesis differential geometry language describe essential elements visual perception domains components geometric language computed ways closely related human visual system performs similar functions thesis starts showing earliest stage vision biological systems implement mechanism computationally equivalent computing local geometric invariants two-dimensional curve level availability information establishes foundation computing components differential geometry language sensory inputs mathematical framework scale space makes computational approach likewise biological basis hand visual perception global phenomenon occurs generally space understand process design computational systems comparable performance humans requires specification local computational mechanism global environment goal achieved steps global surface representation formulation extended framework shown local geometric features sparse perceptually meaningful naturally represent global surfaces active motion observer introduced additional dimension data set observer mobile react observations verify hypotheses actively makes dynamical data optical flow observer added abilities enable observer perform tasks surface recovery navigation addition modeling process objects naturally constrained computational resources observer model inherently incremental thesis contributes areas direct computation differential geometric invariants images methods comparable human vision system perception-based global representations objects geometric invariants methods optical flow computation segmentation active methods global surface recovery navigation stationary contours apparent contours textured surfaces iii acknowledgments immense appreciation chuck dyer insightful advisor input advice research content effective communications invaluable advisor work special professors nicola ferrier damon tull jude shavlik michael gleicher taking time read work members thesis committee beneficial discussing fellow student steve seitz years express appreciation love family support unconditionally years study finally dedicate thesis mother chance great story final chapter forever debt love tenderness contents abstract acknowledgements iii introduction problems core issues contributions methods assumptions basefilters fromlocaltoglobaldomain geometric language perception representation task-oriented closed-loop approach active vision paradigm motivationandrelatedwork visualinformationmodel dgeometricmodeling object recognition drepresentations activevision opticalflowandnavigation thesis outline biological basis mathematical modeling fundamentals human visual system retina visualpathway retinalandcortexmodeling channel models receptive fields summary image contour surface modeling imagemodels image generator image representation gaussian kernels contourmodels modelsingeometricspace modelsinsignalspace surface triangulated normal interpolation surfacecurvatures summary local curve computation contour curvaturealongacontour examples discussion scaleandsizeofkernels differentiation convolution property curvatureandfoveation summary global curve description representation space stability representation translation scaling rotation dmatching translation scalingandrotation algorithmsummary examples discussion summary vii surface recovery curvilinear features theoreticalframework curves surfaces contour curvature projection translationscheme discussion frenetframerecovery curvature tangentandnormalvectors torsion applications distinguishing stationary contours occluding contours surface shape recovery multiple contours examples summary computation segmentation optical flow theoretical framework vector field decomposition properties decomposed fields divergencefield curlfield deformationfield opticalflowcomputation optical flow field decomposition viii examples summary global surface representation navigation surfaces single point surfaces points surface multiple points globalnavigation issues navigation induced apparent contours navigation induced discontinuous contours summary conclusions future work thesiscontributions futurework curvature gradient observer frame proof proposition bibliography index list figures general approach computational vision approach contributions signalversusinformation information conveyed shading apparent contour structureoftheeye sampling topology retina relationships gabor filters spatial frequency domain set directional filters decomposed high low pass components prototypical visual sampling cell spatial frequency domain original gray level image house channel information house channel information house channel information house girl image fixation center eyes kernel rd-order differentiation cubichermitesplines quintichermitesplines planar curve feature points identified hermite spline curve identified feature points curvature plot spline curve centripetal parameterization stderivative compute vertex normal neighboring patches sformula contour defined response image kernel orientation response step edge kernel image synthetic geometric shapes image vase smithsonian archive comparison theoretical estimated curvature ellipse curvature computation left boundary vase image xii representation space hyperplane spanned partsofaviolin curvilinear features database encoding multiple resolutions double-bass error surface respect translation error curves scaling error curves rotation object transformations recognized object affine transformation locating osculating plane stationary curve convex surface locating osculating plane stationary curve concave surface recovery frenet vectors moving osculating plane thebinormaldirection curve projection planes defined frenet frame occluding contour appears stationary contour synthetic surface stationary contours mesh representation surface synthetic surface recovered elliptic hyperbolic surface patches paths produced translation scheme rigid transformation scheme integral curves vector fields decomposed sub-fields optical flow frame firsttestimagesequence images xiii differential image computed differential image figure gaussian smoothing integral curve optical flow field frame optical flow field computed frame secondtestimagesequence frame anditsopticalflow magnitude optical flow frame orientation optical flow frame gray-level representation segmentation optical flow curve gaussian curvature profile gaussian curve curve gaussian curvature gaussian curvature curvature gaussian curve surfaces elliptic hyperbolic curvatures surface shape extension elliptic hyperbolic point surface shape extension elliptic points positive curvature surface shape extension elliptic points negative curvature curve construction six-sided coons patch additional cutting plane coons patching cutting curves coons patching tangent vectors coons patching fitting tangent vectors coons patches feature patches coons patches xiv alternative feature patches coons patches invariant curve surface features surface shape feature curves surface geometry presence discontinuous contour feature point object surface feature patch triangular patches surface normals recovered surface chapter introduction computational vision visual perception computers perform comparable tasks biological system study computational vision understand mechanism underlying human visual system design systems comparable performance biological system research visual perception context human visual system computation applied biological systems computers research computational vision inspired incredible visual abilities biological world long history establishing theories based signal processing geometric modeling computationally approaches descriptions require large amounts information form raw data pixels analytical descriptions spline parameterization adoption approaches direct consequence failing constrain visual tasks effectively consequence inordinate amounts computational resources spent order derive general descriptions tasks true vision treated extent inverse problem computer graphics designing algorithms transform image data geometric languages computer graphics figure critical issue earliest stage vision design highly data-selective processing early processing image processing global optimization feature extraction scene computer graphics graphics descriptions geometric modeling image sensing local computation visual modules figure general approach computational vision modules extract relevant data tasks concept underlying design early-processing modules tuned critical visual features study existing biological mechanisms insight capability vision system nature computation performed results study enable describe formally relationship computational models visual perception spite insight sound mathematical modeling techniques increasingly difficult interpretations 
computation specifications tasks contexts interpret results computation evaluate task performed research major task object representation recognition context perceptual geometric research presented thesis suggests information completing visual task highly constrained put effect early processing pipeline adequate choice underlying geometric language results computation early stage interpreted perceptual geometric contexts interpretations lead gradually increasingly abstract powerful concepts curves surfaces geometric language contrast methods computer graphics geometric concepts direct computational perceptual components compute surfaces based input sequence images local properties computed visual system front-end addition perceptual interpretations enable observer actively seek missing parts computation verify current hypotheses object shape problems core issues initial computational problem encountered vision determine parts image data retained processing selection process imperative view overwhelming data photoreceptors dynamic nature vision spatial temporal domains hand discarded irrelevant restored data selection process determines nature vision system including tasks perform resource needed order perform individual task decision reached tasks performed diversity vision systems nature demonstrates resources differently effectively design system facing tasks computational vision main focus highly sophisticated systems human object representation recognition capabilities problem investigated problem essential computations front-end vision system capable computing representations complex shapes core issue system retain sufficient information complete essential tasks constraint computational resources computational models front-end task shape representation studied chapter major focus oriented task object representation recognition language needed describe task formally associate language data computational procedures association closely relates considered features object object represented features language chosen geometric solve problem problem kind geometric language describe relevant perceptual results human vision elements language computed data received front-end core issue establish formal geometric description task elements description derived data geometric language components chapter specific computations components images presented chapter geometric language chosen analytic components locally smooth differential components natural relationship functionality system front-end front-end characterized local computations visual perception macroscopic global activity answer question problem global properties perception related results local computation dictated choice geometric language core issue explicitly global properties show computation local global domain achieved problem studied chapter chapter employing global curve model chapter global surface model chapter components geometric language computed raw data analytic geometric formulation computation components requires infinite time complete infinite resolution implied terminate computation due finite computational resources resulting representation well-defined relationship representations acquired resource requirements problem arises problem computation language terminate relationship representations computed resource constraints core issue represent results computation terminates analyze relationship representations smooth transition computations incremental modeling incremental modeling representations surfaces presented chapters information object representation part sensory input problems studied assumption input data task passive view task handled general assumption false impose commonly computer vision assumptions agents system supply relevant data close loop data acquisition answer question problem autonomous system actively seek information based observed core issue problem sound procedures effectively navigate acquire essential information missing completing task problem handled active vision paradigm case computing surfaces stationary surface curvilinear features studied chapter active navigation studied chapter computation optical flow studied chapter thesis statement contributions research covers major categories problems computer vision computation geometric features images object modeling active observer results mathematical formulations perceptually meaningful geometric properties embedded early processing modules active processes facilitate modeling object recognition based results computation central thesis research language employed visual perception represent objects intrinsically perceptual geometric nature reflected stages information processing nature visual information processing active passive major contributions research categorized figure contributions geometric feature computation receptive fields mathematical modeling visual information processing formulated based foundations biological nature human visual system modeling effective bridging gap visual perception geometric language employing framework scale space information domain effectively smooth differential computations interpreted globally perception shown intrinsic properties curves locally computed image filters receptive field family global curve modeling surfaces stationary contours computed curve properties construct global object models scheme object recognition framework results readily extended stationary curvilinear markings surface shown active observer navigate surface recover surface geometry markings optical flow computation segmentation textured surface methods optical flow computation segmentation developed observer determine object boundaries local motion demonstrate active observer control movement order control optical flow field decomposed ability observer choose vantage points obtain spatial relations surface navigation navigation perception-based incremental modeling problem surface representation theory incremental modeling presented observer infer feature points curves surface intrinsic surface geometrically meaningful visual perception present navigation theorems enable observer actively verify hypotheses formed current observation proved computationally navigation terminate task surface recovery active navigation optical flow computation observer active image sensing curve modeling geometric processing global matching perceptual-based geometric computation incremental modeling hypotheses verification matching modeling modeling resource estimation object database scene figure approach contributions methods assumptions base filters computational models system front-end based filters limited bandwidth space frequency domains filters chosen basis assumption spatial spectral components visual information processing scale-space variants gabor gaussian filters natural candidates modeling components choice supported results physiological research local global domain visual perception global activity computations system frontend local assumed computational theory vision explain gap local computation global perception bridged geometric language perception representation assumption made geometric events occurring euclidean space perceived computed raw image research geometric language chosen differential nature measure distances data properties infinitely smooth idealization making scale-space foundation modeling consequence approach emergence families base filters gaussian functions indexed scale-space parameters top language assumed representation shape-oriented well-defined processes recover object shape representation task-oriented closed-loop approach active vision paradigm logical structure vision system parts compute high-level geometric properties low-level data ensure coherence computation verifying high-level results low-level domain ability acquired adopt closed-loop processing model provide observer voluntary mobility methods active vision establish hierarchy geometric structure low-level data high-level object representation achieved actively seeking relevant information verifying hypotheses case insufficient information implies observer incorporate task specification task-oriented information located limited span spatial temporal intervals imaging information processed system closing processing loop feedback stages earlier stages propagation processing signals require time define time span open-loop systems considered restriction greatly limits tasks performed system reflexive movements bypass cerebral cortex hypothesized early stage system benefit complete open-loop design motivation related work visual information model extremes spectrum human-computer vision problems raw data signal sensory front-end modeling physical world analytical capability methods signal processing simplifies greatly problem formulation computational vision applying methods directly vision makes difficult interpret 
results terms visual perception inherent methods information uniform space time visual perception discriminating signal noise information model interpret part signal relevant computational problems vision difficult solve figure crossing information filter signal filter figure signal model concerns separation noise signal information model specifies zero-crossings relevant perception part model emergence marr primal sketch representation drew results physiology psychophysics made explicit statements computed shape representation model motivated number theories early processes vision culminated theories optimal edge detection interpretation shapes integration visual modules consequences model critical decision part input data relevant intended tasks early stages decision based visual perception computational problem geometric information model shape representation relationship visual perception major themes thesis information models primal sketch d-based inverse problems inferring information models ill-posed additional assumptions made order make process feasible imposing assumptions nature image formation properties object surface inferred primal sketch shape-from-x approaches minimizing error energy functions regularize solution space integrate visual cues surface representation hypothesis verification part model imposing hypotheses introducing additional structure primitive data transforming structured information transformations resulted hypotheses intrinsic visual perception superficial problem biological system route information model shape representation naturally active involves exploring navigating environment additional assumption imposed assumptions verified falsified actively collecting evidence process major theme research early vision biological-based modeling early stages visual information processing characterized local computation uniformly selects parts raw signal tasks implementation early modules stages define capability vision system computations generally considered stage hierarchical structure vision system research efforts made optimize processes subsequent stages rely initial computations properties directly related local computation edge detection optical flow considered essential derive increasingly global properties surface geometry motion segmentation stages devising local operators goals proven exceedingly difficult evidence biological systems obtain global properties local computations static dynamic modeling intended inputs models early visual modules generally categories static dynamic physiological foundation essentially dynamic stabilized image fades quickly saccadic movement static models developed processing static images proved effective operations edge detection texture analysis dynamical models hand motion analysis input images sampled temporal domain receptive fields biological mechanisms responsible local computations early vision receptive fields computational properties modeled extensively vision research spatial frequency domain methods modeling early vision modules scale space parameters inherent receptive field modeling size field terms sampling topology implemented receptive fields size parameter defines scale space computed formulation essential bridging local computation global representation gap embedded receptive field modeling information structure computed receptive field naturally inherits scale space structure geometric modeling image contours exhibit good correspondence image structure physical world early stages visual perception bridge gap local computations image signal perception organized globally considered geometry contours constrain surfaces extent curve single description canonical geometric content descriptions parameters curvature extrema meaningful perceptually invariant restricted affine transformations rigid transformations uniform scaling words parameters characterize essential geometric structure image contour observation combined acknowledgment structure image contour multiple scales led concepts curvature space scale-space primal sketch curvature primal sketch curvature scales computation contours order make structure image contour explicit geometric model contour computed image implemented biological systems computational vision methods commonly employed local edge detection global curve tracing global interpolation energy optimization difficulty approach strictly one-dimensional sequential processing model data dependency estimation curvature depends exclusively current edge locations estimated tangents turn depend resolution provided edge detector errors produced early stages propagate amplified stages recognition fact results general consensus higher order geometric invariants image contours curvature noisy unstable computationally method energy optimization hand requires careful design energy terms stabilize results methods perform tangent curvature discontinuities object recognition problem object recognition defined object representation method set instances method identify efficiently degree similarity object instances set well-defined transformations needed order make similarity explicit method representation stable noise preserve shape information method identification dependent number instances terms computation time major issues object recognition find object representations matching processes invariant view variations computationally efficient invariance respect specific kind variation requires representations independent variation well-defined behavior presence variation matching process identifies similarity object representations set instances models independent size database addition proposed representation matching method stable sense limited variations input produce limited variations representation performance matching process stability enables define metric matching dealing invariance issues mentioned commonly invariants projective affine invariants proper subsets groups scaling rigid transformations representation object representations descriptors primitives curvilinear contours regions image templates object representations curves perceptual organization curve partitioning perception-related criteria partition curves object boundaries spatial fourier domain representation methods developed spatial domain methods generally isolate interesting parts curvilinear features background noise establish descriptions based isolated parts fourier methods commonly image templates address problem view invariance object recognition primitives representation constructed invariants carefully selected set features primitive invariance-based multiple views appearance viewbased invariants selected local global representations general local representations differential-based curves stable noise preserve curve information global representations moment-based stable preserve curve information cases image templates directly instances partial transformation deformations functions scaling translation recovered point-based matching process invariant transformation magnitude fourier transform matching matching process generally involves graph-matching relaxation methods topological distance measures cases searching involved matching process computational complexity respect number instances database difficult problem tackled perspectives searching strategies invariance indexing techniques hashing indexing developed order solve problem major problem indexing many-to-one mapping object representation indexed space representation recovered index condition probability multiple objects noise resolve index high algorithms time complexity approximately independent size object database needed representations computer vision geometry inferred image analysis generally considered complementary problem computer graphics images produced analyzing interaction light geometry problem domain geometry considered substrate essential problem solving geometric models computer graphics designed generate visually appealing images computer vision local differential properties identified assembled geometric models applying additional global constraints resulting surface shapes vision represented closely related computer graphics quadrics superquadrics dynamic meshes criteria representation generally perceptual significance difficulties determining results front-end connected representation words choice geometric models dictates computed compute contrast reconstruction surface representation means visual communication naturally employ computer graphics techniques process hierarchy visual processing fulfill purpose complete framework representation parts representation reconstruction representation reconstruction surfaces desirable connection representation visual perception viewpoint affine invariance needed tasks object recognition subject studied extensively form geometric invariance smooth region surface intrinsic surface properties differential geometry employed gaussian curvatures critical points extended gaussian images commonly 
intrinsic surface properties reconstruct surfaces point-based local representation variational methods thin plate energy minimization extension point properties curves appears form principal patches surface primal sketch planar curves asymptotes reconstructing surfaces arbitrary surface curves formulations gordon-coons patches tensor-product surfaces methods reconstruct surfaces intrinsic surface curves studied interaction scale curve features studied representation methods surface uniform coverage computation applied part surface possibly represent surface incrementally computation surface curvilinear properties desirable goals representing surfaces intrinsic geometric properties perceptual meaningful prompts computational procedures link goals investigation natural extension curve representations face shading information face apparent contour lambertian surface figure information conveyed shading apparent contour surface projected image plane dependent light source surface geometry projection process inversely factors effectively inferred information visual modules integrated point view talk amount information observer compute surface geometry light source projection process assumed single module compute surface information sense minimal problem generally harder case research specifically lambertian surfaces shape computed extremal contours textured surfaces optical flow surface figure case active observer isolate foreground background optical flow object background similarly textured specific kind extremal contour occluding contour apparent contour effectively constrain surface subsequently surface recovered occluding contours observing contour sliding surface vantage point hand stationary contours curvilinear markings surface discontinuous contours constrain surface single dimension strip smooth surface stationary contours studied context qualitative surface characterization active vision optical flow navigation task data performing task depends task collision avoidance require surface shape recovery hand problems vision ill-posed constrained lack sufficient data cases close interplay problem relevant data computer vision balance struck observer allowed interact scene continuous observation current observation analyzed based nature task data acquired aspects constitute active vision paradigm methods seek additional data environment determined problem generally involves relative motion scene observer relative motion voluntary observer motion dynamical nature scene case additional data made processes motion field computed optical flow surface textured deformation smooth surface features features occluding contours optical flow optical flow conveys information surface depth cues information identify object boundaries optical flow segmentation determine observer egomotion passive navigation recover surface geometry biologically optical flow modeled filtering visual signal time intervals making comparisons approach readily extended filters spatio-temporal receptive fields computational domain optical flow spatio-temporal volume images motion field conveyed optical flow simple involves locally rigid motion rotation translation result easier interpret computations spatial domain edge detection simplification optical flow constraint states locally rigid motion optical flow generated stationary point object smooth relative neighborhood neighborhood embedded surface property applied globally estimate optical flow condition equation holds breaks frequently image natural origin problem computing motion field optical flow ill-posed problem due aperture problem hand natural conditions surface assumed finely textured well-defined correspondence motion field optical flow computation carried effectively spatio-temporal filters optical flow depth cues scene segmentation generally corresponds object boundaries apparent contour close interplay computation segmentation optical flow separated degree iterative methods multiple scale filtering optical flow conveys information surface geometry spatial temporal derivatives computed reliably surface geometry recovered hand navigation tasks require full scene recovery optical flow analysis exposing relationship observer scene segmentation optical flow field qualitatively similar segmentation image irradiance goal locate one-dimensional boundaries correspond actual object boundaries deformation curvilinear features active observer surface smooth uniform shading reliable information surface shape projection occluding contours image plane coincides silhouettes hand object surfaces stationary curvilinear features surface markings stationary occluding contours curvilinear features object surface constrain surface shape similar tangent direction degree surface curves direction stationary observer kinds contours locally identical distinguished hand fact occluding contour slides object surface stationary contour fixed surface present differently active observer observation makes task classifying contours important problem strategies infer surface shape contour occluding contours active observer recover surface shape occluding contours orthographic projection arbitrary observer motion perspective projection method procedure identify type contour surface shape recovered identification method requires accurate measurement recovery surface shape prerequisite alternative method affine-invariant based re-projection approach surface recovery method limited areas surface shape occluding contours summary methods recover surface shape occluding contour require accurate measurement observer motion camera calibration general sensitive noise advantages methods twofold contour features extracted easily reliably strongly constrain surface shape characterize surface directly occluding contours relate sign gaussian curvature surface active occluding contours successfully applied dynamic tracking objects stationary contours results obtained qualitative nature including conjecture parts surface shape stationary contour deformation recovered deformation image contours studied general terms relating observer motion parameters deformation image contours shown sign normal curvature determined properties projected image contours inflection points views contour required distinguish space curve occluding contour thesis outline central issue investigated thesis systematic usage geometric models computer vision involves development geometric language modeling visual perception high-level cognitive tasks object recognition human vision system computation essential components geometric language biological basis human visual system mathematical modeling receptive fields presented chapter foundation study specification geometric language chapter prepare development geometric computation receptive fields chapter results local computation curves extended basis global curve representation object recognition chapter result extended chapter stationary contours object surfaces active observer navigation ability apparent active capability strengthened optical flow computation segmentation developed chapter finally characteristics localized movement needed optical flow computation global navigation needed full surface recovery representation combined studied chapter chapter biological basis mathematical modeling computer vision formal experimental spite immense computing power current technology computational mechanisms comparable visual abilities natural systems elude light prominent relevant aspects natural vision systems examined insights problems emphasis local computational properties front-end processing layers interesting observe spatial variation embedded continuous influx light filtered organized foremost part biological systems principles mathematical descriptions major topics chapter biological system determines conduct local computations system frontend part data selection process selection process defines nature capabilities system insights data selection process formal properties obtained studying systems capability desire emulate computers addition understanding kind information relevant set tasks study mathematical models biological systems understand formal nature data part information interpreted pre-defined context opposed signal interpretation-free essential vision points cease data neutral signal free interpretation start bringing additional assumptions constrain problem make problem context clear goal achieved mathematical models vision front-end established desired tasks chapter study physiological mathematical models system level photoreceptors establishes essential elements computation data selection process front-end overlapping computational units 
local scope spatial frequency domains units parameterized scale parameter non-uniform distribution space results computation complete signal space mathematical model established verified predicting hyper-channels human vision front-end organization chapter essential facts physiology human visual system reviewed prelude formulating mathematical models operations specially designed examine information contents visual signal formal models shown complete signal space examples image coding distinction signal information explicitly spelled models processing information content presented examples applications model conforms psychophysical data resulting mathematical language chapter expansion form geometric languages chapter theoretical framework thesis fundamentals human visual system structures functionality human visual system front-end including photoreceptors adjacent layers understood parts higher visual pathway related areas visual cortex main focus development formal models retina front-end human visual system optic transducer retina schematic digram stratification cells retina shown figure incoming light transduced directly photoreceptors classified cone rod cells addition cones rods retina classes cells horizontal bipolar amacrine ganglion cells basic inter-cell connections classified outer plexiform layer photoreceptors synapse horizontal bipolar cells plexiform layer bipolar cells synapse amacrine ganglion cells finally axons ganglion cells bundled optical nerve run blind spot lateral geniculate nucleus lgn visual cortex signal transforming process treated input-output system output signal carried optic nerve single ganglion cell defined receptive field region retina roughly circular afferent stimulation affects firing rate output neurons large collection literature treating classification receptive fields roughly types types type characterized effective area response responds stationary transient input responding speed important observe tradeoff design ubiquitous biological vision systems mechanism color detection serves extremely imporoptic axis ganglion cells rods bipolar cells cones optic nerve light fovea retina iris lens optic nerve cornea figure structure eye tant role human visual system retinal cell sensitive color implies loss light energy parts visible spectrum turn implies failure detection moving objects dim light species optic sensors primarily detection recognition worthwhile capability humans color sensitive animals include diurnal birds reptiles octopus dogs cats frogs color blind compromise sensitivity occurs eyes individual organisms human retina cone cells responsible detailed vision color sensitive distribution cones condensed uniform small area fovea hand rod cells orders magnitude sensitive light cones incapable detecting color worth noting million photoreceptors eye millions rod cells million cone cells million nerve fibers exiting eye average information compression rate distribution photoreceptors surface retina distribution ganglion cells respect photoreceptors uniform terms theory signal processing sampling schemes sampling incoming light mosaic photoreceptors equivalent sampling incoming light receptive fields achieved outer plexiform ganglion cells photoreceptors schematic diagrams sampling mosaic photoreceptors cones equivalent shown figure figure sampling topology retina layout optic receptors maximum uniformity density center optic axis eye decreasing density regularity increasing eccentricity human fovea cones spherically packed hexagonal array number ganglion cells connected cones intense overlapping receptive fields argued levick notion types receptive fields overlapping common area leads naturally parallel pathway design visual system property equal numbers cones implies theoretically lossless information processing fovea optic nerves overlapping depicted figure part sampling mosaic basic requirements system ensuring high spatial resolution regular spacing sample points irregularly spaced sample points introduce positional noise reduce visual acuity mosaic ganglion cells shows square hexagonal symmetry distances cells regular visual pathway major stations visited optic nerve exiting retina lateral geniculate nucleus lgn visual cortex lgn largely responsible relay visual information visual cortex roughly subdivided areas areas results hubel wiesel showed so-called simple cells area orientation selective physical structure hyper columns column selective direction results established frequency selectivity simple cells devalois today acknowledged simple cells characterized properties orientation frequency selection established response simple cells roughly linear property linearity basis range theories highly nonlinear cells visual cortex cells termed complex hyper complex cells main occupants areas coherent theory areas respond complex combinations image structures daugman explained vision research debated basic functional organization early visual representation local feature detection spatial domain frequency domain decompositions based linear transformations fourier analysis proposed mar celja argued linearity holds cells modeled adequate theory based spectral transformation established domains complementary mathematical models formulated line thought reviewed section gabor filtering models distinguish representation visual signal information theory image coding reviewed motivated knowledge receptive field retina selectivity properties frequency orientation simple cells visual cortex retinal cortex modeling knowledge front-end mechanisms visual pathway reviewed previous section formalized section serves foundation subsequent chapters emphasis show narrow exit visual front-end local computations performed physiological mechanism exiting information path elegantly mathematical formulations modeling gabor filters gabor proved temporal signal degree simultaneous localization time frequency domains measured multiplication standard deviations signal time frequency domains lower-bounded derived general form signal achieves lower bound signal form gabor function exp fourier transform exp effective spread temporal frequency domains defined gabor signal satisfies condition shown orthogonal sense exp zzz figure two-dimensional gabor signal spatial domain figure two-dimensional gabor signal frequency domain traditional concept profile cell representation cell response terms bivariate function defined weighting function describes weighted contribution light point receptive field response cell shown daugman receptive field profile visual cortex simple cells adequately two-dimensional gabor filter figure exp expti equivalently fourier form exp expt observed geometrically gaussian envelope centered superimposed planar sinusoidal grating spatial frequency orientation tan fourier transform gaussian envelope centered superimposed sinusoidal grating spatial frequency standard deviation axis inverse standard deviation axis figure frequency domain spatial domain figure relationships gabor filters spatial frequency domain receptive field characterized profile response input image prototypical profile image plane set receptive fields acquire set responses xdx ydy xdx ydy fourier transforms response sample real actual set gabor filters designed watson includes filters spatial frequencies spanning cycles degree bandwidth octave orientation filters specific frequency includes ten filters orientation spanning degrees bandwidth degrees gabor profile property apparently center profile frequency domain characterizes properties selectivity spatial frequency orientation profile orientation spatial frequency bandwidth profile highly dependent shape profile center frequency data supplied psychophysics psychology visual system macaque monkey characteristics median frequency bandwidth octaves median orientation full bandwidth frequency range human perception cycles degree based data stability orientation half-bandwidth guaranteed approximate relation signal information representation signal representation signal defined respect source desirable preserve original signal devising representation consequence ideal signal representation process bijective mapping hilbert spaces destination mapping source signal called representation signal vice versa mathematical properties 
representation depend significant degree choice bijective mapping section kinds mappings well-behaved commonly equivalent concept smoothness two-dimensional signal compared uniform fourier transforms euclidean plane coordinated cartesian polar coordinates localized gabor transform shown hilbert space defined complete set basis signals mapping fourier transform cartesian coordinates signal euclidean space cartesian coordinates fourier transform pair defined byf uxcvy uxcvy fourier transform polar coordinates polar coordinates planes defined cos sin cos sin transformed expressed expansion fourier series fourier transform byf n-th order hankel transform gabor transform gabor transform constant space transform defined shown inverse transform zzzz discrete version fourier transform cartesian polar coordinates complete coefficient basis function obtained elegant manner hand coefficients discrete version gabor transform complete requires solving set linear equations due pseudo orthogonal property discrete gabor kernels information second-generation image coding information meaningful purpose information information defined images encoded purpose visual perception criterion successful representation information judged scrutiny human eyes section theories results kunt watson presented context information representation operational model human visual information encoding considered uniform filtering entire image plane kunt watson makes sparse coding concept sparse coding natural correspondence physiology human visual system specific conditions band limitation discrete representation continuous signal perfect priori knowledge image canonical signal representation image sampled locations two-dimensional space quantized amplitude location purpose image coding reduce amount storage needed reconstruct original image redundancy exists picture traditionally achieved information theory signal processing approach select string messages characterize original image applying source coding theory code messages lossless lossy manner techniques processing spatial nature pcm predictive coding characterized transformational methods karhunen-lo eve transform fourier transform review paper kunt itis observed compression ratio so-called first-generation coding techniques reached saturated recent years paper second-generation coding techniques originate studies brain mechanisms vision differentiates approaches image coding attributed basically points view information information loss physiology psychophysics general response biological cells sustained input rapidly fades hand cells major categories characterized longer persistence response transient nature existence mutual inhibition categories implies parts image primarily textural parts primarily consists contours information content leads so-called contour-texture techniques argued transient parts afferent signal arouse attention demand higher visual resolving capability contours essential hand significant difference line drawing picture fully textured version hints role played texture contour-texture high-frequency low frequency technique implemented hunt frequency bands bank directional filters figure set directional filters decomposed high low pass components set high pass filters defined figure response tan cutoff frequency low pass filter high pass filters image filtered low pass filter high band zero-crossing detected encoded magnitude location original image reconstructed combining low pass result interpolated high pass result watson set cortex transforms explore scheme coding context human visual perception cortex transform designed cover frequency plane special techniques quantization contrast masking sub-sampling image layers cortex transform layers bandwidth smaller original image watson argued biologically feasible coding achieved fixation eye stabilizing image retina fixing fovea point maintained extend resolving capability fovea entire image plane case practical usage image compression evident difference encoded information recognition purposes visual communication purposes due diversity exhibited individual perception human beings information communication individual hand gabor filter indexed set parameters filter expanded cover full image plane fixed termed cortex filter watson sense design filter parameters indexed eccentricity filter adequately called retina filter watson argued kind coding fixation single-point fixation coding adequate selection prove economical image coding context human vision kind coding named sparse coding problems resolved coding beneficial difficulty delineate object boundary contour requires capability analyze texture color stereopsis helpful problem pre-analysis image required serves purpose choosing fixation point retina filtering encode image problem case complex objects decomposed establish temporal association mechanism coding multiple fixations channel models receptive fields incoming visual signal biological observer necessarily distributed physiological structure information space space retinal filters beneficial explore distributed structure information extraction filtering uniformity computational process biological systems classic work hubel wiesel evidence orientation distribution visual signal processing combined work spatial frequency selectivity distribution visual information orientation-frequency space research topic proposed quasi-independent major modules early vision systems orientation-frequency selectivity module serves important roles edge detection attention control visual memory coding gabor filter sinusoidal grating serves shifter frequency domain filter forms similar sinusoidal grating marr laplacian gaussian wilson bergen dog channel model canny optimized edge operator similar form interleaving excitatory inhibitory regions figure difference number interleaving regions general form orientationfrequency selectivity envelope finite support controlled orientation selection function spatial frequency orientation specific form depends constraints desired visual information derived observing psychophysics-based data wilson bergen channel model ratio excitatory area difference excitatory inhibitory area approximately highest channels hundreds times higher channels reality total area controls contrast sensitivity adjacent areas wilson bergen data higher channels wilson bergen channel model explicit form exp exp indexed channel orientation-frequency selection function exp sin cos cos sin figure prototypical visual sampling cell spatial frequency domain figure visual sampling bands gabor cells frequency domain form exp sin cvcos exp cos cvsin exp cos cvsin constraint mentioned equivalent order maintain quasi-circular receptive field determined fitting gabor filter process determines approximate spatial frequency marr pointed channel higher spatial frequency exist diameter central excitatory region predicted aforementioned constraint high frequency channel extrapolating spatial frequency predicted arithmetic sequence smallest channel derived parameters channel central excitatory region diameter minute conformity marr prediction temporal response essential attention control reasonable conceive degradation resolution increasing eccentricity serves purpose establishing visual information hierarchy static context burt laplacian pyramid bearing mind step assess effectiveness approach extraction essential visual information edges figure original gray level image house figure channel information house explicated kunt biologically motivated coding techniques achieve image compression ratio issue addressed paper reconstruction problem cognition concerned focus computation inevitably shifted properties edge information extraction fixation control illustrate figure model layout visual information sampling frequency domain due duality spatial domain frequency domain layout serves model spatial distribution sampling cells visual field modeling based essentially nstu model wilson bergen hyper-channel derived called hnstu model computation partly implemented general gabor scheme dimension hnstu model fit two-dimensional gabor form figure channel information house figure channel information house flatness response layout observed operating channel independently test image recovering image arithmetical summation experiment uniform sampling aperture visual field assumed actual degradation observed respect visual fixation point 
optimizing flatness gabor covering standard deviation profile central frequency implies spatial overlap adjacent cells controlled extent conveys amount information center cell smaller result obtained fitting hnstu model gabor profile central frequency additional overlap related compensation computation boundary cells optimization diminishing response cell perimeter compensated adjacent cells hand crucial aspect visual information hierarchy explore information contents resolutions result obtained additional consideration degradation resolution increasing eccentricity shown figure fixation points chosen position maximum response computation edge information fixation point chosen corner point cases physiological data approximate double size visual sampling cells eccentricity assumed extent visual field based results psychophysics figure girl image fixation center eyes figure girl image fixation center lower-left corner summary data-processing system involves data model processing model chapter looked processing models built biological systems insights provided biological construction hint operations beneficial analyzing information carried incoming light formalization early stages analysis chapter presentation unifying principles biological systems mathematical formulations acquired faithful model biological systems foundation crucial geometric information extracted manipulated data models visual processing system covered chapter include models images one-dimensional curvilinear features image surface object three-dimensional surfaces chapter image contour surface modeling fundamental data vision system images data abstraction curves surfaces provide geometric descriptions images chapter multiple models fundamental geometric concepts presented contexts relevancy representation models tied closely tasks handled essential characteristic processing models previous chapter biological functionality natural systems chapter emphasis formal properties data models images curves surfaces perceptual foundation task interests manipulation objects requires define shape description language geometric nature spatial relationships objects measured invertible computational processes specification language operational sense natural computational procedure element language enforces computational nature problem dictates structural hierarchy starting image shapes manipulated sampling mosaic photoreceptors restore continuous form image differential geometry language describe required geometric structure task formal models curves surfaces presented analytical computational form form computational substrate chapters shown perceptual features mapped geometric features chapter begins applying theory sampling images continuous form restored differential operations applied effect due sampling noise two-dimensional curves treated formulations modeling curves presented logical leads finally representation geometric feature space hermite functions finally surfaces considered point view triangulated patches principal curvatures natural formulation observer tracks points textured surface derived recovering curves surface image models digital image modeled discrete domain taking integer values range discrete model rectified establish mathematical foundation geometrically meaningful differential structures organized natural representing images purpose establishing continuous structure fit discrete grid continuous model gaps points filled smoothly continuous data model satisfy well-defined conditions support operations essential manipulating geometric structures historically achieved representing image redundantly parameterized family member definite relationship members family derived common source image generator pyramids multi-grid scale-space examples family built image generator theoretically image continuous signal two-dimensional space physical images processing biological artificial systems derived continuous source sampling process well-known sampling theorem informs representation analog signal digital version reversible sampling rate higher nyquist rate full content analog signal recovered sampled version providing sampling rate higher nyquist rate rule circular convolution computations analog domain executed equivalently digital domain precision computational process size digital image constrained nyquist rate information contained bandwidth bandwidth expressed angular frequency sample interval equivalence valid continuous signal defined completely situation true real signal kinds equivalence computational purpose imaging process directly responsible converting continuous irradiance sampled version subsequent processing sampled signal denote initial sampled signal image generator generator called scale viewed finest resolution optical sensor retina discussed transformed frequency domain samples number samples dimension properties important visual perception intrinsically geometric properties necessarily invariant rotational translational coordinate transforms local geometric properties naturally acquired differential geometry differentiations order involved conventional techniques differentiating images numerical instability instability eliminated compute differentials generator convolution property gaussian kernel section assumption readily justified adopt convention make imaging device resolution higher highest resolution computation image representation gaussian kernels gaussian filters ubiquitous natural visual systems traditionally modeling image blurring pixel level filtering operation gaussian kernel result information loss lossless representation image include sizes starting physically determined lower bound min section information image derived convolving generator gaussian kernel size intensity information images derived convolution gaussian kernels larger sizes henceforth images computed convolving gaussian kernels redundant generator information generated generator shortly important computational reasons redundancy one-dimensional gaussian kernel defined exp two-dimensional kernel defined i-th order differential denoted two-dimensional gaussian kernel separable filters referred receptive fields henceforth biological counterpart section similarity forms response profiles receptive fields biological systems observed firstsecond- third-order differentiation basis functions depicted figure exp exp exp exp figure kernel rd-order differentiation filters important properties crucial computation convolution property convolution property eventually replace differential operations image integral operations image parameterized scale-space avoid problem noise amplification differential operations advantage expense expanding spatial range computation order differentiation increases image sequence called scale-space image generator generated generator gaussian kernels scale redundancy readily observed concatenation property real computational advantage convolution property replaces differential operation member image scale-space integration convolution generator analytical kernel scale-space notation convolution property rewritten scaled image represented locally pcq local expansion truncated resulting representation called local representation order andc called local structure order local structure order image obtained family local representation order image scale koenderink van doorn maintained relevant visual information processing shortly first-order plays important role acquisition local geometric information contours including tangents curvatures curvature change rates contour formulation emphasizes structures pixel level isophotes patches blobs essence perception representation variational information emphasis variational information transforms representation intensity level point-based contour level curve-based formulation contour level differences formulations terms mapping spatial domain representation domain irradiance level image visual information conveyed functions type contour level information embedded functions type section present low-level representation images gabor kernels based gaussian kernels redundant representation closely related natural vision systems similarity kernel physiology biological cells image representation gabor kernels gabor filter alternative interpretation gaussian differentials case nonuniform differentiation two-dimensional gaussian shape resulting kernel gabor-like gabor form conveniently interpret differential kernel meaningfully gabor kernels interpreted terms spatial fourier localization spatial orientation scale decomposition fourier space mathematically representation gabor kernels complete representation sense transformation pair eqs gaussian kernel representation information image overlapped finer scale representations coarser scale representations hand gabor kernels represent information image non-overlapping filters contribute complete representation information-theoretic point view non-redundant representation desirable representation issue complicated compute 
local variational information efficiently contour models contours part hierarchy geometric structure images twoor threedimensional depending dimensionality contours embedded image surface role play analysis identifying boundary object image computing surface shape representations forms describe forms representation play roles chapters term curve contour interchangeably curve geometric term embodiment context visual perception contour models geometric space point space curve serret-frenet equations relate orthonormal frame frenet frame metric variables curvature torsion well-defined curve parameterized natural parameter curve length two-dimensional euclidean space taylor expansion form space terms second-order differentiation expansion expressed directly terms local canonical form curve implication form curve decomposed locally components frenet frame components third-order approximation expressed terms derivative respect matter fact fundamental theorem local theory curves asserts curve uniquely rigid transform models signal space piecewise-continuous curve one-dimensional geometric object infinite bandwidth treated two-dimensional object imposing finite-bandwidth constraint cluster curves represented two-dimensional domain shown achieved chapters construct invertible hyperspace representation curve representation gaussian filtering planar curve two-dimensional euclidean space two-dimensional representation image plane defined two-dimensional dirac delta function singular finite spatial frequency content finite approximation representation derived gaussian kernel convolution operator unit-area two-dimensional gaussian kernel symmetric exp jxj localized spatial frequency domains approximation essentially imposes finite-bandwidth constraint visual processing system curve representation fourier space previous section showed planar curve represented two-dimensional image space representation localized information content section information represented discrete domain global scope opposed local representation sampling theorem tells long bandwidth signal limited continuous signal represented set discrete samples signal alternative representation approximation signal completely vanish finite bandwidth number samples reach required sampling theorem provide rationale approximations converting representations continuous discrete domain localized representations exponentially decaying profiles provided gaussian kernels process produces limited-bandwidth signal two-dimensional image space hand gaussian profiles form spatial fourier domain smooth exponentially decaying sample fourier domain carries information globally affects signal space properties reduce number samples drastically losing essential information time benefiting matching process explained section formally fourier transform two-dimensional representation planar curve exp exp expt exp amplitude part phase part representation note parts correspond terms inside integral magnitude integral equal unity observed point curve phase encodes information curve amplitude term independent signifies energy constrained locally models geometric feature space geometry curve embedded description curve general canonical description descriptions parameters meaningful visual perception perceptually relevant parameters features objects collection features characteristics geometric space constitute geometric feature space words geometric feature space result mapping prominent geometric metrics geometric space term prominent subjective perception-oriented features curvature extrema curve derived interpolation feature points proposed attneave hermite splines primary interpolant recover curve piecewise interpolating feature points planar curve compensate oscillatory behavior polynomial interpolant order polynomial minimized true choose knots interpolation highly curved areas curvature extremum points additionally availability higher order differentials feature points enable proceed estimating properties primary drawback hermite interpolation planar curve concisely understood curvature identifying curvature extremum points curve represented interpolating position first-order derivatives points extremum curvature planar curves important locally strongly constrain global curve shape aspect demonstrated hermite interpolation observer generally perceive contour scales simply controlling visual receptors structure two-dimensional contour varies one-dimensional parameter family scales assumed proper scale chosen contour concentration second-order differential properties contour noted computing scale space sampled data significant difference computationally local global properties curvature extrema feature points continuous smooth second-order differentials two-dimensional curve structure curve determined curvature extrema define features curve complementary characterization curve segment features featureless curve segment curve segment curvature extrema end points region curvature remains constant monotonically term local extension procedure compute curve segments feature points curvature extrema explicit relationship curve curvature parameterized curve length curvature function planar curve curvature determined translation rotation cos sin curve representation curvature part curve adjacent extrema flat smooth reconstruction problem interpolate curve feature points geometric properties find curve segment connecting points tangent curvature derivatives kth derivative respect parameter goal accomplished hermite interpolation hermite functions figures figure cubic hermite splines figure quintic hermite splines test formulation figure centripetal parameterization takes square root cord length curve parameter curvature versus plot figure feature points identified plots position coordinates derivatives feature points interpolated curve shown figure curvature plotted figure solid lines original curve curvature dashed lines figure planar curve feature points identified curve length curvature figure curvature plot planar curve original interpolated figure hermite spline curve identified feature points curve length curvature original interpolated figure curvature plot spline curve centripetal parameterization compare quintic hermite spline cubic hermite spline derivative information curve shown figure curvature shown figure cubic splines good quintic original interpolated figure hermite spline curve order derivative curve length curvature original interpolated figure curvature plot spline curve derivative splines interpolate curvature shows dominant importance feature locations tangent vectors attributed fact show essential curvature features including reflection points models local surface shape primitives describing surfaces intrinsic surfaces intrinsic frame independent coordinate system viewer frame describe lowest order local properties intrinsic differential curvatures perceptually differential variation indiscernible local properties computed reliably global constrain guide local computation local computation observed place global top-down constraints considered guess verified local level point view mobile observer global constraints guides motion object shape revealed represented efficiently natural global constraints pertaining local intrinsic properties normal curvature passing specific point surface theorem local surface geometry normal curvatures directions determine local shape completely hand single surface curve qualitatively surface irrespective projected image plane projection characterized formally curve-surface quantitatively related formal surface curve require observer motion apparent contour projected curvature normal curvature tangent direction apparent contour static surface curve characterized observer move voluntarily chapter surface shapes acquired multiple sources traditional shape-from-x methods require mobile observer paradigm active vision shape-from methods compute surface shape deformations computable surface properties image curves apparent contours curvilinear-based methods surface shape computed stripe-like two-dimensional surface assembled stripes acquired combination capability active observer shape cues provided twodimensional surface patches curvilinear features enable compute surface shape batch fashion surface triangulated normal interpolation triangulated patches points object surface tracked observer assume points close surface enclosed considered flat assumption verified algorithmically points close projection model orthographic effect perspective projection negligible length segment connecting points andtheir projections image plane observer frame oriented surface z-axis frame viewing direction foreshortening dictates cos angle viewing direction surface normal plane defined points rotate viewing 
direction amount foreshortening cos sign depends sign solving equations tan cot sin single segment points equation surface normal lie cone z-axis center axis apex angle cos sinceon cos choose point point compute plane passes cos cos solving tan tan tan sin sin cos plane completely defined surface normal interpolation object surface explored tracking set points triangulating surface patches theoretically external frame process carried arbitrary precision tracked points data measurement errors hand restrict shape computation based solely static features surface case point features surface formed triangular patch approximation approach patch normal computed considered accurate essentially sampled representation object surface approximation make global surface computation representation determine surface normals points patches points patches meet vertices figure figure compute vertex normal neighboring patches real object surface pass vertex neighboring vertices surfaces interested surfaces smooth patch characterized surface normal coincident patch normal guess make surface fit constraints least-square-error criterion vertex normal computed origin coordinate system points expressed frame accuracy subsequent computation determined choose basis make approximation vertex normal averaging adjacent patches coordinate basis approximating bivariate function cbuvccv cducev neighboring vertices adjacent patches patch normal choose characteristic point patch plane normal computed cbv tangent vectors function determined minimizing least-square-error solution linear system defined letting linear equations substituting parenleftbig parenleftbig parenleftbig nvc solving andc eqs compute vertex surface curvatures ways compute surface curvatures surface normal determined set points surface section introduce methods analyze accuracy error propagation behavior euler formula patches vertex object surface euler formula fundamental form local frame defined principal directions determine principal directions principal curvatures normal curvatures euler formula relates principal curvatures max min equations max cos min sin max cos min sin max cos min sin angle direction maximum principal curvatures angles figure solving tan cos cos cos cos sin sin sin sin max sin sin cos cos min cos cos cos cos method error computing surface normal propagate curvature computation amplified differential process computing normal curvature patch directions improve compute normal curvatures subsequently solve euler formula normal interpolated vertex fit bivariate function tangent plane vertex method min max figure computing principal curvatures euler formula discussed bivariate approximation vertex surface normal point neighboring points fit bivariate function tangent plane defined surface normal function lowest order tangent plane curvature object surface point normal point express coordinates vectors tangent frame figure bivariate function form buv rotate orthogonal frame angle representation figure compute curvature bivariate interpolation cos sin sin cos cos sin cos sin sin cos sin sin cos cos choosing tan eliminate cross term identify principal curvatures cos sin cos sin sin sin cos cos set neighboring vertices desired equation solving least-square-error equation equivalent solving normal equation normal equations generally ill-conditioned tend singular susceptible rounding errors remedy singular decomposition method solve problem matrix singular decomposition form usv diagonal matrix diagonal elements singular values matrix proved vector solves least-square-error problem ill-conditioned difficulty resolved setting inverse small singular values accuracy method governed surface normal estimated estimate surface normal point solve normal interpolation problem resulting bivariate function summary mathematical foundation handling geometric structures images presented chapter emphasis computation representation information models computational vision system correspondence perceptual features geometric models curves surfaces established relationships computational formulation extensively remainder thesis formal components models interpreted context visual perception logical question geometric features computed local computation model chapter answered chapter chapter local curve computation images sources visual information consist organized variations brightness image plane front-end system designed select parts spatial variations chapter addition selection process hypothesis image representation physical world directs system search spatial organization relevant organized organization considered geometric chapter language differential calculus justified scale-space formulation images representations chapter correspondence perception geometric features domain investigated formulating computational mechanism responsible computing perceptual features shown contours commonly referred edges considered structured tangents curvatures higher-order intrinsic invariants computed mechanism receptive fields local computationally henceforth considered part front-end result makes formal models local canonical form curve meaningful chapter begins formulating contour computation framework antisymmetric receptive fields computing tangents logical development formulation showing curvature derivative curvature computed framework examples demonstrate effectiveness computational procedure chapter concludes considerations relationship local geometric features visual attention control contour geometric invariants convolution property means replace differential operations integral operations process averages noise amplifies section discussion differentiation convolution property property combined language scale space differential geometry enables systematically compute geometric invariants contours contour curvilinear contour locally linear characterized locally tangent vector cos sin operator signal presence local linear segment preferred response direction simplest prototypical filters family receptive fields figure preferred orientation direction filter form arbitrary orientation acquired rotation coordinate systems coordinate system rotated angle coordinate point original system represented coordinate cos sin sin cos define antisymmetric receptive field orientation local image contour orientation scale defined distribution irradiance sin cos normal vector contour term directional derivative direction terms receptive field figure explicit form response image kernel maximum rate change moving direction orthogonal figure additional condition needed exclude uniform contrast areas image note form gabor filter location defined maximum response antisymmetric kernel direction analogous output oriented edge detector gabor kernel drop term expressions clear dealing scale tangential field contour tangent vector scale image contour defined unit vector orientation gray level kernel image contour figure contour defined response image kernel orientation definition fact kernel aligned local image contour orientation response convolving kernel image maximum respect orientation parameter equation implicitly defines function equation form convolving kernel image convenient properties kernel call kernel resulting function convolution operation define kernel point theorientation space point defined estimation tangent continuous parameter orientation tangent estimated quantizing orientation space determine resolution orientation space order locate points accurately physiological evidence suggests quantization resolution quantizations mammalian vision system shown section resolution quantizations sufficient assume step edge model orientation space origin horizontal step edge sin edge crossing negative y-axis positive y-axis expression output applying local kernel step edge image find defines tangent field knowledge closed-form solution sin step edge unknown sin sin sin figure response step edge kernel ideal response sinusoid zero-crossing point sinusoid approximated straight line connecting point negative point positive side sinusoidal function linear point estimate resolution needed estimating linearity sinusoidal function range denote points negative positive orientation samples error linear approximation actual 
sinusoid figure sin sin sin sin keeping estimated error point case estimated point curvature contour definition curvature natural parameter curve length tangent field chain rule implicit differentiation cos sin explicit form acquired differentiation equation defined respect straightforward show simplicity subscripts denote derivatives stated defined directly associate kernel terminology explicit forms kernels cos sin sin cos sin cos explicit expressions noted expressions invariant respect rotation eqs explicit form curvature directly computation similar formulation curvature proposed koenderink image blob boundaries defined iso-luminance neighborhood point image contour approximated iso-luminance contour tangent orientation computed accurately formulation expression curvature image contours approximated third-order differential derivative curvature contour method derive curvature applied formulate higher-order geometric invariants derive derivative curvature part expression local canonical form possesses perceptual importance differentiation curvature respect curve length cos sin sin cos sin cos derived differentiating equation respect derive terms orders differentiation expressed derivative curvature terms order differentiation directly compute define shown parenleftbig formula derived applying directional derivative direction examples images figure illustrate method initially scale-orientation figure image synthetic geometric shapes figure image vase smithsonian archive space partitioned cells scale partitions orientation partitions scheme enables locate contours operations fourier domain equivalent performing operations uniformly image domain stage treated quantized parameter estimated orientation space repartitioned cells tangent field estimated contours pass treated continuous parameter computation conducted image domain contour points ellipse figure theoretical estimated tangent shown figure orientation plotted versus curve length ellipse similar comparison curvature shown figure computation curvature derivative curvature image shown figure figure accuracy correctness results observed examining boundary irregular shape curve length tangent orientation radian theoretical estimated figure comparison theoretical computed tangent boundary ellipse figure computed curvature vase image left boundary top ellipse vase result shown figure highest peak curvature concave discontinuity vase handle discussion shown invariants local canonical form contour derive set local kernels compute invariant directly raw image steps compute image contours kernel compute vector tangent fields express form curvature estimated theoretical figure comparison theoretical estimated curvature ellipse curvature figure computed curvature figure curvature diff figure curvature derivative figure curvature figure curvature computation left boundary vase image vector field cos sin points tangent field non-vanishing compute curvature derivative curvature kernels derived computing local geometric invariants image contours found biological systems antisymmetric kernels populated symmetric derived gaussian kernel expanded kernel sizes differential order increases properties suggest connections computation geometric information organization natural visual systems rest section considerations computation approach discussed scale size kernels continuous signal considered modeling process scales bounded object systems modeled signal converted digital domain sampling process range scales dictated sampling process addition local kernels receptive fields increase size due conversion expressions normalized total area unity important function filters images order maintain property normalization factor proportional order differentiation implies expansion filter size constant numerical precision increase kernel size constrains range scales bandwidth sampled image constrained nyquist rate fact image size determines upper lower bounds scale space scale multiples scale inthe gaussian kernel upper bound max image size hand taking nyquist rate dictates scale lower bound min differentiation convolution property replacing differentiation integration convolution property advantageous conditions information considered valid scale truncation computing convolution gaussian filter preserve function operates images image generator differentiation obtained convolution property real differentiation function smoothed version condition avoid truncation noise weiss proposed replace gaussian filter power preserving filters reasons condition equivalent treating fine variations sampling noise discarded implied smoothing receptive field ina biological system fine variations smoothed sampling mosaic temporal response characteristics receptive field condition satisfied min max contour tangent computations theoretically compute tangent orientation earlier compute image contours fourier domain treating quantized parameter greatly increases efficiency computation price precise estimating hand potential contours located compute geometric properties contour points sinusoidal property estimate great precision curvature foveation curvature considered informative feature foveation process shifting visual attention specific part image conducting detailed analysis local region process illustrated figure curvature extrema locate foveation points detailed contour analysis figure illustrates contours connected paths attended points figure shows magnitude-encoded curvature contours figure attention points vase image figure image miscellaneous shape blocks figure attention points block image figure spatial localization attention points figure curvature contours magnitude encoding summary chapter shown local geometric invariants image contours computed directly reliably image part local computation process figure approach eliminates drawbacks error propagation conventional approaches global processes energy minimization accurately reliably compute higher order differential invariants derivative curvature explore connection perception geometric invariants curve partitioning representation makes twodimensional visual processes perceptual organization meaningful ability compute local geometric features early stages processing powerful set primitives work essential geometry domain global representation disccussed chapters higher-order curvature differentials tangent vectors correspondence image physical world contour identification geometric modeling figure process computing geometric information image chapter global curve description perception global phenomenon foundation vision system local computational process bridge gap local computations global results characterize visual perception mathematical analysis global attributes functions results integration local properties analyzed differentiation property surface curved established observe adjacent geodesics surface substantial distance deviation geodesics varies constant surface curved approach perception simply vision system good analyzer earth appears flat harder accept physical space existence curved contrast vision system relies strategic identification local features space generalize local shape space global characterization spaces specific question focus chapter kinds global processes meaningful visual perception defined set local properties restricted elements geometric language essence part attempt capture capability observer identify patterns explicit organization exemplified recognition patterns seemingly random combination curves describe geometric structure local elements geometric point-based words underlying space signal space information space chapter fourier-based representation scheme objects developed preserves curve information stable input noise high dimensional representation space derived scheme shown type viewpoint-dependent variation well-defined matching process independent size database matched sensitivity matching processes variations analyzed examples object recognition database musical instruments shown algorithm shown effective presence combination perspective translation scaling rotation transformations chapter organized mathematical construct abstract space curve subspace hyperplane showing set affine transformations rigid transformation scaling object formulated hyperplane geometry matching process constant time complexity examples end chapter representation space fourier representation fully preserves spatial information curve important criteria curve representation representation invariant important transformations deficiency remedied introducing space spanned fourier coefficients studying subspace induced transformations representationca planar curve 
fourier transform localization property neighborhood radius origin fourier space percent energy bound considered approximation bandwidth approximation required number samples single dimension representation total number samples rectangular sampling grid samples coefficients complex number cartesian form polar form one-to-one mapping pair integer letthe inverse mapping mapping re-indexed denote polar form exp tuples euclidean space points designate point kth dimension coordinate construction curve represented fourier space point coordinates figure capacity space depends resolution range fourier coefficients coefficients converted integer range total capacity critical properties stability rigid transformation scaling space analyzed stability representation traditional methods curve representation generally involve thresholding curve converted piecewise-continuous piecewise-linear selected feature space hyperplane space figure representation space hyperplane spanned thresholding involved representation stable input noise words measure distance representation due finite variation curve point bounded distance original representation thresholding process involved converting curve dimensional representation space mappings continuous invertible point stable respect local perturbation translation space representation curve translated curve vector form fourier representation exp expti represented observed amplitude coordinates asr phase coordinates undergo translation translated curve representation make oneto-one mapping vectors constant vectors determined one-to-one mapping functions defines parameterized hyperplane figure hyperplane parallel amplitude axes defined vectorsinbw even-indexed coordinates translations curve confined hyperplane scope determined scope translation vectors discuss aspect matching section scaling observed scaled curve fourier representation exp exp exp exp scaling spatial domain scaling effect fourier domain order analyze affect point representing relate fourier coefficients coefficients direct correlation sets coefficients strategies called continuous function result integrating continuous function curve mappings continuous smooth addition continuous function scale factor scale invariant formulation matching fourier representation scaled advance matched corresponds multi-channel model chapter biological foundation represent scaled curve logarithmic space fourier representation embodies effect identical translation case fixed scale factor differential respect linear sum frequencies respect fourier coefficients logarithmic space natural divide fourier space logarithmically prescaling process strategy similar modeling biological vision systems rotation rotation origin cos sin sin cos fourier representation exp exp exp parenleftbig jdj similar scaling axes fourier coefficients identical original coefficients frequency solution rotate fourier domain convert space representation matching full rotation invariance generally implemented biological systems good reasons pre-rotate range rotation invariance desired matching framework presented matching involves locating point space representing curve matched representation curves invariant effects translation scaling rotation apply theory developed effects matching scheme begins specification set planar curves characterization object fourier representation curve computed space representation computed mapping sampling frequency matching succeeds points -neighborhood final decision threshold point metric threshold remain decided decision independent rest recognition process translation requirement translation invariance equivalent searching subspace hyperplane representation space scope search governed translation vector theoretical values whenimplemented biological system visual resolution uniform photo receptors visual field full panorama general strategy limiting values bring center visual field foveation case scope hyperplane parameterized domain scaling rotation control parameter scaling scale factor theoretical argument previous section translation applies factor big finest visual resolution small visual field puts lower upper limit values min max case rotation linear division scope needed number divisions depend threshold matching complexity partial matching highly desirable matching mechanism approximately independent size database plausible size hand canonical representation object simplest implies object multiple presence database aspect noticeable impact matching performance algorithms depends size database recognition process constant time complexity property beneficial multiple representations single object necessity pre-scale prerotate encode functional parts object figure redundancy valuable recognition partial occlusion figure parts violin algorithm summary descriptions objects terms curvilinear features fourier representation acquired based resolution subset coefficients representation construct representation space similar object database translated version object represented points hyperplane finite scope depends scope optical receptors system scaled rotated version object represented unpredictable points inbw problem solved pre-scaling pre-rotating unknown object matching database matching constant time complexity final decision similarity controlled metric examples database musical instruments figure test method curvilinear features characterize objects shown figure figure database musical instruments figure curvilinear features database resolutions comparison purposes dimensions visual information represented double-bass shown figure translation scope issetto pixels domain hyperplane pre-scaling scale factors pre-rotation angles increment figure encoding multiple resolutions double-bass choices metric drastically responses transformations choice euclidean metric smoothness simplicity require moving back polar representation cartesian representation matching measures normalized number samples important parameters threshold measuring matching similarity depends amount curvilinear information objects encoded sensitivity transformations applied objects typical object sensitivity distance measures respect translation shown figure sensitivity scaling rotation shown figure figure observed higher resolution corresponds higher selectivity transformations pipa violin clarinet flute guitar table matching measures double-bass instruments resolutions higher recognizing slightly scaled rotated objects translation offset error distance rotation scale factor rotation scale factor hand higher resolutions due fact complex curvilinear features compared lowered order recognize similarity double-bass violin implementation values chosen considerations distance figure error surface respect translation matching measure double-bass figure compared database figure shown table image violin curvilinear features perspective transformation spatial translation rotation scaling factor shown scale factor distance figure error curves scaling rotation degree distance figure error curves rotation figure recovered object shown figure figure object transformations figure recognized object transformation scaling factor discussion matching process introduced essentially applied directly images curvilinear features decision part constitute characterizing features system characterizing features manually selected formulations based stable curvilinear features objects highly desirable characteristic parts represented figure interrelated parameters critical system resolution representation similarity criterion observed figure table higher resolution results lower discernible similarity measure spite visual similarity violin double-bass accounted noting fact details compared relationship parameters figures higher resolution higher sensitivity variations words harder visual system achieve invariance view point variations attending details don compromise selecting single resolution representation matching process independent size database mentioned multiple redundant representations objects valuable regard problem translation invariance handled methods magnitude part fourier transform equivalent metric dja representation measuring similarity preserve essential visual information high-collision rate representation space large capacity representation spacebw implies sparse nature space handled traditionally hashing representation problem implementation level summary order representation objects recognition vision tasks representation stable noise preserving essential visual information objects essential recognition system invariant classes variations goal achieved designing representations desirable invariants designing matching process well-defined predictable behavior presence variations addition matching process independent size database order handle real-world applications chapter shown goals accomplished 
object recognition high-dimensional representation space derived fourier domain descriptors curvilinear features matching process images features invariants derived features class variation shown matching algorithm exists representation space independent size database recognizing objects signal space concentration chapter chapters primary problem shift back geometric language developed previous chapters problem domain euclidean space chapter surface recovery curvilinear features information world inferred sequences images resulting relative motion scene observer observer initiate voluntary movement considered stationary relative external frame information image sequence optical flow studied chapter reverse situation observer actively navigates static environment topic chapter chapter chapter focus quantitative constraints imposed stationary contours surface shape shown active observer exploit constraints move deterministically osculating plane point contour recover normal curvature surface defined contour frenet frame contour non-collinear stationary contours intersect principal directions local surface shape completely recovered qualitatively quantitatively existing methods recovering surface shape occluding contours surface parameterization obtained occluding contour slides surface part chapter proved observer explicitly choose motion projected curvature stationary surface contour monotonically decreases lower bound projected curvature reached observer reaches osculating plane defined surface contour motion observer choose fix optical axis image plane rotate optical axis observed point contour optical axis achieved combination camera translation rotation natural external choosing fixed optical axis properly produces shortest path destination schemes presented results proved part chapter describes frenet frame recovered observer reaches plane projected curvature point contour reaches minimum process reaching position observer verify contour stationary method discriminating occluding stationary contours differs previous motion parameters applicable areas occluding contours slide surface elliptic concave parts surface recovered frenet frame observer trace stationary contour order recover information points contour staying osculating planes points stationary contours intersect recovered frenet frame parameterize surface parameterization unique principal directions direction normal curvature maximum minimum point uniqueness true contours pass close finally results recovered surfaces synthetic scene shown paths observer takes reach osculating plane purely translational motion translational combined rotational motion validity theory enforced showing results recovering surface textured vase theoretical framework surface projected image plane image formed dependent lighting surface properties location image plane problem shape recovery describe surface parametric form set images order parameterize surface locally designate independent basis vectors origin parameters characterize distance metrics measured surface additional parameters measure surface tangent turns surface locally parameters independent tied set compatibility equations minimum equations relating parameters completely characterize local surface problem recovering surface shape contours derive equations finite number observations section describe surface geometry imaging model subsequent presentation denote unit basis vectors euclidean coordinate frame curves surfaces coordinate frame point smooth surface space local shape set parameterizations form parameterization differs rigid transformation compositions translation linear orthogonal transformations fundamental theorem local theory surfaces asserts fundamental forms uniquely define surface rigid transformation forms turn determined surface normal derivatives surface principal directions surface curves observation operational principle methods stationary curve object surface normal curve uniquely defined curvature determine orientation curve tangent direction binormal curve determined convention orienting observer tangent figure direction upward direction image plane figure locating osculating plane stationary curve convex surface plane reached location image plane figure locating osculating plane stationary curve concave surface contour curvature projection projection stationary curve segment image plane figures point curve represented vector observer frame frenet frame assume observer located direction viewing direction image plane projected curvature point expressed terms frenet frame appendix shorthand advantage vector expressions fixed frenet frame observer frame control active observer variables invariant observer frame haven distinguished stationary contour occluding contour point curve type case occluding contours expression reduces equation relating geodesic curvature surface normal curvature minimum case observer plane defined binormal called osculating plane stationary contour projects image plane locally straight line result state formally proposition spatial curve smooth surface point curve minimum projected curvature point obtained observer osculating plane point section show observer reach plane determine binormal point curve location space moving osculating plane formulation frame observer called observer frame vector representation advantages changing observer frame motion inconvenient coordinate transformations difficulty circumvented working object frame origin frames related pure translation translation rotation case pure translation frames transformed back translation location observer case referred translation scheme generally observer choose orient observer frame respect object frame convenient frames related arbitrary rigid transformation observer location case called rigid transformation scheme cases analyzed denote observer location object frame translation scheme active observer control motion pure translation performed external frame observer object frames related observer choose frame arbitrarily long satisfies selected point surface viewing direction generally agrees optical axis definition formalizes statement vectors pointing generally direction definition spatial curve frenet frame point curve observer frame agreeable frame point observer movements octant defined frenet frame object frame scalar field point space field observer detector scalar field note takes form observer object frames conceptually quantity observed observer frame object frame scalar field defined three-dimensional space back observer frame vectors project image plane analyze properties plane defined intersects contour surface point intersects image plane direction projection image plane figure orthogonal direction projection normal plane image plane defined thenr orthogonal sincer orthogonal normal plane spanned appendix shown change projected curvature direction takes form note differentiable function reason locate osculating plane move direction reduces eventually reaching bounded guaranteed find desired direction point space osculating plane defined plane divides space object regions region andr region show translation scheme observer deterministically move direction region camera order reduce prove proposition appendix figures proposition contour convex surface observer chooses agreeable frame direction motion reduces region defined isc andthe direction motion region concave surface direction reversed regions rigid transformation scheme active motion observer move rotating translating reason type motion adjust viewing direction surface point observed direction normal image plane jrj case considered section condition takes form jrj djr jrj object frame tjc camera position assume camera rotates direction coincident thevalueof depends gradient vector computed order determine dependency motion direction change object frame perform gradient operation directly general component form shown andc wehave prove proposition similar translation scheme proposition contour convex surface observer chooses frame jrj direction motion reduces region defined isc direction motion region concave surface direction reversed region note observer frame orthogonal coincident propositions identical difference translation scheme plane rigid transformation scheme translates rotates observer approaches 
osculating plane discussion shown observer move deterministically region object surface reach osculating plane marked point object surface direction movement orthogonal projected tangent case pure translation observer moves established image plane point reaches osculating plane intersecting line image plane osculating plane length path initial location osculating plane determined initial viewing direction external landmark difficult verify motion purely translational case rigid transformation scheme surface mark external observer control path initial position osculating plane viewing direction guided arbitrarily chosen difference shown section marked point occluded observer motion alternative path found generally achieved choosing direction motion keeping projected curvature constant action observer essentially moves obstacle keeping distance marked point chapter real euclidean distance marked point constant curvature surface hand well-defined stationary marks contour pointwise correspondence observations problematic rigid transformation scheme observer motion assured translational external plane formed initial observation direction direction movement intersect object surface point case translation scheme applicable osculating plane surface binormal recovered sign expression determined local shape surface contour negative convex positive concave propositions provide determine shape surface contour qualitatively convex concave surface strip projection contour convex open left moving decreases surface strip convex concave based expression similar cipolla derived qualitative results surface shape showed image velocity computed accurately deformation stationary contours compute curvature contours constrain viewer motion show rest frenet frame recovered frenet frame recovery found osculating plane recovery rest frenet frame figure curvature observer chooses frame long observer translates wealwayshave stationary contour object surface figure recovery frenet vectors moving osculating plane binormal direction ozj ozj ozj observer moves direction distance contour curvature process exact measurement system observer measure distance important long projected curvature measured system contour curvature recover surface shape measurement system consistent metric surface noted requirement observer translate strictly implicitly assumes existence external words action intrinsic kind external accomplish motion tangent normal vectors components identical components selected observer frame result tangent finally member frenet frame normal frenet frame recovered observing deformation geometric invariants curvature projected contour knowing depth recovered triangulation figure external points found show geometric metrics space curve recovered torsion figure curve projection planes defined frenet frame serret-frenet equations coordinate system chosen frenet frame derive local canonical form projections planes shown figure equation local form plane cubic estimating third-order slope origin compute completely determines curve point noted chosen observer frame requirement generally put observer side view surface stationary contour coincides occluding contour hand choose slope plane making estimation unreliable goal recover surface geometry object recovering curvature frenet frame sufficient applications distinguishing stationary contours occluding contours qualitative differences deformations stationary occluding contour observer move controlled ways differences enable discriminate types contours recovering surface shape deformation stationary contour occurs reasons kind deformation occurs process locating osculating plane contour projected image plane deforms propositions kind occurs observer moves binormal osculating plane identified false frenet frame false osculating plane direction movement figure occluding contour appears stationary contour form contour deform locally surface motion makes deformation occluding contour behave stationary contour form figure occluding contours deform observer moves false binormal direction object surface figure previous sections handled case markings surface contour marked point region interest practice additional contours texture surface markings make task easier nonetheless show worst case deformation projected curvature frenet frame carry intrinsic information distinguish stationary contours non-stationary surface shape recovery multiple contours local parameterization parameters fundamental forms satisfy compatibility equations completely determine surface shape rigid transformation fundamental theorem local theory surfaces degrees freedom fixed order determine local surface shape fundamental form direction equals normal curvature surface direction intersecting stationary contours provide local parameterization constraints degrees freedom section constraint obtained surface shape principal curvature differential theory surface geometry principal directions normal curvature surface reaches extrema orthogonal normal curvature point relates extremal curvatures euler formula cos sin principal curvatures angle tangent principal directions stationary contours principal direction solve principal directions extreme curvatures contours principal direction principal directions determined means euler equations relating normal curvatures contours enable solve surface geometry completely principal directions directions normal section surface maximally minimally curved active procedure capable inspecting directions surface point shape occluding contour methods work surface elliptically convex neighborhood point fail surface shape contour determine principal directions examining surface visually determined algebraically result exact stationary contour passing intersection point contours intersect cases shape estimated additional contours pass vicinity point case euler equations solve required parameters case contour intersect contours parallel transport tangent curvature contour additional intersection point intersection point solve set euler equations accuracy parallel transport depends curvature surface make parallel transport locally cylindrical surface result exact mesh representation stationary contours visual cues effective meshed representations surfaces meshed representation synthetic surface shown figure intersecting lines projected curvature direction give cues locally flat surface direction assuming surface locally parabolic cylindrical direction mesh lines orthogonal direction provide needed deformation cues surface shape direction achieved implicit assumption orthogonal direction constant curvature mesh lines direction provide deformed sequence observer moves direction observes deformation stationary contour figure synthetic surface stationary contours figure mesh representation surface examples section synthetic surface ray-traced vase show results theory implemented surface figure peaks valleys saddles dark contours surface stationary contours observer recover surface shape intersection points recovery process involves camera motions relative intersecting contours contour recovering tangent curvature tangents surface normal found normal curvature surface recovered applying formula normal vector frenet frame contours attempt find directions principal curvatures assumed contours principal directions assumption parameters fundamental forms computed parameterize local surface tangents basis vectors intersection point origin illustrate overlay surface members family quadratic functions parameters intersecting points figure accomplished quadratic monge patch parameterization solving coefficients parameters fundamental forms resulting functions translated surface point rotated recovered surface normal locally quadratic functions match surface globally degree fit determined variation normal curvatures principal curves passing surface point figure synthetic surface recovered elliptic hyperbolic surface patches figure shows paths camera translation rigid transformation schemes starting initial location scene set upward direction fox ozg forms right-handed system surface point tracked stationary contour moves direction image plane translation scheme arbitrarily set -oz direction path translation scheme parallel x-y plane intersects osculating plane horizontally observer moves completely image plane hand rigid transformation scheme takes curved path gradual turning viewing direction case translation scheme 
reaches osculating plane faster position image plane observer ensure movement purely translational referring external path shortest schemes cases shortest path bring observer directly surface path intersects osculating plane surface desirable practical cases realistic shown figure stationary contours vase tracked local surface shape intersecting stationary marks recovered complete shape recovery stationary marks points contour height stationary surface contour path translation scheme path rigid transformation scheme starting point figure paths produced translation scheme rigid transformation scheme marks interpolation estimate curvature direction orthogonal contour stationary marks surface reconstruction stationary contours object surface figure surface recovery stationary contours marks summary curvilinear features object surfaces constraining surface shape contrast kinds contours stationary contours provide two-dimensional constraints surface shape observer motion constraints provide shown surface neighborhood contour recovered knowing sensitive measurement errors observer image motion parameters characterizing stationary contour spatial curve recovered controlled motion observer process problem discriminating occluding contours stationary contours solved major result analysis leading method observer reach osculating plane depending external surface point strategies observer motion presented perform differently enable observer move directions monotonically decrease projected contour curvature image plane contrary belief stationary contours acquiring qualitative surface information demonstrated curvilinear features surface considered samples surface shape long features region interest shape recovered accurately suggestions acquire information principal directions intersecting surface contours constrain local surface completely error analysis case parallel transport nearby point intersection point order recover surface geometry important subject future study active navigation observer acquire important information order solve problem surface geometry developed chapter information content expanded restricted static curvilinear features treated chapter chapter computation segmentation optical flow motion perception essential shape recovery navigation observer computation motion field carried observing optical flow projection motion field image plane correspondence motion field optical flow one-to-one coincident cases case local shape recovery inverse problem solved surface smooth high accuracy measurement achieved second-order variations optical flow measurements optical flow spatial variation generally noisy hard make accurate hand smoothness optical flow direct correspondence motion field computed order variation optical flow determination discontinuous boundary optical flow field segmentation optical flow discontinuities optical flow correspond directly discontinuities surface shape surface orientation chapter focus geometric properties optical flow segmentation method computing optical flow spatio-temporal image volume presented shown kernels local spatial temporal domains designed compute optical flow optical flow field computed show observer utilize mobility actively control shape optical flow field directly reflects surface shape object present algorithm segmenting optical flow field proved correct smooth observer motion chapter starts decomposition general vector field divergence curl deformation fields information object surface relative observer information active observer control motion order complete relevant tasks navigation shape recovery spatio-temporal receptive field introduced order compute optical flow polar parameterization shown eigenvalues optical flow decomposition related observer-controlled motion surface geometry finally method optical flow decomposition presented observer-controlled translation achieved measuring directional derivative magnitude optical flow direction flow theoretical framework vector field decomposition euclidean manifold integral curves linear vector field family curves defined curve length matrix written form general vector field first-order approximation taylor series form decomposed sum symmetric matrix antisymmetric matrix andp symmetric matrix diagonalized similar transform put form orthogonal matrix jqjd transform property property compact form reached noting vector field treated field denote component curl matrix decomposed form refer decomposed components divergence curl deformation fields properties decomposed fields set differential equations integral curves characterize curves eigenvalues matrix defined equation eigenvector basis solution solving characteristic equation algebraic sum vector sub-fields properties vector field completely defined sub-fields divergence field characteristic equation divergence field defines degenerate integral curve star configuration figure eigenvalues real identical optical flow divergence field result observer moving object information time contact curl field characteristic equation curl field defines integral curve vortex configuration figure eigenvalues pure imaginary opposite sign optical flow pure rotation surface normal coincident line sight deformation field deformation field defined jqjd treat rotation cos sin sin cos characteristic equation defines integral curve saddle point configuration figure eigenvalues real opposite sign optical flow deformation field carries information surface orientation deformation field disappears observer shape deformation field control motion respect area object surface curl field divergence field deformation field figure integral curves vector fields decomposed sub-fields properties integrated fields integrated vector field determined canonical subfields formulated properties investigated examining eigenvalues eigenvalues functions image coordinates defined point image plane field insert orthogonal matrix written form cos sin sin cos cos sin sin cos characteristic equation eigenvalues make observation curl deformation acts essential factor deciding field characteristics interesting cases curl deformation fields cancel divergence field shows vanishing curl deformation fields appears identical observer relationship eigenvalues observer motion derived section optical flow computation receptive field framework developed static images readily extended computation optical flow eqs primary difference optical flow field localized vectors magnitude orientation image contours localized orientation shortly spatio-temporal volume image spatially local region point temporally local region moving image velocity cos sin absolute velocity direction optical flow trace point line locus traces cone figure jxjd figure optical flow frame energy spatio-temporal line confined neighborhood line spatio-temporal receptive field form exp receptive field maximum response feature radius spatiotemporal volume additionally symmetric shape vanishing volume responds feature points size smaller size local temporal scope temporal energy receptive field finite problem computing optical flow find function obtains maximum energy condition optimization true exp cos sin sin cos condition compared spatial receptive field chapters start form equivalent spatio-temporal flow characterized elongated volumes zero-crossing transitions image contours equations system unknowns straightforward solution requires partitioning spatio-temporal space grids polar parameterization show variables decoupled subsequently determine independently taylor expansion spatio-temporal image isgivenby represented order approximation algebraic sum static dynamic parts forallx forallx equation considered alternatively image rest specifies spatio-temporal volume projected image hasm field written orientation optical flow field found method computation tangent field eqs solve grid plane figure absolute time defined absolute relevant make normalizing optical flow field decomposition active observer optical flow infer relative relationship observer surface observer motion planned order achieve relate optical flow observer motion expressing canonical fields divergence curl deformation terms rotation omega translation observer section formulation developed relates eigenvalues fields translational observer motion alternative form makes observer motion explicit order control optical flow mobile observer undergoing 
instantaneous translation static environment coordinates observer frame projected image coordinates euclidean space relative translation velocity observer-centered coordinate system set image plane located object surface represented normal vector tangent plane object surface denote set-up relationships optical flow rotation omega involved transversing translation velocity perpendicular line sight jxj canonical fields expressed omega djn jjqv definition point object surface derive cqv inverse function theorem straightforward show differentials respect formula shown dqv identity matrix derive formulas divergence curl addition symmetric part matrix dqv symmetric matrix diagonalized choose alternatively compute rotation matrix diagonalized surface shape corresponds observer-controlled motion corresponds off-line computation diagonalize observer motion shown deformation diagonalize explicitly rotation defined deformation juj rotation angle express optical flow field terms curl divergence surface tilt show eigenvalues linear vector field defined section shown eigenvalues dqv alternative deriving result directly solving form eigenvalues real consistent elimination curl field place solving scene geometry curl field matrix symmetric deformation assume canonical fields observed computed observer determine surface normal compute divergence field essence deformation field tells surface orientation segmentation optical flow field purposes optical flow segmentation identify discontinuity surface geometry occurrence discontinuity due presence discontinuous contours object surface discontinuity depth unique interpretation results segmentation result strongly constrain problem identifying object boundaries observer-controlled translational motion optical flow field cqv measure smooth characteristics optical flow factors considered orientation magnitude optical flow natural definition measure smoothness directional derivative magnitude direction juj juj jujd juj juj simplify expression shown cqv juj treat function defined image plane discontinuities structure correspond image contours boundary occur consequence scene geometry involves surface normal depth reflected examples test sequence shown figure spatio-temporal volume sequence shown figure sequence images curl divergence fields dynamic differential image spatio-temporal volume shown figure integral curves flow field respect time made apparent smoothing local image structure figure frame image sequence frame image sequence figure test image sequence optical flow window frames compute integral curve flow field curves computed scales orientation optical flow point computed method chapter result frame shown figure magnitude flow field computed agridof linear interpolation locate zero-crossing point components curl divergence fields clear spiral shape optical flow scale identify magnitude optical flow shown sofa synthetic sequences courtesy computer vision group heriot-watt figure spatio-temporal volume image sequence images figure differential image computed figure differential image figure gaussian smoothing results indication nature local texture figure integral curve optical flow field frame figure optical flow field computed frame test sequence shown figure synthetic sequence frames shows fly-through yosemite valley segmentation method formulated applied optical flow eighth frame sequence figure magnitude juj orientation juj parts represented gray-level images figures measure directional derivative shown figure encoded equalized gray-level representation combining measure segmentation cues provided magnitude orientation optical flow boundaries objects shown figure summary major results presented chapter computational mechanism computing optical flow polar parameterization method optical flow segmentation local kernel computing optical flow consistent geometric operations yosemite fly-through sequence produced lynn quam sri frame image sequence frame image sequence figure test image sequence frame optical flow frame figure frame optical flow figure magnitude optical flow frame figure orientation optical flow frame figure gray-level representation segmentation optical flow figure binary segmentation optical flow presented previous chapters mathematical form interpretation terms biological systems implement similar functionality addition active observer motion control shape decomposed vector field optical flow property enables observer determine orientation respect object surface navigate object result segmentation optical flow observer strong hypotheses type location object boundaries information effectively employed observer active control motion aspects examined chapter chapter global surface representation navigation computational vision global representation objects perceptual mathematical problem aspects complement studied close goal understand human visual system design compatible artificial systems key issue computation surface features representation surface shape identify perceptually meaningful properties efficiently computed effectively characterize global surface shape developing theory surface representation features similar studying equilibrium physical system objects equilibrium hand decide representation elements representation computed analogous study dynamical process physical system reaches equilibrium computational aspects problem studied conjunction mathematical perceptual issues complete understanding vision chapter representation problem studied provide mathematical framework perceptual process computation representations investigated methods active navigation surface representation predefined method surface representation computer graphics method ties perception mathematical representation geometric features directly correspond results visual perception examined psychology psychophysics perception constrained resources time examine object task performed avoid collision examine artifact precision exact form representation pre-determined shown surfaces represented features perceptually meaningful derived geometric features computed efficiently local computation global significance surface shape representation representation scheme studied part chapter surface navigation scene projected image plane forms images formal ill-posed connection scene images active observer carry controlled motions recover connection establish scene geometry projected images collected navigation path motion part plan collect additional information current observation verify hypotheses formed current observation methods developed previous chapters inferring surface shape textured surfaces optical flow provide strong hypotheses surface shape navigation essential verifying falsifying hypotheses natural integrating methods problem surface recovery active observer part chapter present methods surface navigation contour information frames obtained surface extrinsic surface intrinsic global features surface features nature properties region surface present sensor perceptually neighboring regions desirable well-defined correspondence feature region computed words features perceptually distinguishable mathematically representative terms surface geometry surface shape considered sense differential geometry representation surface result extending shape represented feature region surface feature computed sense fundamental geometric features points surface exhibit special geometric properties proposals attneave koenderink perceptually local curvature focus feature computation point feature point region surface second-order geometric measure attains extremal point relation neighborhood geometric view surface curvature point determined estimated features computed previous chapters series methods developed computation local geometry surface consequence assume marked point object surface satisfying visibility criteria position local shape computed directly estimated appropriately changing vantage point start definition formal concepts feature related properties idea observed computation based observation computed static apparent contours surface visibility surfaces varieties visible apparently visible definition visibility observer point visible surface ray emanating point intersect part surface point surface apparently visible ray tangent surface emanates point intersect surface definition visible surface visible part surface collection visible points surface apparently visible part surface collection apparently visible points surface differential geometry surface shape point defined normal curvature parametric curve 
passing point convenient define feature point surface curves definition characteristic path surface curve passing point surface characteristic path point curvature extremum point definition feature point point smooth surface feature point static surface mark characteristic path definition prominent feature point prominent feature point point path passing point characteristic path point possibly finite number paths constant curvature definition feature curve curve feature curve curvilinear feature point curve feature point curve part discontinuous contour definitions begin study representation surfaces condition set feature points part chapter show active observer navigate surface locate features defined global surface shape representation local geometry surfaces fundamental forms differential geometry local description smooth differentially describe arbitrary smooth surfaces descriptive power requires infinite resources basis tasks object recognition section methods developed embody idea local extremum point curvature space extended representative global region neighborhood feature point basic method employed interpolation surface curves contrast interpolation location points start surface points fully differential geometry language differential fundamental forms shown geometric description generates natural surface curves strongly constrain surface shape subsequently curves extended local shape representation global key shape unchanged neighborhood changed smoothly description point interpolated planar path scheme presented organic introducing single feature point representative region underlying volume point representations surface surface triangulated points final step show triangular patch surface constructed feature points leaving local shape feature points intact method surface representation incremental modeling additional piece shape information contributes incrementally surface model imposing global original model surfaces single point point feature prominent feature point planar curve passing point planar curve monotonically decreasing curvature magnitude generic monotonic function gaussian represent curvature curve gaussian function adequate curve feature points figures gaussian represent curvature destination curve cos erf sin erf exp erf erf error function prototypical curve unit curvature shown figure curve curvature figure curve gaussian curvature profile smooth surface process constructing surface local shape conforming shape generate planar curves curvature lines surface figure surface resulting prominent feature point prominent geometrically local region part surface neighborhood completely characterized principal curvatures surface shape uniquely defined prototype curves figure elliptic hyperbolic surface shown figure figure gaussian curve curve gaussian curvature figure gaussian curvature curvature gaussian curve figure surface shape extension single point elliptic surface hyperbolic surface figure surfaces elliptic hyperbolic curvatures surfaces points surface curves defined natural surface interpolation schemes tensor-product surface maintain shape surface feature points curves defined single point extensions planar curve interpolation points figure tensor-product surface method applicable section method developed case assume surface parameterized distinct curves surface kernel curves path curve formalize concept surface considered result moving time gradually deforming reaches eventually case deformed curve transformed linear transformation pertinent case locally extended single surface point principle previous section orthogonal direction orthogonal direction respect planar curve extension figure surface shape extension surface points transformation rule maps linear transformation foragivenv parallel constant vector scalar function plane occupied parallel plane normal condition satisfied normal vector plane resides left eigenvector linear transformation eigenvalues eigenvectors matrix dtp shape descriptions points complete fundamental form description surface planar curve curve connecting plane determined surface normal vector planar curve defined surface curve passing plane orthogonal plane parameterizationv planar curve passing orthogonal constrained figure constraint determine eigenvalues easily shown similar sense diagonal similarity condition formalizes notion deformation uniform parameterization independent determined boundary values similarity condition guaranteed local extension direction choose toderive hermite functions interpolate endpoints surface extended points plane orthogonal plane alway choose plane plane cartesian coordinates case immediately determined figure surface extended points elliptic gaussian curvature point hyperbolic point curve figure surfaces points elliptic hyperbolic figures figure surface shape extension elliptic hyperbolic point figure surface shape extension elliptic points positive curvature figure surface shape extension elliptic points negative curvature surface multiple points feature points region local shape triangular mesh formed surface constructed patching part shape feature points disparate feature points surface shape inherited patches constraint construct surface patch connecting patches constraint area delimited feature point shape intact triangular region defined connecting figure curve points excluding reserved areas forms six-sided patch problem construction six-sided patch boundary curves method solving problem gordon-coons surface patch figure construction six-sided coons patch boundary curves surface tangent derivatives curves patch continuous first-order derivative coons patch boundary curves formed partitioned rectangular parametric patches connecting tangent vectors corner points curves computed patch surface defined feature points curve interpolated patch surfaces curve interpolated accomplished constructing cutting plane cuts figure cutting planes cut regions connected existing feature patches yet-to-be-constructed coons patches figure tangents direction boundary curves feature patches computed directly tangents cross-patch curves interpolated figure additional cutting plane coons patching cut-out curves cutting plane intersects patch cut-out curves problem joining coons patches form single surface crossing common boundary curve coons patches computed individually tangents common boundary coincide general interpolated vectors curves curves solve problem projecting interpolated vector coons patch plane spanned interpolated vector patch tangent vector curve figure formulation requires firstand second-order differentials boundary curves discussed first-order differentials computed directly interpolated feature patches second-order differentials referred traditionally twist vectors estimated boundary conditions order prevent coons surfaces flat set simplify computational process aesthetic appearance surface primary concern figure cutting curves coons patching figure tangent vectors coons patching figure fitting tangent vectors coons patches figure feature patches coons patches figure alternative feature patches coons patches curves structured features surface curve perceived feature surface static mark discontinuous contour curve characteristics invariant observer motion primary features delimit object surface operational surface partitioned well-organized subparts recovered features well-defined procedures figure function features serve navigation observer refer static landmarks surface curve feature local shape extension pstrip geometry surface figure surface shape extension strip proceed primitive features feature points higher structured features curves surface represented operationally methods employed recover surface well-defined conversions transform representations essentially process signal processing information symbol manipulation conversion representations knowledge acquisition process inherent perceptual system alternatively conversion considered additional structure imposed primitive feature set artificial objects regularity symmetry prone represented structured features symbolic features serve primary function embodying regularity symmetry highly structured organization plane sphere feature single number describe shape globally ellipsoid prominent feature points feature curves invariant curve discontinuous points feature points ridge part symmetric contour figure feature point symmetry curves feature curves figure 
invariant curve surface features case well-defined procedures recovering surface shape curve chapter shape orthogonal direction tangent curve constrain surface account additional point curvilinear features constructing surface advantage point features describe global shape representational power individual parts surface underlying volume shown previous sections emerging structures higher dimensions structures candidates organize representation structures figure perceptual properties stand-alone landmarks intrinsic surface structured features treated aids navigation cases symmetry representation surfaces difficulty higher dimensional features directly representation due fact features structure easily handled perceptual system saddle figure easily represented planar feature curves hyperbolic surface asymptotes words easier identify features represent nonetheless case planar curves representation essentially reduced problem surface representation feature points effective occurs natural correspondence curve volume mentioned point features discussed extension single feature point compact global volume makes approach attractive similarly representation planar curve needed representing volume natural curve part representation tokens encountered case discussing surfaces feature points instance symmetry shape figure discussed section figure surface shape feature curves figure surface shape represented planar curve global navigation goal global surface navigation locate features characterize surface features represent surface operationally well-defined mathematical methods recover surface surfaces similar features considered similar words observer mark surface features represent surface region features navigation procedure involves identifying features moving information related features acquired representing parts surface traversed process navigation involves exploration recovery unknown partially unknown parts surface unknown parts surface demarcated discontinuous boundaries hand apparent contours turn smoothly observer provide partial information surface parts surface completely characterized single point discontinuous contour apparent contour kinds features informative point discontinuous curvilinear static curvilinear features leave explicit marks object surface static point marks static curvilinear features discontinuous contours features navigating tracking representing surface hand apparent contours identifying geometric feature points curvature extrema aspects goals navigation shape visible part surface recovered surface textured accomplished optical flow patch computation recovery results identification surface features detailed previous sections issues frame observer motion forms local global local movement conducted observer observer-centered frame observer moves perturbative motion local region examples type motion include small oscillations differential rigid motion expanded significant linear term ignorable higher-order terms taylor series type motion essentially linearized perturbation formulations henceforth easily reversed tracked capability track camera resorting external frame essential locating verifying kind geometric features sections acquiring depth cues optical flow non-local movement generally requires external frame track motion relative positions object camera apparent contours apparent contours powerful primitive entity perception reveal great deal surface direction orthogonal viewing direction surface normal owing lack effective frames local shape information apparent contours assemble global shape surface inefficient difficult figure approach work adequate frame provided scanning solid model rotating platform primary usefulness apparent contours identifying plausible features hypothesized texture tracking optical flow static surface features point marks stationary curvilinear contours embedded features object surface motivate navigational motion apparent dictated movement assure information gain features convey surface shape information chapter representing global shape fixed vantage point serve tracking representation hand discontinuous contour imparts great deal information observer additionally suggests motion paths maximum information gain mathematical formulation discontinuous contours perceived characterize discontinuity change curvature small spatial region scale-dependent discontinuous contours deform projective geometry qualitatively apparent contours deform surface geometry addition projective deformation observer movements eliminate projective deformation discussed section active observer motion apparent contour manifests deformation convex trajectory orthogonal contour surface static contour deforms observer moves chapter difference deformation identified compute surface shape means apparent contour scales scales family receptive fields key parameters sampling process visual perception preserve continuous properties essential computation hierarchy physical events embedded scale space means control distribution events maintaining ability examine event level hierarchy well-defined essential computing surface shape static surface marks apparent contours effects advantages scale-space structure process two-dimensional images discussed chapters scale-space related operations integrated part visual front-end directly samples optical input surface shape turn computed projection optical input section mathematically scale-space operation blurring operation affect number points tracked projections image plane adjacent points merge fewer disperse oblivion effect make enclosing surface flat visually average distance point features increases scale coarser scale effect part two-dimensional imaging process correlation two-dimensional scale space three-dimensional surface recovery clear formal properties features purpose identifying features surface representation observer evaluate computed current viewpoint reasonable hypothesis unknown part surface determine move based information properties features independent surface geometry properties observer plan motion section study properties region discontinuous contours surface smooth represented hierarchically framework scale space case surface textured initial shape surface computed triangulated surface patches definition compute feature points visible surface region fixed scale vantage point boundary region composed discontinuous occluding contours discontinuous contour feature definition occluding contour feature points contour prominent feature points part curvilinear features property purposes guide global navigation identify local surface shape global navigation logical consequence effort recover surface shape feature points contour observer movements types movement effective navigation landmarks movement localized motion perturbative motion kinds landmarks navigation surface recovery external frame surface features include static surface marks prominent feature points prominent feature point apparent contour identified local perturbative motion observations needed uniquely recover shape point scale scale prominent feature points separated distance determined scale projected image plane entails finite set prominent feature points surface scale space control size finite set part goal surface recovery locate finite set features scale property captured formal statements proposition function bounded second-order differentiation scale distance adjacent zero-crossing points function lower-bounded distance fixed threshold set zero-crossing criterion proposition finite region image plane finite number zero-crossing points smooth bounded function proposition proposition bounded region surface projection region image plane finite number prominent feature points apparent contour apparent contours primary sources navigation formal properties studied proposition directly definitions proposition apparently visible part surface subset visible part surface prominent feature point characterized language differential geometry theorem observer navigates recover surface shape theorem point surface principal paths characteristic paths point prominent feature point proof point surface fundamental form quadratic form surface normal surface tangent geometrically linear mapping differential surface normal direction normal curvature curve passing tangent curve letn surface normal curve curvature frenet formulas term vanishes identically arrive principal directions tangent forms angle principal curvatures derive cos sin cos sin cos sin cos sin expression principal directions tangent directions characteristic paths 
assumption direction noted principal directions curvatures determined views surface point observer moves observes continuously principal directions determined views proposition principal directions point smooth surface determined views made observer moving continuously proof principal curvatures euler formula states normal curvature direction principal directions cos sin differentiate sin equation difference principal curvatures views needed solve feature point local concept obvious observer proposition shows part readily identifiable features feature curves prominent feature points proposition feature point surface part feature curve prominent feature point visibility surface discontinuous contour modeled piecewise-planar curve space planar segment tangent curve surface tangents surfaces normal tangent determine visibility surface vantage point assumed conditions surface shape recovered visible problem move part space occluded part surface visible observer discontinuous contour orthogonal triplet systems point segment condition surface occluded occurs quadrant encompassed surface tangent surface normal overlap quadrant formed surface figure implies visibility surface constrained half plane defined tangent tangent discontinuous contour normal normal discontinuous contour nonoccluding geometry tangent tangent discontinuous contour normal normal discontinuous contour occluding geometry figure surface geometry presence discontinuous contour treat individual navigations induced apparent contours discontinuous contours navigation induced apparent contours resolution identifiable feature sets controlled scale space representation feature sets global properties scale space ensure miss features hand feature points derived features based surface curves visible feature point covered collection surface curves representation covering surface theoretically parameterizing surface mathematically distribution features case computer graphics image processing analogous uniform sampling nyquist rate spatial distribution image intensity section advantage schemes systematic recovery information represented object surfaces image processing images representation perceptual context components knots spline layer multi-resolution pyramid representation perceptual meaning efficiency completing task consideration apparent contour surface curve makes feature points curve explicit observation hypotheses surface shape aspects essential active navigation discussed shape recovery section shown natural mesh formed observer navigates surface movement induced apparent contours external density mesh function scale distribution surface features end result recovery apparently visible definition part surface case surface appropriately textured entire visible surface recovered navigation aid external observer plan movement apparently visible part surface surveyed systematically apparent contour observed feature points curve types identified feature point contour part feature curve prominent feature point goal-oriented navigation required order differentiate alternatives theorem find principal paths point hand sufficient find non-characteristic path disqualify point prominent feature point part feature curve case observer gains advantage moving direction orthogonal surface normal line sight keeping constant distance point examination maximum change view achieved moving orthogonal line sight action traces circle point observer essentially rotates surface consistent experience adjacent feature points separated distance determined scale proposition surface curve formed apparent contour separated distance words surface shape distance indistinguishable number prominent feature points finite proposition navigation process stop deterministically figure shows prominent feature point recovered surface procedure figure displays triangular patches part tracking apparent contour figure feature point object surface feature patch figure triangular patches surface normals recovered surface proposition apparently visible part surface fully recovered navigation apparent contours primary navigation effort induced observing apparent contours identify prominent feature points features serving object-centered frames navigation contributing ensemble parts surface composed acting apparent contours weak surface recovery incur lot effort required textured surfaces shading information form hypotheses surface shape hypothesis verification navigating systematically acquire unknown information potential feature points apparent contours motivate observer move order verify hypotheses apparent contour tells observer partial information surface shape plausible hypotheses formed parts surface hypothesis constancy apparent contour moving direction translational rotational invariance relative fixed observer frame hypothesis valid frame determined aforementioned direction motion proposition object surface rotationally invariant observer acquires invariant projection apparent contour rotational movement axis rotational symmetry center rotational movement true translational invariance direction translational invariance direction movement coincident lines sight fixed point contour noted orthographic projection observer discern kinds invariance perspective projection computational precision rotational invariance proportional distance center symmetry navigation induced discontinuous contours surfaces intersecting discontinuous contour addition static feature discontinuous contour shape side contour inferred shape side similar case prominent feature points discontinuous contours serve navigation aids boundaries parts surface meet shape component parts delimited fully partially discontinuous contours determined individually navigation means chapter shape recovery discontinuous contours essentially static surface marks share properties static marks chapter recover surface shape contour static marks intersecting points contour method recovering curve geometry contour propositions addition occluding discontinuous contours advantage contours occur angle normal vector side tangent vector opposite side greater orn plane figure case permitted physical constraints observer move positions line sight coinciding tangent surfaces condition guaranteed reverse direction surface tangent falls half plane visibility surface navigation aid static nature discontinuous contours enables observer navigate external observer part surface examined shift focus contour purposes goal navigation move vantage point surface side contour visible contour navigation landmark case surface shape computed apparent contours navigation enable apparent contour emerge side discontinuous contour relationship contours observed tracked time general scenario initial separation contours apparent embedded completely side surface discontinuous generally invisible observer point observer contours intersect part apparent contour disappears discontinuous emerges complete replacement apparent contour discontinuous eventually scenario reverses apparent contour emerges side surface major motivation navigation presence discontinuous contours steer focus regions demarcated contour recover surface shape contour occlusion accomplished moving positions permit full view surface obstruction contour contour frame navigation summary major themes chapter thesis general represent shape object global perceptually meaningful complete identify individual component representation mobile observer problem representation curves studied chapter shown extremum curvature points represent curve comprehensively methods hermite interpolation rationale extended chapter surfaces planar curves pass surface point feature points curves identified reconstruct surface procedure algorithmically inverse representation process representation perceptually complete sense surface representation present set perceptual features observer words original shape information similar computed representation criterion similarity defined second-order computation surface shape procedure representing surface efficient computational procedures constructing surface representation established connection low-level visual modules local surface shape previous chapters relationship established framework scale space turn means handle surface shape related operations globally scheme embodies global representation part perceptual process formulated part chapter part chapter issue acquiring geometric features representation studied form global navigation observer systematically engage voluntary motion guided current observation surface characteristics projected image plane observer motions motivated desire identify critical 
features representation partially effort test hypotheses formed observation made case end result full coverage object surface process exploring surface depends surface properly textured external chapter conclusions future work problem computational vision core parts task accomplished computation needed process raw data order perform task task related shape representation conventional method treat problem inverse problem computer graphics task describe surfaces language computer graphics required computation recover depth map surface object-centered frame major problem approach front-end modeling formulation quickly swerves visual perception delves mathematical problems global optimization parametric descriptions surface central thesis research direct response disparity method language employed visual perception represent objects intrinsically perceptual geometric nature reflected stages information processing nature visual information processing active passive light statements problems raised core problems computational vision representation research contributes thesis contributions local geometric computation essential computations front-end vision system capable computing representations complex shapes tasks involving shape representation essential computation front-end select geometric features essential tasks system accomplish tasks related active navigation optical flow computed similar mechanism computations carried filters form receptive fields constitute primary spatio-temporal sampling mechanism perception differential geometry kind geometric language describe relevant perceptual results human vision elements language computed data received front-end local computations carried front-end necessarily dictate formal formulation differential language components language include tangent curvature derivative curvature contours efficient stable methods computing invariants locally directly raw images derived result study formulations methods computations global representation local computation global properties perception related results local computation dictated choice geometric language differential geometric language naturally embedded scale space intrinsic sampling topology front-end global properties visual perception derived scale space local components geometric language consequence choice receptive fields formal properties scale space incremental modeling computation language terminate relationship representations computed resource constraint computation specific task terminates computational resources accommodate computation resulting models computation relate models computational resources incremental modeling model additional local features affect local shape representation perceptionbased representation surfaces embodies incremental modeling contribution thesis completely active navigation autonomous system actively seek information based observed information complete task dependent nature task case shape representation information actively acquired global navigation formal properties scale space guarantee termination navigation computational process scale stationary apparent contours effectively identify feature points surface result geometric computation visual perception alternative shapes consistent current observations hypothesized verified navigation cases surface textured optical flow local texture tracking provide efficient means navigation surface recovery relate representation global surface shape visual perception efficient navigation methods unique contribution thesis future work stability computation computational framework behave natural environment vital part research computational vision stability issue critical differential framework research demonstrated local geometric computations high-order differentials stable stability inherited global representation results local computations study carried optical flow computation shape representation addition scale space formulation controlling stability computation studied matching problems stable information-preserving representation efficient computation matching studied research large number practical applications requiring matching shapes general matching mechanism needed constant-time matching complexity independent database size invariant viewpoint-dependent transformations scaling rigid transformations efficient navigation propositions theorems proved thesis navigate surface current knowledge surface efficient navigation requires frames route planning problems studied real systems built explore efficacy methods matching feature points representation salient visual perception matching object recognition feature points local geometric properties inputs matching process core parts object recognition system studied testbed theory presented symbols information structure specific humans primates ability manipulate symbols interact environment result manipulation characteristics intelligence study relationships symbol manipulation perception essential general domain artificial intelligence perspective perception symbol represents essentially piece information invariant general contexts closely related invariant structure information invariance major part visual representation natural study category visual perception represented information structure invariant criteria henceforth represented symbol appendix curvature gradient observer frame projected curvature observer frame curve object surface parameterized curve length projection image plane curve parameterized imaging model projection standard projective equations natural parameter general parameter projected curvature parameterized curve length definition frenet frame curvature point represented observer frame substituting differentials quantity length projection image plane component direction component form cross product derive denominator rewritten jcj shorthand takes vector form projected curvature gradient object frame scalar field steepest rate change direction gradient change arbitrary direction gradient object frame takes form note sign expression depends sign component identical frames define form denotes vector orthogonal expressed expresses fact relative translational motion object observer indistinguishable carry rotational motion section expression sincec wehave wehave proof proposition proof space convex surface defined region wehave vector projection image plane related applying cauchy inequality jozjj bjd observer region observes convex surface agreeable frame convex region agreeable frame part equation part equation observer agreeable observer frame change direction negative similar arguments hold region concave surfaces bibliography adelson bergen spatialtemporal energy models perception motion opt soc amer adiv determining three-dimensional motion structure optical flow generated moving objects ieee trans patt anal machine intell allmen mcguinness miezin simulus specific responses classical receptive field neurophysiological mechanisms local-global comparisons vision neurons annual reviews neuroscience aloimonos shulman integration visual modules academisc press extension marr paradigm aloimonos weiss bandyopadhyay active vision proc int conf computer vision pages arbter affine-invariant fourier descriptors simon editor pixels features pages elsevier science asada brady curvature primal sketch memo mit attneave informational aspects visual perception psychology review barr superquadrics angle-preserving transformations ieee computer graphics applications barrow tenenbaum recovering intrinsic scene characteristics images hanson riseman editors computer vision systems pages academic press york barrow tenenbaum interpreting line drawings three-dimensional surfaces artificial intelligence beis lowe learning indexing functions model-based object recognition proc cvpr pages bertero poggio torre ill-posed problems early vision memo mit besl jain invariant surface characteristics object recognition range images comput vis graph image process birkhoff rota ordinary differential equations wiley black reconstructing visible surface proc nat conf artificial intell pages blake zisserman cipolla visual exploration free-space blake yuille editors active vision mit press bolle vemuri three-dimensional surface reconstruction methods ieee trans patt anal machine intell brady ponce yuille asada describing surfaces computer vision graphics image processing breitmeyer eye movements visual pattern perception pattern recognition human machine visual perception academic press bruss horn passive navigation computer vision graphics image processing canny computational approach edge detection ieee trans patt anal machine intell cipolla active visual inference surface shape springer-verlag 
heidelberg germany cipolla blake motion planning image divergence deformation blake yuille editors active vision mit press cipolla blake surface shape deformation apparent contours int computer vision cipolla zisserman qualitative surface shape deformation image curves int computer vision daugman dimensional spectral analysis cortical receptive field profile vision research daugman uncertainty relation resolution space spatial frequency orientation optimized two-dimensional visual cortical filters opt soc amer devalois albrecht thorel spatial frequency selectivity cells macaque visual cortex vision research devalois yund hepler orientation direction selectivity cells macaque visual cortex vision research carmo differential geometry curves surfaces prentice-hall englewood cliffs dobbins zucker cynader endstopping curvature vision research farin curves surfaces computer aided geometric design academic press edition faugeras herbert pauchon segmentation planar quadratic patches range data proc ieee conf pattern recognition image processing fischler bolles perceptual organization curve partitioning ieee trans patt anal machine intell fischler wolf locating perceptually salient points planar curves ieee trans patt anal machine intell florack romeny koenderink viergever scale differential structure images image vision computing gabor theory communication journal inst electrical engineering giblin weiss reconstruction surfaces profiles proc int conf computer vision pages goldstein classical mechanics addison-wesley edition grimson recognition parametrized objects int computer vision grossberg rudd neural architecture visual motion perception group element apparent motion neural networks grzywacz poggio computation motion real neurons introduction neural electronic networks academic press hamann curvature approximation triangulated surfaces farin hagen noltemeier editors geometric modeling springer-verlag wien york heeger model extraction image flow opt soc amer heeger visual perception three-dimensional motion neural computation hildreth koch analysis visual motion computational theory neuronal mechanisms memo mit december hoffman richards parts recognition cognition hoffman richards representing smooth plane curves recognition implications figure-ground reversal whitman richards editor natural computation mit press horn extended gaussian images proc ieee horn robot vision mit press hubel wiesel receptive fields binocular interaction functional architecture cat visual cortex physiol london hubel wiesel sequence regularity geometry orientation columns monkey striate cortex journal comparative neurology hummel representations based zero-crossings scale-space proc ieee computer vision pattern recognition pages huttenlocher klanderman rucklidge comparing images hausdorff distance ieee trans patt anal machine intell hoschek lasser computer aided geometric design peters kass witkin terzopoulos snakes active contour models proc int conf computer vision pages koenderink structure images biological cybernetics koenderink occluding contour solid shape perception koenderink solid shape mit press cambridge koenderink richards two-dimensional curvature operators opt soc amer koenderink van doorn invariant properties motion parallax field due movement rigid bodies relative observer optica acta koenderink van doorn singularities visual mapping biological cybernetics koenderink van doorn optic flow vision research koenderink van doorn representation local geometry visual system biological cybernetics koenderink van doorn receptive field families biological cybernetics koenderink van doorn surface shape curvature scales image vision computing kunt ikonomopoulis kocher second-generation image-coding techniques proc ieee kutulakos dyer occluding contour detection affine invariants purposive viewpoint control computer vision pattern recognition pages lee choosing nodes parametric curve interpolation computer aided design levick sampling information space retinal ganglion cells pettigrew sanderson editors visual neuroscience cambridge univ press lindeberg detecting salient blob-like image structures scales scale-space primal sketch method focus-of-attention int computer vision livingstone hubel segregation form color movement depth anatomy physiology perception science pages longuet-higgins prazdny interpretation moving retinal image proc roy soc london mackay vision capture optical covariation pettigrew sanderson editors visual neuroscience cambridge univ press mallot von seelen giannakopoulos neural mapping space-variant image processing neural networks marr vision freeman marr poggio hildreth smallest channel early human vision opt soc amer mar aelja mathematical description response simple cortical cells opt soc amer milios shape matching curvature processes computer vision graphics image processing mokhtarian mackworth theory multiscale curvature-based shape representation planar curves ieee trans patt anal machine intell mundy zisserman geometric invariance compter vision mit press oppenheim schafer digital signal processing prentice-hall parent zucker trace inference curvature consistency curve detection ieee trans patt anal machine intell august pentland perceptual organization representation natural form artificial intelligence poggio torre koch computational vision regularization theory nature richards dawson whittington encoding contour shape curvature extrema josaa richards koenderink hoffman inferring shapes silhouettes richards editor natural computation mit press rothwell object recognition invariant indexing oxford press sander zucker inferring surface trace differential structure images ieee trans patt anal machine intell sanger analysis two-dimensional receptive fields learned generalized hebbian algorithm response random input biological cybernetics shapley lennie spatial frequency analysis visual system annual review neuroscience sinha besl principle patches viewpoint-invariant surface description proc ieee int conf robot automat pages stark sampling theorems polar coordinates opt soc amer stein medioni structural indexing efficient object recognition ieee trans patt anal machine intell stevens visual interpretation surface contours artifical intelligence subbarao interpretation visual motion computational study morgan kaufmann taubin cooper object recognition based moment algebraic invariants mundy zisserman editors geometric invariance computer vision mit press terzopoulos computation visible-surface representations ieee trans patt anal machine intell tomasi shape motion image streams factorization method phd thesis carnegie mellon ullman interpretation visual motion mit press vaillant faugeras extremal boundaries object modeling ieee trans patt anal machine intell wallack canny efficient indexing techniques model based sensing proc cvpr pages assle sampling visual space retinal ganglion cells pettigrew sanderson editors visual neuroscience cambridge univ press watson detection recognition simple spatial forms braddick sleigh editors physical biological processing images springer-verlag watson cortex transform rapid computation simulated neural images computer vision graphs image processing watson efficiency model human code opt soc amer watson ahumada model human visual-motion sensing opt soc amer waxman ullman surface structure three-dimensional motion image flow kinematics int robotics research weber malik robust computation optical flow multi-scale differential framework int computer vision wechsler zimmerman invariant object recognition distributed associative memories ieee trans patt anal machine intell weiss high-order differentiation filters work pami wilson bergen mechanism model threshold spatial vision vision research witkin scale-space filtering proc int joint conf artificial intelligence pages witkin tenenbaum perceptual organization pentland editor pixel predicates chapter ablex publishing yuille poggio fingerprints theorems zero-crossings proc aaai zisserman black rothwell van gool van diest eliciting qualitative structure image curve deformations proc int conf computer vision pages zucker early orientation selection tangent fields 
dimensionality support computer vision graphics image processing index curve representation fourier space gaussian filter active vision paradigm agreeable frame apparent contour occluding contour bivariate approximation centripetal parameterization channel model wilson bergen characteristic path circular convolution coding sparse compatibility equations completeness fourier transform gabor transform contour apparent computation curvature computation curvature derivative computation tangent computation contour curvature projection convolution property differentiation coons patch cutting plane cortex transform curvature foveation normal principal curvature surface surface curvature curvature scale curvature space diagonalization similar transform eigenvalue integral curve error function euler formula extended gaussian image feature surface static surface feature curve feature point prominent featureless curve foveation frenet frame recovery curvature normal vector tangent vector torsion fundamental theorem local theory curves gabor filter ganglion cell gaussian function curvature representation gaussian kernel dimensional property convolution dimensional geometric feature space gordon-coons patch hermite function hermite spline cubic quintic hnstu model image coding first-generation second-generation image generator incremental modeling scale integral curves intrinsic frame intrinsic primitives surface lambertian surface local canonical form local extension localization simultaneous mesh representation surface minimal information navigation hypothesis verification induced apparent contour induced discontinuous contour localized motion perturbative motion translation scheme nstu model nyquist rate object frame observer frame occluding contour distinguished stationary contour optical flow segmentation optical flow constraint equation orientation quantization mammal orientation space osculating plane parallel transport power preserving filter primal sketch principal curvatures principal directions principal patch projected curvature receptive field spatio-temporal representation information signal retina sampling geometry retinal filter sampling theorem sampling topology scale minimum scale space signal representation silhouettes simple cells linearity orientation frequency selection simultaneous localization singular decomposition space complexity matching matching partial matching rotation scaling stability translation surface elliptic hyperbolic surface curvature geodesic normal surface normal interpolation surface primal sketch surface recovery multiple contours principal curvature surface representation single feature point multiple feature points feature points tangent estimation step edge tensor-product surface time contact triangulated patch vector field decomposition curl deformation divergence visibility surface visible surface visual pathway 
recovering feature observer position projected error refinement gareth bestor dissertation submitted partial fulfillment requirements degree doctor philosophy computer sciences wisconsin madison made simple simpler albert einstein abstract recovering three-dimensional information images principal goal computer vision approach called structure motion sfm imposing strict requirements observer scene sfm assumes camera motion unknown scene required static thesis describes sfm technique called projected error refinement computes positions feature points structure locations camera observer motion noisy image sequence technique addresses limitations existing sfm techniques make unsuitable controlled environments approach presented thesis models perspective projection unconstrained camera motion deals outliers occlusion scalable technique recursive suitable video image streams images added time projected error refinement views sfm geometric inverse projection problem goal determining positions cameras feature points projectors defined image optimally intersect projectors lines projection direction feature point camera optical center expressed global optimization problem objective function minimizing mean-squared angular projection error solution observed images occlusion dealt naturally approach visible feature points define projectors considered optimization occluded features technique models true perspective projection scalable arbitrary number feature points images projected error refinement non-linear efficient parallel iterative refinement algorithm takes initial estimate structure motion parameters alternately iii refines cameras poses positions feature points parallel solution refined arbitrary precision refinement terminated prematurely due limited processing time solution converges rapidly global minimum started poor initial estimate experimental results perspective projection real synthetic images sequences acknowledgments graduate studies wisconsin-madison words john lennon life busy making plans starting vague idea formed ties people forever influence life academically advisor professor chuck dyer introducing computer vision guidance years pursuit research field continues fascinate grateful financial support allowed focus finishing degree professor mike bleicher turning mathematician geometer anticipated floundered long ago willingness answer constant barrage questions deeply thankful professor nicola ferrier enthusiasm assistance refining thesis insight structure motion invaluable discussions rewarding productive graduate career constant source inspiration smart needed professors jude shavlik vadim shapiro taking time serve thesis committee fortunate families parents tom ellie nurturing inquisitiveness exposing computers young age sealed fate indebted surrogate family don vedder tekla rita woody wlodarczyk accepted lives day arrived madison fed gave couch sleep taught needed volleyball zucchini groundhogs constant distractions finished degree sooner worse blame good friend partisan michael giddings introduced mountain biking kayaking welding sincerest susan dinan sharing worst periods graduate school imagine years forever grateful mary janowiak opened eyes worlds learned cherish constant friendship support tara treichel years reasons understand put final hardest stages secondary needed support finally thesis dedicated mark winfield believed table contents abstract acknowledgments table contents list figures list tables xiii introduction problem description assumptions motivation projector-based image representation projected error refinement major contributions thesis outline related work sfm images kalman filtering optimization-based sfm techniques requirements general purpose sfm technique two-stage approach projected error refinement optical projection models optical projection pin-hole camera perspective projection vii non-perspective projection projector model inverse projection problem reconstruction minimal image data extrinsic camera parameters image normalization parametric equation projectors concurrency constraint concurrent lines concurrent lines minimal data solution minimal data solutions inverse perspective projection minimal data solution inverse perspective projection effect projection noise summary projected error refinement concurrency projectors angular projection error extrinsic camera parameters structure parameters parallel iterative refinement initial estimate summary feature detection tracking kanade-lucas-tomasi feature tracker feature tracking feature detection viii correspondence errors false features non-rigid motion summary outlier detection random sample consensus pruning outliers summary occlusion occlusion projected error refinement experimental results synthetic image sequences synthetic images experiment refinement iterations experiment image noise experiment number features images experiment occlusion experiment outliers real image sequences image sequence rubic cube image sequence teabox image sequence hotel image sequence building image sequence indoor lab summary conclusions future work major contributions future research representation projective geometry improve efficiency intrinsic camera calibration improve outlier detection extend long image sequences triangulation beacon problem location determination problem beacon problem location determination problem measuring structure motion error bibliography list figures stages vision pipeline projector image model error cone projector optical projection performed camera lens pin-hole camera model parallel projection weak perspective para-perspective projection projector model optical projection inverse projection problem multiple images world coordinate system perspective projection synthetic scene minimal number features images scene reconstructed set minimal images scene reconstructed noise added minimal set images optimal feature position minimizes angular projection error optimal feature position minimizes distance non-concurrent projectors definition angular projection error synthetic scene redundant features images initial estimate scene reconstructed set noisy images refined estimate scene minimizing angular projection error refined solution transformed scene original coordinate system measure reconstruction error trace refined solution plot reconstruction error refinement iterations correspondence errors false features random sample consensus applied linear data fitting pruning applied linear data fitting synthetic scene projected images outliers refined solution images prior pruning outliers refined solution transformed original coordinate system final refined solution pruning outliers final refined solution transformed original coordinate system synthetic scene projected images occlusion refined solution images occlusion refined solution transformed original coordinate system features unit circle perspective projection unit sphere perspective projection results refinement iterations experiments perspective projection results refinement iterations experiments perspective projection results image noise experiments perspective projection results image noise experiments perspective projection results working set size experiments perspective projection results working set size experiments perspective projection results occlusion experiments perspective projection results occlusion experiments perspective projection results outlier frequency experiments perspective projection results outlier frequency experiments perspective projection results outlier magnitude experiments perspective projection results outlier magnitude experiments perspective projection frames rubic cube image sequence recovered feature camera positions rubic cube image sequence frames teabox image sequence calibrated feature camera positions teabox image sequence frames hotel image sequence recovered feature camera positions hotel image sequence xii frames building image sequence recovered feature camera positions building image sequence frames lab image sequence recovered feature camera positions lab image sequence beacon problem location determination problem synthetic scene feature points unit circle circle fitted feature points solution solution feature points rotated match original scene xiii list tables results pruning outliers experiments perspective projection results pruning outliers experiments perspective projection chapter introduction vision important sense richest source data environment primary goals vision system determine structure 
environment locate observer difficulty visually determining scene structure observer location optical projection destructive transformation image projected retina camera purely two-dimensional explicit three-dimensional information inverse projection problem recovering structure images fundamentally ill-posed additional assumptions constraints made problem posed remarkable proficiency human visual system evidence inverse projection hopeless assumptions made computer vision provide basis distinguish techniques stereo vision assumes relative positions cameras precisely techniques infer local shape image contours presume physical properties scene smoothness approach called structure motion sfm makes minimal assumptions camera scene require specialized hardware shariot price ullman summarize earlier work sfm oliensis critique recent techniques ideally sfm arbitrary camera motion requires scene static sfm techniques factorization method derivatives assume non-perspective projection model accurate specific camera motions scene structures thesis describes sfm technique called projected error refinement recovers positions feature points locations cameras avoids additional constraints imposed techniques inverse projection problem problem description assumptions recovering structure motion images multi-stage process sfm part shown figure sfm occurs images captured digitized prominent features image identified matched features images object modelling camera tracking feature trackingenhancement image capture structure motion features camera figure vision pipeline includes multiple stages image capture digitization image enhancement feature detection tracking recovering structure structure motion surface fitting object modelling camera tracking navigation input sfm typically list features projected positions image output positions feature points locations cameras rotations images optical centers surfaces subsequently fitted recovered points construct three-dimensional model scene object recognition computer graphics wireframe models recovered positions camera navigation obstacle avoidance motion planning structure motion techniques generally make assumptions extrinsic possibly intrinsic parameters camera unknown scene static called rigidity constraint multiple images projected viewpoints features extracted images primitives points lines correspondence features images correspondence problem solved restrictive assumptions rigidity constraint rigidity image consistency images captured time unlike stereo vision images simultaneously cameras scene changed arbitrarily view projected images unrelated making inverse projection ill-posed applications scene assumed static object modelling relax rigidity constraint nonmost sfm techniques point features based line features input output forms rigid motion identified segmented means sfm assumes correspondence problem solved determining feature correspondences non-trivial exact camera motion image sequence unknown features tracked reliably images frame rate high relative camera motion feature tracking active area research correspondence errors occur undetected overwhelm subsequent sfm analysis render solution meaningless detecting correspondence errors important feature projected error refinement sfm techniques assume intrinsic camera parameters focal length aspect ratio principle point angle image axes called intrinsic camera calibration sfm techniques based projective geometry determine parameters solving structure motion camera calibration important self-calibration desirable distinct problem recovering structure motion calibration easiest camera motion rotational recovering structure motion strictly requires camera translation cases intrinsic camera parameters constant determined change smoothly dynamically adjusted camera calibration examined thesis assumed intrinsic camera parameters found means motivation sfm powerful approach computing scene structure camera motion simultaneously recovers positions features location observer makes fairly minimal assumptions suitable wide variety applications existing sfm algorithms impose additional constraints reduce problem linear complexity scale large numbers features images robust irregularities imperfections real image sequences image noise occlusion missing features correspondence errors result existing sfm techniques typically perform real applications research motivated address limitations existing sfm techniques key deficiencies identified accurate optical projection model implies perspective projection parallel projection weak perspective para-perspective projection accurate limited camera motions scene structures robust noise caused imperfect camera model introduced prior stages vision pipeline requires examining image information handle occlusion missing features occlusion innate property real scenes handle correspondence errors feature detection tracking expected give perfect correspondences occasional correspondence errors handled manifest gross errors projected positions feature points recursive techniques incrementally refine existing solution adding images suited real-time video image processing recomputing solution scratch image inefficient projector-based image representation selecting representation images important largely determines complexity capabilities solution precisely inverse projection problem compelling reason planar images similar argument made naeve eklundh projective geometry projected error refinement represents images terms projectors lines projection extending optical centers camera passing feature points scene shown figure information position feature point relative direction camera knowledge distance precisely modelled projector describes line scene feature point lie unlike planar image coordinates projectors depend position center projection rotation image desirable camera location information recovering structure rotating camera information scene structure moving camera location projectors concisely explicitly represent relevant information scene structure leads intuitive understanding inverse projection problem facilitate simple solutions difficult problems occlusion projector-based image representation facilitates outlier detection projector principal axis cone describing confidence region feature position due projection noise image coordinate frame important normalized vij projector figure projector line extending optical center camera feature point scene vij unit direction vector line image set direction vectors visible features information structure scene relative direction feature point optical center shown figure projector lies expected error cone defined outlier projectors defined geometric projection transformation dimension easily adapted projection models perspective projection examined thesis applicable computer vision projector-based image representation equivalent normalized projective image coordinates spherical image coordinates sfm techniques based projective geometry chapter projective image coordinates essentially homogeneous representation planar image coordinates form non-zero scalar multiplier spherical image coordinates similar image spherical image coordinates represented points surface sphere plane spherical image coordinates isomorphic unit direction vectors projector model homogeneous coordinates frequently sfm simplify incorporating intrinsic camera parameters focal length computation structure motion facilitating self-calibration projective geometry property parallel perspective projection defined identically projective geometry well-developed field mathematics strong theory projection inverse projection projected error refinement projector-based image representation formulates inverse projection problem angular projection error figure projector principal axis cone describing expected position feature point due noise note error displaced position due noise increases center projection terms euclidean geometry topic future research chapter investigate projected error refinement simpler definition terms projective geometry representational differences projectors projective image coordinates spherical image coordinates planar images significant sfm techniques based exploiting geometric algebraic properties invariant projection multiple images camera rotation translation easily extracted centroid points constant parallel projection cross-ratio collinear points constant perspective projection essential matrix fundamental matrix factorization method exploit invariants perspective parallel projection recover relative extrinsic camera parameters images invariant properties typically defined specific number feature points images approaches permit occlusion easily scalable additional features images sensitive 
noise projected error refinement hand optimizes structure motion parameters visible projectors supports occlusion missing features arbitrarily scalable projected error refinement projectors defined feature point images necessarily concurrent intersect single point scene imposes weak constraint position rotation camera expressed terms extrinsic camera parameters result sfm sufficient number features images finite factorization method scalable number features images assumes parallel projection techniques based essential fundamental matrices extended include feature points defined images inadequate reliable reconstruction methods intrinsically handle occlusion missing features number camera feature locations consistent observed images understood so-called minimal data solutions sensitive noise additional image data included reliability redundancy over-determines inverse projection problem projectors longer precisely intersect due noise projected error refinement formulates inverse projection optimization problem determining positions cameras feature points projectors defined images optimally intersect objective error function projected error refinement mean-squared angular projection error angle projectors defined observed images projectors solution angular error projector independent distance feature point camera feature camera greater anticipated error position due noise figure chapter optimization methods minimize distance projectors biased features close camera projected error refinement error individual projectors weighted additional information included optimization strength feature match occlusion handled naturally visible feature points define projectors error terms contribute global sum total missing features simply projected error refinement non-linear efficient parallel iterative refinement algorithm takes initial estimate structure motion parameters found minimal data solution alternately refines features images reduce angular projection error separating refinement structure motion high degree parallelism feature positions refined parallel camera locations image rotations refinement solution continue arbitrary level precision terminate preoptimality defined terms angular projection error difference observed images solution maturely due limited processing time projected error refinement recursive suitable real-time video analysis projectors image added time solution refined sfm techniques compute solution fixed precision run completion process images batch mode re-compute solution image major contributions major contributions thesis summarized model sfm based projectors angular projection error views inverse projection geometric problem algebraic minimal data solution inverse projection problem perspective projection intuitive geometric interpretation constraints parameters problem optimization-based sfm technique called projected error refinement efficient parallel iterative refinement algorithm optimize scene structure camera motion iteratively minimizing angular projection error images technique models perspective projection arbitrarily scalable robust noise occlusion supported outliers detected rejected well-defined manner thesis outline organization thesis reflects development projected error refinement technique input method labelled list feature points projected positions image expressed projectors output map recovered positions feature points camera centers rotations images priori knowledge positions feature points cameras assumed solution correct scale factor rigid rotation translation results derived perspective projection chapter reviews related work sfm field received considerable attention years attempt made exhaustive predominant approaches inverse projection problem focusing assumptions made practical advantages disadvantages approach chapter describes projector model inverse projection projected error refinement based models optical projection sfm compared projector model describe inverse projection problem multiple images identify constraints parameters problem chapter describes projector-based minimal data solution examines minimum number feature points images reconstruction assumes image noise effect noise solution insufficient examine fixed minimal number image measurements reliable sfm techniques scalable chapter extends minimal data solution derived chapter examine additional feature points images computes solution precisely matches minimal images so-called refined solution alternately adjusts positions feature points camera centers minimize angular projection error non-intersecting projectors minimal data solution initial estimate positions subset feature points cameras augmented remaining features images estimate refined parallel iterative refinement optimization negligible effect reducing angular projection error synthetic images showing refined solution reconstruction scene minimal data solution chapter briefly describes kanade-lucas-tomasi klt feature tracker detecting features tracking image sequence klt tracker obtains good results variety scenes require extensive parameter adjustment feature tracking perfect examples types errors occur chapter examines problem outliers describes complementary approaches detecting outliers called random sample consensus ransac grows minimal data solution adding verifiable consistent data points called pruning computes solution based data points prunes inconsistencies explanation ransac unsuitable outlier detection projected error refinement approach pruning show pruning outliers improves solution chapter briefly examines issue occlusion missing features handled naturally projected error refinement shows missing features affect accuracy reconstruction chapter describes experimental results synthetic real image sequences synthetic images provide ground-truth data quantitative error analysis series experiments synthetic scenes show performance projected error refinement simulated viewing conditions real image sequences analyzed show technique performs variety real applications chapter summarizes main contributions thesis discusses directions future research appendix describes triangulation augment minimal data solution additional feature points appendix describes beacon problem location determination problem augment minimal data solution additional images perspective projection appendix describes structure error motion error errors recovered positions feature points cameras centers terms measure accuracy recovered scene structure camera motion ground-truth data chapter related work recovering structure images long-standing problem computer vision identified psychology study human vision photogrammetry determining elevation aerial photographs psychologists observed changing appearance object undergoing motion powerful cue determining structure term structure motion originated analogous problem arises photogrammetry computing elevation overlapping aerial photographs problem cases determining structure depth projections motion precisely thompson showed aerial photographs sharing distinct landmarks sufficient determine relative camera motion solving system non-linear simultaneous equations elevation landmarks found triangulation ullman derived equivalent result showed parallel projection requires points images sfm continues active area research numerous results published addressing aspects sfm problem proposing solutions existing sfm techniques fall categories based general approach image pairs techniques examine images determine relative change pose camera positions feature points found subsequent triangulation categories necessarily mutually exclusive kalman filtering techniques combine partial reconstructions computed subsets images optimization techniques determine globally optimal structure motion parameters minimizing error function features images projected error refinement falls category practical purposes important assumptions technique makes sensitivity solution common errors describing sfm techniques based algorithmic differences requirements reliable generalpurpose sfm technique reviewed chapter conclude proposing two-stage approach satisfying requirements sfm images structure motion hard problem camera motion scene structure unknown problem simpler stereo vision assumes calibrated cameras simple linear solution popular approach sfm determine change pose camera images separating computation camera motion scene structure essential matrix depends camera motion positions features allowing relative extrinsic camera parameters images recovered independently scene structure similarly factorization method assumes parallel projection camera model camera translation easily 
determined simplifies problem finding camera rotation recovering structure motion images exploits invariant properties projection depend subset parameters involved making inverse projection problem simpler cases linear mundy zisserman invariants parallel perspective projection sfm quan shariot price holt netravali longuet-higgins tsai huang tomasi moons shashua navab shashua sfm techniques differ camera model linearity number features restrictions camera motion scene structure invariant properties projected lines opposed feature points explored huang faugeras gave non-linear solution determining camera motion lines projected images weng gave linear solution similar problem lagani mitiche combined lines point features sfm techniques incorporated image velocity information ullman sawhney sfm techniques based essential matrix derived longuet-higgins independently tsai huang essential matrix describes polynomial invariant derived uncalibrated images share feature points perspective projection camera motion parameters extracted linearly essential matrix counterpart uncalibrated images called fundamental matrix essential fundamental matrices form basis sfm techniques -point algorithms sensitive noise examines small number features images torr murray hartley philip robust methods computing essential matrix fundamental matrix examining additional feature points essential fundamental matrices defined images techniques incorporate additional images kalman filtering factorization method developed tomasi widely sfm factorization method assumes parallel projection translation camera image determined directly projected centroid feature points leaves linear rotation equations solved singular invariants centroid cross-ratio obvious geometric interpretation essential matrix defined purely algebraically decomposition svd svd determines optimal rotation parameters terms affine least-squares complete set projected feature points svd enforce orthonormal rotation matrix recovers affine motion result normalized examining additional feature points obtain metric reconstruction unlike invariant-based techniques factorization method scalable number features number images recursive assumes parallel projection severely limits camera motion scene structure limitations detail chapter extension factorization method para-perspective projection poelman kanade relaxed constraint fundamental limitations non-perspective projection remain sfm techniques examine fixed number images distinguished recover metric euclidean structure affine structure projective structure solution correct scale factor euclidean transformation translation rotation affine transformation translation nonrigid rotation skew arbitrary projective transformation noted oliensis projective reconstruction equivalent euclidean reconstruction non-rigid interpretation rotation matrix choice depends largely intended purpose intrinsic camera parameters object modelling requires metric structure object recognition deciding images correspond object projective structure sufficient linear sfm techniques derive uniqueness results tsai huang derived uniqueness -point algorithm horn holt netravali quan negahdaripour faugeras maybank weng examined general uniqueness properties reconstruction images uniqueness primarily interest mathematical completeness rarely issue redundant data applications uniqueness important coplanar collinear points common indoor scenes result degenerate solutions uniqueness requirements interest feature selection principle advantage sfm techniques based small number images linear solutions examine features images solution sensitive noise measurements typically addressed examining additional feature points performing least-squares analysis exception factorization method techniques rarely scalable multiple images limits extent solution made robust methods exploit invariants non-perspective projection models accurate specific cases camera motion scene structure factorization method derivatives parallel projection para-perspective projection weak perspective projection model perspective foreshortening important depth cue camera remain constant distance scene scene vary significantly depth kalman filtering sfm techniques examine images limited reliability scaled longer image sequences kalman filtering combine multiple reconstructions time obtain estimates structure motion parameters shapiro kalman filter integrate affine structure computed image pairs azarbayejani pentland extended kalman filter integrate projective structure motion recovered uncalibrated images fundamental matrix weng kalman filter general mathematical technique modelling dynamic linear system least-square estimate system parameters structure motion derived previously observed measurements images gave similar solution calibrated images essential matrix mclauchlan murray variable state-dimension filter kalman filter modified state vector integrate structure motion parameters separately allowed features missing occluded general kalman filtering produces estimate structure motion parameters component reconstructions quality result depends method analyze pair images kalman filtering optimal parameter estimates linear system error distribution measurements approximately gaussian note context measurements refer structure motion values recovered pair images images sfm methods examine pairs images non-uniform error distribution due sensitivity noise non-uniformly amplify original image noise ability kalman filtering assimilate solutions undermined kalman filtering essentially external mechanism extending sfm techniques based image pairs longer image sequences cases estimate structure motion parameters conditions kalman filtering solution guaranteed reliable underlying technique optimization-based sfm techniques kalman filtering improves estimated parameter values successive measurements optimization-based sfm techniques determine globally optimal parameter values minimizing objective error function respect images features extended kalman filter ekf approximates non-linear systems linear taylor series expansion weng obtained initial estimate structure motion images essential matrix refined levenberg-marquardt optimization error function based noise variance szeliski kang perform non-linear optimization initially estimated positions feature points directly single image assuming distance scene camera coorg teller optimized camera positions relative feature positions least-squares spetsakis non-linear loaded spring model minimize errors positions feature points factorization method considered optimization-based technique svd least-squares method fact least-squares optimization widely sfm techniques based image pairs additional feature points examined combat noise examining feature points result reconstruction images unreliable general optimization-based sfm techniques primarily differ projection model objective error function ideal error function recovering structure motion metric distance original recovered camera positions feature points impossible compute requires complete scene information claim optimality largely meaningless depends chosen error function optimization produces estimate structure motion images respect chosen error function optimization fundamentally search algorithm convergence local minimum ability locate levenberg-marquardt batch least-squares optimization method definition optimization methods optimal respect objective error function assuming converge global minimum relative merit error functions open question true kalman filtering performs iterative linear least-squares optimization global minimum depends accuracy initial estimate shape error surface difficult characterize large number parameters involved non-linear methods slower converge typically complex error surfaces greater likelihood converging local minimum optimization kalman filtering considered alternatives obtaining reliable structure motion fast unreliable invariant-based methods kalman filtering integrates multiple partial reconstructions time hopes obtaining estimate optimization takes initial estimate finds globally optimal parameter values methods rely obtaining good estimate structure motion parameters means kalman filtering relies estimates continuously optimization requires good estimate requirements general purpose sfm technique general purpose sfm technique reliably efficiently recover scene structure camera motion assuming camera scene initially sfm research focussed problem making inverse projection problem tractable efficient exploiting invariants projection equations small number images recently reliability methods noise focus sfm extensively real applications practical requirements remain dealing outliers occlusion scalability multiple images requirements 
general purpose sfm technique summarized fast real-time sfm requires efficient algorithms cases obtaining approximate solution quickly important precision reliable solution robust common errors noise outliers missing features occlusion accurate scene camera camera motion accurately modelled requirements provide practical basis evaluate sfm techniques inverse projection hard problem trade-offs unavoidable fast methods require linear efficient non-linear algorithms sfm techniques based essential matrix fundamental matrix provide fast unreliable estimate structure motion images factorization method reliable solution cases examining multiple images conditions orthographic camera model valid speed rate convergence important reason linear optimization methods svd kalman filtering preferred non-linear optimization methods real-time applications video images arrive continuously temporally coherent maximum efficiency image processed quickly updating internal model processing recursive alternative called batch processing requires storing previous images recomputing solution image prohibitively expensive terms storage processing time sfm techniques based nonlinear optimization kalman filtering recursive suited real-time sfm factorization method hand batch method suitable recursive variations developed unreliability recovering structure motion small number features images understood noise addressed applying least-square analysis pair images kalman filtering integrate estimates successive image pairs globally optimizing parameters features images problem outliers hand rarely addressed correspondence errors resulting mismatching features images uncommon practice errors nonuniform distribution outliers outliers problematic easily overwhelm least-squares optimization render result meaningless existing sfm techniques handle outliers assume manually removed preprocessing notable exceptions szeliski kang discarded feature points large projected error optimization mcreynolds lowe tested presence non-rigid motion examining residual error optimization boult brown examined residual error svd segment scene rigid components thompson zhang shapiro performed outlier detection rejection pair images general issue outliers poorly addressed sfm problem addressed sfm automated environments problem outliers closely related occlusion require features missing specific images problems linear sfm techniques invert linear systems requires full matrices features present images mechanism representing information occlusion readily handled non-linear optimization methods examine error individual feature points szeliski kang mcreynolds lowe assigned occluded feature points weight mclauchlan murray proposed adaptation linear kalman filter introducing dynamic state variable allowed features added removed sfm techniques support occlusion examine feature points non-rigid motion violates rigidity constraint source outliers present images solutions sub-optimal image data approach occlusion scale long image sequences features present images approach factorization method filled occluded feature points estimating positions subset images re-projected points back images occluded process called hallucination notion optimality lost distinction made original derived data danger introducing artificial outliers inherent property real scenes issue occlusion received surprisingly attention sfm final requirement general-purpose sfm technique scene camera camera motion accurately modelled practice requires perspective projection parallel projection para-perspective weak perspective projection frequently sfm offer simpler projection model enables linear solutions projection models valid approximations optical projection camera scene maintains constant distance relative depth scene small sfm techniques based non-perspective projection general-purpose limit camera motion scene structure pin-hole camera model perspective projection accurate model optical projection model non-linear lens distortions accurate camera models exist tsai camera model rarely sfm two-stage approach projected error refinement thesis proposes optimization-based sfm technique called projected error refinement two-stage approach structure motion parameters estimated subset features images sfm method defined pair images initial estimate refined non-linear optimization objective error function measuring angular projection error solution original images occlusion handled naturally visible feature points contribute error terms missing features outlier detection rejection well-defined terms projector model optimization residual error feature point statistically inconsistent noise model considered outlier rejected similar szeliski kang optimized structure motion based projected image error measurement handled occlusion outliers similar manner szeliski kang assumed distance camera scene constant simplified projection equations allowed initial positions feature points estimated directly image similar two-stage technique proposed weng issue outliers occlusion spetsakis non-linear optimization method supported occlusion problem outliers projected error refinement non-linear efficient parallel iterative refinement algorithm alternately refines structure motion parameters initially estimating camera motion scene structure camera pose position rotation image fixed positions feature points optimized parallel feature points fixed cameras pose image optimized parallel parallel iterative refinement converges rapidly global minimum refinement solution computed arbitrary precision terminated prematurely important real-time applications precision solution made subject processing resources similar approach alternately refining structure motion parameters recently proposed poelman kanade approximating perspective projection iterative para-perspective reconstruction support occlusion address issue outliers summarize projected error refinement efficient non-linear optimization technique scalable number features images supports missing features occlusion detects outliers well-defined manner perspective camera model additional assumptions camera motion scene structure made rigidity constraint initial estimate camera motion scene structure sense projected error refinement accurate reconstruction sfm techniques chapter optical projection models determining positions points scene difficult projected image records point relative direction camera distance recovering distance depth equivalent thereof inverse projection problem chapter describes optical projection performed camera mathematical models sfm including projector model projected error refinement based inverse projection terms projector model identify parameters problem constraints optical projection camera direction sensitive sensor light enters camera lens redirects light rays sensor elements depending direction arrived shown figure precisely lens focuses light points scene image sensor point scene lies plane focus light rays focussed single sensor element light point distributed region image burred projection point image depends relative direction camera lesser extent distance projected image purely two-dimensional explicit depth information discussion granularity resolution sensor important equally ccd array photographic film pin-hole camera perspective projection optical properties camera lens difficult precisely model reason classical model optical projection computer vision pin-hole camera pin-hole camera consists enclosed box infinitely small hole side called center projection optical center light enters striking image sensor opposite side shown figure projected image inverted image plane located optical center image typically modelled front optical center obtain upright image loss generality optical center camera world origin image plane normal positive axis transformation mapping feature point scene point image called perspective projection defined image blur recover depth single image assumptions made techniques called depth focus lens plane focussensor figure camera lens projects point scene plane focus point image points plane focus progressively blurred image distance plane focal length camera distance optical center image plane perspective projection model lens focus image blur model important property optical projection objects smaller camera non-perspective projection perspective projection approximates optical projection complex efficient linear sfm 
methods projected position feature point depends camera pose scene parameters position results non-linear solutions reason simpler camera models frequently simplest called parallel projection defined illustrated figure parallel projection projected position independent distance camera parallel projection good approximation optical projection camera located scene incident light center projection image figure pin-hole camera approximates camera lens perspective projection light scene passes center projection inverted image image perfectly focussed light ray enters camera direction note field-of-view pin-hole camera exceed rays parallel spite parallel projection sfm techniques including factorization method result methods require camera located object interest maintain constant distance projected size scene remains unchanged depth scene optical axis small avoid perspective foreshortening effects projected shape object image parallel projection weak perspective projection object planeimage para-perspective projection center projection center mass image center projection figure parallel projection weak perspective projection para-perspective projection approximations perspective projection simplify inverse projection problem reducing number parameters expense constraining camera motion scene structure weak perspective projection address constraint parallel projection camera maintaining constant distance scene weak perspective defined distance optical center object plane plane parallel image passes nearby object shown figure weak perspective projects scene object plane parallel projection perspective projection image simplifies scale change effectively weak perspective replaces depth feature point average depth object reducing number parameters requires segmenting features distinct objects difficult priori depth information typically scene assumed single object distance camera scene vary significantly depth prevent foreshortening para-perspective projection addresses problem weak perspective motion parallel image plane affect projected appearance object effect causing increasing image distortion optical axis object located para-perspective projection defined object center mass shown figure para-perspecszeliski kang claim perform perspective projection accurate describe camera model scaled perspective model scene projected object plane perspective projection parallel projection scale change tive projects scene object plane parallel projection direction parallel vector optical center center mass compensates change appearance object moves optical axis weak perspective segmentation avoided assuming scene single object non-perspective projection models scene vary significantly depth sfm hard problem compromises made non-perspective projection models facilitate fast linear solutions mathematically elegant exponentially increasing processing power computers fundamental limitations techniques based non-perspective projection important speed development efficient non-linear optimization techniques limited applications accurate scene reconstruction requires perspective projection projector model projector model generalization pin-hole camera point scene projected image straight line called projector shown figure information contained image position direction optical cencenter projection image projector figure projector model feature point projected vector image defines line scene lie information whereabouts ter unit direction vector image scene multiple features set vectors describing relative directions visible feature points direction vectors depend location optical center rotation camera suitable internal coordinate frame describe vectors optical center camera world origin direction vector projector feature point scene practice images acquired camera modelled perspective projection conversion planar image coordinates direction vector focal length principle point image point intersection optical axis image plane projector-based image model equivalent spherical projection central projection scene projected unit sphere surrounding optical center planar image case parallel perspective projection planar images extensively computer vision spherical projection equivalent long sfm koenderink van doorn spherical projection derive invariant properties optical flow field obtained series closely spaced eqn assumes aspect ratio image axes perpendicular conversion cartesian image coordinates projectors welldefined terms intrinsic camera parameters images recover type magnitude direction local surfaces rigid object spherical projection yen huang recover camera translation rotation images recently maybank spherical image coordinates extract essential matrix relating projected positions feature points images rotation translation transformation image coordinate frames recovered projectors spherical image coordinates similar homogeneous coordinates extensively sfm techniques based projective geometry homogeneous coordinates projected feature point planar image coordinate maybank gave formulation inverse projection problem terms epipolar geometry homogeneous coordinates projective space equivalent aforementioned essential matrix formulation euclidean space noted projective formulation permits reconstruction collineation case intrinsic camera parameters unknown yields simpler analysis uniqueness result faugeras homogeneous image coordinates extensively called normalized image coordinates intrinsic camera calibration recover camera rotation translation essential matrix derived feature points projected images non-linear solution requiring feature points homogeneous coordinates differ projectors spherical image coordinates representation planar coordinates images represented homogeneous coordinates strictly field view exceeding rarely limitation practice projectors general model projection defined geometric proa collineation arbitrary linear transformation projective space jection transformation dimension perspective projection examined thesis inverse projection problem inverse projection describes problem recovering position feature point projected position image projector model projection feature point represented unit vector direction vector line originating optical center lie position line determined image single image scene exists infinite number consistent features positions inverse projection single image fundamentally ill-posed scene projected images optical centers features projected time rigidity constraint inverse projection problem dramatically positions optical centers orientations images feature points directly recovered finding intersection projectors called stereoscopic triangulation shown figure unknown parameters inverse projection problem positions optical centers cameras orientations projected images extrinsic camera parameters constraints parameters projectors defined feature point concurrent projectors intersect single point chapter concurrency multiple lines mathematically terms camera parameters features images constrained parameters cases constraints insufficient uniquely determine solution inverse perspective projection images under-constrained number feature points images precise central projection examined images field view exceeding practical purposes central projection equivalent perspective projection virtually configuration respective projectors intersect inverse perspective projection images points solutions general case proved thompson ullman shown chapter projector model sfm traditionally formulated inverse projection problem determining rotation translation transformations images exploiting algebraic invariants projection equations expressed essential matrix projector model hand intuitive geometric interpretation constraints parameters inverse projection problem based fact projectors defined image intersect natural describing sfm practical benefits terms scalability dealing outliers missing features figure inverse projection multiple images involves determining positions optical centers camera orientation image vectors extrinsic camera parameters positions feature points determined triangulation chapter reconstruction minimal image data multiple images rigid scene constraints locations cameras orientations images projectors defined feature point scene intersect concurrence lines terms extrinsic camera parameters image adds set camera parameters inverse projection problem feature point adds constraints parameters minimal number images features reconstruction resulting system simultaneous equations solved recover camera parameters scene structure chapter derives minimal data solution inverse projection problem perspective projection projector model relative directions feature points 
image important projected images normalized standard image coordinate frame parametric equation projector defines line scene feature point lie parameters position camera rotation normalized image feature point defines projector image visible concurrence lines defines system equations solved newton method recover extrinsic camera parameters recovering structure motion minimal set synthetic images chapter concludes describing effect projection noise minimal data solution additional features images examined obtain reliable reconstruction extrinsic camera parameters unknown parameters inverse projection problem extrinsic parameters camera location optical center rotation image original scene coordinate system unknown world coordinate system imposed arbitrary feature point defined origin optical center arbitrary image unit distance positive x-axis shown figure optical centers cameras polar coordinates figure world coordinate system perspective projection defines feature point origin optical center unit distance positive axis remaining optical centers polar coordinates note image vector points origin rotation image determined position rotation image axis cos sin cos cos sin cos sin rotation image determined position optical center projector points origin free parameter rotation image axis parameterized general case images extrinsic camera parameters perspective projection perspective projection parameters imposing world coordinate system consequence original scene structure camera motion recovered scale factor rigid translation rotation true sfm techniques recover metric structure image normalization chapter positions optical centers contribute information inverse projection rotations images vectors image normalized vectors made unit length rotated align unit vector feature point negative x-axis perspective projection rotation normalized vector unit vector perspective projection rotation parameters apply minimal data solution noise assumed projectors precisely intersect refined solution chapter employs full degrees freedom camera location rotation perspective projection gram-schmidt orthonormal basis constructed parallel x-y plane parametric equation projectors feature point projected image optical center defines projector direction vector passing scene lie figure parametric equation line polar coordinates unknown position vectors image rotate maintain pointing origin figure direction vector projector depends normalized image vector suitably rotated position optical center case parameter describing rotation image substituting matrix rotation parametric equation projector likewise substituting matrix rotation defined parametric equation projector concurrency constraint feature point defines projector image visible definition cos sin cos sin sin cos cos cos sin cos sin cos sin sin cos cos sin sin cos cos sin sin cos lines concurrent concurrency multiple lines constrains parameters lines involved case extrinsic camera parameters concurrency lines defined differently cases examined separately concurrent lines concurrence lines constraint direction vectors lines parallel projected images scene positions cameras under-constrained number features inverse perspective projection images ill-posed images required feature point projected images defines concurrent lines giving optical center normalized unit direction vector obtained eliminating simplifying describes constraints parameters concurrent lines concurrent lines unlike concurrence lines special imposes constraints parameters lines lines concurrent giving optical center normalized unit direction vector obtained eliminating simplifying describes constraints parameters concurrent lines minimal data solution minimal data solution examines minimum number feature points images solve inverse projection problem image adds independent set parameters describing pose camera feature point scene imposes non-linear concurrency constraint parameters inverse projection problem well-conditioned number equations equals number parameters system equations independent solved numerically determine extrinsic camera parameters equations independent problem remains under-constrained uniqueness sfm reconstruction degenerate conditions non-degenerate cases small number solutions possibly minimal data solutions inverse projection examined separately minimal data solutions inverse perspective projection image extrinsic camera parameters images parameters feature points point defines constraint images equations feature point exception projectors implicitly concurrent definition world coordinate system resulting system equations well-conditioned minimal solutions minimal data solutions inverse perspective projection problem minimal number images minimal number features images points images points minimal data solution inverse perspective projection image extrinsic camera parameters location optical center rotation image images parameters feature points point defines constraint pair images exception resulting system equations well-conditioned minimal data solution minimal data solution inverse perspective projection problem images points result consistent thompson ullman figure shows synthetic scene feature points projected images optical centers ideal perspective projection image noise images normalized world coordinate system defined origin unknown parameters polar coordinates remaining optical centers feature point defines equation describing concurrence projectors exception system non-linear equations unknowns solved numerically newton method give polar coordinates optical centers figure synthetic scene feature points projected images optical centers ideal perspective projection positions feature points found triangulation pair images reconstructed scene shown figure identical original scene shown figure scale change rotation translation metric structure calculation seconds cpu time mhz pentium running mathematica findroot operator newton method figure reconstructed scene minimal images projected figure relative positions feature points images identical original scene scale factor translation rotation original scene camera motion recovered summarize images scene feature points prior knowledge whereabouts features camera centers positions feature points optical centers cameras recovered based constraint projectors defined image intersect shown clarity equivalent constructed inverse perspective projection images points effect projection noise practice impossible precisely measure direction feature points scene due imperfections camera model digitization illustrate effect noise minimal data solution images projected figure corrupted zero-mean gaussian noise angular error projector approximately pixels camera lens pixel wide image scene reconstructed noisy images shown figure result shows error solution resulting nominal amount image noise significant behavior typical sfm techniques examine small number feature points images inverse projection inherently unstable small errors projected positions feature points greatly magnified solution order obtain reliable estimate scene structure camera motion redundant data form additional feature points images examined summary minimal data solutions inverse perspective projection chapter intended viable alternatives existing sfm techniques exist linear solutions require feature points based essential matrix minimal data solution intuitive geometric interpretation parameters constraints inverse projection problem based concurrency constraint determine minimal number feature points images reconstruction minimal data solution introduces projector-based model inverse projection problem projected error refinement deal noise scalability occlusion outlier detection chapter figure reconstructed scene images projected figure projector corrupted noise approximately pixels recovered positions feature points skewed significant error position compared original scene chapter projected error refinement inverse projection features images sensitive noise sfm techniques examine additional image data apply least-squares analysis kalman filtering obtain reliable reconstruction chapter sfm methods defined images reliability methods limited additional images included kalman filtering attempts overcome limitation integrating multiple estimates time kalman filtering guarantee 
reliable solution component reconstructions due non-uniform error distribution optimizationbased sfm techniques hand scalable number features number images examine projected information principle disadvantage optimization-based methods non-linear chapter describes projected error refinement optimization-based sfm technique based projector model minimal data solution chapter projectors precisely intersect perfect perspective projection assumed reality projectors precisely intersect image noise optimal positions images feature points defined minimize mean-squared angular projection error projector resulting objective error function non-linear efficient parallel iterative refinement algorithm separates refinement structure motion structure parameters positions feature points motion parameters positions cameras optical centers rotations images alternately adjusted constant iteration monotonically decreases projection error projected error refinement requires initial estimate structure motion parameters obtained minimal data solution chapter end chapter recovering structure motion parameters synthetic images noise showing examining additional feature points images minimizing projection error reliable reconstruction scene concurrency projectors projected position feature point image imprecise due imperfect camera model quantization feature detector resolution sources noise optimal position feature point respect non-concurrent projectors defined point minimizes observed error images mean-squared angular projection error feature observed direction vectors estimated direction vectors recovered camera locations feature position shown figure optimization-based sfm techniques minimize observed planar image error include poelman kanade weng szeliski kang coorg teller spetsakis define optimal position feapi figure optimal position feature point minimizes angle observed image projector projector solution note feature camera greater error distance projector vij ture point minimum distance projectors shown figure accurate model projection noise primarily caused limitations camera sensor modelled differently features words features located camera greater error recovered position minimizing distance non-concurrent projectors projected error effectively increases measured precision features unwarranted angular projection error angular projection error projector angle observed projector image recovered projector solution shown figure minimized minimized squared projection error figure alternative definition optimal feature position point minimizes distance projectors features camera expected greater error position definition favors feature points vij ijtan prog prog ijtan unit vectors simplifies orthogonal vector giving taylor series expansion small angles difference approximately tan tan ijv ijv figure angular projection error ratio projection vector image projector projection orthogonal vector vij vij tan prog prog vij vij vij vij vij vij vij vij vij vij tan vij vij vij uij vij vij vij uij tan vij uij uij vij determining orthogonal vector difficult length cross product giving give angular projection error observed direction vector image recovered projector solution perspective projection cases error defined terms parameters tangent minimized angular errors greater indistinguishable result estimated position feature point angle projector image solution exceeds optimization converge solution feature point located camera front case projected error refinement fails converge correct solution projected error refinement models projectors lines rays enforce constraint feature points located front camera vij vij prog vij prog vij tan uij vij wij uij vij wij uij vij wij vij uij vij wij tan vij vij extrinsic camera parameters minimal data solution unknown parameters positions cameras optical centers perspective projection additional parameter describing rotation image images noise projectors longer intersect vector projector feature point precisely pass origin minimal data solution figure rotation image uncoupled location optical center image perspective projection parameters position camera optical center parameter describing rotation image similarly image perspective projection extrinsic parameters position camera optical center parameters describing rotation image structure parameters minimal data solution positions feature points computed directly recovered images triangulation projectors precisely intersect position feature point minimizes angular projection error projectors position determined placement projectors parameters extrinsic camera parameters projected error refinement positions feature points treated independent parameters introduce additional parameters unnecessary structure motion parameters refined separately parallel section significantly efficient optimizing extrinsic camera parameters simultaneously projected error refinement parameters inverse projection problem positions cameras optical centers rotations images positions feature points scene parallel iterative refinement projected error refinement performs non-linear optimization determines parameter values minimizing objective error function case mean-squared angular projection error projectors set feature points projected images sumsquared angular projection error projected error feature point image optical center weight confidence projector error projector depends position rotation image estimated position feature point error contributed feature point computed independently features similarly error contributed image computed independently images words rewritten representing sum-squared error contributed feature point representing sum-squared error contributed image parallel iterative refinement exploits equivalence reduce number parameall weights depending feature occluded visible image chapter describes proposed variable weights analyzing long image sequences ijtan tan ijtan ijtan ters considered optimization iteration parameters feature points optimized parallel whilst leaving extrinsic camera parameters constant cameras fixed space feature point adjusted find optimal position iteration parameters cameras optimized parallel whist leaving feature positions constant feature points fixed camera optimized equivalent global projected error monotonically decreases parallel iterative refinement significantly faster attempting simultaneously optimize parameters general case features images perspective projection involves extrinsic camera parameters large complex nonlinear objective error function separating refinement structure motion reduces number parameters considered time involves simpler error functions optimizing feature positions involves parameters feature optimizing camera positions involves parameters image importantly features images optimized parallel parallel iterative refinement scales additional features images refined parallel significantly increase complexity error functions iterative refinement solution refined arbitrary precision terminated time obtain current estimate structure motion parameters important real-time sfm applications time process image limited non-iterative methods provide meaningful intermediate results execute completion fixed precision parallel iterative refinement images added time adding projectors resuming refinement additional data non-recursive methods unsuitable real-time applications recompute solution scratch image parallel iterative refinement algorithm developed independently similar iterative technique recently poelman kanade technique approximate perspective projection iterative para-perspective projection handle outliers missing features case parallel iterative refinement similar algorithm proposed taylor initial estimate projected error refinement requires initial estimate structure motion parameters provided minimal data solution chapter subset feature points camera centers reconstructed minimal set images recovered images estimate positions remaining feature points triangulation appendix positions remaining cameras optical centers estimated recovered feature points called beacon problem location determination problem appendix briefly set beacons feature points observed unknown location location observer determined relative observed direction beacons positions cameras optical centers determined relative direction recovered feature points minimal data solution chosen provide initial estimate show sfm solved based projector model fact projected error 
refinement estimate structure motion parameters obtained existing sfm technique factorization method based essential matrix initial estimate poor computed small set features images projected error refinement converges global minimum convergence local minima problem practice figure shows synthetic scene feature points projected images optical centers gaussian noise applied images approximately pixels random subset features images extracted case positions feature points optical centers estimated minimal data solution positions remaining feature points determined triangulation pair recovered images appendix locations remaining images determined initial recovered feature points appendix resulting initial estimate shown figure angular projection error maximum error projector shown noticeable error figure synthetic scene feature points projected images optical centers perspective projection projectors arrows corrupted gaussian noise approximately pixels recovered positions feature points compared original scene shown figure significant error recovered location initial estimate cameras optical centers image orientations feature points refined projected error refinement minimize angular projection error images refinement terminated difference projection error successive solutions iterations final refined solution shown figure angular projection error maximum error projector recovered scene structure camera motion accurate scale factor translation rotation original scene coordinate system unknown quantitatively comparing solution original scene difficult requires determining optimal scale rotation translation map solution coordi- figure initial estimate feature points optical centers recovered minimal subset images projected figure solution poor due image noise nate system original scene called data fitting shape registration nontrivial optimization problem order simplify measuring error solution feature points original synthetic scene selected unit circle perspective projection unit sphere perspective projection feature points solution located unit circle sphere making transformation mapping solution original scene easier determine detail appendix solution transformed original scene coordinate system distance original recovered feature points structure error solution distance original recovered positions camera optical centers motion error shown figure structure error refined solution motion error distances measured relative circle radius figure shows trace refinement initial estimate final refined solution showing iteratively minimizing angular projection error results solution converging ideal feature camfigure refined solution iterations solution reconstruction original scene shown figure initial estimate shown figure era positions summary projected error refinement extends minimal data solution chapter examine additional feature points images projectors precisely intersect due image noise optimal positions feature points images minimize mean-squared angular projection error projectors projected error refinement consists steps motion error typically greater structure error positions cameras considered computing transformation solution original scene camera motion reliably recovered scene structure figure refined solution transformed original scene coordinate system measure reconstruction error note original feature points lie unit circle centered origin distance original features black recovered positions gray structure error distance original camera centers black recovered positions gray motion error estimate positions subset feature points images suitable method minimal data solution extend initial estimate include remaining feature points images iteratively refine structure motion parameters alternately optimizing positions feature points camera poses minimize angular projection error projector projected error refinement reliably recovers metric structure original scene presence image noise scalable arbitrary number features images make additional assumptions scene structure camera motion rigidity constraint optimization methods ability converge global miniterations error distance motion structure figure trace refinement gray initial estimate final solution compared original feature camera positions black plot structure motion error refinement iterations imum depends accuracy initial estimate practice convergence problem related optimizing structure motion parameters separately optimization-based sfm techniques give accurate scene reconstruction examine feature points images sensitive noise projected error refinement similar existing sfm techniques projected error refinement objective error function based projected image error similar szeliski kang efficient parallel iterative refinement algorithm similar poelman kanade recursive weinshall tomasi scalable tomasi projected error refinement unique combines properties single sfm technique intuitive geometric model inverse projection based projectors projected error refinement supports occlusion deals outliers defined manner practical issues widely sfm methods chapter feature detection tracking projected error refinement sfm techniques recovers scene structure camera motion point features important assumption sfm correspondence problem solved image feature points detected matched feature points images feature detection involves identifying interesting image features hopes correspond important structural features scene feature detection difficult problem image features caused wide variety physical phenomena features detected image matched features images determine correspondences image sequences typically generated moving camera camera motion smooth features tracked images based locality projected positions image sfm assume exact camera motion correspondence errors occur correspondence errors large errors identified positions feature points outliers outliers introduced feature detection fails identify rigid scene features chapter briefly describes kanade-lucas-tomasi klt feature tracker detect track feature points real image sequences full description method feature detection tracking principal sources outliers sfm important understand outliers introduced detection outliers discussed chapter kanade-lucas-tomasi feature tracker feature tracking algorithms define feature detection feature tracking separate operations features selected based local image interest operator ignore features subsequently tracked shapiro defined corner detector determined feature correspondences image correlation klt tracker hand specifically defines good features tracked words feature detection tracking closely integrated feature tracking klt tracker matches small image patches images purpose sfm center patch considered feature point camera frame rate high transformation small image patch frames approximated simple translation feature patch tracked images determining displacement vector minimizes least-squares difference dissimilarity image intensity gradient regions defined intensity image point optional weighting function words feature patch tracked finding nearby patch image identical features degrade tracked images feature partially occluded rotate face camera feature patches periodically compared appearance image grown dissimilar discarded large camera motion transpired feature patch appeared dissimilarity current original feature patch measured finding affine transformation displacement vector minimizes function dissimilarity image matrix describing deformation feature patch due camera motion feature detection klt tracker selects feature patches based tracked well-conditioned eigenvalues spatial intensity gradient feature patch large approximately magnitude patches large eigenvalues correspond corners salt-and-pepper textures patterns reliably tracked features selected scanning patch window entire image patch selected good feature tracking defines minimum feature strength indirectly determines number features selected correspondence errors correspondence errors occur features matched projections point scene occur scene multiple features similar appearance locally adjacent figure shows images features image incorrectly matched features nearby image points scene camera motion unknown feature correspondences made prior knowledge expected image motion difficult check correspondences consistency shapiro estimated projected 
positions feature points previous trajectory avoided correspondence errors required images enforce global consistency min correspondence errors large apparent errors projected positions feature points easily order magnitude greater error due noise noise modelled gaussian distribution correspondence errors large non-uniform error frequency correspondence errors occur magnitude depends ability feature detector discriminate features motion camera appearance density features scene observer limited control false features non-rigid motion outliers introduced detected features correspond rigid points scene occur image feature generated depth discontinuity scene shown figure called false features represent rigid feature points scene false features equivalent non-rigid motion apparent positions migrate occluding contour viewpoint false features non-rigid motion difficult detect recovering full structure projected image errors images small follow smooth image trajectories similar rigid feature points figure correspondence errors features incorrectly matched features similar appearance adjacent images points scene false features non-rigid motion caused fundamental limited ability feature detectors identify rigid points scene rigidity constraint precludes non-rigid motion false features wholly avoided constraining scene structure summary klt tracker performs variety real scenes require extensive parameter adjustment feature trackers perfect correspondence errors false features occur conditions impossible predict avoid priori knowing scene structure camera motion types outliers effectively violate rigidity constraint sfm based undetected overwhelm subsequent sfm analysis detection outliers caused correspondence errors false features non-rigid motion important component robust sfm technique topic chapter figure false features features caused depth discontinuity represent rigid points scene apparent position viewpoint false features difficult detect projected image motion smooth similar rigid feature points chapter outlier detection recovering scene structure camera motion image sequences subject sources error errors introduced quantization caused imperfections camera model modelled gaussian noise noise addressed examining additional feature points images performing least-squares analysis equivalent kalman filtering singular valued decomposition non-linear optimization sources error correspondence errors non-rigid motion large non-uniform errors modelled gaussian noise introduce outliers outliers wholly avoided real image sequences issue outliers widely sfm results feature detection tracking typically manually checked outliers prior sfm analysis chapter describes complementary approaches automatic outlier detection approach called random sample consensus ransac incrementally grows solution adding consistent data points approach called pruning incrementally trims solution removing inconsistent data points sfm techniques explained chapter ransac unsuitable outlier detection projector model pruning synthetic images outliers shows detecting pruning outliers reliable reconstruction scene structure camera motion random sample consensus random sample consensus general technique proposed fischler bolles parameter estimation noisy data outliers ransac fischler bolles problem determining camera location landmarks location determination problem appendix recently torr murray robust method computing fundamental matrix pair images correspondence errors ransac approach model fitted set noisy data points unknown subset outliers context sfm model describes parameters camera motion scene structure data points projected positions features points images subset data points randomly selected obtain initial estimate model minimal data solution remaining data points examined identify consistent error point consistent noise model point added consensus set point found inconsistent considered outlier discarded figure shows ransac applied simple linear data fitting problem data points provide initial estimate remaining data points error exceed noise threshold considered outliers solution recomputed consensus set obtain reliable fit data points ransac obtains initial model random subset data points points outliers number remaining points inconsistent exceeds expected outlier frequency caused poor initial model model computed subset points pmin pmin ransac shown work outlier frequencies high suitable applications magnitude outliers greatly exceeds noise level ransac implicit requirements initial estimate solution obtained subset points individual points added initial model measure error determine outliers ransac torr murray compute fundamental matrix images minimal subset feature point correspondence pairs selected estimate camera motion parameters remaining pairs features examined determine consistent estimated camera motion data point context pair features ransac identify outliers case error introduced single pair features measured determine pair consistent previously estimated camera motion least-squares ransac initial estimate figure ransac applied linear data fitting ransac obtains initial estimate data points detects outliers based residual error outliers computing final solution projected error refinement examine pairs features individual projectors error individual projector measured estimating position feature point requires adding projectors order perform triangulation determine projectors outliers words ransac outlier detection projected error refinement approach projectors image projectors feature point added making impossible identify outliers pruning outliers robust sfm solution obtained adding consistent projectors minimal data solution projectors added groups remove prune inconsistent projectors existing solution ransac starts small good solution adds consistent data points pruning starts large poor solution removes inconsistent data rationale pruning least-squares minimization attempts distribute projected error evenly projectors result cases least-squares solution fits valid projectors outliers residual error outliers greater illustrated figure extent outliers detected based residual error depends frequency magnitude distribution outliers smaller residual error valid data points cases general error outliers greater non-outliers case detected based residual error initial solution sfm techniques perform outlier detection form pruning compute solution based features images remove inconsistencies szeliski kang performed optimization discarded feature points projected residual error exceeded residual error optimization presence absence non-rigid motion boult brown examined residual svd segment non-rigid scene rigid components mcreynolds lowe determined scene rigid based residual error optimization sfm techniques weighted least-squares m-estimators adjust weight projector optimization residual error effect outliers impact corrupting solution techniques replace least-squares minimization robust optimization methods median squares lmeds lmeds minimizes median squared errors finds solution median error smallest lmeds robust outliers requires non-linear search solution space reduced leastsquares unlike m-estimators outlier detection performed projected error refinement similar szeliski kang solution computed feature points images parallel iterative refinement refinement converged angular projection error least-squares pruning figure pruning applied linear data fitting outliers detected based magnitude residual error initial least-squares solution pruning outliers re-computing solution solution projector measured determine consistent noise model pruning options called conservative pruning removes outlier greatest residual error solution re-refined justification approach projector greatest residual error outlier approach called liberal pruning removes projectors error exceeds solution corrupted outliers approach unintentionally prune valid projectors chapter occlusion valid projectors significantly affect solution liberal pruning performed faster albeit accurate summarize parallel iterative refinement converged projectors residual error exceeds pruned solution re-refined remaining projectors process repeated projectors consistent noise model figure shows synthetic scene projected noisy images projectors 
outliers angular projection error refined solution outliers included shown figure structure motion errors outliers angular projection error exceeding solution projectors pruned solution re-refined remaining projectors end refinement stage projectors error including fourth outlier final solution shown figure structure motion errors removal outliers resulted approximately two-fold improvement recovered structure motion parameters figure synthetic scene figure projectors outliers shown black angular projection error figure refined solution images projected figure outlier detection solution transformed original scene coordinate system measure reconstruction error original features camera positions shown black fourth outlier identified based residual error summary correspondence errors non-rigid motion false features modelled gaussian noise large non-uniform error distributions sources error considered outliers words modelled inconsistent noise model ransac pruning detecting outliers relies examining residual error projected feature points error meaningful projected error refinement explicitly minimizes observable angular projection error images factorization method essential matrix hand perform least-squares analysis systems linear equations geometric visual interpretation residual error unclear outliers detected based residual error important error well-defined terms image noise risk failing detect outliers detecting false positives figure final refined solution pruning outliers solution transformed original scene coordinate system note outlier identified based residual angular projection error increased non-linear optimization-based sfm techniques projected error refinement suited outlier detection individual projected feature points removed unlike linear methods require feature points images present outliers removed linear systems solution obtained solution recomputed scratch image data projected error refinement projectors removed added time refinement simply continues outlier detection open problem ransac pruning fail detect outliers nonetheless outliers unavoidable real image sequences outlier detection important component robust sfm technique general-purpose applications chapter occlusion occlusion occurs feature visible image surface lies faces observer surface closer observer obstructs view appearance feature changed longer detected dropout occlusion intrinsic property real scenes fact appearance disappearance surfaces strongest depth cues human vision circumstances occlusion occur special case convex object rotating limited angle forward facing surfaces remain visible occlusion handled poorly sfm techniques reasons sfm extensively real applications occlusion ubiquitous sfm research largely focussed determining efficient linear solutions inverse projection problem chapter efficiency requirements general-purpose sfm technique accurately model scene structure camera motion robust common errors noise outliers missing features occlusion linear methods typically defined small number feature points images examine multiple features images perform linear leastsquares optimization linear methods fast solving linear systems equations efficient svd kalman filtering coefficients linear systems derived projected positions feature points presence information occurs feature point missing occluded linear sfm techniques require features present images effect ability handle occlusion sacrificed efficiency common solution occlusion problem examine subset features images features visible images implicit sfm techniques based image pairs examining subset projected information means solution sub-optimal reliability sfm techniques based image pairs limited additional images included solution long image sequences feature points visible images order recover complete scene structure subsets features examined introduces additional non-trivial problem combine partially overlapping solutions occlusion poses problem kalman filtering state vector representing structure parameters fixed solution problem proposed mclauchlan murray replaced state vector variable state-dimension filter allowed structure parameters added removed dynamically approach occlusion problem linear sfm techniques examine features images fill missing coefficients accomplished recovering positions occluded feature points complete subset images re-projecting points back images occluded process called hallucination hallucination precludes optimality least-squares optimization distinguish original derived data hallucination increases risks introducing artificial outliers handling occlusion linear sfm techniques hoc non-linear optimization-based sfm techniques suited dealing occlusion individual projected feature points added removed arbitrarily szeliski kang occluded feature points weight contribute parameter optimization similarly spetsakis minimized distance non-current projectors allowed individual projectors absent image occlusion projected error refinement feature point projected image feature influence computed position image optical center rotation image similarly image influence computed positions feature points visible image obvious property built-in projected error refinement refining extrinsic camera parameters respect fixed feature points visible projectors image define error terms considered optimization missing features influence likewise refining feature points respect fixed camera poses projectors defined images feature visible considered optimizing position feature point equivalent szeliski kang weight occluded feature points set occlusion handled naturally projected error refinement feature present absent image visible projectors examined refining structure motion parameters property enables features added removed time facilitates outlier detection images projectors added recompute solution making approach suitable processing long image streams ability dynamically add remove projectors key feature projected error refinement figure shows synthetic scene projected noisy images projectors occluded occlusion refined solution shown figure structure motion errors solution represent optimal placement feature points camera centers minimizes angular projection error visible projectors occlusion affects accuracy reconstruction reduces amount data over-determining noise errors shown scene structure camera motion reliably recovered large amount occlusion figure synthetic scene figure projectors occluded figure refined solution occluded images projected figure refined solution transformed original scene coordinate system measure reconstruction error chapter experimental results chapter describes experimental results synthetic real image sequences synthetic images camera motion scene structure projection conditions controlled adjusted observe effect reconstruction quantitative error analysis ground-truth data real image sequences examined show performance projected error refinement real image data actual viewing conditions ground-truth data real image sequences difficult obtain making quantitative analysis recovered structure motion parameters difficult exception real image sequences figure real image sequences uncalibrated qualitative examination solutions synthetic image sequences series experiments conducted synthetic images analyze performance projected error refinement simulated viewing conditions effect parameters investigated sfm field presently lacks standardized suite calibrated image data quantitative analysis comparison sfm techniques uncalibrated image sequences obtained cmu vision autonomous systems center image database refinement iterations number iterations structure motion parameters refined varied refinement iterations image noise direction vectors projectors corrupted angular gaussian noise varying perfect perspective projection approximately pixels noise camera lens pixel wide image features images number features images varied images perspective projection images perspective projection features projected cases occlusion rate percentage projected feature points occluded images varied occlusion occlusion outlier frequency percentage projected feature points outliers varied approximately projectors default features images outlier magnitude magnitude outliers varied times image noise times pixels pixels number features images experiment adjusts parameter isolation numbers features images varied simultaneously determine working set size total number projectors directly determines efficiency non-linear optimization 
default parameter values refinement iterations image noise pixels features projected images occlusion outliers perspective projection examined perspective projection interest closely models camera projection perspective projection applications involving predominantly planar motion full model situations model sufficient efficient synthetic images synthetic images generated randomly placing feature points camera centers recording relative directions features optical centers shown figure perspective projection feature points unit circle optical centers distributed perspective projection feature points unit sphere placing features circle sphere facilitates measuring structure motion error resulting solution appendix affect generality results experiment repeated times scene results averaged confidence interval computed angular projec- figure synthetic scene constructed placing feature points unit circle perspective projection unit sphere perspective projection projected images directions feature points optical centers tion error experiment refinement iterations experiment examines number refinement iterations affects projected image error accuracy reconstruction results perspective projection shown figure figure iterations corresponds initial estimate obtained minimal data solution shown initial estimate iterations projection error deg iterations distance unit circle motion error structure error figure angular projection error structure motion error function number refinement iterations perspective projection iterations projection error deg iterations distance unit sphere motion error structure error figure angular projection error structure motion error function number refinement iterations perspective projection poor reconstruction scene structure camera motion large variance angular projection error features images refined number refinement iterations increases projection error decreases rapidly decrease structure motion error approximately iterations negligible reduction projected image error recovered structure motion error continues improve experiment image noise experiment examines amount image noise affects projected image error accuracy reconstruction results perspective projection shown figure figure noise ideal perspective projection scene structure camera motion recovered perfectly noise increases projected image error increases comparatively magnitude angular projection error refinement approximately angular noise original images shown structure motion error related projected image error indithe motion error greater structure error solution transformed original scene coordinate system appendix camera motion reliably recovered scene structure noise deg projection error deg noise deg distance unit circle motion error structure error figure angular projection error structure motion error function image noise perspective projection cating minimizing angular projection error desired effect improving accuracy reconstruction comparing experimental results perspective projection appears sensitive noise perspective projection due additional dimension imposing stronger constraint location feature point relative projectors planar case experiment number features images experiment examines number features images affects accuracy reconstruction results perspective projection shown figure figure goals experiment identify good working set size involves trade-off accuracy reconstruction efficiency refinement features images reconstruction refinement takes longer shown perspective projection number features number images similar effect improving recovered scene structure camera angular projection error solution shown experiment independent number features images projected image error minimum number features images minimal data solution noise deg projection error deg noise deg distance unit sphere motion error structure error figure angular projection error structure motion error function image noise perspective projection motion small reduction structure motion error approximately minimal number features images indicating good working set size features images results additional features additional images reliable reconstruction examining feaimages features distance unit circle features images distance unit circle figure structure error motion error function number features images perspective projection features images distance unit sphere features images distance unit sphere figure structure error motion error function number features images perspective projection tures images limited effect improving solution experiment occlusion experiment examines amount occlusion images affects projected image error accuracy reconstruction results perspective projection shown figure figure occlusion reduces number visible projectors constrain structure motion parameters increasing occlusion projection error deg occlusion distance unit circle motion error structure error figure angular projection error structure motion error function occlusion perspective projection occlusion projection error deg occlusion distance unit sphere motion error structure error figure angular projection error structure motion error function occlusion perspective projection amount occlusion increases sensitivity solution noise visible projectors shown projected image error structure error increase slightly increasing occlusion experiments occluded projectors selected randomly remaining projectors evenly distributed largely negate effects noise reflected small increase structure error larger increase motion error unexpected side-effect registration method measuring reconstruction error camera motion sensitive occlusion scene structure event experiment shows projected error refinement reliably recover scene structure presence significant occlusion experiment outliers experiments examine presence outliers images affects projected image error accuracy reconstruction experiment compares results pruning outliers results outlier detection performed synthetic scene feature points projected images projectors outliers experiment repeated times results averaged results perspective projection table table results shown perspective projection eliminating outliers table pruning outliers perspective projection projected error structure error motion error pruning pruning table pruning outliers perspective projection projected error structure error motion error pruning pruning improves recovered structure motion order magnitude outlier experiment examines number outliers affects projected image error accuracy reconstruction results perspective projection shown figure figure increasing number outliers reduces accuracy initial refined solution prior outlier detection result difficult detect outliers based residual error valid projectors pruned unintentionally shown variance proa outlier frequency projection error deg outlier frequency distance unit circle motion error structure error figure angular projection error structure motion error function outlier frequency perspective projection outlier frequency projection error deg outlier frequency distance unit sphere motion error structure error figure angular projection error structure motion error function outlier frequency perspective projection jected image error increases increasing outlier frequency increase reconstruction error larger variance outliers detected corrupted least-squares solution experiment shows pruning outliers based residual error effective small number outliers effective number outliers increases outlier experiment examines magnitude outliers affects projected image error accuracy reconstruction results perspective projection shown figure figure results similar outlier frequency magnitude outliers increases decreasing accuracy initial refined solution makes difficult detect outliers outliers detected corrupt least-squares solution decrease accuracy recovered structure motion experiment shows pruning effective outliers magnitude small relative image noise effective outliers large angular magnitude summarize outlier detection improve reconstructed structure motion approximately order magnitude pruning outliers based residual error figure angular projection error structure motion error function outlier magnitude perspective projection outlier magnitude deg projection error deg outlier magnitude deg distance unit circle motion error structure error refined solution effective outliers small magnitude increasing frequency magnitude outliers 
makes difficult detect remain undetected increasingly corrupt solution real image sequences real image sequences examined show performance projected error refinement real image data features tracked image sequences kanadalucas-tomasi feature tracker chapter minimal subset features images sequence selected hand obtain initial estimate structure motion parameters chapter remaining features images added solution appendices initial solution refined difference angular projection error successive solutions chapter teabox image sequence figure original positions feature points camera centers qualitative analysis recovered structure motion figure angular projection error structure motion error function outlier magnitude perspective projection outlier magnitude deg projection error deg outlier magnitude deg distance unit sphere motion error structure error image sequence rubic cube sequence images rubic cube rotating turntable camera fixed position sequence frames shown figure feature points tracked sequence minimal occlusion features visible images feature point shown upper-right corner figure rotate turntable exhibits non-rigid relative motion feature points caused depth discontinuities reconstructed positions feature points camera centers shown figure refinement stage feature point detected outlier projectors removed images solution re-refined residual errors features points identified outliers shown figure positions feature points camera centers recovered reconstruction imperfect largely result small change viewpoint sequence projectors defined feature close parallel making estimated positions feature points sensitive noise figure frame frame rubic cube image sequence experiment shows projected error refinement recover good estimate scene structure camera motion favorable viewing conditions accuracy result limited small viewing angle image sequence teabox teabox image sequence illustrates projected error refinement simplified scene structure camera motion priori sequence images teabox mounted pan-tilt head rotated increments images shown figure corners box manually labelled images widely spaced permit automated feature tracking original structure teabox positions cameras shown figure experiment calibrated positions cameras directly recover scene structure positions feature points estimated triangula- figure recovered positions feature points black camera centers gray rubic cube image sequence top-down view recovered feature points note outlines cube turntable part reconstruction tion pair images refined images words extrinsic camera parameters positions feature points determined single iteration average structure error positions recovered feature points dimensions teabox interior diagonal dimension box figure frames calibrated teabox image sequence figure calibrated positions cameras gray feature points black teabox image sequence experiment calibrated positions features directly recover camera motion positions camera centers estimated subset feature points extrinsic camera parameters refined parallel respect feature points words scene structure positions camera determined single iteration average motion error recovered camera positions distance camera rotational center pan-tilt head larger average motion error images corners box visible making solutions sensitive noise images result improved examining feature points experiments show projected error refinement adapted problem direct scene reconstruction calibrated images direct camera calibration calibration target cases relevant scene structure camera motion solved parallel single iteration image sequence hotel sequence images camera moving model hotel building images shown figure feature tracking reliable camera motion smooth feature points tracked sequence minimal occlusion correspondence errors false features large change viewpoint relative distance camera model remained constant projected size model change images minimal perspective foreshortening effects image sequence suitable sfm techniques based parallel projection camera model reconstructed positions feature points camera centers obtained parallel iterative refinement perspective projection shown figure due larger change viewpoint figure observed projectors strongly constrained features positions shows qualitatively projected error refinement reconstruction scene structure camera motion larger change viewpoint figure frame frame hotel image sequence figure recovered positions feature points black camera centers gray hotel image sequence top-down view recovered feature points note original feature points vertically aligned sides hotel building image sequence building outdoor sequence images building hand-held video camera images shown figure camera motion erratic video camera hand-held features sufficiently distributed distinct correspondence errors occurred feature tracking total features tracked sequence present frames substantial occlusion camera motion building relative size scene sequence parallel projection ill-suited image sequence change projected size scene modelled unclear weak perspective para-perspective work due noticeable perspective foreshortening left wall building reconstructed positions feature points camera centers parallel iterative refinement shown figure image features caused depth discontinuities affect solution present frames experiment shows application perspective projection required accurate reconstruction image sequence perspective distortion size figure frame frame building image sequence scene camera moves shape scene foreshortened depth projected error refinement accurately recover scene structure camera motion models perspective projection image sequence indoor lab lab sequence images indoor scene forward moving camera images shown figure camera moved forward features scene moved view features appeared rear wall camera moved closer total features tracked sequence substantial occlusion camera motion smooth feature points tracked reliably feature points caused depth discontinuities present frames affect solution image sequence involves significant perspective effects result absolutely requires perspective projection camera model parallel approximations weak perspective para-perspective projection unsuitable application depth scene considerably reconstructed posi- figure recovered positions feature points black camera centers gray building image sequence top-down view recovered scene tions feature points camera centers shown figure difficult image sequence recover scene structure camera figure frame frame lab image sequence figure recovered positions feature points black camera centers gray lab image sequence top-down view recovered feature points note rear wall shown feature points incorrect motion field view camera small features visible narrow range views result projectors defined feature points close parallel making estimated positions sensitive image noise reflected poor reconstruction feature points shown figure features detected periphery images increasing reliance features close direction motion features sensitive noise projectors remain close parallel experiment shows predominantly forward motion important detect features edges images maximum angular variation observed projectors shows projected error refinement recover approximate scene structure camera motion difficult viewing conditions limited quality projected image data summary experimental results important measuring accuracy recovered scene structure camera motion viewing conditions quantitative analysis comparison sfm techniques widespread field due part lack standardized calibrated image sequences variety feature tracking algorithms employed reasons synthetic image data predominantly quantitative error analysis synthetic image experiments chapter examined effect simulated viewing conditions projected image error resulting structure motion errors solution experiment confirmed minimizing angular projection error projectors desired effect reducing error reconstruction experiment showed projected error refinement closely related original image noise angular projection error approximately order angular image noise angular projection error 
refinement estimate image noise priori experiment showed reconstruction minimal number features images poor additional feature points additional images required accurate reconstruction experiment good working set size approximately features projected images fourth experiment showed occlusion affect quality reconstruction visible projectors remain distributed scene structure camera motion accurately recovered experiment showed detecting pruning outliers based residual error solution effective improves accuracy reconstruction ability detect outliers limited accuracy initial refined solution outliers included pruning outliers effective number outliers large outliers large magnitude real image sequences demonstrated performance projected error refinement real applications image sequence illustrated scene structure camera motion recovered accurately favorable viewing conditions change viewpoint small experiment showed projected error refinement adapted problem direct scene reconstruction camera calibration structure motion parameters priori desired motion structure parameters found single iteration image sequence illustrated recovering structure motion moving camera shows qualitatively reconstruction accurate large change viewpoint fourth image sequence illustrated reconstruction outdoor image sequence hand-held camera results showed scene structure camera motion accurately recovered significant occlusion perspective effects pose problem projected error refinement models perspective projection experiment illustrates projected error refinement optimizes scene structure camera motion based observed feature points images unlike linear methods extract complete subset features images image sequence showed accurate reconstruction difficult accurate camera motion optical axis compounded lack features detected edges images experiment large change lateral viewpoint wide field view required accurate reconstruction projectors defined feature point close parallel solution sensitive noise chapter conclusions future work thesis non-linear optimization-based sfm technique called projected error refinement research sfm primarily focussed developing efficient linear methods addressing issue noise efficiency desirable sufficient general-purpose sfm reconstruction efficient non-linear optimization methods suited task scalable examine features images recursive features images added removed arbitrarily making occlusion natural simplifying handling outliers major contributions projected error refinement fulfills requirements general-purpose sfm technique scalable supports occlusion detects outliers well-defined manner perspective projection supported constraints imposed camera motion scene structure rigidity technique minimizes angular projection error visible projectors obtain optimal estimate structure motion parameters approach recursive images added time sfm techniques share properties projected error refinement unique supported projector-based camera model geometric model inverse projection based projectors image coordinates projected error refinement efficient parallel iterative refinement algorithm takes initial estimate scene structure camera motion alternately refines structure motion parameters reduces complexity non-linear optimization optimizing camera pose respect features optimizing feature position respect camera poses features images refined parallel projectors added removed time refinement solution simply continues parallel iterative refinement precision solution determined processing time important real-time applications major contributions thesis summarized intuitive geometric model structure motion based projectors angular projection error minimal data solution inverse projection problem perspective projection based projectors efficient non-linear optimization-based sfm technique perspective projection recursive scalable handles occlusion outliers future research aspects projected error refinement improved extended make technique reliable representation projective geometry projected error refinement performs non-linear optimization camera poses feature positions projection equations involved simpler representation projective geometry objective error function measures angular projection error projector angle lines euclidean space projective geometry angle simply distance homogeneous points simplification objective error function directly improve efficiency refining camera pose feature position projective geometry desirable property perspective parallel projection treated alike projective geometry presently existing sfm techniques principally purpose intrinsic camera calibration projective reconstruction non-linear optimization improve efficiency parallel iterative refinement simplifies inverse projection problem separately refinement feature position camera pose presently non-linear methods estimating initial camera locations feature points optimizing camera pose respect feature points huang faugeras gave linear solution location determination problem examined additional feature points lines alternative solutions location determination problem simplify optimizing camera locations investigated computationally expensive optimizing feature positions efficiency improved sophisticated optimization methods faster convergence properties levenberg-marquardt optimization converges faster global minimum successfully optimization-based sfm techniques present projected error refinement simple gradient descent method intrinsic camera calibration projected error refinement assumes intrinsic camera parameters obtained means existing sfm techniques based projective geometry recover intrinsic camera parameters scene structure camera motion independent calibration algorithms exist preferable intrinsic camera parameters change dynamically image sequence camera focal length pollefeys recently proposed sfm technique based projective geometry camera focal length vary image occur camera zoom lens adding focal length variable parameter require modification projector model presently relative directions projectors image important optical axis camera focal length vary projectors parameterized vectors measured relative optical axis chapter introduces additional parameter optimization camera pose focal length camera obvious effect parameter convergence properties optimization formulating projected error refinement terms projective geometry facilitate adding focal length variable parameter chapter projectors equivalent homogeneous image coordinates projective geometry results projective geometry intrinsic camera calibration transferable projector model improve outlier detection projected error refinement employs simple heuristic outlier detection based residual error projectors refinement experimental results showed effective large numbers outliers outliers large magnitude situations sophisticated outlier detection mechanism required m-estimators median squares lmeds m-estimators simple extension leastsquares minimization adjusts weight error term magnitude residual error lmeds complex non-linear method searches solution smallest median projected error approaches outlier detection reliable pruning outliers based residual error expense increased complexity extend long image sequences projected error refinement recursive images added time recomputing solution scratch long image sequences nonetheless monotonically increase complexity optimization previous features images continue refined iteration long image sequences visible portion scene significantly continuing optimize feature points images efficient optimize feature points images interest dynamic working set current features images obtained adjusting weight projectors based age images criteria projectors recent images important earlier images larger weight open question decide projectors longer interest permanently removed consideration appendix triangulation projected error refinement requires initial estimate structure motion parameters begin optimization obtained minimal data solution chapter suitable sfm technique equally cases initial estimate computed subset features images prior refinement positions remaining feature points estimated triangulation recovered images feature point intersection projectors estimate position position subsequently refined respect images case perspective projection projectors precisely intersect parallel point intersection projectors direction vectors feature point projected images optical centers expressed substituting xjy ujv linear solving position projector case perspective projection projectors rarely intersect position feature point estimated midpoint shortest vector projectors vector connecting point line quadratic minimum length vector found solving partial derivatives set equal simple non-linear minimization problem 
midpoint minimum length vector connecting projectors estimated position wmin wmin wmin wmin appendix beacon problem location determination problem initial estimate structure motion parameters feature points images appendix positions missing feature points estimated triangulation recovered images similarly positions rotations missing images estimated recovered feature points called beacon problem perspective projection location determination problem perspective projection cases set beacons recovered feature points observed unknown location position observer computed relative directions beacons words position camera optical center estimated examining relative direction set recovered feature points beacon problem location determination problem defined differently examined separately beacon problem observed angle feature points unit direction vectors law cosines states defines circle passing optical center image shown figure points perimeter sin circle observed angle radius circle opposing circles radius passing points correct circle determined examining sign cross-product observed angle feature points defines circle observer lie examining feature point defines circle shown figure intersection circles unique position camera optical center location camera found feature points determine rotation image optical center figure beacon problem observed angle recovered feature points defines circle radius observer lie feature point defines circle intersection circles position sin location determination problem beacon problem analogue observed angle feature points defines surface lie principle intersection surfaces derived pairings feature points uniquely determine location approach requires solving complex order polynomial simpler approach fischler bolles called location determination problem method nonlinear examines feature points fourth point resolve ambiguity huang faugeras linear solution location determination problem examined feature points feature points projected image direction vectors position feature point respective projector match distance recovered points solution shown figure figure location determination problem locations feature points image projectors match distance points solution constraint distance points solution quadratic unknowns solutions positive solution geometrically isomorphic negative solution camera actual solutions resolve ambiguity procedure repeated substituting fourth point place identify unique solution relative distances feature point focal point actual position respect feature points found solving solutions side triangle vertices correct position determined examining triple scalar product appendix measuring structure motion error recovered positions feature points cameras optical centers accurate scale factor rigid translation rotation original scene coordinate system unknown measuring accuracy solution difficult determining optimal coordinate transformation mapping solution original scene non-trivial data fitting shape registration problem fitting sets data points non-linear optimization problem involving independent parameters order simplify mapping solution original coordinate system synthetic images thesis generated scenes feature points lie unit circle perspective projection unit sphere perspective projection shown figure figure shows synthetic scene feature points projected images original feature points lie circle recovered feature points circle fitted features points solution defined center circle radius similarly perspective projection recovered feature points lie sphere defined center sphere circle sphere fitted feature points solution minimizes least-squares distance points perimeter circle sphere objective error function case circle case sphere radius initially estimated center-of-mass feature points initial estimate figure synthetic scene feature points lying circle projected images optical centers angular noise added projectors images number feature points figure shows circle fitted feature points solution images projected figure circle translation scale factor mapping solution original scene leaving rotation transformation determined optimal rotation aligns translated scaled solution original scene minimizes least-squares distances feature points solution positions original scene distance specifies rotation circle origin distance figure circle fitted feature points initial unrefined solution images projected figure center circle translation vector solution original scene coordinate system radius circle scale change center-of-mass feature points cos sin sin cos rotation sphere origin eqn eqn solved find optimal rotation parameters figure shows final positions feature points solution scaling translation rotation original coordinate system average distance feature points final solution positions original scene called structure error defined cos sin sin cos cos sin sin cos cos sin sin cos figure feature points solution gray finally rotated find fit points original scene black distance recovered original feature points called structure error distance recovered original optical centers called motion error number features average distance cameras optical centers final solution positions original scene called motion error defined number images structure error motion error errors unit-less distances measured relative circle sphere radius original feature points lie important consequence method measuring structure motion error cameras optical centers determining optimal registration transformation registration based optimal fit feature points result measured motion error error recovered cameras optical centers typically larger structure error by-product registration method camera motion reliably recovered projected error refinement scene structure technique fitting solution original scene give structure motion error bibliography arun huang blostein least-squares fitting point sets ieee transactions pattern analysis machine intelligence vol azarbayejani pentland recursive estimation motion structure focal length ieee transactions pattern analysis machine intelligence vol babcock jarvis wire-frame modelling polyhedral objects rangefinder data robotica vol birchfield derivation kanade-lucas-tomasi tracking equation unpublished notes boult brown factorization-based segmentation motions proc ieee workshop visual motion chaumette boukir bouthemy juvin structure controlled motion ieee transactions pattern analysis machine intelligence vol chen huang matching line segments applications multiple-object motion estimation ieee transactions pattern analysis machine intelligence vol chou teller multi-image correspondence geometric structural constraints proc image understanding workshop vol christy horaud euclidean shape motion multiple perspective view affine iterations ieee transactions pattern analysis machine intelligence vol cipolla okamoto kuno robust structure motion motion parallax proc international conference computer vision coorg teller matching pose refinement camera pose estimates proc image understanding workshop vol dhond aggarwal structure stereo review ieee transactions systems man cybernetics vol faugeras three-dimensional computer vision geometric viewpoint mit press cambridge mass faugeras maybank motion point matches multiplicity solutions proc ieee workshop visual motion fischler bolles random sample consensus paradigm model fitting applications image analysis automated cartography communications acm vol gibson ecological approach visual perception houghton mifflin company boston hartley projective reconstruction invariants multiple images ieee transactions pattern analysis machine intelligence vol hartley self-calibration multiple views rotating camera proc european conference computer vision vol hartley kruppa equations derived fundamental matrix ieee transactions pattern analysis machine intelligence vol holt netravali uniqueness solutions perspective views points ieee transactions pattern analysis machine intelligence vol horn motion fields ambiguous international journal computer vision vol kanatani analysis rotation fitting ieee transactions pattern analysis machine intelligence vol koenderink van doorn invariant properties motion parallax 
field due movement rigid bodies relative observer optica acta vol krotkov mobile robot localization single image proc ieee international conference robotics automation kutulakos dyer global surface reconstruction purposive control observer motion artificial intelligence vol lagani mitiche combining points lines image sequence recover structure motion proc ieee workshop visual motion latombe robot motion planning kluwer academic publishers boston liu huang faugeras determination camera location line point correspondences ieee transactions pattern analysis machine intelligence vol longuet-higgins computer algorithm reconstructing scene projections nature vol maybank faugeras theory self-calibration moving camera international journal computer vision vol maybank theory reconstruction image motion springer series information sciences vol springer-verlag york mclauchlan murray active camera calibration headeye platform variable state-dimension filter ieee transactions pattern analysis machine intelligence vol mcreynolds lowe rigidity checking point correspondences perspective projection ieee transactions pattern analysis machine intelligence vol moons van gool proesmans pauwels affine reconstruction perspective images pairs relative object-camera translation ieee transactions pattern analysis machine intelligence vol mundy zisserman geometric invariance computer vision mit press boston mass naeve eklundh projective geometry recovery structure technical report car-trcenter automation research maryland nayar nakagawa shape focus ieee transactions pattern analysis machine intelligence vol negahdaripour multiple interpretations shape motion objects perspective images ieee transactions pattern analysis machine intelligence vol oliensis critique structure motion algorithms technical report nec research institute philip estimation three-dimensional motion rigid objects noisy observations ieee transactions pattern analysis machine intelligence vol pollefeys koch van gool self-calibration metric reconstruction spite varying unknown internal camera parameters proc sixth international conference computer vision poelman kanade paraperspective factorization method shape motion recovery ieee transactions pattern analysis machine intelligence vol press teukolsky vetterling flannery numerical recipes cambridge press cambridge mass quan invariants points projective reconstruction uncalibrated images ieee transactions pattern analysis machine intelligence vol sawhney oliensis hanson image description reconstruction image trajectories rotational motion ieee transactions pattern analysis machine intelligence vol seitz dyer complete scene structure point correspondences proc international conference computer vision seitz dyer photorealistic scene reconstruction voxel coloring proc computer vision pattern recognition shapiro affine analysis image sequences thesis department engineering science oxford shariat price motion estimation frames ieee transactions pattern analysis machine intelligence vol shashua projective structure uncalibrated images structure motion recognition ieee transactions pattern analysis machine intelligence vol shashua navab relative affine structure canonical model geometry applications ieee transactions pattern analysis machine intelligence vol shi tomasi good features track proc ieee conference computer vision pattern recognition spetsakis optimal motion estimation proc ieee workshop visual motion szeliski kang shape ambiguities structure motion ieee transactions pattern analysis machine intelligence vol szeliski kang recovering shape motion image streams non-linear squares journal visual communication image representation vol taylor kriegman anandan structure motion multiple images least-squares approach proc ieee workshop visual motion thompson rational algebraic formulation problem relative orientation photogrammetric record vol thompson lechleider stuck detecting moving objects rigidity constraint ieee transactions pattern analysis machine intelligence vol tomasi shape motion image streams factorization method thesis cmu-cs- carnegie mellon tomasi kanade factoring image sequences shape motion proc ieee workshop visual motion tomasi input redundancy output observability analysis visual motion proc sixth symposium robotics research tomasi zhang structure-from-motion worth pursuing proc seventh international symposium robotics research torr murray development comparison robust methods estimating fundamental matrix international journal computer vision vol tsai huang uniqueness estimation three-dimensional motion parameters rigid objects curved surfaces ieee transactions pattern analysis machine intelligence vol tsai versatile camera calibration technique high-accuracy machine vision metrology off-the-shelf cameras lenses ieee journal robotics automation vol ullman interpretation visual motion mit press cambridge mass ullman computational studies interpretation structure motion summary extension artificial intelligence memo artificial intelligence laboratory mit ullman maximizing rigidity incremental recovery structure rigid non-rigid motion perception vol wang characterizing three-dimensional surface structures visual images ieee transactions pattern analysis machine intelligence vol weinshall tomasi linear incremental acquisition invariant shape models image sequences ieee transactions pattern analysis machine intelligence vol weng huang ahuja motion structure line correspondences closed-form solution uniqueness optimization ieee transactions pattern analysis machine intelligence vol weng ahuja huang optimal motion structure estimation ieee transactions pattern analysis machine intelligence vol wolfram mathematica system mathematics computer addison-wesley redwood yen huang determining motion structure rigid body spherical projection computer vision graphics image processing vol zhang faugeras dynamic scene analysis stereo based approach springer berlin heidelberg zhang deriche faugeras luong robust technique matching uncalibrated images recovery unknown epipolar geometry artificial intelligence journal vol 
image-based transformation viewpoint scene appearance steven maxwell seitz dissertation submitted partial fulfillment requirements degree doctor philosophy computer sciences wisconsin madison image-based transformation viewpoint scene appearance steven maxwell seitz dissertation submitted partial fulfillment requirements degree doctor philosophy computer sciences wisconsin madison abstract thesis addresses problem synthesizing images real scenes three-dimensional transformations viewpoint appearance solving problem enables interactive viewing remote scenes computer user move virtual camera environment virtually paint sculpt objects scene demonstrated variety three-dimensional scene transformations rendered video display device applying simple transformations set basis images scene virtue transformations operate directly images recover scene information required order accomplish desired effect applicable situations accurate three-dimensional models difficult impossible obtain central topic problem view synthesis rendering images real scene camera viewpoints processing set basis images end algorithms warp resample pixels set basis images produce images physically-valid correspond real camera viewpoints techniques synthesizing types transformations non-rigid shape color transformations discussed techniques found perform wide variety real synthetic images basic question uniqueness views appearance scene uniquely determined information present basis views important contribution uniqueness result no-occlusion case proves views line segment camera centers uniquely determined uncalibrated views scene importantly dense pixel correspondence camera information needed result view morphing algorithm derived produces high quality viewpoint shape transformations uncalibrated images treat general case views voxel coloring framework introduced facilitates analysis ambiguities correspondence scene reconstruction framework type scene invariant called color invariant derived intrinsic scene information correspondence view synthesis based result efficient voxelbased algorithm introduced compute reconstructions dense correspondence set basis views algorithm advantages notably ability easily handle occlusion views arbitrarily usefulness panoramic visualization scenes factors make voxel coloring approach attractive means obtaining high-quality three-dimensional reconstructions photographs acknowledgements thesis dedicated parents gary sheila seitz taught education lifelong pursuit inspired pursue chuck dyer guidance support graduate studies advice infallible judgement matters academic tremendous influence invaluable resource fortunate opportunity work time madison members thesis committee nicola ferrier vladimir lumelsky vadim shapiro jude shavlik comments insights work grateful larry rowe introducing scientific research undergraduate berkeley encouraging pursue graduate studies computer science kyros kutulakos contributed key ideas work provided strong influence peer collaborator graduate studies benefited interactions people brian roddy aaron seitz kathy suchenski sanjay tiwari john watrous illuminating discussions advice insights work provided current members vision group madison including russel manning brian morgan andrew prock dan reznik brent seales steve walden people graciously permitted images thesis order appearance john watrous suhui chiang shubu mukherjee dionisios pnevmatikatos alain kagi elton glaser babak falsafi doug burger deeply grateful sandhya subramanian endless encouragement enthusiasm making years enjoyable iii contents abstract acknowledgements introduction examples image-based scene transformations transformingrealscenes thesis contributions thesis outline notation geometry color two-view case view morphing dvs issues uniqueness measurability monotonicity impactforviewsynthesis identifying monotonic scenes orthographic views shape-preserving morphs parallel views occlusions visibility constant visibility visibility shape-preserving morphs non-parallel views imagereprojection step algorithm singular view configurations producing morph uncalibratedviewmorphing computingprewarps specifyingpostwarps implementation correspondence image resampling prewarp stability experimentalresults discussion single-view morphing n-view morphing strong monotonicity limitations multi-view approach voxel coloring pixel correspondence view synthesis opticalflow stereo featuretracking epianalysis scene space methods discussion thevoxelcoloringproblem colorinvariants ordinal visibility constraint properties color invariants voxel coloring algorithm layered scene decomposition voxelconsistency single-pass algorithm discussion optimizations experimentalresults resultsonrealimages resultsonsyntheticimages discussion editing user view editing plenopticpainting plenopticscissoring plenopticmorphing newviewgeneration editpropagation painting scissoring morphing conclusions contributions limitationsandfuturework bibliography computing prewarps fundamental matrix choosing homographies aligningtheimageplanes aligningthescanlines infiniteepipoles selecting orthographic prewarps orthographic view morphing imageinterpolation theneedforrectification list figures image-based scene transformation image transformation photographs drawings paintings enables visualizationofhistoricobjectsandscenes image morph combines interpolations shape image warping color cross-dissolve create transitions strikingly three-dimensional view morphing images object viewpoints produces illusion physically moving virtual camera visualambiguity monotonicity constraint correspondence monotonicity shape-distorting morph morphingparallelviews viewmorphinginthreesteps singular views viewmorphingprocedure facialviewmorphs helicoptertoy monalisa photocorrection n-viewmorphing voxelcoloring spatialambiguity colorambiguity colorinvariants layeredscenetraversal image acquisition setup voxelcoloringofflower vii placement input camera viewpoints panoramic synthetic room scene examples plenoptic image editing operations applied photographs dinosaurtoy pair views made coincident plane rotating image planes lines intersection monotonic viewing geometry viii list tables comparison correspondence approaches voxelresolutioneffects chapter introduction humans perceive three-dimensional world means projection retinal fields mimicing projection process eye fooled perceiving depth three-dimensionality computer-generated imagery interactive computer graphics systems exploit trick enable user visualize transform artificial objects scenes dimensions display input devices thesis problem designing computer algorithms visualize manipulate appearance real objects scenes exist physically existed past unlike artificial scenes painstakingly minute detail real scenes intrinsic structure visually captured photographs drawings present making structure computer graphics applications requires reconstructing structure scene images reconstruction problem wellstudied computer vision literature solved existing techniques prone variety errors instabilities chapter minor errors shape distracting artifacts model texture-mapped reprojected attempt extract scene description photographs alternative approach model effects scene transformations image domain determining image change response scene transformation shown fig applying scene transformation rendering resulting scene yields image transformation similarly image transformations imply scene transformations modifying image mimic physical real scene phrase image-based scene transformation describe synthesis scene camera illumination transformations modifications basis input images advantage image-based approach precise modeling reconstruction shape illumination texture scene quantities images avoided recover image information required create desired effect image-based transformations simpler efficient methods require reconstructions importantly argue image-based transformations powerful enable visualization manipulation scenes difficult impossible reconstruct transformation interest viewpoint camera panning zooming translation cast image transformation change camera viewpoint modeled mapping warp pixels basis views pixels image representing synthetic view scene categorizing set mappings begin devise scene transform image transform image image figure image-based scene transformation scene transformation change camera viewpoint top image change bottom similarly well-designed image transformation imply transformation scene refer technique synthesizing effects image operations image-based scene transformation mechanisms synthesizing viewpoint warping images capability critical interactive graphics applications visualization virtual reality flight simulation games viewpoint continuously subject user-control enables manipulation scenes three-dimensional structure unknown unrecoverable instance present-day tourist virtually visit historic building long ago destroyed warping set photographs time building standing user view building moving virtual camera environment illusion real three-dimensional space maintained continually warping images correspond user changing perspective approach applied drawings paintings instance fig depicts rotation leonardo vinci mona lisa generated image-based technique chapter thesis propose image-based scene transformations general framework visualizing 
manipulating real scenes computer display describe algorithms enable common transformations rigid non-rigid motions viewpoint editing operations algorithms key advantage operate set basis images figure image transformation photographics drawings paintings enables visualization historic objects scenes mona lisa appears rotate three-dimensionally view morphing technique chapter require models scene motivate image transformations begin examples simple image transformations capable producing realistic effects examples image-based scene transformations early part century walt disney pioneers developed cel animation techniques generate cartoons films pigs wal fantasia wal aladdin wal cel animators employed number methods conveying realistic motions paint transparent sheets celluloid basic medium success continued popularity efforts attests efficacy techniques producing realistic visual effects traditional animation focused primarily effects featured artistic distortions exaggerations las effects scene transformations werealso employed included simulations camera translations moving small window background image translating window conveys frontoparallel motion camera scaling window emulates forward backward motion sufficient give impression camera movement technique model depth effects parallax occlusion figure image morph combines interpolations shape image warping color cross-dissolve create transitions strikingly three-dimensional unrealistic compelling effect achieved designing background image specific camera path mind wfh technique walt disney animated film pinocchio wal window moved fixed path special background image background appears warped viewed entirety appears natural sliding window resulting animation realistic effect wood wfh recently developed computer algorithms partially automating creation warped backgrounds call multiperspective panoramas simulating depth effects animation layering ortrucking compositing series background images windows move speeds technique model relative motion occlusion objects representing scene set independently moving layers rendered back-to-front order recently researchers computer vision computer graphics advocated layering paradigm effective representing rendering complicated scenes manually automatically segmenting scene series layers years computer-based image metamorphosis morphing wol emerged popular means producing fascinating visual effects techniques combine interpolations shape color produce transitions pair basis images generally morph controlled set correspondences interpolation parameters user-provided chosen achieve effects shown fig part appeal morphing images produced strikingly lifelike visually convincing computed image transformations effective morphs generate illusion smooth shape transformation objects fact realistic shape transformations arise image morphs surprising extremely shape modeling avoided image morphs enable synthesis three-dimensional effects provide direct control transformation synthesized morph fig implies three-dimensional shape transformation morph user-specified transformation left implicit result simple transformations viewpoint difficult convey accurately image morphing methods transforming real scenes techniques previous section examples representations operations convey strong impression three-dimensionality primary goal thesis transforming appearance real objects scenes develop similar imagebased operations applied photographs sophisticated precisely model viewpoint operations achieving goals requires addressing number issues measurability sufficient information compute transformation automatically semi-automatically extracted basis images correctness synthesized image physically correct correspond real scene result scene transformation synthesis algorithms developed image-based scene transformations techniques robust easy general handle complex real-world objects scenes focus synthesizing camera position orientation view synthesis touch types transformations specifically editing operations modify surface shape color describe perform operations domain thesis contributions main contribution thesis collection results algorithms enable synthesizing transformations real scenes basis images principle problem approached concatenation steps individually well-studied reconstruction images applying scene camera illumination transformations rendering scenes closer examination problem reveals limitations approach powerful solutions image transformations important contribution uniqueness result establishes time view synthesis feasible correspondence information camera parameters specifically views occlusions uniquely predict in-between views line segment camera centers result nontrivial structure scene uniquely recoverable conditions shape reconstruction ill-posed result important paves view synthesis algorithms represent scene appearance collection basis images based result contribution technique called view morphing synthesis physically-correct in-between views pair uncalibrated images generalize two-view results investigate problem view synthesis numerous input images relax occlusion constraint case main challenge computing pixel correspondences images cameras describe algorithm exploits constraint camera positions provide efficient solution correspondence problem algorithm unique feature generating provably-consistent dense correspondence maps set input images presence occlusion view synthesis applications require correspondence information motion analysis scene reconstruction voxel coloring algorithm features including ability cope widely spaced views capacity provide panoramic scene visualizations reconstructions additional contribution voxel coloring framework analyzing ambiguities invariants image correspondence scene reconstruction framework identify points correspondences special invariant properties color invariant point radiance distribution reconstruction scene set basis images fixed illumination provide absolute radiance information constant consistent scenes distinguished methods attempt solve color constancy problem hsw computing surface reflectance independent scene illumination contrast color invariants encode radiance directly sufficient synthesize views scene illumination held constant common theme underlies work constraints simplify problems intractable no-occlusion constraint called monotonicity crucial proving view synthesis tractable similarly solution determining image correspondences multiple views requires scene volume lies convex hull camera centers constraint call ordinal visibility constraint permits solving correspondences generalized depth-order thesis combination theoretical results practical algorithms results require idealized assumptions lambertian surfaces violated images real scenes algorithms general robust violations assumptions shown perform wide range real input sequences assumptions violated correctness proofs longer apply results physically correct visualization applications primary goal perceptual realism physical correctness means achieving goal strictly las important feature algorithms produce realistic results significant violations assumptions view morphing algorithm shown produce highly realistic viewpoint transitions situations shading visibility shape differ dramatically input images results obtained images faces natural objects extremely difficult model conventional methods eye highly sensitive minor errors shape color results suggest algorithms fact widely applicable theory predicts thesis outline thesis begins introducing terminology describing color spatial entities scenes images projections chapter chapter presents problem view synthesis discusses two-view case detail overview related work problem revisited principles order determine conditions fully solvable part chapter addresses theoretical concerns derives uniqueness result in-between views remainder chapter presents view morphing algorithm synthesizing in-between views pair uncalibrated basis images chapters investigate extensions view morphing algorithm cases fewer basis views chapter addresses problem view synthesis single view objects bilateral symmetry demonstrates potential application photocorrection face recognition chapter considers extensions views cascading sequence pairwise view morphs chapter considers problem view synthesis numerous input images widely distributed scene chapter begins discussion correspondence problem reviews existing approaches basic problem motivated limitations state art discrete scene-space framework introduced called voxel coloring framework isolate characterize fundamental ambiguities correspondence problem leads identification points special invariant properties collection points called color invariants shown comprise scene reconstruction fully consistent input images efficient algorithm presented computing points set 
basis images visibility constraint chapter concludes evaluating performance approach applied real synthetic image sequences chapter discusses transformations synthesized image-based techniques focus editing operations painting scissoring morphing applied image propagate automatically views describing plenoptic image editing operations chapter describes implementation presents results prototype system chapter notation geometry write vectors matrices bold face scalars roman scene image quantities written capitals lowercase write image scene quantities letter images shapes scenes expressed point sets convention represent image scene points homogeneous coordinates image point bxy iis projection scene point bxyz reserve notation points expressed euclidean coordinates coordinate scalar multiples points written tilde camera represented homogeneous projection matrix form bhj vector position camera optical center matrix specifies transformation image plane respect world coordinate system perspective projection equation term view henceforth refer tuple comprised image projection matrix denote image scene produced perspective camera viewpoint color image irradiance pixel color function color mapping position pixel image point color-space monochrome intensity rgb hsv choice colorspace left unspecified needed purpose discussion case lambertian scenes scenes perfect matte surfaces radiance isotropic expressed scalar function case define color radiance point scene chapter two-view case view morphing problem synthesizing images real scene camera viewpoints warping pair basis images problem represented schematically fig problem interesting applications practical importance stereo viewing teleconferencing amenable bottom-up analysis base case general problem view synthesis arbitrary sets views end objective demonstrate view synthesis problem solvable perspective views static scene conditions views unambiguously predicted point question nontrival basic quantities optical flow shape uniquely computable due inherent ambiguities aperture problem mar goal develop algorithm produce correct high-quality synthetic views scene basis images algorithm produce correct views underlying assumptions satisfied sufficiently robust cope large deviations non-static scenes varying illumination appearance viewpoints static three-dimensional scene predicted set basis views scene addressing question view synthesis two-step procedure reconstruct scene basis views stereo structure motion methods reproject form views great deal recent work btz sze mkkj krn devoted problem obtaining high-quality texture-mapped models basis images significant progress made area problem two-step paradigm view synthesis difficult scene reconstruction conclusion unfortunate light fact reconstruction photographs generally ambiguous number scenes consistent set images ill-posed problem ptk suggests view synthesis ill-posed shown ambiguity artifact reconstruction avoidable task synthesizing views extracting information needed view virtual cameras morphed view figure view morphing images object viewpoints produces illusion physically moving virtual camera synthesis well-known limitations aperture problem mar eliminated additional fundamental limitations practical problems reconstruction approach existing reconstruction methods prone errors due occlusion surface discontinuity lead distracting visible artifacts synthesized views cases good reconstructions computable strong reasons favoring image-based approach view synthesis note view synthesis problem twodimensional input output comprised images build model direct approach compute mapping rearranges pixels input images synthesize output image keeping problem image domain complexity error accumulation incurred multiple transformations avoided arguments motivate image-based scene representations view synthesis applications spite reasons favoring image-based representations case input images models offer compact scene representation observe input images naive image-based approach store images correspondence maps resulting expensive highly redundant representation number images large ggsc representations offer distinct advantages solution large numbers images presented chapter related work view synthesis lippman lip propose image-based representation computeraided scene visualization movie-map approach enabled interactive virtual exploration environment selectively accessing views previously captured stored laser disk additional contribution panoramic imaging capture wide field view images optically corrected playback time viewing apparatus employing conical mirror moving head relative device user effect rotation virtual camera optical center seminal paper view synthesis chen williams views scene quickly computed set basis images range-maps image warping software desktop computers primary motivation speed interpolation performed quickly rendering directly model high quality rendering methods ray tracing radiosity observation led development hardware systems view synthesis techniques achieve real-time rendering rates synthetic scenes laveau faugeras develop view synthesis techniques operate photographs apply real scenes olc devised methods synthesizing views priori derived depth maps camera positions demonstrate feasibility view synthesis directly uncalibrated images correspondence maps solve problem mapping points uncalibrated views developed techniques based fundamental matrix dzlf contribution ray-tracing method resolving occlusion relationships synthesized views poggio brunelli proposed computational learning framework synthesizing transformations set basis images technique hyper basis functions learn parameterized models images general model variety interesting transformations work demonstrated utility framework difficult case synthesizing views human faces important contribution work exceptionally broad scope primary focus view synthesis learning framework equally modeling facial expression non-rigid transformations effective synthesis recognition applications years explosion interest view synthesis techniques applications concurrent work thesis sei numerous researchers whh iah knr kai che ktot sze mkkj sch dtm ggsc rob hiaa krn developed view synthesis techniques brevity discuss representative dominant approaches exist comparisons approaches thesis discussed sections chapters chen che mcmillan bishop developed systems similar lippman moviemaps computer-based optical methods systems provided panoramic visualization scenes cylindrical image mosaics stored scene appearance single camera position mcmillan bishop plenoptic modeling approach supported interpolation mosaics camera translation elegant image-space algorithm resolve visibility order apple computer commercialization chen system quicktime app brought image-based scene visualization mainstream enabling interactive viewing conventional real scenes great wall china interior car success quicktime newer systems surround video bla ipix int smoothmove inf realvr liv helped spawn emerging subfield computer graphics called image-based rendering attracted growing interest image-based representations debevec dtm exploited mixture manual automatic methods reconstruct high-quality models architectural scenes view-dependent texture mapping approach model varying illumination reflectance major contribution work show importance user-interaction aid view synthesis algorithms facilitate model construction levoy hanrahan gortler ggsc developed ray-based approaches view synthesis methods termed light field lumigraph represent visible scene four-dimensional ray space image two-dimensional sample problems acquiring representation synthesizing views achieved simple sampling operations elegant simple construct approaches require input views compared correspondence-based techniques closely-related approach chapter called view interpolation methods whh sch image warping produce views small number basis views methods require advance knowledge camera parameters produce correct perspective views exceptions methods require dense pixel correspondence maps input requirement limitation image-based computation correct correspondence maps ill-posed problem ptk contrast chapter presents view interpolation technique operates directly pair images knowledge camera parameters dense correspondence unique property requiring measurable image information establishing view interpolation well-posed problem method developed chapter operate 
fully automatically key feature user-interaction views control interpolation respect approach strong similarities debevec dtm facade system included important manual component approach chapter facade produces views image warping operations constructing texture-mapped models issues view synthesis problem principles determine theoretical feasibility synthesizing views scene pair basis images specifically issues resolved uniqueness problem well-posed scene appearance viewpoint uniquely determined basis images view constructed measurable image information correctness synthesized image physically correct correspond real camera chosen viewpoint registration input images registered determine pixel correspondence quantities relating underlying camera geometry epipolar lines problem formulated avoids limitations measured images complete pixel correspondence euclidean camera positions required uncalibrated cameras method applicable cases images uncalibated camera positions parameters unknown synthesis algorithms developed synthesize correct high quality views pair basis images techniques robust easy general application faces objects scenes construction realistic models difficult issues addressed remainder chapter begin analyzing uniqueness issue conditions view synthesis problem theoretically solvable leads question measurability information extracted basis images order solve problem section reviews technique image morphing discusses potential applicability view synthesis analyzing shortcomings introduce modification called view morphing suited view synthesis technique case camera positions extended section work images unknown uncalibrated cameras chapter concludes experiments demonstrating effectiveness approach variety image pairs uniqueness measurability developing view synthesis algorithms demonstrated problem solvable sufficient information basis views scene uniquely predict figure visual ambiguity scenes indistinguishable viewpoints differently camera positions scene appearance uniquely determined basis images scene appears viewpoints fig illustrates difficulty pair images consistent scenes indistinguishable viewpoints distinct viewpoints pair images scene general impossible predict scene viewpoints lack completely general solution fundamental questions posed uniqueness conditions views uniquely determined basis images views determined measurability information extracted basis images order correctly synthesize views answering questions crucial understanding applicability limitations view synthesis algorithms chapter significant steps goal demonstrating specific range perspective views uniquely determined basis views generic visibility assumption called monotonicity importantly shown generating views relies measurable image information avoiding ill-posed correspondence problems chapter extends results case views knowledge results prove feasibility view synthesis correspondence shape information monotonicity section conditions views scene uniquely predicted pair basis images order proceed identify information extracted basis images predict scene appearance viewpoints problem framework optical flow pair images scene exist optical flow fields correspondence projected scene points images maps defined relation projections scene point optical flow undefined points occluded visible images flow field complete bijective defined image pixel flow field complete view synthesis image lambertian scene complete flow field synthesize image relation color color view synthesis problem reduced problem determining flow fields approach essence reduction previous approaches view synthesis instance complete optical flow sufficient synthesize views automatic recovery basis images problematic error-prone flow low-contrast regions uniform color locally ambiguous condition aperture problem mar result complete optical flow generally measurable images ptk response aperture problem researchers normal flow hil motion component gradient direction advantage measurable section introduce measurable variety flow called boundary flow well-suited synthesizing views scene derivation relies visibility constraint called monotonicity motivation boundary flow view synthesis subset optical flow field optical flow estimates ill-conditioned homogeneous regions uniform color reliably computed boundaries regions image discontinuities note predicting boundary sufficient predict appearance region view interior uniform intuitively red blob image red blob image determine shape blob argument hinges notion uniform regions preserved views constraint formalized condition monotonicity introduced views respective optical centers images denote line segment connecting optical centers point scene determines epipolar plane andc intersects images conjugate epipolar lines monotonicity constraint dictates visible scene points order conjugate epipolar lines constraint commonly stereo matching fixed relative ordering points epipolar lines simplifies correspondence problem usual definition respect epipolar lines images monotonicity constrains location optical centers respect points scene image planes chosen arbitrarily alternate definition isolates dependence shown figure monotonicity constraint points epipolar plane determine angles respective camera optical centers monotonicity apply angles satisfy satisfied monotonicity applies view optical center fig scene points epipolar plane determine angles optical centers monotonicity constraint dictates points nonzero equal sign fact constraint made image planes primary importance view synthesis means monotonicity preserved homographies image reprojection fact essential section developing algorithm view synthesis impact view synthesis consequence monotonicity extends cover continuous range views inbetween view in-between optical center observe monotonicity violated exist scene points epipolar plane infinite line intersects butpq intersects intersects monotonicity applies in-between views signs angles preserved visible scene points order conjugate epipolar lines views refer range views centers monotonic range viewspace notice range lower bound range views monotonicity satisfied sense set instance fig monotonicity satisfied views open ray point camera centers aprioriknowledge geometry scene infer monotonicity satisfied range property monotonicity applies in-between views powerful sufficient completely predict appearance visible scene viewpoints projections set uniform lambertian surfaces surface uniform radiance surfaces radiances views fig shows cross sections ccc figure correspondence monotonicity cross-section view surfaces projecting conjugate epipolar lines images projected intervals provide information reconstruct ands sufficient predict appearance surfaces projecting conjugate epipolar lines connected cross section projects uniform interval interval uniform color monotonicity constraint induces correspondence endpoints intervals determined relative ordering points ands projecting interval endpoints determined correspondence triangulation refer scene points visible endpoints ands term boundary flow mapping endpoints uniform intervals subset optical flow field defined interval endpoints measurable argument in-between view image epipolar line asa consequence monotonicity ands project uniform intervals delimited projections visible endpoints notice intermediate image depend specific shapes surfaces scene positions visible endpoints number distinct scenes produced produce set intermediate images formally uniqueness in-between views leti satisfy monotonicity set scenes scenes in-between view views determined result demonstrates view synthesis monotonicity intrinsically well-posed problem easier reconstruction related motion analysis tasks requiring smoothness conditions regularization techniques ptk monotonicity constraint crucial view synthesis observe required make correspondence problem solvable predict appearance uniform surfaces shapes unknown in-between views views predicted certainty due requirement visible endpoints surface remain fixed monotonicity constraint closely related theory aspect graphs visual events kvd kvd constraint dictates visibility occlusions occur monotonic range viewspace words views monotonic range topologically equivalent scene points visible view condition photometric topological equivalence stronger notion topological equivalence image contour structure define aspect monotonic range viewspace occurs aspect identifying monotonic scenes final question concerns measurability monotonicity monotonicity assumption established view 
synthesis feasible relies measurable image correspondence information considered monotonicity measurable determine images scene satisfy monotonicity inspecting images answer priori strictly speaking monotonicity measurable sense images consistent multiple scenes satisfy monotonicity determine images consistent scene monotonicity applies checking epipolar line image monotonic warp conjugate image conjugate epipolar lines expressed functions mapping position color exists monotonic function denote class monotonic scenes consistent basis images consistency property determine basis images empty nonempty result view synthesis set images consistent scene orthographic views pairs orthographic views monotonicity defined respect camera centers results apply define monotonicity terms ordering points conjugate epipolar lines section summarize results orthographic case details found appendix orthographic case monotonicity states projections points epipolar plane order conjugate epipolar lines property holds epipolar lines views monotonicity holds letn denote image plane unit normal optical axis direction gaze geometrically monotonicity constraint dictates line intersect line segment joining tips image plane normals fig perspective case monotonicity extends cover range views in-between view in-between normal intersects uniqueness result holds orthography uniquely determined image morphing view synthesis attempting develop view synthesis algorithms inspired realistic effects obtained image morphing techniques techniques combine interpolations shape color create seamless dramatic transitions pair input images fig image morph faces part appeal morphing images produced strikingly lifelike visually convincing figure computed image transformations effective morphs suggest natural transformation objects world image morphs effectively convey transformations natural image morphing synthesize views scene specifically suppose morphed images object camera positions existing morphing program resulting sequence in-between images correspond correct perspective views scene order answer question basic principles governing current image morphing techniques work morph determined images maps complete correspondence points images maps required correspondence one-to-one practice partially user provide sparse set matching features regions images remaining correspondences determined automatically interpolation wol lcsw warp function image computed correspondence maps based linear interpolation give displacement point asafunctionofs in-between images computed warping original images averaging pixel colors warped images existing morphing methods vary principally correspondence maps computed addition techniques finer control interpolation rates methods instance beier neely suggested methods interpolating line features linear interpolation endpoints eqs position angle thesis term image morphing refers specifically methods pointwise linear interpolation compute feature positions in-between images including wol lcsw illustrate potentially severe distortions incurred image morphing interpolating views planar shape images related figure shape-distorting morph linearly interpolating perspective views clock left geometric bending effect in-between images dashed line shows linear path feature transformation indicative types distortions arise image morphing techniques projective mapping form projective mappings preserved linear interpolation sum expressions general ratio quadratics projective mapping morphing shape-distorting transformation in-between images correspond views shape disturbing effect image morphing tendency bend straight lines yielding unintuitive image transitions fig shows dali-esque morph views clock appears bend half straighten transition in-between shapes computed linearly interpolating points views correspond point clock shape-preserving morphs parallel views begin situations linear interpolation images shape-preserving suppose photograph object move object direction parallel image plane camera zoom picture alternatively produce images moving camera object shown fig chen williams previously considered special case arguing linear image interpolation produce perspective views camera moves parallel image plane suppose camera moved world origin position focal length write respective projection matrices figure morphing parallel views linear interpolation pixels parallel views image planes creates image representing parallel view scene refer cameras views projection matrices form parallel cameras parallel views projections scene point bxyz linear interpolation yields confused parallel projection produces orthographic views parallel views orthographic image interpolation produces view projection matrix linear interpolation representing camera focal length center interpolating images parallel cameras produces images correspond moving camera line optical centers zooming continuously image interpolation produces views object shape-preserving notice uniform parameterization correspond uniform camera motion regular sampling corresponds camera moves slowly focal length increases halfway image interpolation corresponds camera motion distance fig order achieve constant velocity uniform parameterization varied order move camera halfway fig substitute yielding result interpolations parallel views shape-preserving generalized derivation fact relies equality rows views satisfying general criterion represent broader class parallel views linear image interpolation shape preserving interesting special case class orthographic projections projections row linear interpolation orthographic views scene produces orthographic view scene occlusions visibility demonstrated image morphing parallel views creates images scene accordance equations perspective projection model effects visibility image content section examine case constant visibility unique in-between views ensured changing visibility z-buffer techniques resolve ambiguities constant visibility order validate image morphing technique parallel view synthesis relate results section section demonstrated synthesized images represent views monotonic range show image generated morphing corresponds real camera viewpoint suppose monotonic parallel views finite camera centers providing line camera centers monotonic range proof correctness trivial case finite camera centers infinite camera centers orthographic projection situation complicated preserve monotonicity care ensure image plane normals in-between views intersect line segment straightforward interpolation orthographic views generally satisfy property appendix fortunately situation easily corrected adding postwarp transformation section visibility standpoint morphing visibility result types conditions folds holes fold occurs in-between image visible surface occluded situation multiple pixels map point causing ambiguity opposite case occluded surface suddenly visible rise hole region correspondence folds resolved z-buffer techniques provided depth information absence shape information point disparity disparity points parallel views defined difference x-coordinates parallel views point disparity inversely proportional depth z-buffer techniques directly applied inverse disparity substituted depth technique makes images parallel prior interpolation section simple strategy suffices general interpolation computed scanline time z-buffering performed scanline level avoiding large memory requirements commonly z-buffering algorithms alternative method painter method z-buffering presented unlike folds holes eliminated image information chen williams suggested methods filling holes designated background color interpolation neighboring pixels additional images surface coverage neighborhood interpolation approach prevalent existing image morphing methods implicitly experiments assume images rotated epipolar lines horizontal top-to-bottom order images techniques aligning images discussed section shape-preserving morphs non-parallel views section describe generate sequence in-between views non-parallel perspective images object scene convenience choose model transformation change viewpoint opposed rotation translation object scene tools image reprojection linear interpolation performed efficient scanline methods assume configuration input cameras constraint relaxed section image reprojection views share optical center related planar projective transformation images projection matrices projections iand scene point related transformation matrix projective transformation reprojects image 
plane generally invertible matrix represents planar projective transformation one-toone map plane transforms points points lines lines operation reprojection powerful gaze direction modified photograph scene rendered projective transforms compute reprojections takes advantage efficient scanline algorithm wol reprojection performed texture-mapping exploit current graphics hardware image reprojection previously number applications wol reprojection closely related techniques rectifying stereo views simplify shape reconstruction fau image mosaic techniques gre che sze kai rely heavily reprojection methods project images planar cylindrical spherical manifold section describe reprojection improve image morphs step algorithm reprojection problem computing shape-preserving morph non-parallel perspective views reduced case treated section end perspective views projection matrices itis convenient choose world coordinate system lie world x-axis remaining axes chosen figure view morphing steps original images prewarped form parallel views produced morphing interpolating prewarped images postwarped form reduces distortion incurred image reprojection choices correspond reprojection planes simple choice works practice choose axis direction cross product image plane normals in-between perspective views line synthesized combination image reprojections interpolations depicted fig projection matrix fixed sequence operations produces image view projection matrix prewarp apply projective transforms producing prewarped images morph form linearly interpolating positions colors points image morphing technique approximates postwarp apply yielding image prewarping brings image planes alignment changing optical centers cameras morphing prewarped images moves optical center postwarping transforms image plane view desired position orientation notice prewarped images represent views projection matrices bij wherei identity matrix due special form projection matrices property points images figure singular views parallel configuration top camera optical center field view singular configuration bottom arises optical center camera field view camera prewarping change field view singular views reprojected form parallel views scanline interpolation computed scanline time warping resampling operations singular view configurations configurations views made parallel reprojection operations parallel cameras fig top optical center camera field view note reprojection change camera field view viewing direction pair views optical center camera field view made parallel prewarping fig bottom depicts pair singular views prewarping procedure fails singular configurations arise camera motion roughly parallel viewing direction condition detectable images appendix singular views problem prewarp morph postwarp composed single aggregate warp section prewarped images explicitly constructed aggregate warps view morphing applied arbitrary pairs views including singular views prewarping images cropped exclude epipoles appendix producing morph producing shape-preserving morph images requires choosing sequence projection matrices beginning ending sincec determined task reduces choosing continuous transformation image plane view ways transformation natural interpolate orientations image planes single axis rotation image plane normals denoted unit vectors theaxisd angle rotation cos alternatively orientations expressed quaternions interpolation computed spherical linear interpolation sho case camera parameters focal length aspect ratio interpolated separately uncalibrated view morphing assumed euclidean camera positions basis views synthesized view section case camera positions demonstrate view morphing algorithm extended handle uncalibrated case today technology difficult obtain reliable estimates camera positions controlled lab environment eliminating camera calibration makes technique easier applicable wider range situations instance apply technique drawings paintings images camera information unavailable addition technique applied interpolate views objects accommodate range shape deformations projective transformations generalizing view technique previous section extended accommodate range shape deformations view morphing interpolate images projective transformations object generating images object projectively transformed advantage view morphing context salient features lines conics preserved transformation image contrast straightforward image morphing severe geometric distortions fig section projective transformation expressed homogeneous matrix transformation similarly projective transformation matrix class transformations encompasses rotations translations scales shears tapering deformations applying homogeneous scene point produces point point euclidean coordinates obtained dividing fourth component projective transformations notable absorbed camera transformation specifically rendering image scene transformed projective transformation projection matrix point scene appears position pin image ifwedefinethe matrix combined transformation expressed single projection representing view projection matrix allowing arbitrary projections model shape induced projective transformations viewpoint problem interpolating images projective transformations unknown shape reduced form three-step algorithm section applied recall three-step algorithm requires camera viewpoints order morph faces require priori knowledge projective transformation relates knowledge difficult obtain describe modification doesn require knowing projection matrices computing prewarps suppose smoothly interpolate images objects related projective transformation suppose images pixel correspondences provided order ensure in-between images depict shape projectively transformed transformed represent parallel views explained section transformed images property points scanline image points projections scene point y-coordinates equal fact condition sufficient ensure views parallel shown appendix made parallel finding pair projective transformations send points scanline approach determining image point correspondences appendix postwarps fully determine view morph provided in-between image matrix explicitly convenient provide indirectly establishing constraints in-between images simple powerful interactively paths image points entire morph transition control points represent positions point features endpoints lines bounding quadrilateral arbitrary image figure view morphing procedure set features yellow lines selected original images features images automatically prewarped produce prewarped images morphed create sequence in-between images middle shown top-center interactively postwarped selecting quadrilateral region marked red desired configuration ini postwarps in-between images determined interpolating quadrilaterals bottom region fig illustrates process control points bounding quadrilateral region selected determining quadrilaterals control points interactively moved desired positions implicitly postwarp transformation determining entire image postwarps in-between images determined interpolating control points curves traced control points manually edited finer control interpolation parameters positions control points linear system equations solution yields pair control points bxy related unknown scalar eliminating yields linear equations control point coefficients control points yield equations solved adding constraint eigenvector techniques image control points bears resemblance view synthesis work laveau faugeras pairs image points projection parameters case points represented projection image plane optical center original images approach control points in-between image providing direct control image appearance implementation section discusses number issues influence quality stability images produced view morphing discuss methods computing correspondence information boundary flow basis images techniques minimizing degradation image resampling considered finally note cases prewarp procedure unstable examine alternative solutions care ensure control points colinear image solution khk unit eigenvector eigenvalue correspondence difficult part view morphing procedure determining image correspondence information needed compute morph prewarped images explored methods computing correspondence based stereo matching incorporates user interaction approach stereo matching techniques solve point correspondences epipolar lines experiments dynamic programming method exploits monotonicity constraint prewarped images ideal configuration stereo matching conjugate epipolar lines horizontal occupy scanlines images images correlated 
scanline time scanline pixels determined monotonicity constraint strongly limits search space fixing relative pixel ordering edge segments extracted maintain inter-scanline constraints section full pixel-correspondence needed synthesize views determine boundary flow correspondences pixels boundaries uniform intervals epipolar lines modification easily incorporated existing scanline stereo matchers preprocessing approach segment epipolar line sequence intervals color pixels interval uniform implementation segmentation performed quantizing rgb range image small number colors grouping consecutive pixels color quantum single interval construct line consisting sequence pixels interval thecolor nth pixel corresponds average color pixels nth interval pair conjugate epipolar lines match scanline stereo matching technique boundary flow easily obtained resulting interval correspondence number improvements made approach reduce effects salt pepper noise higher weight assigned pixels correspond large intervals note segmentation technique quantizing image colors values generate multi-scale representation set uniform intervals specifically note small values epipolar lines segmented short sequence large intervals large values favor numerous short intervals stability approach improved iterating matching procedure sequence increasing values approach determining correspondence user-interaction requires human operator impractical applications high quality interpolations broader range images robust violations monotonicity assumption instance due lighting variations shape color small-scale occlusions instance interpolate views objects human faces approximately shape interactive approach off-the-shelf image morphing programs compute image correspondence morph prewarped image popular image morphing technique user interactively specifies set matching line segments images lines morph program interpolates dense pixel correspondence endpoints line segments automatically prewarp images method appendix image warp computed linearly interpolating positions colors pixels prewarped images line-specification process intuitive require advanced technical skills artistic ability part user experience roughly line features sufficient create view morphs give good impression camera transformation lines sufficient create high quality image transitions procedure performed incrementally user specifies small number lines computes view morph examines results adds lines image regions improvement image resampling prewarping postwarping operations combined intermediate morph require multiple image resampling operations contribute noticeable blurring in-between images resampling effects reduced supersampling input images wol composing image transformations aggregate warp image approach compatible image morphing techniques employ inverse mapping beier neely method inverse postwarp morph prewarp directly concatenated single inverse map composing warps disadvantages including loss scanline property ability off-the-shelf image morphing tools compute intermediate interpolation prewarp stability prewarp transformation appendix relies fundamental matrix computation unstable instability prominent feature positions imprecise features lie variety degenerate configurations poor prewarps easily detected scanline property points prewarped images scanline coordinate note application hand features compute prewarp user-specified controlled improve stability instance presence outliers compute prewarp reliable subset image features important morphing images objects approximately related projective transformation case user point subset features fit projective transformation user careful avoid degenerate sets feature correspondences coplanar features addition results obtained features well-distributed pair images found include features image borders situations perspective prewarp procedure appendix produce adequate results cases propose stable orthographic prewarp procedure appendix technique preferable images orthographic including telephoto lens images objects variation depth small relative distance camera high stability algorithm found alternative pair images perspective prewarp algorithm fails experimental results view morphing procedure applied pairs images evaluate performance set images shown fig represent interpolations views processed stereo matching techniques automatically derive boundary flow information images prewarped manually point correspondences orthographic prewarp procedure appendix fig shows pairs images halfway interpolations pair case postwarp chosen averaging angles rotation scale-translation matrix appendix notice fine details word band-aid preserved interpolated images fact image product warps resampling operations interpolated images highpass filtered compensate blurring incurred repeated image resampling band-aid box fig a-c good scene monotonicity satisfied images d-f g-i pose greater challenge regions visible image occluded metallic surface stapler visible completely occluded region appears fuzzy due cross-dissolve images type artifact image morphing referred ghosting final pair images g-i curved toy translucent salt shaker objects violate monotonicity toy self-occlusion contours salt shaker non-lambertian surfaces interpolation yields realistic in-between images found local violations monotonicity assumption local errors regions interpolated images corrupt entire view morphing procedure property reflected image occlusion stapler surface affected limited area interpolated image figure view morphs image pairs automatic stereo matching original images shown left columns interpolated view shown center figure facial view morphs top morph views person bottom morph views people case view morphing captures change facial pose original images conveying natural rotation set images demonstrates interactive techniques facilitate computation image correspondences pair images set manually selected line features features automatically prewarp images achieve parallelism method appendix inspection prewarped images confirms features fig fact occupy scanlines implementation beier neely field-morphing algorithm compute intermediate images based set features prewarp images resulting images postwarped selecting quadrilateral region delimited control points moving control points desired positions final positions control points image center fig computed automatically calibrating images based focal lengths interpolating orientation fau fig shows results interpolating human faces varying poses shows selected frames morph computed interpolating views person facing directions resulting animation depicts subject continuously turning head left subject ear visible original images appears ghosted intermediate frames due interpolation intensity values addition subject nose appears slightly distorted result similar visibility sequence shows morph views faces interpolating faces popular applications image morphing combine image morphing capacity dramatic facial interpolations view morphing ability achieve viewpoint result simultaneous interpolation facial structure color pose giving rise image transition conveying metamorphosis appears strikingly fig compares image morphing view morphing ray-traced images helicopter toy image morph computed linearly interpolating pixels original images change orientation original images caused in-between images contract addition bending effects fig present image morphing techniques preserve lines reduce bending effects line features present interesting side-effect large hole appears image morph stick propeller view morph eye-level constant transition view morphs produce holes result change visibility fig illustrates distortions occur facial image morphs beier neely method compute image morph image leonardo vinci mona lisa mirror reflection bending effects present fig noticeable due smaller angle rotation line-preserving properties beir neely method contraction effects strongly evident in-between images viewed sequence face undergoes horizontal contraction appears unnaturally gaunt half-way point image morph simultaneously neck bust contract vertically resulting accordion-like effect figure compresses decompresses image morph contrast view morph images produces realistic transition conveys true rotation head torso discussion chapter presented detailed analysis view synthesis problem case 
input views problem important base case general view synthesis problems chapter presents extensions basis views interesting applications practical importance teleconferencing face recognition sei stereo display special effects main contribution uniqueness result in-between views proved views scene cameras uniquely determined basis images in-between views synthesized shape information dense pixel correspondence knowledge camera positions critical assumption monotonicity dictates occlusions occur entire range in-between views constraints lambertian surfaces fixed illumination make problem well-posed result significant theoretical basis representing scene appearance collection basis images views sufficient model appearance continuum in-between views contrast shape reconstruction generally views due ambiguities correspondence problem mar ptk contribution view morphing algorithm synthesizing high-quality in-between figure image morphing versus view morphing top image morph views helicopter toy in-between images contract bend bottom view morph views results physically consistent morph image morph results extraneous hole blade stick holes view morphs figure top image morph mona lisa image reflection unnatural horizontal vertical contraction face torso bottom view morph yields realistic transition preserves underlying geometry views warping basis images uniqueness result demonstrates in-between views theoretically determined algorithm practical method synthesizing high-quality in-between views basis images theory requires strong assumptions lambertian surfaces monotonicity fixed illumination shape algorithm demonstrates considerable robustness respect violations assumptions striking results obtained scenes shading shape differed significantly basis images addition change camera viewpoint cases view morphing conveys realistic transformation shape illumination results obtained visibility constant scene points visible basis views occlusion ghosting effect due cross-dissolve unmatched points fractional-intensity in-between views morph transition points slowly fade barely noticeable sequences ghosting problem unmatched region overlaps perceptually salient feature scene instance ear occluded basis image image fig appears unnatural in-between views challenging aspect view morphing approach correspondence problem determining pixels regions basis images unlike view synthesis algorithms view morphing require computing complete optical flow map boundary flow sufficient boundary flow simpler compute requires solving difficult stereo correspondence problem sensitive image noise quantization effects chapter explored automatic manual solutions boundary correspondence problem interesting note boundaries boundary flow typically correspond perceptually salient features scene surface texture discontinuities represent strongest boundaries consequence observation performance view morphing algorithm dependent critically correspondence accuracy key features manual approach section user typically specifies key features eyes nose mouth silhouette correct correspondences features sufficient produce realistic morphs contrast correspondence errors features yielded poor morphs stereo correspondence techniques implementation generate erroneous correspondences features human operators tended produce poorer results improvements obtained specialized feature detectors pms facilitate automatic correspondence key features eyes nose mouth possibility mixture automatic manual techniques instance user-specified features bootstrap stereo refinement procedure dtm chapter single-view morphing object bilateral symmetry view morphs computed single image interpolating image mirror reflection fig depicts view morph image leonardo vinci mona lisa reflection sides face torso perfectly symmetric morph conveys convincing facial rotation ability artificially change viewpoint single image suggests view morphing means photo correction portrait slightly off-center view morphed front-on view lab similarly professional photographer interactively fine-tune image perspective inspecting developed photograph capabilities add increased flexibility image acquisition process provide photographer powerful set image post-processing tools photo correction potential face recognition image database applications face recognition techniques cws pattern recognition methods correlate observed face database images faces order maintain low error rates image acquisition carefully controlled ensure facial pose frontal views achieve accuracy systems compensate differences face orientation observed images normalize images procedure fig convert observed images front-facing views prior recognition alternative approach recently explored researchers pms estimate pose identity acquiring images face viewpoints approach cope asymmetries vertical head displacements significantly complicated applicable multiple views face obtainable images hypothetical image database normalized versions shown fig figure shows artifacts arise result normalization process view morphing image mirror reflection produces image horizontally symmetric asymmetries illumination shape produce unnatural-looking effects rightmost image fig problematic strong asymmetries illumination one-sided side head occluded result lighting facial contours normalized image distorted problems occur consistently hair lines unnaturally symmetric corrected images artifacts minor synthesized images preserve shape color features original face easily figure photo correction image database differently oriented faces top normalized view morphing faces horizontally front-facing bottom recognizable human eye preliminary results seales yuan significant improvements recognition accuracy approach bootstrap eigenface techniques chapter n-view morphing chapter focused image synthesis basis views two-view algorithm fact compute interpolations views reducing problem series two-view interpolations advantage introducing additional basis images greater range views synthesized suppose instance basis views satisfy monotonicity pairwise satisfy monotonicity basis views permit synthesis triangular region view space delimited optical centers shown fig pair basis images determines views side triangle spanned andc strong monotonicity interior views views optical centers interior triangle interior view synthesized interpolation corner side view triangle assumption monotonicity applies pairwise corner views sufficient infer monotonicity views interior view triangle monotonicity transitive order predict interior views slightly stronger constraint needed denote closed triangular region delimited andc strong monotonicity dictates pair scene points line intersect strong monotonicity direct generalization monotonicity strong monotonicity implies monotonicity satisfied pair views positioned triangle vice-versa strong monotonicity permits synthesis view suppose basis views optical centers strong monotonicity applies triple basis views preceding argument triple basis views determines triangle views view convex hull determined comprised subset triangles interior views determined point interior choose corner line intersects point sincek lies convex hull represents optical center set views produced fewer interpolations lies view positioned determined additional interpolation providing monotonicity satisfied establish condition observe monotonicity fact strong monotonicity triangle convex hull sufficient figure n-view morphing optical centers andc basis images determine view triangle strong monotonicity applies view triangle synthesized view optical center synthesized interpolating interior view produced subsequent interpolation basis images view convex hull camera centers generated interpolations violated exist scene points intersects implying intersects intersects triangle violating assumption strong monotonicity conclusion basis views determine range viewspace contained convex hull optical centers limitations constructive argument suggests arbitrarily large regions viewspace constructed adding basis views prediction range view space depends assumption strong monotonicity dictates occlusions occur pair views entire range noted section monotonic range span single aspect aspect graph limiting range views predicted principle large range views predicted partitioning view space monotonic ranges set views represent range strategy problematic moderately complex scenes surprisingly simple objects instance case scene 
single lambertian sphere monotonic range views view due fact set visible points differs views sphere sphere represents degenerate case view morphing guarantee correct results physically-correct results ensured realistic results obtainable monotonicity violated fig g-i show similar sphere good results obtained curved object limitation view morphing due treatment images atomic image interpolated requiring constant visibility entire image extreme treat pixel independently projection point visibility characteristics essence approach chapter practical framework view synthesis numerous basis images chapter multi-view approach voxel coloring view morphing demonstrates feasibility view synthesis robust algorithm interpolating pair images scene visibility necessarily limited appears basis views contrast goal chapter devise algorithm capable synthesizing arbitrary views static scene set basis views widely distributed environment specifically objectives photo-integrity synthesized views accurately reproduce input images preserving color texture pixel resolution broad viewpoint coverage views accurate large range target viewpoints basis views widely distributed environment principle adding basis views improve fidelity synthesized views noted chapter additional images introduce range problems occlusion calibration correspondence representational issues two-image problem studied computer vision theories multi-image projective geometry calibration correspondence recently begun emerge sha har tri view synthesis problem presently formulated raises number unique challenges push limits existing multi-image techniques chapter describe approach view synthesis multiple basis views seeks bypass limitations view approach limited scene visibility retaining theoretical practical advantages view morphing algorithm uniqueness properties performance approaching problem shape reconstruction formulate color reconstruction problem goal assignment colors radiances points unknown approximately lambertian scene solution present voxel coloring technique traverses discretized space depth-order identify voxels unique coloring constant interpretations scene approach advantages existing stereo structure-from-motion approaches pixel correspondence scene reconstruction occlusions explicitly modeled accounted cameras positioned degrading accuracy run-time technique integrates numerous images yield dense reconstructions accurate wide range target viewpoints remainder chapter structured section discusses correspondence problem view synthesis numerous basis views reviews capabilities limitations existing solutions section introduces voxel coloring paradigm means determining correspondence visibility scene space section defines notion color invariants describes importance voxel coloring section presents efficient algorithm computing voxel coloring layering strategy section presents experimental results applying algorithm real synthetic basis images pixel correspondence view synthesis order synthesize image scene set basis images determine image color irradiance pixel lambertian scenes problem reduces computing optical flow fields relation color color noted ptk bas optical flow computation inherently ill-posed problem solved additional assumptions scene structure camera placement section assumption monotonicity enable solution sufficient view synthesis cope visibility occlusions changing field view approach required section briefly review approaches computing pixel correspondences view synthesis applications table qualitative comparison methods column headings represent conditions approaches sensitive presence condition imposes performance penalty occlusion caused scene visibility basis views points disappear views large view separation problematic methods assume small pixel displacements concave surfaces detected errors techniques operate solely silhouette occluding contour information note table attempt compare relative accuracy techniques seek capture relative strengths weaknesses identify conditions approach applicable comparison list voxel coloring technique presented chapter optical flow avidan shashua optical flow correlation conjunction trilinear tensor technique generate views uncalibrated basis images achieved good results correlating closely spaced frontal images human faces faces present ideal match optical flow techniques due existence individual views points face visible technique condition occlusion large view separation surface concavity optical flow stereo olc krn sch feature tracking btz contour tracking volume intersection mkkj mtg epi analysis bbm ktot space-sweep col voxel coloring table comparison correspondence approaches approaches evaluated respect producing pixel correspondence maps conditions check technique robust respect condition presence condition imposes virtually performance penalty variety techniques exist computing optical flow fields bfb survey comparison shown optical flow estimates directly measured brightness discontinuities mar ptk smoothness conditions imposed derive dense flow fields imposing smoothness problematic produce poor results motion discontinuities occlusion boundaries optical flow techniques gradient methods window correlation velocity tuned filters require small image displacements note number techniques developed susceptible aforementioned problems instance mixture-methods parameterized models proposed avoid smoothing flow discontinuities researchers coarse-to-fine schemes enable recovery flow fields larger image displacements stereo high accuracy stereo popular correspondence technique view synthesis practitioners olc krn whh sch dtm problems occlusions widely separated views specialized camera rigs make impractical applications stereo represents adaptation optical flow problem matching calibrated views rigid scene additional constraints enable problem reduced principle series one-dimensional searchs conjugate epipolar lines stereo techniques tend suffer limitations optical flow methods problems occlusions surface discontinuity widely spaced views recently number researchers devised techniques improve performance binocular stereo presence occlusion bayesian techniques gly masks nmso detect half-occluded regions trinocular multiple-baseline stereo methods enable larger cumulative baselines shown improve matching accuracy individual views generally close approach integrating disparate views arrange cameras clusters compute stereo reconstructions cluster krn resulting partial models subsequently merged form complete reconstruction split merge approach proven successful partial reconstructions merged individually accurate obtainable high-end laser range scanners integration noisier stereo-derived models significantly difficult fine detail preserved feature tracking researchers applied feature tracking techniques association shape-from-motion methods recover high quality texture-mapped models btz suitable view synthesis feature tracking yield dense correspondence fields accuracy ensured places features detected reliably tracked contrast optical flow stereo algorithms flow fields dense noisy feature tracking methods seek compute sparse reliable correspondence maps methods detect correspondences fiducial features corners lines track positions features dense sequence images cases feature tracking approaches reliably follow features long sequence images making approach well-suited input source shape-from-motion techniques problems occur features disappear due occlusion detection failure image displacement large due large view separation similar features close image solving problem requires combinatorial algorithms cox track associations long image sequence search simplified heuristic pruning techniques cox imposing assumption rigid scene bcz contour tracking volume intersection moezzi mkkj mtg applied volume intersection technique derive texture-mapped models purpose view synthesis background subtraction obtain silhouettes volume intersection techniques attractive unlike methods permit input cameras arbitrarily detect concavities accurate methods contour-based methods class correspondence techniques exploit motion silhouette occluding contours function viewpoint infer surface shape approaches characterized temporal derivatives contour temporal derivatives provide shape correspondence information computation temporal derivatives requires closely space views alternatively surface shape inferred directly silhouette volume intersection sze direct approaches kut fundamental shortcoming contour-based methods fail concavities compute visual hull lau 
approximation true shape require detection occluding contours silhouettes difficult problem epi analysis motivated applications holography katayama ktot adapted epipolar plane epi analysis techniques view synthesis key feature technique occlusions explicitly modeled image correlation step constraint method basis views lie line closely-spaced epipolar plane analysis class techniques introduced bolles baker marimont bbm track reconstruct features closely-spaced views rigid scene stacking sequential images top forms xyt cube called epipolar volume constraint linear camera motion projected scene points trace linear paths slices epipolar volume point correspondences determined applying line-detection techniques individual epi slices key advantage epi approach representation occlusions lines cross epipolar volume line larger slope corresponds occluder point closer axis camera translation occlusions resolved fitting lines order decreasing slope ktot scene space methods determining correspondences local image correlation methods feature tracking optical flow problematic motion images large alternative approach perform matching scene space detecting correspondences consistent rigid scene knowledge scene space methods previously view synthesis similar spirit method presented chapter mentioned related work seitz dyer proposed approach correspondences point features sequence views determine correspondences features assumption scene rigidity point line feature image votes scene subspace projects feature votes accumulated subspaces intersect indicating presence point line feature scene restriction technique detects correspondences features images collins col col proposed space-sweep approach features matched sweeping plane scene accumulating votes points plane project features images correspondences identified modeling statistical likelihood accidental accumulation thresholding votes achieve desired false positive rate occlusions explicitly modeled space-sweep approach zitnick webb scene space stereo technique reconstructs scene regions project unoccluded basis images noted correspondence problem fundamentally ill-posed presence occlusion solved occlusion occur posing problem surface extraction detect regions unoccluded basis images solve correspondence problem image regions discussion objective chapter synthesize views scene set basis views widely distributed environment inspection table existing techniques well-suited providing correspondence information sufficient purpose due problems occlusion camera separation concavities approaches guarantee consistent flow fields occlusion present idealized conditions instance suppose views perfect lambertian scene constant illumination internal external camera parameters precisely suppose sources error including due camera calibration image quantization noise hope measure flow-fields true scene ptk expect compute consistent set flow fields scene appears identical basis viewpoints existing algorithms guarantee consistent set flow fields occlusion present shortcoming due difficulty reasoning occlusion image space advocate scene space formulation determining correspondence information advantages approach two-fold framework representing analyzing space consistent scenes physical relations giving rise occlusion easily apparent easily formalized scene space algorithms devised occlusions account explicitly provide guarantees consistency derived flow fields voxel coloring problem section introduce scene space framework deriving dense correspondence information multiple views solve flow fields directly reconstruct colored voxel-based scene consistent basis views scene reprojected synthesize views compute correspondence maps image-warping methods sch approach unique feature guarantees consistent scene set flow fields assumptions met voxel coloring problem assign colors radiances voxels points volume achieve consistency set basis images shown fig rendering colored voxels basis viewpoint reproduce original image closely patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar figure voxel coloring set basis images grid voxels assign color values voxels consistent images formally scene represented set opaque lambertian voxels volume elements occupies finite homogeneous scene volume centered point fixed color assume scene contained finite bounding volume set voxels bounding volume referred voxel space denoted symbol image set pixels centered point assume pixels infinitesimally small image pixel scene refer voxel visible projects scene complete respect set images image pixel exists voxel ssuch complete scene consistent set images image pixel color color symbol denote set consistent scenes define voxel coloring problem formally voxel coloring problem set basis images voxel space determine subset avand coloring color order solve problem issues uniqueness multiple voxel colorings consistent set images problem well-defined computation voxel coloring computed set input images combinatorial search assuming images represent projections lambertian scene clear consistent voxel coloring exists set points colors surfaces true scene rarely voxel coloring unique set images consistent rigid scene determining scene spatial occupancy ill-posed task voxel contained consistent scene contained fig voxel contained consistent scenes colors fig additional constraints needed order make problem well-posed computing voxel colorings poses challenge observe underlying space combinatorial grid voxels color assignments yields scenes color assignments bruce-force search space feasible color invariants multiplicity solutions voxel coloring problem recover intrinsic scene information invariants properties satisfied consistent scene instance set voxels contained consistent scene laurentini lau invariants called hard points recovered volume intersection binary images hard points provide absolute information true scene rare images yield fig section describe frequently occurring type invariant relating color shape avoxelv color invariant respect set images contained scene consistent images pair consistent scenes implies color color unlike shape invariance color invariance require point contained consistent scene result color invariants prevalent hard points shown union color invariants yields consistent scene complete voxel coloring depicted fig voxel coloring problem reformulated wellposed problem solving consistent scene set color invariants order make problem tractable additional constraints needed argument holds limit voxels infinitesimally small true scene sampled representable finite collection axis-aligned cubes patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar figure spatial ambiguity voxel colorings identical viewpoints colored voxels common patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar figure color ambiguity voxel colorings identical viewpoints note presence voxel row center color assignment scenes patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar patchar figure color invariants voxels color consistent scene contained collection color invariants forms consistent voxel coloring denoted depicted note voxel color assignments fig contained ordinal visibility constraint note color invariants defined respect set consistent scenes combinatorial space explicit search space computationally feasible order 
make problem tractable introduce geometric constraint camera placement relative scene simplifies analysis ordinal visibility constraint enables identification set color invariants limit point computed directly single pass voxel space scene points image camera centered occludes lies line segment require input cameras positioned satisfy constraint ordinal visibility constraint exists norm ksuch scene points input images occludes kpk kqk call norm occlusion-compatible camera configurations define occlusion-compatible norm norm exist broad range practical configurations instance suppose cameras distributed plane scene plane shown fig viewpoint relative visibility scene points depends point closer plane define kto distance plane generally ordinal visibility constraint satisfied scene point contained convex hull camera centers occlusion-compatible norm kpk defined euclidean distance convenience referred figure compatible camera configurations camera configurations satisfy ordinal visibility constraint overhead inward-facing camera moved degrees object rig outward-facing cameras distributed sphere camera volume fig shows camera configurations satisfy constraint fig depicts inward-facing overhead camera rotating object ordinal visibility satisfied provided camera positioned slightly object constraint enables panoramic configurations outward-facing cameras fig properties color invariants establish color invariants exist set images ordinal visibility constraint satisfied image pointp define voxel jsconsistentg closest camera volume claim color invariant establish observe simplies forifv closer camera volume violation assumptions color consistent scene color invariant note preceding argument demonstrated color invariants exist pixel basis images color invariant denote collection color invariants easily shown consistent scene note complete voxel pixel basis images show consistent choose define color color show coloring defined suppose points lets consistent scene definition color color color well-defined voxel coloring consistent basis images fig shows pair images figs voxels unique color interpretation constant consistent scene comprise closest consistent scene cameras sense point consistent scene contained occluded points interesting consequence distance bias neighboring image pixels color produce cusps protrusions camera volume phenomenon shown fig black gray points form separate cusps observe minimal reconstruction removing closest points fig leaves consistent scene summary properties color invariants shown voxel color invariant consistent scene represents limit point consistent scene uniformly closest camera volume voxel coloring algorithm describe compute single pass discretized scene volume exploiting ordinal visibility constraint constraint limits basis view configurations benefit visibility relationships greatly simplified partition scene series voxel layers obey monotonic visibility relationship input image voxels occlude voxels subsequent layers visibility relationships resolved traversing voxels layer time layered scene decomposition formalize idea define partition space voxel layers uniform distance camera volume jkvk increasing sequence numbers kis occlusion-compatible norm figure layered scene traversal voxels partitioned series layers increasing distance camera volume layers cameras line layers cameras plane sake illustration set views positioned line facing two-dimensional scene shown fig choosing kto orthogonal distance line rise series parallel linear layers move cameras notice voxels occlude basis viewpoint higher layer simplification visibility relationships special case colinear views previously noted katayama ktot linear case easily generalized set cameras satisfying ordinal visibility constraint fig shows layer partition case outward-facing cameras type camera geometry acquiring panoramic scene visualizations valid set layers corresponds series rectangles radiating outward camera volume layer axis-aligned bounding box camera centers subsequent layers determined uniformly expanding box unit time set layers corresponds norm distance decomposing scene layers manner case layers surfaces expand outward camera volume layering strategy analog fig layer axis-aligned cube advantage choice layers layers computed traversed efficiently voxel consistency compensate effects image quantization noise suppose images discretized grid finite non-overlapping pixels voxel fully occluded image projection overlaps nonempty set image pixels noise quantization effects consistent voxel project set pixels equal color values presence effects evaluate correlation pixel colors measure likelihood voxel consistency standard deviation cardinality possibility threshold color space error alternatively statistical measure voxel consistency suppose sensor error accuracy irradiance measurement distributed standard deviation consistency voxel estimated likelihood ratio test distributed degrees freedom fre unknown estimated imaging homogeneous surface computing standard deviation image pixels case replaced distribution degrees freedom single-pass algorithm order evaluate consistency voxel compute set pixels overlap projection neglecting occlusions straightforward compute voxel image projection based voxel shape camera configuration term footprint wes denote projection intersection image plane rays camera center intersecting voxel accounting occlusions difficult care include images pixel positions visible difficulty resolved ordinal visibility constraint visit voxels occlusion-compatible order marking pixels accounted initially pixels unmarked voxel visited defined set unmarked pixels overlap footprint voxel evaluated found consistent pixels marked occlusion-compatible order voxel evaluation strategy sufficient ensure pixels voxel visible note assumption voxels layer occlude pixel marking phase delayed voxels layer evaluated complete voxel coloring algorithm presented make simplifying assumption vary function image intensity iterate layers iterate voxels layer project voxel image compute footprint unmarkedg end compute evaluate voxel consistency thresh bfvg color voxel remember image pixels mark end end mark pixels end threshold thresh corresponds maximum allowable correlation error overly conservative small thresh results accurate incomplete reconstruction hand large threshold yields complete reconstruction includes erroneous voxels thresholding correlation error optimize model completeness completeness threshold tcomp chosen specifies minimum allowable percentage image pixels left unmarked instance tcomp requires quarters non-background image pixels correspond projection colored voxel tcomp seek minimum thresh yields voxel coloring achieving completeness threshold completeness increases monotonically thresh sufficient run single-pass algorithm succession increasing values thresh stopping tcomp achieved alternatively binary search thresh decrease number iterations discussion voxel coloring algorithm visits voxels projects image time complexity voxel coloring determine space complexity observe evaluating voxel require access comparison voxels voxels stored main memory algorithm voxels making voxel coloring simply output time images one-bit mark masks allocated fact space time complexities voxel coloring linear number images essential large numbers images processed algorithm differs stereo tracking techniques perform window-based image correlation reconstruction process correspondences found scene traversal voxel projection disadvantage searchless strategy requires precise camera calibration achieve triangulation accuracy stereo methods effects calibration quantization errors significant high-frequency regions image edges preserving high-frequency image content requires higher voxel sampling rate nyquist considerations smaller voxels result fewer pixels integrated correlation step sensitive calibration errors extension compensate highfrequency regions correlation step instance detecting treating edges specially accuracy run-time depend voxel resolution parameter set user determined automatically match pixel resolution calibration accuracy computational resources extension hierarchical representations octrees sam sze voxel resolution locally adapted match surface complexity maintaining 
strict voxel visitation order hierarchical framework difficult scope thesis importantly voxel coloring approach reconstructs potentially numerous scenes consistent input images susceptible aperture problems caused image regions near-uniform color regions cusps reconstruction fig voxel coloring yields reconstruction closest camera volume bias smoothness bias stereo methods guarantees consistent reconstruction severe occlusions optimizations work algorithm lies computations simplicity implementation square mask approximate voxel footprints test voxel consistency alternative footprint models discussed volume rendering literature wes implementation make additional speedups exploiting uniform discretization space simple layer geometry choosing planar polyhedral layers enables texture-mapping graphics hardware calculate voxel footprints entire layer time strategy enables accurate estimates voxel footprints offloads computation graphics co-processor instance projection plane layer expressed matrix form buv homography projecting layer image preferable reverse-map image layer applying procedure voxel projections directly integrated footprint voxel simply pixel position buv reverse-mapping strategy similar collins col diffusion operator place texture-mapping formulation experimental results order evaluate performance voxel coloring algorithm view synthesis applied images variety real scenes synthetic images facilitate analysis error characteristics simulate camera configurations physically realizable lab results real images experiment demonstrates view synthesis capabilities voxel coloring algorithm applied images real objects calibrated images captured aid computercontrolled pan-tilt head fixed overhead camera shown fig strategy similar sze object head rotated degrees front color camera sony xcwith ccd sensor lens positioned approximately horizontally object center vertically base tsai method tsa calibrate camera respect head rotating object manually selecting image features pan positions calibration error approximately fig shows selected images objects toy dinosaur rose case input images resolution captured rotating object degrees increments degrees problem acquisition approach illumination effectively object rotations violating lambertian assumption compensation error threshold set high pixel correlation error allowed dinosaur rose table compares sizes run times reprojection errors voxel colorings computed dinosaur toy resolutions square voxels grid volume held constant resolution grid dimensions total number voxels volume width depth height row table represents resolution doubling -fold increase number voxels relative previous row run time increases proportionately factor attributed additive overhead factor algorithm run times include image acquisition calibration thresholding voxels colored column number voxels selected output voxel coloring algorithm effective size reconstruction notice voxels colored column increases slowly voxels evaluated column probable reason voxel coloring algorithm reconstructs points surface interior object expected voxels colored increase factor resolution doubled manifold surfaces final column table reprojection error measures root-mean-squared error pixels synthesized images input viewpoints increasing voxel resolution significant impact reprojection error fig shows voxel colorings dinosaur toy table facilitate reconstruction black background images thresholded eliminate background points background segmentation strictly leaving step results background-colored voxels scattered edges scene volume threshold chosen conservatively removing background pixels sufficient eliminate background scattering effect fig shows highest resolution reconstruction viewpoint input image comparison original image shown fig note fine details wind-up rod dinosaur reconstructed fig d-g compare reconstructions viewpoint basis views voxel resolutions reported table resolution doubles step d-g note lowest resolution model shown preserves rough features model produces reasonable reprojection fact model computed seconds suggests algorithm potentially suitable interactive applications teleconferencing models generated real time increasing resolution adds fine details shape texture decreases blocky artifacts caused large voxels e-g results rose shown fig shows input image synthesized view viewpoint demonstrating photo-integrity reconstruction rose represents difficult case texture made surfaces leaves petals extremely thin reconstruction consisting approximately voxels captures appearance rose accurately preserves fine features show synthesized views views close basis views image good exhibits interesting artifacts specifically leaves holes viewed holes visible basis viewpoints filled algorithm represent unreconstructible regions scene results synthetic images order evaluate performance voxel coloring algorithm panoramic scenes basis images generated placing cameras synthetic room scene room consisted texture-mapped walls shaded figures figures bust beethoven scanned cyberware model human figure illuminated diffusely downward-oriented light source infinity cameras positions orientations inside room shown fig geometry scene camera configuration pose significant problems previous image-based reconstruction methods room interior highly concave making accurate reconstruction volume intersection contour-based methods impractical numerous cameras large amount occlusion create difficulty stereo approaches notable exceptions include panorama-based stereo approaches well-suited room reconstructions methods require panoramic image constructed camera location prior stereo matching step requirement avoided voxel coloring approach requirement enable camera configurations shown fig fig compares original reconstructed models room viewpoints reconstruction contained voxels required minutes compute voxel coloring reproduced images room interior extremely accurately shown pixel correlation error threshold account image quantization result errors fine details lost face beethoven bust overhead views show discrepancies original reconstructed models instance reconstructed walls perfectly planar points lie surface point drift effect noticeable regions texture locally homogeneous indicating texture information important accurate reconstruction quality overhead view shown commendable viewpoint input views extreme overhead view worse shows shape scene captured reconstruction set experiments conducted evaluate sensitivity approach factors texture density image noise voxel resolution simplify analysis effects experiments performed implementation voxel coloring method scene cameras lie common plane fig shows synthetic scene arc positions basis views experiments texture important visual cue exploited voxel coloring model influence texture reconstruction accuracy series reconstructions generated texture systematically varied spatial structure scene held fixed texture pattern cyclic linear gradient function frequency position intensity frac frac returns fractional portion increasing frequency parameter density texture increase fig b-j show reconstructions obtained applying voxel coloring increasing values comparison texture patterns original arc shapes shown frequency low quantized texture pattern uniform problem reduces reconstruction silhouettes result similar obtained volume intersection sze lau specifically volume intersection yield closed diamond-shaped region reconstructed v-shaped cusp surface corresponds set surfaces diamond visible basis views doubling results slightly reconstruction consisting cusps shown observe reconstruction accurate midpoint arc texture discontinuity occurs progressively doubling produces series accurate reconstructions d-h smaller smaller cusps approach true shape exceeds point reconstruction degrades phenomenon visible results projected texture pattern exceeds resolution basis images nyquist rate exceeded point accuracy degrades reconstruction ultimately breaks fig illustrates points reconstruction accuracy strongly dependent surface texture errors highly structured elaborate point reconstructed voxels drift true surface predictable manner function local texture density texture locally homogeneous voxels drift camera volume texture density increases voxels move monotonically camera volume true surface texture density increases limits image resolution voxels continue move cameras true 
surface ultimately disappear tested performance algorithm respect additive image noise simulate noise images perturbed intensity image pixel independently adding random range compensate error threshold set fig shows resulting reconstructions primary effect error increase threshold gradual drift voxels true surface cameras error exceedingly large reconstruction ultimately degenerated texture solution shown fig experiment image noise compensated increasing error threshold leads structured reconstruction errors higher levels noise voxels drift progressively closer cameras final experiment evaluated effects increasing voxel size reconstruction accuracy principle voxel coloring algorithm correct limit voxels infinitesimally small layering strategy based assumption points layer occlude small voxels no-occlusion model accurate reasonable approximation voxels increase size model progressively accurate surprising algorithm appears produce good results large voxel sizes fig d-e carefully observe effects voxel size ran voxel coloring algorithm scene fig sequence increasing voxel sizes fig shows results reconstructions close optimal limits voxel resolution independent voxel size empirical result surprising obvious violation layering property basis algorithm effects violation apparent voxels included reconstruction invisible totally occluded voxels basis views instance observe reconstruction voxel size top-left top-right voxels deleted affecting scene appearance basis views extra voxels artifacts large voxel size violation layering property effects minor grid dimensions voxels evaluated voxels colored run time reprojection error sec sec sec sec table voxel resolution effects table compares size run time reprojection error voxel colorings dinosaur toy grid sizes row represents -fold increase number voxels relative previous row models shown fig adversely affect view synthesis adding voxels change scene appearance viewpoints close input images discussion chapter addressed problem view synthesis numerous basis views distributed widely scene problem challenging due difficulty computing reliable correspondence information views main goal determine intrinsic ambiguities limitations reconstructible derive practical algorithm correspondence computation view synthesis primary contribution chapter voxel coloring framework analyzing ambiguities image correspondence scene reconstruction similar theory previously developed special case volume intersection reconstruction silhouettes lau lau results chapter viewed generalization volume intersection problem broader case textured objects scenes voxel coloring framework enabled identification computation color invariants points color scene reconstruction consistent set basis images important contribution voxel coloring algorithm computing pixel correspondence set basis images key element ordinal visibility constraint constraint configuration camera viewpoints enabled efficient solution correspondence problem practical algorithm capable generating provably-consistent dense correspondence maps set input images presence occlusion view synthesis applications require correspondence motion analysis scene reconstruction algorithm features make attractive view synthesis tasks generality low-level voxel representation approximate surface type easily models discontinuities well-suited modeling complex real-world objects scenes figure selected basis images dinosaur toy top rose bottom images spanning close rotation object figure image acquisition setup basis images captured placing object calibrated pan-tilt head rotating object front stationary video camera camera object facing satisfy ordinal visibility constraint input image thresholded image model reprojection voxels voxels voxels voxels figure voxel coloring dinosaur toy original image thresholded eliminate background pixels voxel coloring computed thresholded images object undergoing rotation d-g show reconstruction viewpoint voxel resolutions voxel width progressively doubled figure voxel coloring flower input image shown projection voxel coloring viewpoint reconstruction voxels captures image appearance accurately views input viewpoints artifacts prevalent viewpoint input views figure placement input camera viewpoints panoramic synthetic room scene camera positions scene shown frontal left overhead perspective flexible acquisition cameras arbitrarily degrading reconstruction accuracy algorithm performs cameras distributed widely scene panoramic visibility voxel coloring method synthesize views camera position orientation fact applicable inwardand outward-facing camera configurations makes ideally suited panoramic scenes room interiors insensitivity occlusion visibility fully modeled algorithm impose performance penalty efficiency algorithm performs single pass scene volume exploits regular operations performed texture-mapping graphics hardware investigating real-time implementation algorithm run existing graphics workstations technique space efficient surface voxels stored voxels visible basis image scalability varying voxel size algorithm tailored computing resources empirical evidence demonstrates algorithm performs range voxel sizes ordinal visibility constraint needed support single-pass algorithm rules figure panoramic room scene reconstruction renderings true scene shown left reconstructed scene input viewpoint inside room viewpoint room extreme overhead view fidelity input viewpoints degrades smoothly camera moves original surface reconstruction texture basis cameras original surface figure effects texture density voxel reconstruction synthetic arc reconstructed basis views arc textured cyclic gradient pattern frequency increasing frequency makes texture denser accuracy reconstruction improve limit case texture uniform problem reduces reconstruction silhouettes frequency progressively doubles c-j reconstruction converges true shape point exceeds image resolution i-j noise voxel size noise voxel size noise voxel size noise voxel size noise voxel size noise voxel size noise voxel size figure effects image noise voxel size reconstruction image noise simulated perturbing pixel random range reconstructions increasing values shown left ensure full reconstruction error threshold set increasing noise caused voxels drift true surface shown light gray effects changing voxel size shown notice arc shape approximated large voxels input camera configurations scene surround cameras room scene fig cameras surround object scene limitation controlled lab environments camera configuration designed ordinal visibility constraint mind instance experiments cameras raised slightly scene reconstructed fig problematic situations reconstruction video sequence obtained walking large object video camera investigating methods handling types camera motions configurations solution segment basis images sets individually satisfy ordinal visibility constraint run algorithm set separately merge results automatic methods performing segmentation task simplify approach approach extend voxel coloring algorithm directly handle general camera configurations multi-pass approach topic future work results section low-contrast regions noise produce reconstruction errors cusps highly structured view synthesis tasks potential disadvantage structured noise produce perceptible artifacts fact errors deterministic well-understood potentially detectable attenuated solution perform post-processing phase analogous dithering errors diffused mitigate artifacts alternative method identify textureless regions error sources basis images treat features specially reconstruction process notion color invariance bears resemblence problem color constancy hsw long history computer vision literature color constancy problem determine images description scene material properties surface reflectance depend scene illumination invariance illumination notion color invariance chapter case illumination held fixed separating reflectance illumination color invariants encode scene radiance directly sufficient synthesize views scene illumination held constant chapter editing view synthesis implemented operation applied set basis images instructive types operations applied image domain traditional graphics modeling systems typically support number capabilities including view synthesis creating images varying camera viewpoints 
illumination synthesis scene illumination editing interactive modifications surface position shape surface properties animation scripted sequence operations work image-based representations focused problem view synthesis recently increasing attention modeling reflectance illumination analysis basis images war dnvgk swi problems image-based editing animation studied chapter addresses editing problem describes editing operations performed photographs image editing programs adobe photoshop provide ways modifying object appearance single image manipulating pixels image ultimately visualize edits object image affect appearance viewpoints instance choosing wallpaper room house painting wallpaper pattern digitized photographs room paint wall image pattern appears instantly place photographs providing feedback modified room viewpoints similarly scissoring object vase frames video walkthrough room remove object entire video automatically propagating scissoring operation images additional controls modify camera viewpoint allowing effects image edits visualized viewpoints room original photographs key feature types editing operations apply space views scene image convenient cast terms plenoptic material presented chapter joint work kiriakos kutulakos rochester main ideas result discussions author function encodes scene appearance viewpoints framework goal recover scene plenoptic function discrete set images determine modified response basic image editing operations painting scissoring morphing term plenoptic describe image editing operations modify plenoptic function propagated viewpoints user view editing plenoptic image editing approach user virtually modify object appearance editing photographs object positions orientations point view user interaction occurs manipulations individual images conventional pixel-editing tools user simply specifies images painting moving pixels desired achieved pixel modifications user interpreted constraints object appearance induce plenoptic function affect image user edits single image propagated images object user plenoptic image editing system appears similar current image editing programs photoshop pixels images edited direct manipulation standard suite painting scissoring cut paste warping tools found image editing programs fact image screen visible difference conventional image editing program plenoptic version difference apparent images viewed side side change region object image instantly propagated part image instance removing freckle photographs face freckle disappear simultaneously images propagation mechanism kind power-assist user affect images object editing freckle illustrates basic model plenoptic image editing user specifies regions images system determines consistently propagate modifications images editing-by-example model powerful user control object appearance plenoptically views editing small number images direct intuitive remainder section discuss plenoptic versions standard image-editing operations list meant comprehensive examples types image editing operations plenoptic framework implementation operations discussed section plenoptic painting basic type image editing operation change pixel colors drawing image region digital paintbrush plenoptic framework paint operation interpreted modification material properties surface points projection coincides painted region change affects image object properly accounts differences visibility views multi-image updates real time allowing user fluidly paint images simultaneously moving brush image fig show images real-time plenoptic paint operation action plenoptic scissoring image scissoring operation eliminates extracts set regions image inclusion image image-scissoring operation extracts region image plenoptic image scissoring operation carves part plenoptic function causing region extracted image scissoring image region effect cutting portion visible object projects image region plenoptic scissoring enables interesting effects regular scissoring instance objects image scissoring exposing lies capability shown fig achieved extrapolating appearance hidden surfaces images surfaces visible derived plenoptic model extrapolation occurs automatically user performs scissoring operation plenoptic morphing image warping morphing popular producing shape animations images multi-image morphs performed plenoptic framework restrict attention case single image warped displacing individual pixels motion flow field warping pixels plenoptic morph warps underlying scene projectively consistent warped image shape change propagated images automatically fig show application plenoptic image warp effects image warp underlying scene structure thought terms warping rays pixels ray originates camera center passes image plane pixel moving pixel corresponds moving points ray coincide ray passing destination pixel view generation addition propagating images plenoptic framework generate arbitrary views object evaluating recovered plenoptic function user-specified viewpoints synthetic views automatically incorporate modifications incurred user edits images edits induce plenoptic function figure examples plenoptic image editing operations applied photographs dinosaur toy show image painting scissoring morphing operations applied image show images automatically generated propagating respective editing operations image observe propagation properly accounts differences visibility views part painted area correctly occluded dinosaur hand cutting head exposes surfaces image visible original image surfaces synthesized viewpoints represents composite real photograph synthesized image regions ability generate views edit operations user interactively choose good image editing instance flat surface rotated front-on view facilitate painting avoid foreshortening affects similarly scissoring region easier entire region visible single image edit propagation order support plenoptic editing operations model plenoptic function enables modifications single image existing image-based representations designed primarily view synthesis editing easily extended support editing operations instance recent direction image-based view synthesis ray-based plenoptic representations light field lumigraph ggsc scg light rays represented separately advantage models views synthesized compute dense pixel correspondence performing image editing operations ray-based representation difficult reasons local image modifications affect object appearance disparate views require global ray-based representation lack correspondence information makes difficult propagate editing operations images edit propagation calls richer representation plenoptic function encodes correspondence information describe representation called plenoptic decomposition decomposes plenoptic function shape radiance components enabling view synthesis illumination synthesis range plenoptic image editing operations full discussion representation scope thesis subset functionality including editing operations obtainable correspondence information provided image morphing tools automatic methods chapter remainder section describe plenoptic image editing operations shown fig implemented voxel coloring compute requisite correspondence information painting painting simplest plenoptic image editing functions color scene voxels modification shape propagating painted pixel requires determining voxel corresponds pixel modifying color change propagated projecting voxel image visible recoloring pixels images plenoptic painting performed real-time precomputing mapping pixels image voxels voxel coloring achieved lookup tables returns voxel visible pixel position returns pixel ifor enables propagating pixel edits simultaneously images cost table lookups painted pixel original image method implementation paint propagation interactive rates scissoring image scissoring extracts set pixels image similarly plenoptic scissoring removes set voxels voxel coloring option remove set voxels project unoccluded affected pixels expose voxels scissored image removed alternatively scissoring remove voxels project affected pixels visible method generate images fig performing propagation requires masking pixels image correspond projection voxels removed scissoring operation pixels filled rendering modified voxel coloring viewpoint edited photograph copying pixels rendered image resulting image includes mixture pixels original photograph synthesized view morphing section 
image morph induces warping scene rays set rays passing camera center image plane image morph deforms image plane causing rays move turn motion ray moves scene voxels lie ray motion rays determined motion voxels rays implementation plenoptic image morphing fixed variable constraining voxels move parallel image plane implementation beier neely method generate image warps voxel warp computed inverse-mapping voxel warped scene determine voxel unwarped scene voxel warp computed propagated images re-rendering images warped set voxels chapter conclusions thesis investigated problem rendering viewpoint scene appearance operating set basis images real scene primary focus view synthesis problem producing images real scene viewpoints additional topic editing transformations persistent scene appearance effected editing individual basis images contributions view synthesis problem requires extracting information set input images scene order synthesize output images output images correspond physicallyconsistent views scene achieving goal required answering fundamental questions relating measurability uniqueness conditions images sufficient predict views views determined response questions thesis made contributions uniqueness result two-view case result proved views static lambertian scene satisfying monotonicity occlusions in-between views line segment camera centers uniquely determined importantly result required pixel correspondence camera positions demonstrates view synthesis problem well-posed monotonicity contrast shape reconstruction problem ill-posed conditions ptk boundary flow view synthesis requires computing correspondence information basis views true optical flow field measurable basis views ptk important contribution thesis introducing type flow field called boundary flow measurable sufficient view synthesis voxel coloring framework framework type scene invariant called color invariant derived point radiance characteristics consistent scene reconstruction color invariants provide intrinsic scene information collection points shown form complete scene reconstruction ordinal visibility constraint constraint relative positions basis cameras determined fixed visibility order points scene key feature visibility order constant cameras depend structure scene occlusion relationships greatly simplified contributions provide rich theoretical basis studying view synthesis algorithms applications primary focus development practical algorithms view synthesis image-based scene transformations algorithms developed theoretical framework designed robust respect deviations assumptions main practical contributions view morphing algorithm algorithm concepts image morphing projective geometry synthesize physically-consistent in-between views pair uncalibrated basis images technique operate fully automatically adaptations stereo techniques compute boundary flow exploit user interaction provide sparse correspondence information method correspondence yielded good results proven highly robust respect occlusions scene structure variations illumination extensions outlined enabled view synthesis single view views voxel coloring algorithm algorithm exploits ordinal visibility constraint compute voxel reconstruction dense pixel correspondence maps set basis images algorithm noteworthy generates reconstructions fully consistent basis images cameras spaced arbitrarily method advantages generates dense reconstructions correspondence maps number basis images performance degrade occlusion field view enables panoramic reconstructions visualizations efficient amenable hardware acceleration existing graphics workstations performs range voxel sizes easily scaled match computation resources produces high-quality reconstructions synthesized views images complex natural scenes plenoptic image editing framework class interactive image editing operations introduced designed maintain consistency multiple views scene distinguishing feature edits image propagate automatically images scene modified method voxel coloring algorithm derive correspondence information attesting usefulness voxel coloring facilitating range image-based scene transformations limitations future work assumptions thesis simplify analysis chief assumption scene surfaces lambertian simplify correspondence problem model account reflections specularities prevalent real scenes important topic future work develop view synthesis algorithms image-based transformations model non-lambertian effects potential application work construct image-based models real objects easily acquired photographs combined graphical objects virtual scene instance enable virtual studios film production images real actors composited realistic image-based scenes observe view synthesis approaches thesis assumed fixed illumination capable synthesizing views illumination constraint permit combining objects acquired sets basis views common scene acquired identical illumination capability illumination synthesis processing set basis images synthesize images scene lighting configurations approach model surface reflectance order predict radiance voxel function viewpoint illumination illumination synthesis require varying illumination basis images reconstructing reflectance function voxel idea scope thesis investigated application interest apply view synthesis methods large-scale environments provide walk-throughs buildings museums visual exploration entire cities voxel coloring approach suited type application based generality ability provide panoramic visualizations key limitation calibrated images current technology easily enable acquiring precisely-calibrated images large environments creating visualizations environments calls research calibration techniques large image sequences view synthesis methods work uncalibrated images complete solution view synthesis problem requires answering questions views uniquely predicted set basis images views synthesized developing view synthesis algorithms virtually work field focused question thesis made important steps answering question establishing uniqueness result introducing voxel coloring framework significant work remains question completely answered general conditions views unambiguously predicted discrete number basis views aperture problem fundamental limitations formulate assumptions monotonicity restrictive enable unique prediction specific range views addition attempt characterize set reconstructions consistent set basis images set assess variability shape color scene reconstruction derive strict error bounds synthesized images important feature view synthesis algorithms work produce realistic images basic assumptions constant illumination rigid shape lambertian surfaces violated images correspond precisely physicallycorrect viewpoint convey visually convincing camera transformations sufficient applications visualization results expand theory include perceptual model correctness synthesized views important quantify conditions view morphing voxel coloring view synthesis algorithms yield images visually convincing sufficient convey realistic camera transformations addition model facilitate development class algorithms exploit properties human perception synthesize realistic non-physical views greater efficiency bibliography edward adelson bergen plenoptic function elements early vision mit press cambridge nicholas ayache francis lustman trinocular stereo vision robotics ieee trans pattern analysis machine intelligence app apple computer quicktime version serge ayer harpreet sawhney layered representation motion video robust maximum-likelihood estimation mixture models mdl encoding proc int conf computer vision pages shai avidan amnon shashua view synthesis tensor space proc computer vision pattern recognition conf pages burt adelson laplacian pyramid compact image code ieee trans communications michael black anandan estimating optical flow segmented images variable-order parametric models local deformations ieee trans pattern analysis machine intelligence bas ronen basri uniqueness correspondence orthographic perspective projections proc image understanding workshop pages harlyn baker robert bolles generalizing epipolar-plane image analysis spatiotemporal surface int computer vision bbm robert bolles harlyn baker david marimont epipolar-plane image analysis approach determining structure motion int computer vision bcz andrew blake rupert curwen andrew zisserman framework spatiotemporal control tracking visual contours int computer vision bfb barron fleet beauchemin performance optical flow techniques int computer vision 
peter belhumeur david kriegman set images object lighting conditions proc computer vision pattern recognition conf pages bla black diamond surround video version peter belhumeur david mumford bayesian treatment stereo correspondence problem half-occluded regions proc computer vision pattern recognition conf pages thaddeus beier shawn neely feature-based image metamorphosis proc siggraph pages roberto brunelli tomaso poggio face recognition features versus templates ieee trans pattern analysis machine intelligence david beymer tomaso poggio image representations visual learning science btz paul beardsley phil torr andrew zisserman model acquisition extended image sequences proc european conf computer vision pages cipolla blake surface shape deformation apparent contours int computer vision che shenchang eric chen quicktime image-based approach virtual environment navigation proc siggraph pages brian curless marc levoy volumetric method building complex models range images proc siggraph pages col robert collins space-sweep approach true multi-image matching proc computer vision pattern recognition conf pages col robert collins multi-image focus attention rapid site model construction proc computer vision pattern recognition conf pages cox ingemar cox review statistical data association techniques motion correspondence int computer vision shenchang eric chen lance williams view interpolation image synthesis proc siggraph pages cws chellappa wilson sirohey human machine recognition faces asurvey proc ieee dnvgk kristin dana shree nayar bram van ginneken jan koenderink reflectance texture real-world surfaces proc computer vision pattern recognition conf pages trevor darrell alex pentland robust estimation multi-layered motion representation proc ieee workshop visual motion pages trevor darrell alex pentland cooperative robust estimation layers support ieee trans pattern analysis machine intelligence dtm paul debevec camillo taylor jitendra malik modeling rendering architecture photographs hybrid geometryand image-based approach proc siggraph pages dzlf deriche zhang luong faugeras robust recovery epipolar geometry uncalibrated stereo rig proc european conf computer vision pages fau olivier faugeras three-dimensional computer vision geometric viewpoint mit press cambridge olivier faugeras mourrain geometry algebra point line correspondences images proc int conf computer vision pages fre john freund mathematical statistics prentice hall englewood cliffs floyd steinberg adaptive algorithm spatial gray scale sid int symp dig tech papers page ggsc steven gortler radek grzeszczuk richard szeliski michael cohen lumigraph proc siggraph pages gly davi geiger bruce landendorf alan yuille occlusions binocular stereo proc european conf computer vision pages gre ned greene environment mapping applications world projections ieee computer graphics applications november anders heyden kalle astrom canonical framework sequences images proc ieee workshop representation visual scenes pages har richard hartley projective reconstruction invariants multiple images ieee trans pattern analysis machine intell har richard hartley defence -point algorithm proc int conf computer vision pages hec paul heckbert fundamentals texture mapping image warping master thesis california dept berkeley hiaa youichi horry ken ichi anjyo kiyoshi arai tour picture spidery mesh interface make animation single image proc siggraph pages hil ellen catherine hildreth measurement visual motion mit press cambridge hsw glenn healey steven shafer lawrence wolff editors physics-based vision principles practice color pages jones bartlett boston iah michal irani anandan steve hsu mosaic based representations video sequences applications proc int conf computer vision pages inf infinite pictures smoothmove version int interactive pictures corporation ipix version kai rakesh kumar anandan michal irani james bergen keith hanna representation scenes collections images proc ieee workshop representation visual scenes pages kiriakos kutulakos charles dyer affine surface reconstruction purposive viewpoint control proc int conf computer vision pages kiriakos kutulakos charles dyer global surface reconstruction purposive control observer motion artificial intelligence knr takeo kanade narayanan peter rander virtualized reality concepts early results proc ieee workshop representation visual scenes pages krn takeo kanade peter rander narayanan virtualized reality constructing virtual worlds real scenes ieee multimedia sing bing kang richard szeliski scene data recovery omnidirectional multibaseline stereo proc computer vision pattern recognition conf pages ktot akihiro katayama koichiro tanaka takahiro oshino hideyuki tamura viewpoint dependent stereoscopic display interpolation multi-viewpoint images proc spie vol pages kut kiriakos kutulakos shape light field boundary proc computer vision pattern recognition conf pages kvd jan koenderink andrea van doorn singularities visual mapping biological cybernetics kvd jan koenderink andrea van doorn internal representation solid shape respect vision biological cybernetics las john lasseter principles traditional animation applied computer animation proc siggraph pages lau aldo laurentini shapes understood silhouettes ieee trans pattern analysis machine intelligence lau aldo laurentini silhouettes reconstruct object computer vision image understanding lcsw seung-yong lee kyung-yong chwa sung yong shin george wolberg image metamorphosis snakes free-form deformations proc siggraph pages stephane laveau olivier faugeras scene representation collection images proc int conf pattern recognition pages quang-tuan luong olivier faugeras fundamental matrix theory algorithms stability analysis int computer vision longuet-higgins computer algorithm reconstructing scene projections nature david laur pat hanrahan hierarchical splatting progressive refinement algorithm volume rendering proc siggraph marc levoy pat hanrahan light field rendering proc siggraph lip lippman movie-maps application optical videodisc computer graphics proc siggraph pages liv live picture realspace viewer version jed lengyel john snyder rendering coherent layers proc siggraph pages luong eville canonic representations geometries multiple projective views proc european conf computer vision pages martin aggarwal volumetric description objects multiple views ieee trans pattern analysis machine intelligence mar david marr vision freeman san francisco leonard mcmillan gary bishop head-tracked stereoscopic display image warping proc spie vol pages leonard mcmillan gary bishop plenoptic modeling proc siggraph pages mkkj saied moezzi arun katkere don kuramura ramesh jain reality modeling visualization multiple video sequences ieee computer graphics applications hiroshi murase shree nayar visual learning recognition objects appearance int computer vision steve mann rosalind picard video orbits projective group perspective image mosaicing memo mit media lab cambridge steve mann rosalind picard video orbits projective group simple approach featureless estimation parameters ieee trans image processing mtg saied moezzi li-cheng tai philippe gerard virtual view generation digital video ieee multimedia nmso yuichi nakamura tomohiko matsuura kiyohide satoh yuichi ohta occlusion detectable stereo occlusion patterns camera matrix proc computer vision pattern recognition conf pages yuichi ohta takeo kanade stereo intraand inter-scanline search dynamic programming ieee trans pattern analysis machine intelligence masatoshi okutomi takeo kanade multiple-baseline stereo ieee trans pattern analysis machine intelligence olc maximilian ott john lewis ingemar cox teleconferencing eye contact virtual camera proc interchi pages 
tomaso poggio roberto brunelli approach graphics memo cambridge february pietro perona recognition planar object classes proc computer vision pattern recognition conf pages pms alex pentland baback moghaddam thad starner view-based modular eigenspaces face recognition proc computer vision pattern recognition conf pages ptk tomaso poggio vincent torre christof koch computational vision regularization theory nature rob luc robert realistic scene models image sequences proc imagina conf pages monaco matthew regan ronald post priority rendering virtual reality address recalculation pipeline proc siggraph pages rzfh luc robert cyril zeller olivier faugeras martial ebert applications nonmetric vision visually guided robotics tasks technical report inria sophia-antipolis france june sam samet quadtree related hierarchical data structures acm computing surveys scg peter-pike sloan michael cohen steven gortler time critical lumigraph rendering proc symposium interactive graphics pages sch daniel scharstein stereo vision view synthesis proc computer vision pattern recognition conf pages stewart dyer trinocular general support algorithm three-camera stereo algorithm overcoming binocular matching errors proc int conf computer vision pages steven seitz charles dyer complete structure point correspondences proc int conf computer vision pages steven seitz charles dyer physically-valid view synthesis image interpolation proc ieee workshop representation visual scenes pages steven seitz charles dyer scene appearance representation perspective view synthesis technical report cs-truniversity wisconsin madison steven seitz charles dyer image-based scene representation view morphing proc int conf pattern recognition pages steven seitz charles dyer view morphing proc siggraph pages steven seitz charles dyer photorealistic scene reconstruction voxel coloring proc image understanding workshop pages steven seitz charles dyer photorealistic scene reconstruction voxel coloring proc computer vision pattern recognition conf pages steven seitz charles dyer view-invariant analysis cyclic motion int computer vision steven seitz charles dyer view morphing uniquely predicting scene appearance basis images proc image understanding workshop pages sei steven seitz bringing photographs life view morphing proc imagina conf pages monaco brent seales olivier faugeras building three-dimensional object models image sequences cvgip image understanding sha amnon shashua projective structure uncalibrated images structure motion recognition ieee trans pattern analysis machine intelligence sho ken shoemake animating rotation quaternion curves proc siggraph pages samal iyengar automatic recognition analysis human faces facial expressions survey pattern recognition richard szeliski sing bing kang direct methods visual scene reconstruction proc ieee workshop representation visual scenes steven seitz kiriakos kutulakos plenoptic image editing proc sixth int conf computer vision richard szeliski heung-yeung shum creating full view panoramic image mosaics environment maps proc siggraph pages swi yoichi sato mark wheeler katsushi ikeuchi object shape reflectance modeling observation proc siggraph pages brent seales cheng jiun yuan recognition morphing preparation szb larry shapiro andrew zisserman michael brady motion recovery affine epipolar geometry int computer vision sze richard szeliski rapid octree construction image sequences computer vision graphics image processing image understanding sze richard szeliski video mosaics virtual environments ieee computer graphics applications carlo tomasi takeo kanade shape motion image streams orthography factorization method int computer vision jay torborg james kajiya talisman commodity realtime graphics proc siggraph pages greg turk marc levoy zippered polygon meshes range images proc siggraph pages matthew turk alex pentland eigenfaces recognition cognitive neuroscience sebastian toelg tomaso poggio example-based image compression architecture video conferencing memo cambridge june tri bill triggs matching constraints joint image proc int conf computer vision pages tsa tsai versatile camera calibration technique high-accuracy machine vision metrology off-the-shelf cameras lenses ieee trans robotics automation shimon ullman ronen basri recognition linear combinations models ieee trans pattern analysis machine intelligence alessandro verri tomaso poggio motion field optical flow qualitative properties ieee trans pattern analysis machine intelligence thomas vetter tomaso poggio image synthesis single image proc european conf computer vision pages john wang edward adelson representing moving images layers ieee trans image processing wal walt disney productions pigs film wal walt disney productions fantasia film wal walt disney productions pinocchio film wal walt disney productions aladdin film war gregory ward measuring modeling anisotropic reflection proc siggraph pages wes lee westover footprint evaluation volume rendering proc siggraph pages wfh daniel wood adam finkelstein john hughes craig thayer david salesin multiperspective panoramas cel animation proc siggraph pages whh tomas werner roger david hersch vaclav hlavac rendering real-world objects view interpolation proc int conf computer vision pages wol george wolberg digital image warping ieee computer society press los alamitos lawrence zitnick jon webb multi-baseline stereo surface extraction technical report cmu-cs- carnegie mellon pittsburgh november appendix computing prewarps section problem computing prewarp transformations set point correspondences procedure needed apply view morphing algorithm situations camera configurations section prewarped images satisfy scanline property dictates points images scanline fact achieving scanline property sufficient ensure images properly prewarped section demonstrate necessity sufficiency scanline property present algorithm scanline property compute prewarp transformations set point correspondences fundamental matrix order three-step algorithm presented section find prewarp images knowing projection matrices end form fundamental matrix takes views satisfy scanline property prewarp views fundamental matrix achieves form fundamental matrix images rank-two matrix satisfying relation pair points scene point defined scale factor computed images point correspondences har szb methods computing point correspondences views projection matrices loss generality assumed camera centered world origin set world axes coincide image coordinate axes epipoles projections vector bxyz notation fundamental matrix expressed recall prewarped images satisfy scanline property represent views projection matrices wherei identity matrix constant fundamental matrix scale constant conversely suppose unknown projection matrices epipoles form unknown constant make views parallel suffices transform image transformation induces change fundamental matrix preceding argument prewarped fundamental matrix fixed scalar multiple constraint structure unknown constants andc rows equal views parallel note rows equal ensuring scanline property satisfied summary sufficient condition testing views parallel satisfy scanline property fundamental matrix order make test seek pair homographies prewarped images figure pair views made coincident plane rotating image planes lines intersection made parallel rotating image plane line parallel fundamental matrix terms condition choosing homographies fact range homographies satisfying choices prewarp plane calibrated case choice homographies important regard sampling considerations section describe method applies rotation make image planes parallel affine transformation align scanlines nice property method prewarp process reduces technique appendix images orthographic aligning image planes idea technique depicted fig plane parallel twoviews made parallel reprojecting 
performing reprojection rotate image plane line intersection alternatively rotating line parallel sufficient align image planes parallel step prewarp procedure choose indirectly selecting intersection convenience fix line pass image origin represent homogeneous unit row vector points line form bsd satisfy equation recall epipole represents projection intersection image plane parallel epipole infinity seek rotation epipole form rotation matrix cos cos sin cos cos sin sin sin cos desired angle rotation determined tan analogous rotation performed determine axis rotation lete epipolar plane parallel intersects epipolar line parallel parallel intersect ideal infinite point compute correspondence conjugate epipolar lines fundamental matrix made parallel rotating line parallel itis convenient choose passes image origin bxyz bxy aligning scanlines applying makes image planes parallel specifically coincident parallel technically sufficient prewarping add additional affine warp align scanlines simplifies morph step scanline interpolation avoids bottleneck problems arise result image plane rotations wol step rotate images epipolar lines horizontal epipoles image plane axis rotations tan cos sin sin cos applying image plane rotations fundamental matrix form scale factor applying results pair images horizontal epipolar lines epipolar lines opposite top-to-bottom order images case additional rotation needed condition determined checking signs incremented finally form image vertically scaled translated matrix easily checked summary prewarping transforms infinite epipoles case requires special attention scenario original image planes parallel parallel common epipolar plane case epipoles infinity omitted fundamental matrix form make image planes parallel convert fundamental matrix form additional x-axis rotation needed tan cos sin sin cos case computed selecting entire procedure determined selecting principle choice suffice practice choose axis rotation minimize nonlinear distortion prewarped images prewarping image requires resampling transformed image integer grid pixels linear image maps rotations efficiently resampled space-invariant filters hec nonlinear transformations lead suboptimal reconstructions beneficial pick minimize nonlinear effects nonlinear part prewarp transformation due solely approach simply minimize minimizing equivalent minimizing expression optimal corresponds note robert rzfh considered problem computing prewarp transformations context uncalibrated stereo rectification working independently developed similar technique computing reprojection mappings minimize image distortions advantage technique presented reprojection decomposed number intuitive component warps individually instance cases parallel planes sufficient additional steps align scanlines left aggregate warps section prewarped images explicitly constructed alternatively images orthographic rotations omitted orthographic prewarps orthography good approximation perspective projection field view small scene depth light sight small compared camera distance advantage orthographic model simpler leads stable computations parameters epipolar lines szb images close orthographic advisable simplified technique computing fundamental matrix shapiro szb orthographic fundamental matrix form computed point correspondences linear squared techniques easily epipoles orthographic case epipoles infinity leave rotations orthographic prewarps appendix orthographic view morphing appendix presents monotonicity constraint orthographic views impact view synthesis monotonicity states projections points epipolar plane order conjugate epipolar lines property holds epipolar lines views monotonicity holds letp scene points epipolar plane visible images geometrically constraint dictates line intersect line segment joining tips view normals property monotonicity extends cover range views in-between view in-between normal intersects line intersects intersects monotonicity implies monotonicity points epipolar plane order epipolar lines images property monotonicity applies in-between views powerful sufficient uniquely predict appearance visible scene viewpoints in-between proof result identical perspective case section fig illustrates impact monotonicity constraint view synthesis image interpolation section argued linear interpolation orthographic views produces orthographic view specifically orthographic views linear interpolation points creates view projection matrix words interpolation images direct physical interpretation terms views connection recognized ullman basri context object recognition spite result image interpolations account visibility correspond qppq figure monotonic viewing geometry appears left images providing intersects monotonicity requires line intersect figure views generated image interpolation interpolating axes produces view skewed tilted respect epipolar plane prewarping remedies problem aligning view coordinate systems prior interpolation unintuitive view interpolations fig graphically depicts interpolation views normal epipolar plane interpolated view tilted degrees respect addition axes orthonormal axes orthogonal unit length correspond in-between view defined monotonicity preserved correctness interpolated image ensured cases interpolation degenerates degree rotation case morph collapses point points mapping origin short image interpolation orthographic views generally produce views monotonic range fortunately problems corrected appropriately aligning images performing interpolation fig rectification odd view trajectories obtained orthographic image interpolations arise linear interpolation views amount linear interpolation gaze directions views define direction gaze intuitively expect gaze direction follow direct path smooth transition thisis generally case view interpolation fig illustrates due nonlinear relationship plane normal transformations morph made interpolate gaze directions generate valid in-between views monotonic range aligning coordinate axes views accomplished means simple image rectification procedure aligns epipolar lines images result rectification points rectified images scanline words point correspond point prewarp procedures sufficient achieve criterion appendix normals transformed inverse transpose plane coordinate transformation 
visualizing scientific computations system based lattice-structured data display models william louis hibbard dissertation submitted partial fulfillment requirements degree doctor philosophy computer sciences wisconsin-madison visualizing scientific computations system based lattice-structured data display models william louis hibbard supervision professor charles dyer wisconsin-madison abstract thesis develop system makes scientific computations visible enables physical scientists perform visual experiments computations approach unique integrates visualization scientific programming language data objects user-defined data type displayed displayed satisfies broad analytic conditions requiring graphics expertise user system highly interactive order achieve generality architecture analyze nature scientific data displays visualization mappings scientific data displays approximations mathematical objects variables vectors functions natural define mathematical lattice structure data models display models lattice-structured models provide basis integrating forms scientific metadata computational display semantics data provide rigorous interpretation expressiveness conditions visualization mapping data displays visualization mappings satisfying expressiveness conditions lattice isomorphisms applied data types scientific programming language implies visualization mappings data aggregates display aggregates decomposed mappings data primitives display primitives results provide flexible data display models provide basis flexible easy-to-use visualization data objects occurring scientific computations charles dyer professor computer sciences wisconsin madison abstract thesis develop system makes scientific computations visible enables physical scientists perform visual experiments computations approach unique integrates visualization scientific programming language data objects user-defined data type displayed displayed satisfies broad analytic conditions requiring graphics expertise user system highly interactive order achieve generality architecture analyze nature scientific data displays visualization mappings scientific data displays approximations mathematical objects variables vectors functions natural define mathematical lattice structure data models display models lattice-structured models provide basis integrating forms scientific metadata computational display semantics data provide rigorous interpretation expressiveness conditions visualization mapping data displays visualization mappings satisfying expressiveness conditions lattice isomorphisms applied data types scientific programming language implies visualization mappings data aggregates display aggregates decomposed mappings data primitives display primitives results provide flexible data display models provide basis flexible easy-to-use visualization data objects occurring scientific computations iii acknowledgments greatly indebted advisor chuck dyer showing thinking computer science problems consistent good nature special due amir assadi miron livny tom reps greg tripoli taking time review work members thesis committee tom defanti input guest committee member larry landweber suggesting pursue doctorate introducing chuck dyer long thought graduate school forever francis bretherton bob fox john anderson directors space science engineering center employed support encouragement verner suomi founder space science engineering center profound positive influence life period years special due brian paul principal collaborator system development andre battaiola dave santek marie-francoise voidrot-martinez collaboration systems development indebted bob rabin roland stull bob aune wilt sanders dick edgar mike botts chris crosiar users systems helpful suggestions improving systems marriage thing happened life real work thesis home pleasant sweet mother encouraging education father teaching figure things thesis dedicated laura tommy jeannie john bringing world contents abstract acknowledgments iii introduction goals scientific visualization state art scientific visualization data flow object-oriented approaches data models display models automating design data displays major contributions thesis outline system design visualizing scientific computations scientific computing environment scientific data scientific displays mapping data displays analysis mappings data displays analytic approach based lattices basic definitions ordered sets scientific data objects approximations mathematical objects mathematical structure based precision scientific data data display mapping lattices scientific data model interpreting data model lattice defining lattice structure embedding scientific data types data lattice finite representation data objects scientific display model scalar mapping functions structure display functions behavior display functions continuous scalars characterizing display functions properties scalar mapping functions principles scientific visualization applying lattice model design visualization systems integrating metadata scientific data model interacting scientific displays visualizing scientific computations system organization applying lattice model recursive data type definitions recursive data type definitions inverse limit construction universal domains display recursively defined data types conclusions main contributions limitations future directions definitions ordered sets proofs section proofs section proofs section proofs section proofs section proofs section proofs section proofs section bibliography vii list figures image data displayed ways interactive display output numerical weather model place visualization computational process simple rendering pipeline three-dimensional graphics bertin display model place visualization computational process snapshot executing shallow fluid simulation model order relation continuous scalar approximating real functions arrays order relation arrays precise image sequence image sequence ordered precision image sequence ordered precision precise image sequence meaning expressiveness conditions order relation discrete scalar order relation tuples embedding tuple type lattice sets tuples embedding array type lattice sets tuples defining order relation sets tuples roles display scalars display model mappings scalars display scalars viii behavior display function continuous scalar image displayed cartesian coordinate system image displayed spherical earth coordinate system three-dimensional radar data x-ray events interstellar gas sequence object displayed terrain sequence object displayed ways views chaos visualizing computations bubble sort algorithm visually experimenting algorithms visually tracing back computational errors close-up view regions partition object close-up view restricted cloudy pixels image partition objects displayed terrains histogram objects displayed graphs two-dimensional histogram x-ray events visualizing criteria select cumulus clouds visad system organization type construction operator represented function chapter introduction physical scientists observe nature formulate laws fit observations predict future observations order test laws mathematics language observations laws predictions complexity modern science demands mathematical calculations automated computers number observations nature dictates analyzed computer algorithms number computations required predict nature dictates predictions made numerical simulation models running computers computers essential tools scientists observing simulating nature spite essential role computers barriers scientific understanding unlike hand calculations automated computations invisible enormous numbers individual operations automated computations relation algorithm input output intuitive problem discussed report national science foundation mccormack defanti brown illustrated behavior meteorologists responsible forecasting weather age computers meteorologists manually plot weather observations maps draw iso-level curves temperature pressure fields hand special pads maps printed purpose similarly radiologists computers collect medical data notoriously reluctant apply image processing algorithms data scientists life death responsibilities computer algorithms black boxes increase reduce risk barrier scientists computations bridged scientific visualization techniques make computations visible scientific visualization computational process transforms data objects scientific computations visible images computer display screen scientific visualization difficult variety complexity scientific data variety scientific problems implies scientists data ways scientists tools easy concentrate understanding computations understanding visualization tools size scientific 
data sets justify development scientific visualization true scientists large data sets important motive visualization invisibility automated computations volumes satellite images earth pair geostationary operation environmental satellite located east west stations generate image seconds nasa earth observing system planned generate images data volumes large overwhelm scientist images quantitative measurements pictures real images extracted automated computations process images faster person coherently work earth scientists develop algorithms automated processing proper role visualization helping scientists understand algorithms work improve goals scientific visualization scientific data exist wide variety structures examples include two-dimensional images type image array row array column radiance three-dimensional grids type grid array row array column array level temperature time sequences images grids type image sequence array time image type grid sequence array time grid images grids multiple values pixel type multi image array row array column structure radiance vis radiance type multi grid array row array column array level structure pressure temperature humidity irregularly located data observations made ships aircraft type observations array index structure latitude longitude altitude pressure one-dimensional multi-dimensional histograms derived data type histogram array temperature count type histogram array temperature array pressure count partitions images grids spatial regions type image partition array region image type grid partition array region grid physical systems observed collections instruments observed state physical system complex combination data sensed types instruments similarly simulations generate complex combinations data describing interacting physical systems atmospheric physics chemistry ocean physics chemistry land ocean surface processes scientific data made complex scientists precisely document obtained documentation form metadata considered part scientific data goal thesis develop visualization techniques applied data wide variety scientific applications scientists data displayed ways depending kinds information figure shows time sequence multi-variate image data displayed ways upper-left window shows radiance values colors spatial patterns textures upper-right window shows infrared radiances terrain colored visible radiances slopes time sequence animated upper-right upper-left windows motion alternatively time sequence stacked vertical axis lower-right window closely rates motion shape intensity information spatial locations pixels shown lower-left window producing colored three-dimensional scatter diagram correlations infrared radiance visible radiance variance texture variance texture derived infrared radiance views presented figure aspect data generally primary reason scientists scientific visualization find unexpected patterns data expected patterns measured characterized statistical calculations applied data flexibility ways data displayed critical search unexpected patterns goal thesis develop visualization techniques produce wide variety visualizations data figure time sequence multi-variate image data displayed ways color original large volumes scientific data impossible display data object single image single animation sequence scientists interactively explore large data objects figure shows snapshot interactive animated display output numerical weather model white object balloon kilometers high shape squat chimney floats air patch tropical ocean purpose numerical simulation verify air starts rising chimney motion self-sustaining create perpetual rainstorm vertical color slice shows distribution heat animated shows flow heat yellow streamers show flow air chimney blue isosurface shows precipitated cloud ice cloud water iso-surface obscure view chimney shown snapshot viewers visualization interactively move color slice three-dimensional box atmosphere interactively release streamers air flow interactively change cloud ice iso-surface rotate zoom box dimensions choose combinations fields display choose ways field depicted color slice iso-surface contour slice interactivity critical allowing scientists search large amounts data unexpected patterns goal thesis develop visualization techniques enable users interactively alter ways data viewed figure snapshot interactive animated display output numerical weather model color original visualization communicating results observations computations scientists control delegate expertise visualization support staff order distract scientists difficult task understanding data visualization easy control fourth goal thesis develop visualization techniques require minimal effort scientists stated start section rationale visualization scientists results computations visualization intimately connected computation complexity data requires visualization process interactive complexity computation requires computational process includes visualization interactive figure illustrates interactive cycle computation process activities separate software systems scientists repeatedly switch systems manage movement information systems user overhead reduced integrating activities system visualization program execution allowing users dynamically monitor intermediate results computations respond immediately adjusting parameters computations called computational steering goal thesis develop visualization techniques integrated scientific programming environment run computation visualize results change algorithm computational parameters figure place visualization computational process state art scientific visualization state art scientific visualization current techniques achieve goals data flow object-oriented approaches visualization research focused primarily developing specialized visualization techniques suited specific types data research sought common patterns ways displays computed rendering pipeline widely applicable abstraction ways data transformed displays figure illustrates simple rendering pipeline generate primitives data transform coordinates view space clip primitives view boundaries rasterize primitives pixels remove hidden surfaces z-buffer calculate colors pixels screen figure simple rendering pipeline three-dimensional graphics frames system abstracted rendering pipeline users display processes sequences unix filters potmesil hoffert grape system introduced branching data transformations users define display processes acyclic graphs modules nadas fournier conman system provided graphical user interface display processes networks modules haeberli idea adopted basis widely-used data flow visualization systems avs upson khoros rasure data flow systems provide large libraries modules implement basic computational display operations provide graphical user interfaces synthesizing complex visualization algorithms module libraries recognition kinds displays generated similar sets operations led object-oriented approach synthesizing visualization mappings object-oriented approach inheritance polymorphism exploit common properties natural hierarchy data displays powervision system object-oriented language support interactive development image processing algorithms mcconnell lawton system defined set primitive generic functions accessing data objects iterating parts objects checking boundary conditions algorithms synthesizing displays expressed terms generic functions users defined object classes apply existing display algorithms classes long classes included definitions generic functions accessing data objects superglue system developed programming environment developing scientific visualization applications based scheme gnu emacs editor hultquist raible defined class hierarchy types scientific data objects displays user extensions class hierarchy advantage inheritance polymorphism simplify definition visage system implemented hierarchy classes process objects data objects schroeder lorenson mantanaro volpe process objects implemented visualization process data flow networks simpler processes data objects implemented variety scientific data organizations variety display organizations systems scientists approach generality enumeration data types enumeration display techniques systems large complex scientists spend considerable effort produce visualizations systems scientists explore ways displaying data interactively changing data flow networks transform data displays practice support staff design data flow networks 
scientists generate fixed types displays data similarly object-oriented systems developers visage system visualization application system required lines code specific application scientists visualization techniques change data understanding complex programs data flow networks data models approaching generality enumerating data types display techniques achieve generality abstraction data displays developing broadly applicable abstract models scientific data displays systematically study ways visualization processes transform data displays data model defines set data objects data objects organized set operations data objects internal structures data models subject recent workshops treinish haber robertson lee grinstein display models similar data models discussed section requirements scientific data model understood terms role data science scientists design mathematical models nature models identify numerical variables time altitude temperature functional relations variables temperature function time models define states nature vectors variables functions state point atmosphere vector variables temperature pressure humidity wind velocity state entire atmosphere vector functions term mathematical objects denote numbers functions vectors mathematical models scientists mathematical models analyze set observations simulate physical system implement models computer programs mathematical objects represented scientific data objects implementations scientific data model reflect ways scientific data objects represent mathematical objects ways define scientific data models scientific data model incorporate components types primitive values occurring data objects represent primitive variables defined mathematical models nature data model define floating-point type represent real variables time temperature define integer type represent integer variables event count define string type represent names city state names rigorous data model specifies relations operations defined values primitive types definition type primitive include arithmetical operations string operations order relation metric topology ways primitive values aggregated data objects aggregates represent complex mathematical objects vectors functions vectors functions variety approaches defining data aggregates programming language vectors represented structures functions represented arrays pointers define complex networks values programming languages provide simple data structuring rules combined define wide variety data aggregates hand scientific analysis visualization systems support specific types aggregates based application include two-dimensional images generated satellites observing systems three-dimensional grids generated numerical simulations observing systems vector polygon lists generated applying visualization operators images grids map makers metadata relation data physical things represent meteorological temperature metadata includes fact temperature scale fahrenheit kelvin spatial temporal location earth atmosphere point sample average space time temperature values limited accuracy sensed instrument computed weather model estimate accuracy form metadata instruments observing systems fallible expected data defined missing data indicators form metadata temperature observed instrument metadata instrument aperture pointing direction filters temperature computed values metadata algorithm compute source algorithm inputs term metadata meanings denotes information organization data case called syntactic metadata denotes information meaning data called semantic metadata metadata secondary data critical usefulness primary data satellite image primarily consist array pixel radiance values data scientifically useless arrays earth locations pixels pixel values correspond physical radiances display models define systematic models scientific data define systematic models scientific displays note computer programs generate displays form data objects bertin detailed display model published illustrates display model addresses issues primitives aggregates bertin bertin defined display aggregate graphical marks identified primitive variables graphical mark spatial coordinates mark graphical plane restricted attention static two-dimensional graphics mark size texture color orientation shape bertin defined diagrams networks maps spatial aggregates graphical marks figure illustrates bertin display model two-dimensional region filled graphical marks graphical marks characterized spatial coordinates primitive variables size texture color orientation shape figure bertin display model modeled displays sets graphical marks twodimensional spatial region bertin display model limited static two-dimensional displays corresponds physically displayed two-dimensional screen time computer-generated displays generate illusion dimensions show motion changing screen contents short intervals regard forms user interaction integral part display distinguish physical logical display models denote set physical displays two-dimensional static denote set logical displays three-dimensional animated interactive mapping render includes traditional graphics operations iso-surface generation volume rendering projection dimensions rotate zoom translate clipping hidden-surface removal shading compositing animation operations implemented rendering pipeline illustrated figure changing set mappings render expresses three-dimensional animated interactive nature logical displays visualization process maps data objects displays denote set mathematical objects denote set data objects represent visualization process viewed sequence mappings mapping expresses scientists implement mathematics computers mapping generally understood physical display generation process foley van dam lorensen cline concentrate interest mapping order optimize generality visualization techniques scientific applications seek scientific data models primitive values defined terms abstract mathematical properties aggregates constructed simple rules combined complex ways integrate variety metadata seek display models abstract include interactive displays proper abstractions display techniques flexible easy proper abstraction mapping section describe efforts automate choice mapping automating design data displays section object-oriented data flow approaches define natural methodologies designing programs data flow diagrams transforming data displays require considerable programming effort users response scientists visualization techniques easy variety efforts automate design algorithms producing data displays goal called automating design data displays research focuses automating choice ways displaying data mackinlay sought automate design displays data relational database systems mackinlay technique combined relational data model bertin display model relation set tuples values sets primitive values called domains defined position relation tuples mackinlay classified domains nominal order relation ordinal order relation metric arithmetical operations quantitative metric arithmetical operations primitive values aggregated sets tuples form relations mackinlay data model allowed functional dependencies defined domains relation restrictions sets tuples form relations mackinlay modeled displays sentences graphical language sentences sets tuples tuple pairs graphical mark two-dimensional screen location attached attributes graphical marks size color orientation values attributes similar primitive values bertin graphical marks mackinlay model display interpreted set tuples tuple screen coordinates values attributes graphical mark mackinlay defined expressiveness effectiveness criteria mapping data relations display sentences expressiveness criteria require display sentence encodes facts set set facts data relation encodes facts set effectiveness criteria provide choose display sentences satisfy expressiveness criteria effectiveness criterion quantitative information easier perceive encoded spatial position color mackinlay solicited visualization goals user effectiveness criteria visualization goals expressed formally terms predicates functions applied relational data display sentences basis backtracking search optimal display mackinlay display model static two-dimensional limiting scientific visualization relational model theory scientific data naturally fit ways scientific data aggregated robertson robertson senay ignatius senay ignatius senay ignatius beshers feiner beshers feiner sought automated techniques designing displays scientific data robertson 
data model classified primitive values nominal ordinal nominal values classified single multiple valued sets values ordinal values classified discrete continuous classification topology primitive sets primitive values aggregated distributions n-dimensional space robertson modeled displays two-dimensional three-dimensional surfaces attributes color texture methodology solicited set visualization goals user terms scales user interest point local global variables terms user interest correlations pairs variables data displays generated matching data attributes relations display attributes relations user visualization goals senay ignatius data model classified primitive values qualitative quantitative aggregated primitive values functional dependencies variables data model included metadata coordinate systems data sampling senay ignatius modeled displays bertin graphical marks specific aggregates marks icons iso-surfaces classified encoded single variable multiple variables displays generated applying production rules matching data characteristics display characteristics beshers feiner data model consisted functions set real variables display model sought overcome limitation spatial axes embedding small spatial coordinate systems small sets graphical axes larger spatial coordinate systems display model formalized interactive exploration data allowing user move small coordinate systems larger coordinate systems technique searched large set designs evaluating based set user-defined visualization tasks efforts sought automate design displays display models limited specific types displays enumerated specific display techniques search spaces automated techniques focus automate user task choosing enumerated sets visualization techniques section describe alternative approach defines general analytic conditions mapping data displays derives visualization mappings satisfy conditions previous automated approaches displays designed based information visualization goals provided user form user input users control display design user interface issues notoriously complex obvious encoding parameterization visualization goals effective users control visualization systems effective users make translation goals form controls visualization interactive system lets users experiment ways displaying data effective automated system interactive system enables users experiment small display controls effect data displayed experimentation fastest scientists learn visualization system works major contributions main contributions thesis summarized development system scientific visualization enables wide variety visual experiments scientific computations system integrates visualization scientific programming language express scientific computations programming language supports wide variety scientific data types integrates common forms scientific metadata computational display semantics data data object defined program language visualized wide variety ways program execution controls data display simple independent data type displays controlled set simple mappings program logic mappings independent data type separate user scientific programs clear distinction previous visualization systems require scientists embed calls visualization functions programs computation visualization highly interactive selection data objects display controls displayed treated interactive display control interactive rotation previous visualization systems require user alter program order make generality integration interactivity ease-of-use system enhance user ability perform visual experiments algorithms introduction systematic approach analyzing visualization based lattices define set data objects set displays show lattice structure expresses fundamental property scientific data displays approximations physical world visualization repertoire system defined set mappings form common define system visualization repertoire enumerating set functions enumerated repertoire justified tastes experience people decide functions include set contrast interpret wellknown expressiveness conditions visualization mapping terms lattice structure define visualization repertoire set functions satisfy conditions repertoire justified generality expressiveness conditions show visualization mappings satisfy conditions lattice isomorphisms lattice structures defined wide variety data display models result applied analyze visualization repertoires wide variety situations demonstration specific lattice structure unifies data objects scientific types data model demonstration lattice structure express interactive animated three-dimensional displays display model models integrate kinds scientific metadata computational display semantics data context scientific data display models show expressiveness conditions imply mappings data aggregates display aggregates factored mappings data primitives display primitives show display mappings complete sense characterize mappings satisfying expressiveness conditions thesis outline rest thesis organized chapter describe architecture system scientific visualization based goals section section current visualization systems approach goals flexibility enumerating data types types displays chapter develop alternate approach flexibility based defining general conditions mapping data displays analyze repertoire functions satisfy conditions summarize results analysis terms set principles visualization chapter continue presentation visualization system architecture based principles chapter discuss analysis chapter extended data display models general programming languages chapter summarizes conclusions thesis chapter system design visualizing scientific computations section defined broad goals scientific visualization specifically seek visualization techniques applied data wide variety scientific applications produce wide variety visualizations data enable users interactively alter ways data viewed require minimal effort scientists integrated scientific programming environment chapter develop system architecture visualizing scientific computations based goals architecture implemented system called visad visualization algorithm development scientific computing environment purpose scientific visualization make invisible computations visible figure visualization simulation earth atmosphere image includes depictions heat red green vertical slice air flow yellow ribbons precipitated cloud ice blue-green iso-surface chimney-shaped balloon white object floating patch tropical ocean blue square image shows instant sequence changing atmospheric states produced simulation total volume data produced simulation enormous impossible understand visualizations order make complex computations visible goal develop visualization techniques integrated scientific programming environment design meets goal including scientific programming language part visualization system goal met ways providing library functions displaying data callable common scientific programming languages size complexity scientific computations data motivated goal visualization techniques enable users interactively alter ways data viewed noted section user feedback cycle illustrated figure applied interactively running computations argues system architecture flexibly intimately integrate user interfaces programming computation display achieved integrating scientific programming language visualization system run computation visualize results change algorithm computational parameters figure place visualization computational process copy figure robert aune simulation two-dimensional shallow fluid haltiner williams illustrates integration visualization programming language enables feedback loop figure applied running computations visad implementation shallow fluid model pseudo-code loop model time steps user interactive controls model parameter slider low high default parametern slider namen lown highn defaultn compute state model shalstep oldest parameter parametern oldest save previous model state end loop simulation time steps figure shows screen snapshot visad system running program system generates icons lower-left corner screen based calls slider function program runs user free set values icons returned calls slider function values passed fortran function shalstep computes fluid state states previous time steps window lower-right corner screen visualization current state simulated fluid slider icons visualization enable user feedback loop illustrated figure applied running shallow fluid simulation figure snapshot executing shallow fluid simulation model part visad program text window left slider 
icons interact simulation lower-left visualization data object lower-right window color original figure illustrates integration user interfaces programming computation display white window left side screen text fluid simulation program long dark horizontal bar highlights program statement executed short dark horizontal bars highlight occurrences data object displayed case user selects data objects display picking names text window pointing clicking names mouse user similarly sets program execution breakpoints picking program statements window visualization system design interactive interpreted language order scientists perform visual experiments algorithms computations interpreted language inefficient scientists large amounts software written fortran visad system supports dynamic linking interpreted language common compiled languages considered visual programming language system similar data flow visualization systems languages provide graphical user interface designing data control flow programs chose text based user interface interpreted language familiar scientists express large complex algorithms compactly choice supported relative popularity idl interactive data language system physical scientists compared data flow visualization systems fact source code idl system freely strongly considered scientific programming environment integrated visad system powerful effect integrating visualization scientific programming language ability visually trace computations watching displays data objects algorithm producing correct results integration users step computations visually comparing inputs outputs short segments code order find bug capability requires visualization applied selected data object occurring program additional motivation goal scientific visualization techniques applied data wide variety scientific applications section study nature scientific data scientific data physical scientists formulate mathematical models nature simulate complex events analyze observations models earth atmosphere oceans provide good class examples temperatures pressures latitudes altitudes times expressed numbers primitive elements mathematical models numerical variables represent physical quantities primitive variables combined ways build complex objects mathematical models state infinitesimal parcel air vector parcel temperature pressure water-concentration wind-velocity-x wind-velocity-y wind-velocity-z values temperature primitive variables vary space functions temperature temperature-field latitude longitude altitude pressure pressure-field latitude longitude altitude water-concentration latitude longitude altitude wind-velocity-x wind-velocity-x-field latitude longitude altitude wind-velocity-y wind-velocity-y-field latitude longitude altitude wind-velocity-z wind-velocity-z-field latitude longitude altitude state atmosphere vector functions state temperature-field latitude longitude altitude pressure-field latitude longitude altitude latitude longitude altitude wind-velocity-x-field latitude longitude altitude wind-velocity-y-field latitude longitude altitude wind-velocity-z-field latitude longitude altitude finally state atmosphere varies time history atmosphere function state state-history time refer mathematical variables vectors functions mathematical objects dynamics earth atmosphere modeled sets partial differential equations involving mathematical objects general physical scientists mathematical models expressed terms mathematical objects recording analyzing actual observations predicting actual events require implementations mathematical models hand automated computations mathematical models include infinite precision real numbers functions infinite domains computer memories finite computer implementations mathematical models approximations real numbers approximated floating point numbers functions approximated finite arrays values infinite set real numbers commonly approximated values finite set roughly values set -bit floating point values infinite sets values functions commonly approximated finite subsets values atmospheric models define discrete values temperature pressure state variables finite grids locations atmosphere interpret data objects representing mathematical objects variety mathematical types primitive variables vectors functions vectors functions define variety types data objects representing mathematical objects specifically define primitive data types representing primitive mathematical variables integer floating point types define vector types representing mathematical vectors called records structures tuples programming languages define array types representing mathematical functions finite sets samples function values data types scientific programming language integrated visualization system define data types representing mathematical types defined earlier types implementation atmospheric model visad programming language type temperature real type pressure real type water-concentration real type wind-velocity-x real type wind-velocity-y real type wind-velocity-z real type parcel structure temperature pressure water-concentration wind-velocity-x wind-velocity-y wind-velocity-z type latitude real type longitude real type altitude real type temperature-field array latitude array longitude array altitude temperature type pressure-field array latitude array longitude array altitude pressure type array latitude array longitude array altitude water-concentration type wind-velocity-x-field array latitude array longitude array altitude wind-velocity-x type wind-velocity-y-field array latitude array longitude array altitude wind-velocity-y type wind-velocity-z-field array latitude array longitude array altitude wind-velocity-z type state structure temperature-field pressure-field wind-velocity-x-field wind-velocity-y-field wind-velocity-z-field type time real type state-history array time state examples illustrate ways data types defined visad programming language section denote set data objects represent mathematical objects scientific displays viewed special kind data object section denote set display objects nature scientific displays scientific displays data visualized ways illustrated figure goal develop visualization techniques produce wide variety visualizations data order satisfy goal visualization system include flexible general display model bertin display model limited static two-dimensional images model adequate description instantaneous contents workstation screen fails express dynamic three-dimensional interactive character scientific displays distinguish set static two-dimensional images physical displays set logical displays physical display device finite fixed set static two-dimensional images set arrays pixels bits intensity red green blue finite visualization mapping injective severe constraint effort analyze mappings data displays hand define infinite set logical displays three-dimensional animated infinite extents space time varying resolution space time generated variety rendering techniques meaning logical displays defined function render render function projects three-dimensional displays two-dimensional screen removes hidden objects projection process clips displays finite screen boundaries simulates scene lighting simulates transparency reflection animates sequences static images logical display model include generic scalar vector fields case render function implement calculation iso-surfaces plane slices represent scalar fields arrows streamlines represent vector fields note functions render depending parameters projection dimensions parameters simulated lighting place animation sequence giving users control parameters control choice function render define interactive nature logical displays control projection dimensions lets users interactively rotate pan zoom logical displays render function implements traditional operations computer graphics extensively studied foley van dam wyvill mcpheeters wyvill lorensen cline mapping data displays scientific data model data objects types display model interactive animated three-dimensional displays visualization computational process transforms data displays function form visualization repertoire system set functions form order satisfy goal developing visualization techniques produce wide variety visualizations data seek define broad visualization repertoire section current systems define visualization repertoires enumerating sets functions enumerated repertoire includes ways displaying data enumerated repertoire justified tastes experience decide functions include enumeration contrast seek define visualization repertoire set functions satisfying mackinlay expressiveness conditions mackinlay conditions displays express facts data objects facts chapter show conditions rigorously interpreted terms lattice structures defined data display 
models noted scientific data objects approximate representations mathematical objects define lattice structure data model based comparing data objects approximate mathematical objects define similar lattice structure display model define system visualization repertoire set visualization functions satisfy expressiveness conditions interpreted lattice structure approach defining visualization repertoire number advantages including repertoire complete sense includes visualization functions satisfying expressiveness conditions single function applied display data objects type unified data model simplifying user interface controlling displays set display controls applied display data object defined program display controls independent data type naturally separate user scientific algorithms clear distinction previous visualization systems require calls visualization functions embedded scientific programs chapter show selection function satisfying expressiveness conditions controlled conceptually simple user interface lattice structures defined wide variety data display models approach easily extended scientific data display models chapter outline approach extended data model general-purpose programming language lattice-structured data model natural integrate forms scientific metadata computational display semantics scientific data reduces user explicitly manage relation data metadata chapter analysis mappings data displays current scientific visualization systems enumerate ways displaying data require users write programs possibly data flow diagrams object-oriented programming languages control data displayed approaches lack flexibility require significant effort users contrast systematic approach analyzing ways data displayed basic principles chapter describe approach scientific visualization based abstract view data displays abstract view visualization mapping recognize visualization computational process defines mapping large set data objects large set displays analyzing visualization terms individual data object displayed analyze visualization terms effect sets data objects fact arguable data objects meaning relation data objects significance number explained relation mathematical objects symbol represent set data objects symbol represent set displays represent mapping data displays define visualization repertoire set visualization mappings satisfy analytic conditions simplest analytic condition expresses uniqueness requirement data objects displays users distinguish data objects displays condition injective expressed weak condition set two-dimensional images display model set two-dimensional images permutation images satisfies easy construct permutation images display generally poor job communicating information data object users seek stronger conditions general condition defined terms mathematical structures expresses condition terms mathematical structure equality advantage applied broadly visualization data display models include equality relation seek define stronger conditions express fundamental properties scientific data objects displays analytic approach based lattices thesis focus observation scientific computations computer data objects displays finite approximations mathematical models nature real numbers infinite precision functions real variables infinite domains computer data objects represent mathematical objects finite approximate scientific data objects displays approximations define order relation based precision approximation high resolution image precise low resolution image approximation radiance field order relation define lattice structures data display models define analytic conditions visualization mappings based lattice structures basic definitions ordered sets analytic approach visualization draws theory ordered sets review basic definitions theory davey priestly gierz gunter scott schmidt scott scott scott appendix complete list definitions def partially ordered set poset set binary relation reflexive anti-symmetric transitive def upper bound set element def upper bound set exists upper bound upper bound upper bound denoted written def lower bound set element def greatest lower bound set exists lower bound lower bound greatest lower bound denoted inf inf written def subset set define define def subset set define define def subset directed finite subset def posets notation denote set functions def posets function monotone notation mon denote set monotone functions def posets function order embedding def posets function set notation denote def poset lattice exist def poset complete lattice exist def lattices function lattice homomorphism bijection lattice isomorphism scientific data objects approximations mathematical objects section nature scientific data representing mathematical objects noted data objects approximations mathematical objects floating point numbers approximate real numbers arrays finite samplings functions real variable importance approximate nature scientific data reflected common semantic metadata document scientific data approximate mathematical variables functions section defined data type type temperature-field array latitude array longitude array altitude temperature data objects type temperature-field approximate representations mathematical function temperature temperature-field latitude longitude altitude important form scientific metadata describes locations samples temperature-field arrays temperature values array represented finite numbers bits important form metadata describes correspondence finite bit patterns real numbers metadata implicit specification floating point number standard explicit case coded -bit -bit satellite radiances metadata describe data values spatial temporal averages physical variables metadata quantifies data values approximate mathematical values metadata explicitly document numerical precision providing error bounds values approximate real numbers metadata define missing data codes failures observing instruments numerical exceptions view missing data codes documenting values precision metadata provide indirect information precisely data objects approximate mathematical objects values produced simulations include metadata version number model produced data initialize model parameter settings model values produced observations include metadata sensors produced include observations instruments calibration sensor temperatures angles sun navigation landmarks detailed metadata basis complex computations estimating sampling accuracy characteristics values approximate nature scientific data fundamental property data serve basis mathematical order structure scientific data model explained section data objects ordered based precisely approximate mathematical objects order relation mathematical structure data display models basis defining analytic conditions visualization mappings mathematical structure based precision scientific data assume set mathematical objects set data objects countable number data objects objects stored inside computer limited finite strings finite alphabets uncountable number mathematical objects data object generally represents large set mathematical objects data object math set mathematical objects represented data objects math math represents restricted set mathematical objects precise define order relation math math missing symbol represent consistent mathematical values data similar order relations defined reasoning partial information data base management systems read fussell silberschatz study programming language semantics scott algorithmic separate non-terminating programs terminating programs set meanings programs include undefined nonterminating programs precise values program produce terminate natural define order relation program meanings undefined program values order define correspondence ways programs constructed sets meanings programs scott elaborated order relation elegant lattice theory meanings programs scott equated approximates scott order relation similar order relation defined undefined programming language semantics analogous missing scientific computations note source undefined values non-terminating computations sources missing values sensor failures numerical exceptions examples order relation defined applied metadata accuracy form error bars intervals values real intervals studied computational data model real numbers moore applied computer 
graphics duff snyder interval represents real number smaller intervals greater intervals combine missing real intervals simple data model approximations real numbers order relation data model illustrated figure note set real intervals countable implementation real interval data model restricted set rational intervals require countable recognize actual implementation include countable number data objects figure order relation continuous scalar closed real intervals approximate representations real numbers ordered inverse containment intervals contained intervals include element corresponds missing data indicator figure shows intervals order relations intervals intervals top row maximal smaller interval extend data model figure real functions defining array data objects sets pairs real intervals interval pair represents domain function interval represents range intervals define rectangle sample graph represented function set pairs samples function domain sample lies interval pair range lies interval pair illustrated figure figure approximating real functions arrays array represents function graph point rectangles defined pairs adding samples array restricts set functions array represent similarly replacing pairs intervals pairs precise intervals restricts set functions array represent define order relation arrays illustrated figure note empty set data model represent real function empty set figure order relation arrays sequence satellite images figures practical illustration order relation based precision images finite number pixels samples continuous earth radiance field higher resolution images precise approximations radiance field sequence images form ascending chain order relation figure precise image sequence color original figure image sequence ordered precision color original figure image sequence ordered precision color original figure precise image sequence color original examples data models approximating simple types mathematical objects real numbers real functions show define order relations examples defined sets data objects represent mathematical types scientific application include data types impractical provide separate data model separate analysis visualization functions data type desirable define data models include data types study programming language semantics objects types embedded lattices called universal domains scott section show scientific data objects types embedded single lattice assume data model lattice assume complete lattice ordered set embedded complete lattice dedekind-macneille completion davey priestly strong assumption scott showed define topology ordered sets gunter scott topology upper bounds play role analogous limits assumption complete meaning mathematical objects limits sets approximating finite data objects complete lattices convenient mathematical context studying visualization functions long remember actual implementations data models restricted countable subsets notion precision approximation applies displays displays finite resolution space color time animation two-dimensional images three-dimensional volume renderings composed finite numbers pixels voxels implemented finite number bits changing discrete steps time computer displays finite approximations idealized mathematical displays displays defined terms real-valued functions define order relation displays based precision approximations assume display model complete lattice data display mapping lattices data objects provide information mathematical objects order relations provide measures information data objects displays precisely mathematical objects purpose visualization communicate information data objects express purpose conditions defined terms order relations order define conditions draw work mackinlay mackinlay studied problem automatically generating displays relational information defined expressiveness conditions mapping relational data displays conditions display expresses set facts instance set relations display encodes facts set encodes facts order interpret expressiveness conditions define fact data objects logical predicate applied function form false true data objects approximations mathematical objects limit facts data objects approximations facts mathematical objects avoid predicates define inconsistent information mathematical objects approximations mathematical object objects disallow predicates define true false restricting interpretations facts data objects monotone predicates form undefined false true undefined false undefined true monotone predicate form undefined false true expressed terms monotone predicates form undefined true limit facts data objects monotone predicates form undefined true part expressiveness conditions fact data objects encoded fact displays interpret condition monotone predicate undefined true monotone predicate undefined true requires injective part expressiveness conditions fact displays encodes fact data objects interpret condition monotone predicate undefined true monotone predicate undefined true show appendix condition implies monotone bijection one-toone condition strong requires display display data object complete lattice maximal data object upper bound members data objects monotone implies notation set displays complete lattice data objects replace condition order require display data object modify condition condition monotone predicate undefined true monotone predicate undefined true true true true true true true figure expressiveness conditions defines correspondence monotone predicates conditions quantify relation information data objects information displays figure shows mapping chain chain shows values monotone predicates chains expressiveness conditions define correspondence predicates define class functions definition function display function satisfies conditions appendix prove result class display functions prop function display function lattice isomorphism result applied complete lattice model data displays rest chapter explore consequences specific setting scientific data model scientific data model developed section defined set data types representing mathematical types define scalar types representing variables tuple types representing vectors array types representing functions based ideas developed section metadata describe precisely data objects approximate mathematical objects represent integrated data model data model defines kinds primitive values representing real numbers representing integers text strings call kinds primitive values continuous scalars discrete scalars continuous scalar takes set closed real intervals values ordered inverse containment figure illustrated order relations values continuous scalar discrete scalar takes countable finite set values order relation integer precise figure illustrates order relations values discrete scalar sets continuous discrete scalars include minimal missing data indicator figure order relation discrete scalar data model set scalars data model adapted scientific application defining finite set scalar types represent mathematical variables application time latitude temperature pressure scalar types aggregated set complex data types rules continuous discrete scalar data type types defined disjoint sets scalars struct tuple type element types data objects tuple types data types constructed tuples data object element types scalar type type occur definition array array type domain type range type data objects array types data types constructed arrays finite samplings functions primitive variable represented domain type set values represented range type data object array type set data objects range type indexed values domain type data type defines set data objects continuous discrete scalars define sets values previously set objects tuple type cross product sets objects element types tuple data objects represents tuple mathematical objects precision approximation depends precision element tuple tuple precise element precise figure illustrates order relations tuples 
figure order relation tuples tuples members cross products figure shows elements cross product sets continuous scalar values order relations elements cross product element tuple elements factor sets set objects array type similar function space array domain type generally defines infinite set values arrays limited finite subsets domain values finite subset domain values define space functions finite set set objects array range type set objects array type union function spaces finite subsets domain set make definition rigorous section order relation array objects illustrated figure precisely defined section development data model complex offers advantages commonly data models wide variety scientific data expressed data model building hierarchies tuples arrays system based data model applied wide variety scientific applications combine data sources significant advantage existing scientific visualization systems data model integrates forms scientific metadata including scalar type identified primitive mathematical variable represents array data object finite sampling mathematical function set objects array range type indexed values array domain scalar type index values array samples function represented interval values continuous scalars approximations real numbers mathematical model sizes intervals provide accuracy metadata approximations scalar object missing data indicator previous systems require users store metadata separate data objects manage relation data metadata explicitly programs system based data model integrate metadata computation display semantics data reduce burden users sections show define lattice structure data model lattice structure analyze visualization mappings data model lattice-structured display model define repertoire visualization functions system based data model interpreting data model lattice treat visualization process function set data objects set display objects data model defines set data objects data type suggesting visualization function defined data type define lattice data objects natural embeddings data objects data types lattice lattice unified data model data objects data types visualization function applies data types analysis properties visualization functions independent data types section current visualization techniques achieve generality enumerating sets data types display techniques lattice alternative approach defining unified data model enabling unified analysis visualization functions data types define tuple space cross product sets values scalar types define member data lattice subset tuple space section show define order relation lattice section show data objects scientific data model embedded lattice intuition embedding works data lattice defined scalars time temperature pressure objects lattice sets tuples form time temperature pressure tuple data type struct temperature pressure data objects type tuples form temperature pressure embed lattice illustrated figure temp pres temp pres element tuple type temperature pressure member lattice sets tuples form time temperature pressure embedding tuple type lattice figure embedding tuple type lattice sets tuples similarly embed array data types data lattice lattice defined scalars time temperature pressure array data type array time temperature data object type set pairs form time temperature embed data objects lattice illustrated figure basic ideas presented figures combined embed complex data types defined hierarchies tuples arrays data lattices formalized section embeddings enable unified lattice-structured data model visualization mappings apply data objects data types important visualization system based lattice model implies user interface controlling data displayed independent data type time temp time temp time temp timen tempn array temperature values indexed time values time temp time temp time temp timen tempn embedding array type lattice set tuples pressure values time values equal figure embedding array type lattice sets tuples defining lattice structure develop rigorous definition lattice model scientific data define lattices data objects displays terms scalar types symbol denote real numbers scalar type discrete continuous defines set values type def discrete scalar defines countable set includes element discrete order figure illustrates order relation def continuous scalar defines set set closed real intervals order defined figure illustrates order relation continuous scalar closed real intervals represent real numbers limited accuracy real interval sub-intervals sub-intervals give precise information set closed real intervals intersection non-empty equal intersection closed interval undefined smallest closed interval union union unbounded interesting note continuous scalar order relation encodes information ordering topology real numbers containment structure intervals notation cross product members set define ordered set tuples scalar values def finite set scalars cross product set tuples element denote component tuple define order relation figure illustrates order relation tuples power denote power set set subsets discussed briefly section sets tuples power models scientific data objects difficult define order relation power consistent order relation consistent set inclusion schmidt expect define order relation subsets implies true contradicts explained schmidt problem resolved defining equivalence relation power equivalence relation defined terms scott topology defines open closed sets def set open directed subsets def set closed directed subsets denote set closed subsets note complement open set closed vice versa open closed def define relation power open define relation power show appendix equivalence relation equivalence classes ordered appendix show equivalence classes form complete lattice ordered equivalence classes models data objects work directly equivalence classes equivalence class relation shown appendix closed defines one-to-one correspondence equivalence classes closed sets data lattice proposition appendix explains sups infs calculated lattice prop set equivalence classes relation defined equals similarly defined equals smallest closed set equivalence classes relation form complete lattice equivalently complete lattice finite summarize complete lattice members correspondence equivalence classes lattice data model figure illustrates order relation section show data types scientific programming language naturally embedded empty set denoted figure defining order relation sets tuples sets sets ordered set containment assume scalars define tuples discrete sets figure finite embedding scientific data types data lattice section formalize data model presented section def set data types defined set scalars functions power dom power defined dom struct struct uisc dom struct uidom array array dom array dom type struct tuple element types type array array domain type range type set scalars occurring dom set scalars occurring array domains note scalar occur type actual implementation programming language data objects represented finite strings finite alphabets countable number data objects defined define countable sets values scalar types complex data types def scalar define countable set exists closed infs sups belong member set members discrete implies recall defined discrete scalars countable sets continuous set rational intervals note continuous cpo sets define countable sets finite data objects types define tuple data object set object element types 
define array data object function finite set data objects domain type scalar type set data objects range type define countable sets data objects type define functions embed data objects lattice def scalar fin finite discrete scalar member fin finite subset continuous scalar member fin finite set closed real intervals interval def complex types define struct array fin def define embedding struct eti array def define appendix show map members members mapping injective recall notation scalar component tuple lattice obvious exist shown appendix exists types defined disjoint sets scalars exists scalar occur type injective define order relation members simply assuming order embedding injective map pair members member assumption order embedding imply order relation symmetric def appendix shows order relations sets implied definition simple intuitive structure scalar order relation struct order relation tuples defined element-wise array array array embedding sample embeddings set values samples greater summary section shown data types scientific programming language embedded data model results displaying data objects applied display data objects scientific algorithms finite representation data objects continuous scalars elements infinite numbers tuples closed set tuples member equivalence class defined section define alternate representation data object set maximal elements closed set def define max max consists maximal elements proposition appendix tells equivalence relation defines one-to-one correspondence closed sets sets maximal elements prop max data objects data model represented closed sets sets maximal elements closed sets proposition appendix shows data type embedding data object type max finite prop types max finite lattice model data motivated observation data objects approximations mathematical objects infinite amounts information data lattice complete objects definable limits objects types models mathematical objects infinite amounts information sets maximal tuples objects generally finite make assumption max finite apply prop scientific data model section working sets maximal tuples offers real advantage working closed sets scientific display model scientific display model start bertin analysis static two-dimensional displays bertin modeled displays sets graphical marks mark tuple graphical primitive values screen coordinates size texture color orientation shape idea modeling display set tuple values similar constructed data lattice define finite set display scalars represent graphical primitives define cross product sets display scalars define complete lattice closed subsets interpret maximal tuples members representing graphical marks show section type data object display finite number maximal tuples interpret display scalar values maximal tuples defining graphical primitives graphical marks bertin published display model limited static two-dimensional displays define specific lattice model animated three-dimensional displays terms set continuous display scalars red green blue time tuple values display scalars represents graphical mark interval values represent locations sizes graphical marks volume interval values red green blue represent ranges colors marks interval values time represent duration marks animation sequence illustrated figure set animation steps time red green blue red green blue tuple display scalar values graphical mark location size mark volume interval mark persists animation ranges values mark color components figure roles continuous display scalars red green blue time animated three-dimensional display model display lattice illustrated figure models volume rendering animation displays interactive sense users control parameters choose function render maps logical displays physical displays function section display lattice illustrated figure users control projection dimensions dimensions control animation sequencing add display scalars model rendering techniques user interaction techniques display model defined set display scalars parameters display model red green blue transparency reflectivity vectorx vectory vectorz contour contourn animation selector selectorm transparency reflectivity display scalars model parameters volume rendering techniques vectorx vectory vectorz display scalars model flow rendering techniques possibly interactive placement seed points tracing rendering flow trajectories three-dimensional flow field defined values display scalars attached graphical marks contour contourn display scalars model iso-surface rendering techniques iso-surfaces rendered threedimensional field defined values display scalars attached graphical marks selector selectorm display scalars explicitly model user interaction technique user interactively selects sets values selectori graphical marks displayed values selectori overlap user-selected set values display scalars defined wide variety attributes graphical marks limited primitive values spatial coordinates color components animation indices define display model displays consist sets graphical icons graphical shapes distributed locations display screen display model defined display scalars horizontal screen coordinate vertical screen coordinate icon identifier display model single icon identifier display scalar represent potentially complex shape graphical icon define display model set display scalars form parameters two-dimensional ellipses display model include display scalars represent two-dimensional center coordinates orientations lengths major minor axes ellipses possibility logical displays interactive suggests great flexibility define logical display model long define family mappings render parameterized user controls build display lattice models beshers feiner worlds worlds visualization technique beshers feiner technique attempt overcome limitation spatial dimensions nesting small coordinate systems larger coordinate systems data plotted set small graphs including small set axes location origin small coordinate system coordinate system determines values coordinates plotted data users interactively move small graphs coordinate systems plotted values change respect values coordinates model technique defining display lattice terms sets three-dimensional graphics locations mapping render paramterized user controls locations small graphs examples define wide variety display models terms tuples display scalars focus display model assume set display scalars display model consists displays sets maximal tuples values display scalars important point lattice model theoretical results easily extensible wide variety display models user express rendering interaction techniques terms set display scalars user controls choice mapping render lattice results applicable model scalar mapping functions defined lattice structure scientific data displays apply results section structure structure display functions display functions lattice isomorphisms context data display models defined previous sections data objects scalar types naturally embedded lattice sections define similar embeddings display scalar types lattice embeddings defined def scalar define embedding notation components tuple define def display scalar define embedding define embedded scalars play special role structure display functions shown appendix display function maps embedded scalar objects embedded display scalar objects values display function determined values embedded scalar objects results appendix summarized theorem mappings scalars display scalars theorem display function define mapping mapd power scalars mapd values determined values scalar embeddings discrete mapd discrete continuous mapd single continuous display scalar mapd mapd theorem tells mappings data aggregates display aggregates factored mappings data primitives time temperature display primitives screen axes color 
components accepted intuitively true time series temperatures displayed mapping time axis temperature proposition tells mappings satisfy expressiveness conditions factor section present precise statement factorization complete characterization visualization mappings satisfying expressiveness conditions figure examples mappings scalars display scalars upper-right window figure shows display defined mappings figure time mapped animation time sequence images represented animation opposed stacked display axis line element mapped display axes mapped axis image time sequence displayed terrain surface function vis mapped green image terrain colored green intensity function visible radiance red green blue type image sequence array time array line array elem structure vis figure mappings scalars display scalars behavior display functions continuous scalars previous section display functions map embedded continuous scalar objects embedded continuous display scalar objects continuous scalar values real intervals values display functions restricted embedded continuous scalars analyzed terms behavior functions real numbers define values display functions embedded continuous scalars terms functions real numbers def display function continuous scalar prop continuous values mapped values define functions injective maps intervals intervals defined define functions shown appendix functions defined terms functions display function continuous scalar inf appendix show behavior display function continuous scalar fall categories specifically display function continuous scalar implies implies applies increasing applies decreasing appendix shows categories apply functions display function continuous scalar increasing decreasing categories enable prove appendix functions continuous terms topology real numbers satisfy number conditions summarized definition def pair functions called continuous display pair lower bound upper bound continuous increasing decreasing display function continuous scalar continuous display pair draw graphs functions conditions graphs smooth slanted slanted graph graph upper bound graph lower bound graph display function maps closed real intervals continuous scalar closed real intervals continuous display scalar graphs functions determine mapping intervals applying eqs behavior illustrated figure upper bound lower bound interval continuous scalar interval continuous display scalar determined andsh abovesh andsh smooth increasing decreasing figure behavior display function continuous scalar interpreted terms behavior functions characterizing display functions results sections describe variety conditions display functions summarize conditions show sufficient conditions display functions def finite set scalars finite set display scalars function scalar mapping function function mapd power mapd mapd continuous mapd single continuous discrete mapd discrete continuous continuous display pair inf mapd discrete mapd represents tuple components values defined values defined definition variety expressions subsets appendix shows expressions consistent subsets overlap shows monotone definition scalar mapping functions factor mappings scalars data primitives display scalars primitives factor mappings continuous scalars continuous real functions appendix prove characterization display functions theorem display function scalar mapping function appendix shows values scalar mapping function expressed terms auxiliary function specifically defined decomposition basis implementing scalar mapping functions scalar mapping functions basis user interface controlling display process describe section theorem precise definition search space display functions algorithms attempt automate design displays properties scalar mapping functions problem interpretation display objects display lattice closed sets generally infinite numbers tuples interpret tuple graphical mark section closed set member equivalence class relation closed set set maximal tuples max members equivalence class represent display object shown appendix display function data type max finite number tuples order physically render display object interpret finite set tuples max graphical marks possibly infinite set tuples implementation function render assume finite number input tuples order compute values scalar mapping functions auxiliary function defined section values determined function mapd values functions continuous scalars values discrete scalars shown appendix data object maximal tuples computed directly maximal tuples max max shown appendix maximal tuples data objects type computed max struct max max array max max max expressions sets maximal tuples auxiliary function provide basis implementing scalar mapping functions data object eqs define recursive procedure calculating maximal tuples function maps maximal tuples maximal tuples section displays sets graphical marks displays defining functional relations graphical space time color color screen point function location screen place animation sequence views displays sets graphical marks functions consistent display lattice illustrated figure display lattice includes tuples time red green blue time red green blue red red green green blue blue tuples define consistent function space time color order analyze circumstances views consistent divide display scalars groups role dependent variables functional relation role independent variables set defined divided independent variables animation selector selectorm dependent variables red green blue transparency reflectivity vectorx vectory vectorz contour contourn display function generates displays define functional relations independent dependent variables define subset vdisplay consisting display objects multiple tuples combination values independent variables study conditions displays data objects members vdisplay define domds independent variables define ydomds domds pdomds ydomds natural projection pdomds domds define vdisplay def vdisplay max pdomds pdomds object vdisplay multiple tuples share combinations values display scalars domds appendix defines conditions ensure displays data objects type vdisplay specifically maps data objects type displays vdisplay maps scalars dom display scalars domds symbolically mapd dom domds vdisplay inverse relation true disallow degenerate cases details appendix summary section shown number tuples display infinite number maximal tuples finite concluded maximal tuples interpreted graphical marks actual implementation recursive procedure computing set maximal tuples data object maximal tuples displays computed maximal tuples data objects basis implementing display functions demonstrated conditions data types display functions display objects consistent functional view displays implementation enforce conditions scalar mappings defined users note visad implementation chapter enforce conditions multiple tuples inconsistent functional view display occurring location time merged compositing operation system computes average colors multiple tuples location time principles scientific visualization chapter analyzed repertoire visualization mappings lattice-structured data model lattice-structured display model section summarize results analysis set basic principles visualization showed lattice structure express metadata ways scientific data objects approximate representations mathematical objects showed idea applied scientific displays basic principle lattice-structured data models provide natural integrate common forms scientific metadata part data objects gave lattice-structured data model includes data objects types describe chapter basic principle data objects types unified single lattice-structured data model visualization mappings display model inherently polymorphic shown lattice-structured data display models adapted generally applying shown mackinlay expressiveness conditions visualization mapping interpreted terms models conditions imply visualization mappings lattice isomorphisms basic principle lattice-structured data models display models defined general set scientific situations lattice isomorphism result broadly applied analyze repertoire visualization mappings 
shown define lattice-structured data model data aggregates defined hierarchies tuples arrays shown similar lattice structure define model interactive animated three-dimensional displays applying lattice isomorphism result context established fourth basic principle mappings data aggregates display aggregates factored mappings data primitives display primitives fourth principle accepted intuitive past shown completely characterizes visualization mappings satisfy expressiveness conditions chapter applying lattice model design visualization systems chapter developed design components visad system visualizing scientific computations integrated scientific programming language system integrated user interface programming computation display data types programming language constructed tuples arrays set scalar types data objects types represent mathematical variables vectors functions displays interactive animated three-dimensional logical displays mapped physical displays variety familiar rendering operations chapter continue development guided broad goals defined section analysis visualization repertoires chapter basic principles defined section review goals develop visualization techniques applied data wide variety scientific applications produce wide variety visualizations data enable users interactively alter ways data viewed require minimal effort scientists integrated scientific programming environment basic principles lattice-structured data models provide natural integrate common forms scientific metadata part data objects data objects types unified single lattice-structured data model visualization mappings display model inherently polymorphic lattice-structured data models display models defined general set scientific situations lattice isomorphism result broadly applied analyze repertoire visualization mappings mappings data aggregates display aggregates factored mappings data primitives display primitives integrating metadata scientific data model goal developed section scientific visualization techniques applied data wide variety scientific applications section developed flexible define data types based assumption data objects represent mathematical objects section scientific data includes metadata data types principle chapter tells lattice-structured data model natural integrate common forms scientific metadata part data objects handle greater variety data section describe ways visualization design integrates metadata visad system data types defined tuple array aggregates named scalar types scalar types defined primitive types integers text strings real numbers values finite sampling real numbers intervals values implicit spacing samples pairs real numbers values finite sampling rectangles values implicit spacing samples triples real numbers values finite sampling rectangular solids values implicit spacing samples types primitive values precisely correspond scalar types defined chapter integer text string primitives correspond discrete scalars real number primitives correspond continuous scalars chapter intervals values implicit included system compromise computational efficiency real numbers explicit accuracy information real intervals primitives pairs triples real numbers correspond scalars chapter included system occur commonly scientific data handled efficiently primitives metadata integrated level primitive values handling twoand three-dimensional real values primitives enables system integrate wider variety metadata specifically primitives samplings cartesian products samplings system integrates forms metadata sampling information data object finite sampling primitive values system includes internal structures finite samplings primitive types associates primitive structures array index values finite sampling determines array samples function domain determines size array accuracy information implicit resolution samplings explicit intervals chapter missing data indicators sub-object data object special missing indicating lack information names values primitive occurring data object scalar type scalar type integration metadata data objects important consequences computational semantics data types satellite images type radiance real type earth location real type image array earth location radiance declarations data objects earth location loc image east west diff scalar data object loc pair real numbers latitude longitude location earth array data object east finite set samples earth radiance field indexed latitude longitude pairs expression east loc estimate radiance field earth location loc variety interpolation methods making estimate visad implementation simply takes sample east nearest loc loc falls range samples east expression evaluates missing program fragment sample diff east foreach loc east diff loc east loc west loc line specifies diff sampling array index values pixel locations east foreach statement iterate elements array case iterates loc pixel locations east image expression east loc west loc evaluated estimating radiance field represented west loc subtracting east loc arithmetic operation missing operand evaluates missing diff loc set missing west loc evaluates missing note missing data natural values undefined arithmetic operations division visad implementation vector operations computation expressed diff east west semantics previous program fragment implicit statement satellite images finite arrays pixels pixel radiances typically represented coded bit -bit values important metadata accompanying satellite images called navigation defines earth locations pixels calibration defines radiance values coded pixel values missing data indicators important satellite data telemetry failures common visualization design integrate forms metadata satellite navigation metadata integrated samplings real indices image arrays satellite calibration metadata integrated samplings real radiance values image arrays missing data integrated data type forms metadata implicit computational semantics visad programming language section fourth goal visualization techniques require minimal effort scientists programming shows integration metadata data objects relieves scientific programmers track missing data manage mapping including interpolation array index values physical values earth latitude longitude check bounds array accesses integration metadata data objects affects display semantics figures shows satellite image data displayed cartesian earth coordinate system defined latitude longitude system geographically registers image data object integrated satellite navigation metadata relieving user manage association images navigation information images displayed figure shows image generated polar orbiting satellite displayed earth-centered spherical coordinate system integration missing data affects display semantics figure edge-on view three-dimensional array radar echoes traditional treat lack echoes missing information spectrum polarity echoes missing values simply invisible figure figure satellite image displayed cartesian latitude longitude coordinate system color original figure image polar orbiting satellite displayed three-dimensional earth coordinate system color original figure three-dimensional radar data color original visad system integrates accuracy information data objects implicitly resolution samplings system design easily integrate form metadata explicitly real intervals section interval arithmetic computational semantics interval values moore including three-dimensional rectangles values three-dimensional real primitives samplings values exploited simple form data compression variable takes set samples missing variable stored single byte programs written satellite radiances real numbers stored -bit codes bytes interacting scientific displays section discussed lattice-structured display model defined terms set display scalars graphical primitives graphical primitives bertin display model location size texture color orientation shape shape texture bertin primitives sense composed graphical aggregates treat primitives visad display model fourth principle section tells mappings data aggregates display aggregates factored mappings data primitives display primitives shapes textures visad displays represent shapes textures data 
principle figure aggregate primitive points form complex shape point corresponds individual observation x-ray emanating interstellar gas shape points communicates great deal functioning instrument made observations figure x-ray events interstellar gas color original bertin restricted model physical displays static two-dimensional arrays color discussed section design logical displays animated three-dimensional interactive distinguish set physical displays set logical displays define mapping render implements traditional graphics pipeline iso-surface extraction projection dimensions clipping animation visad system display model defined terms display scalars color contour contourn animation selector selectorm terminology chapter maximal tuple represents graphical mark display maximal tuple values graphical mark location size virtual three-dimensional graphics space color specifies mark color animation specifies mark place duration animated sequence images illustrated figure contouri display scalars similar color determine mark appears appears contouri values tuples resampled field distributed three-dimensional voxel array fields depicted iso-level surfaces curves rendered voxel array selectori display scalars similar animation determine mark appears appears user selects set values selectori tuples selectori interval values overlap set included display note visad data model includes twoand threedimensional real primitives display model includes three-dimensional real primitive color includes twoand three-dimensional real primitives combinations graphical location plane selector scalars dimensionality scalars mapped chapter developed detailed analysis repertoire visualization mappings lattice-structured data models lattice-structured display models data display models visad system precisely conform assumptions theorem applied visad exact form visad system implement essential structure scalar mapping functions visualization mappings aggregate data objects factored continuous functions scalar types display scalar types visad deviates scalar mapping functions theorem including continuous functions twoand three-dimensional real scalars users control data displayed defining set mappings scalar types display scalar types illustrate mappings scalar types display scalar types control data displays data types defined time sequence satellite images type earth location real type radiance real type vis radiance real type variance real type texture real type time real type image region integer type image array earth location structure radiance vis radiance variance texture type image partition array image region image type image sequence array time image partition image pixel infrared visible radiances variance texture values derived infrared radiances image sequence time sequence images partitioned rectangular regions indexed image region types include scalars users control data objects displayed defining mappings scalars display scalars visad system mappings defined simple text editor figure shows data object image sequence type displayed colored terrain mappings map earth location plane map radiance axis map vis radiance color map variance selector map texture selector map image region selector map time animation user display scalar selector mapping system differentiates multiple occurrences selector selector selector note visad system supplies default continuous functions scalars display scalars included specification scalar mappings included mappings default functions linear range samplings scalar values range display scalar values practice defaults work make user task easier figure sequence object displayed terrain height function radiance mapped terrain height axis vis radiance mapped color sixteen image region values selected display time sequence animated color original fourth goals developed section state visualization techniques produce wide variety visualizations data require minimal effort scientists scalar mapping functions visad effective realizing goals effectiveness explained terms basic principles developed section fourth principle tells mappings data aggregates display aggregates factored mappings data primitives display primitives displaying data satisfies effectiveness conditions set mappings scalars display scalars principle tells data objects types unified single lattice-structured data model visualization mappings inherently polymorphic fact single display mapping applies data objects types beneficial impact visad system user interface single set scalar mappings control data objects user program displayed user defines set scalar mappings select data object display graphically picking display controls separate user scientific programs unlike previous visualization systems require calls visualization functions embedded programs section noted lattice-structured display model inconsistent functional view display view display defines functional relation location time color developed set constraints scalar mapping functions constraints depend type data object displayed guarantee generate displays consistent functional view display chosen enforce constraints visad system visad system experimenting visualization ideas generally opted restrictions users visad experiment visualization mappings satisfy expressiveness conditions experimented mapping scalar display scalar display scalar values calculated sum values scalar feature produce interesting images generally found scientists experience confirm expressiveness conditions goal developed section states visualization techniques enable users interactively alter ways data viewed visad design realizes goals making specification mappings data primitives display primitives easily edited change data displayed figure shows sequence data object figure displayed sets mappings top-right window displayed mappings figure map earth location plane map radiance axis map vis radiance color map variance selector map texture selector map image region selector map time animation display top-left window figure generated mappings map radiance color red map vis radiance color blue-green notice data primitive mapped color three-dimensional primitive user determines color factored components interactive color map icons shown figures display bottom-right window figure generated additional mappings map radiance selector map vis radiance color map time axis finally display bottom-left window figure generated mappings map earth location selector map radiance axis map vis radiance axis map variance axis map texture color map time animation visad system data objects displayed sets mappings simultaneously capability generate figure figure sequence object displayed sets mappings top-right figure top-left maps red vis blue-green color bottom-right maps selector time axis bottom-left maps vis variance axes maps texture color maps lat lon selector color original flexibility ways data displayed comparing data objects types illustrated lorenz developed set differential equations exhibit turbulence simple two-dimensional atmosphere lorenz roland stull atmospheric oceanic sciences department wisconsin-madison teaches atmospheric turbulence applied visad system algorithm integrates lorenz equations order illustrate turbulence students data types defined algorithm type atmos location real type temperature real type stream function real type atmos array atmos location structure temperature stream function type phase real type phase real type phase real type time real type phase point structure phase phase phase type phase history array time phase point lorenz equations describe temperature air flow rectangular cell two-dimensional atmosphere algorithm integrates lorenz equations path three-dimensional phase space recorded data object type phase history object displayed lower-left upper-left windows figure lower-left window defined mappings map atmos location selector map temperature 
selector map stream function selector map phase axis map phase axis map phase axis map time selector lower-left window shows data objects displayed colors red blue-green system automatically picks solid color displays data objects don include scalar values mapped color phase history object displayed path red points winds chaotically lobes three-dimensional shape called lorenz attractor data object type phase point displayed window single blue-green point marking point phase space path rectangular cell two-dimensional atmosphere displayed window figure window shows data object type atmos displayed mappings map atmos location plane map temperature color map stream function contour map phase selector map phase selector map phase selector map time selector color field temperature warm areas red cool areas blue contours stream function parallel air motion spacing wind speed direction air flow inferred knowledge warm air rises program executes window shows changing dynamics cell atmosphere lower-left window shows motion phase space point animation makes clear lobes lorenz attractor phase space correspond clockwise counterclockwise rotation two-dimensional atmosphere cell upper-left window figure shows phase history object displayed mappings map atmos location selector map temperature selector map stream function selector map phase axis map phase axis map phase selector map time axis upper-left window dimensions winding path phase space plotted time illustrating apparently random chaotic temporal distribution alternations phase space lobes figure views chaos window shows temperatures wind stream lines cell two-dimensional atmosphere bottom-left window shows trajectory atmospheric dynamics three-dimensional phase space top-left window shows trajectory phase space dimensions versus time color original goal developed section states visualization techniques enable users interactively alter ways data viewed achieving goal depends ease users control displays quickly system generate displays transformation data objects physical displays factored mappings render logical display model physical display model logical displays sets tuples display scalar values physical displays two-dimensional arrays colored pixels render function computed quickly essentially traditional graphics pipeline operations commonly implemented hardware focused optimizations function function set mappings scalars display scalars based embedding data objects lattice section data object interpreted set tuples scalar values tuple transformed tuple mappings scalars display scalars visad implementation exploits parallel vector techniques order achieve interactive response times tuples belonging data object processed independently partitioned processes execute parallel execute shared memory model common modern workstations easy port important branches algorithm processing tuples depend data types data values large sets tuples path algorithm processed groups allowing computations optimized tight loops vectors values entire groups typical values parallelization vectorization techniques effective producing fast implementation function discussed section display objects inherently interactive users interactive controls mapping render control projection three-dimensional space two-dimensional display screen rotate pan zoom dimensions control time sequencing scalars mapped animation control color maps scalars mapped color control iso-levels scalars mapped contouri scalars control selected sets values scalars mapped selectori scalars users interactive controls mapping selection data objects control data displayed selecting scalar display scalar mapped control mathematical mapping scalar values display scalar values scalars mapped spatial coordinates color control data objects displayed note multiple data objects displayed simultaneously ultimately display objects transformed lists three-dimensional vectors triangles rendering multiple data objects combined merging sets vectors triangles key design visad system treats definition scalar mappings items selection data objects display item interactive display control contrast automated techniques mackinlay mackinlay robertson robertson senay ignatius senay ignatius senay ignatius solicited set visualization goals user searched display design satisfied goals automated approach motivated desire minimize user effort generate data displays set scalar mappings complex set visualization goals scalar mappings control data displayed direct intuitive display-design algorithm interprets user visualization goals intuitively obvious making control scalar mappings interactive enable users explore variety ways displaying data objects algorithms interactive exploration displays generated intelligent display generation algorithms visualizing scientific computations chapter chapter developed visualization system approach based goals listed section visualization approach directly applied visualize executing programs interactive integrated scientific programming language enables scientists perform visual experiments computations data object defined scientific computation visualized visualized wide variety ways enables scientists find high-level problems algorithms interactive debuggers enable find low-level bugs debugger scientists control execution set breakpoints visad enables scientists visualize large complex data objects understand high-level problems algorithms visualization interfere scientific algorithms embed calls display functions programs distract scientists write display programs visad system easy simplest level visualization serves make data objects visible visualization microscope making invisible world visible visualization data objects understanding computational processes involving data objects bubble sort algorithm written visad programming language type time real type temperature real type temperature series array time temperature sort temperature series temperatures time time outer temperature swap bubble sort organized nested loops outer outer outer outerfor outer compare adjacent elements temperatures innertemperatures adjacent elements order exchange swap temperatures temperatures temperatures innertemperatures innerswap data objects declared program array sorted named temperatures type temperature series array temperatures indexed time outer loop indices array type time size array swap variable type temperature exchange elements array figure shows program running visad data objects displayed window size displayed change program runs displayed mappings map time axis map temperature axis figure visualizing computations bubble sort algorithm color original text defines mappings small window top screen temperatures array displayed graph set white points temperature versus time outer index displayed small green sphere lower horizontal axis note white points green sphere sorted index displayed small red sphere marks horizontal position current maximum bubbling temperatures array small blue sphere left hand vertical axis depicts swap variable display algorithm runs providing clear depiction bubble sort works called algorithm animation brown sedgewick visad displays generally asynchronous computations synchronized calls built-in function sync run computation visualize results change algorithm computational parameters figure visually experimenting algorithms copy figure ability make computations visible find problems algorithms experiment algorithms tune algorithm parameters places slightly emphasis system-user feedback loop shown figure time feedback loop figure user tuning algorithm minutes required user edit program experiment algorithm structure figure illustrates system-user feedback loop finding problems algorithms run computation save intermediate data objects visualization search incorrect final results visually compare incorrect data objects preceding data objects computation stop comparison consecutive data reveals incorrect computational step step back computation figure visually tracing back computational errors algorithm 
detecting clouds images good visad finding high-level problems algorithms data types defined algorithm type earth location real type radiance real type vis radiance real type image array earth location radiance type image array earth location structure radiance vis radiance type image region integer type image partition array image region image type image partition array image region image type count integer type histogram array radiance count input algorithm data object type image partition figure shows input data object displayed mappings map earth location plane map radiance axis map vis radiance color map image region selector map count selector algorithm partitions images rectangular regions processes region independently regions selected figure small bump straddling image regions left cloud output algorithm data object type image partition values non-cloud pixels set missing figure shows output generated figure image regions selected small cloud figure pixels marked noncloud error find error visually comparing data objects stages algorithm computations figure shows data objects type image partition data object displayed color white red green white image partition data object includes pixels overlaid red green data objects algorithm selects cloud pixels subsets non-missing pixels red green image partition data objects bump left white red green error computation made calculation image partition data objects colored red green pixels selected data objects radiance values lie clusters histograms data objects type histogram shown figure displayed mappings map earth location selector map radiance axis map vis radiance selector map image region selector map count axis white histogram data object includes radiance values overlaid red green histogram data objects red green histogram objects include radiance values lying clusters ranges radiance defined red green histogram objects select pixels red green image partition objects figure white histogram object generated population pixels image region pictured figure figure makes clear bump cloud left figure large generate detectable cluster histogram object figure possibly population evenly divided image regions found ultimate error computation figure close-up view regions sequence object displayed terrain note small bump undoubtedly cloud straddling regions left color original figure close-up view restricted cloudy pixels regions sequence object displayed terrain small cloud left figure detected cloud figure color original figure sequence objects displayed terrains radiance mapped terrain height axis vis radiance mapped color color original figure histogram objects displayed graphs algorithm judges red green points lie clusters define ranges radiance values define red green pixels figure color original algorithm detecting valid observations interstellar x-rays good visad system experimenting algorithms diffuse x-ray spectrometer sensed million distinct events january flight space shuttle sanders potentially observation x-ray emanating interstellar gas events valid wilton sanders richard edgar wisconsin-madison needed develop algorithm detecting valid events data types defined algorithm type time real type wavelength real type longitude real type pulse height real type position bin real type goodness fit real type occulted flag int type xray event structure time wavelength longitude pulse height position bin goodness fit occulted flag type event number int type count int type count int type event list array event number xray event type histogram array longitude array wavelength structure count count figure shows data object type event list displayed scalar mappings map longitude axis map wavelength axis map time axis map pulse height color map position bin selector map goodness fit selector map occulted flag selector map event number selector map count selector map count selector figure x-ray event displayed colored dot slider icons upper-right corner select range values event field mapped selector events field values fall selected ranges displayed easy experiment event selection criteria development event selection algorithm large number sets mappings defined order experiment selections based combinations event fields sanders edgar understand mechanisms produced invalid events figure shows data object type histogram frame defined map longitude axis map wavelength axis map count axis map count color map time selector map pulse height selector map position bin selector map goodness fit selector map occulted flag selector map event number selector histogram object frequency counts x-ray events bins wavelength longitude count values redundant count values included mapped axis mapped color display object oblique angle appears series short colored graphs longitude bin colored graph shows count function wavelength spectrum x-rays longitude bin types spurious events showed spikes one-dimensional two-dimensional histograms spurious events similar values event fields provided insight remove events displays histograms populations events selected algorithms provided insight selection criteria needed figure two-dimensional histogram x-ray events degree longitude bins vertical axis small wavelength bins horizontal axis viewed oblique angle object appears series short graphs showing x-ray spectrum longitude bin color original algorithm detecting cumulus clouds images good visad tuning parameters algorithms robert rabin rabin national severe storms laboratory working wisconsin-madison developed algorithm detecting cumulus clouds based infrared radiance visible radiance contrast quantity derived visible radiance data types defined algorithm type earth location real type radiance real type vis radiance real type contrast real type image array earth location radiance type vis image array earth location vis radiance type contrast image array earth location contrast separate selection criteria defined radiance vis radiance contrast figure shows data objects types image vis image contrast image displayed mappings map earth location plane map radiance color map vis radiance color map contrast color visualization figure tune cumulus cloud selection algorithm displayed data objects radiance vis radiance contrast values satisfy selection criteria set missing invisible color maps adjusted non-missing radiance displayed red non-missing vis radiance displayed blue non-missing contrast displayed green pixel image takes colors indicating combinations selections criteria pixels colored white selected criteria cumulus cloud pixels white red blue green interactively adjust selection criteria slider icons similar figure selection cumulus cloud pixels changed response adjustments understand colors criteria pixels fail selected figure visualizing criteria select cumulus clouds pixels satisfying infrared criterion colored red pixels satisfying visible criterion colored blue pixels satisfying contrast criterion colored green combinations colors pixels satisfying criteria pixels selected cumulus clouds colored white color original system organization system design stages explaining motivated goals section principles chapter section present overview system integrates scientific data computation display figure illustrates organization visad system system computing components occupy left side diagram display components occupy side linked 
data component information system display component flow data computation components emphasizing system display functions intrude user science programs figure shows user interface divided components relating computation relating display computational user interface divides editor defining editing programs editor defining data types part text programs controls program execution include controls starting stopping execution executing single program statements setting values slider icons read calls intrinsic function slider illustrated figure execution breakpoints set cleared graphically picking program statements program text editor highlighting statements program text display user interface divides editor defining mappings data scalar types display scalar types mappings control transformation data logical displays data objects selected de-selected display graphically picking names program text editor highlighting names program text controls rendering transformation logical physical displays render function include controls animation color maps selecting ranges values scalars mapped selector contour levels projection dimensions rotate pan zoom physical displays visible user note deviations clean separation user interface functions involve graphically picking highlighting text segments program text editor specifically program statements selected breakpoints data objects selected display graphical user interface designing data control flow programs system adopted graphical picking functions naturally integrated text based programming interface system organization shown figure consistent variety future system extensions display model extended adding display scalars module added design default scalar mappings aggregate data types require system source code difficult based goals developed section system designed make easy users define data types displays programs building generality system user interface seek reduce system system diagram shows connection external functions socket interface visad programs link functions written fortran possibly running remotely computer connected network ability define links compiled functions important robustness scientific computing environments mature scientific programming environments typically include hundreds user-defined functions ways scalar values sample onetwo- three-dimensional real values extensible system supports variety built-in samplings two-dimensional map projections geographically registering common meteorological satellites easy define built-in sampling functions system users define onetwo- three-dimensional samplings programming language system design defines simple capabilities users flexibly combine produce complex applications users define complex data types hierarchies scalars tuples arrays express complex metadata samplings missing data define complex algorithms general scientific programming language define complete set data displays mappings data primitives display primitives program text program compiler program code interpreter execution controls user interface user user editor data types object protocol external functions socket interface mapping text mapping compiler scalar mappings display algorithm logical displays rendering user user editor rendering parameters user interface objects figure visad system organization chapter applying lattice model recursive data type definitions section showed function satisfying expressiveness conditions lattice isomorphism section applied result specific lattice structures defined scientific data display models result applied complete lattices natural apply result lattice structures data display models motive lattice structures data models display models motivated visualize data data model defined section includes tuples arrays ways aggregating data include linked list structures defined terms pointers chapter describe issues extending lattice theory data types handling objects pointers recursive data types definitions denotational semantics programming languages techniques defining ordered sets members values programming language expressions gunter scott schmidt scott scott important topic denotational semantics study recursive domain equations define cpos recursively cpo defined appendix recursive domain equation schmidt data type binary tree defined bintree data data bintree bintree type construction operators similar tuple array operators defined section operator denotes type choice types similar union language denotes type cross product types essentially tuple operator data bintree bintree -tuple subscript type adds element set values type defines data type called bintree bintree object data object type data -tuple consisting data object type data data objects type bintree intuitively data object type bintree missing leaf node data non-leaf node data child nodes obvious implement binary trees define record structure node tree include pointers nodes record structure general recursive type definitions implemented pointers inverse limit construction equality recursive domain equation isomorphism explained schmidt equation solved inverse limit construction bintree construction starts bintree applies repeatedly bintree data data bintree bintree bintree data data bintree bintree construction specifies retraction pair bintreei bintreei embeds bintreei bintreei projects bintreei bintreei retraction pair defined appendix bintree set infinite tuples form shown bintree isomorphic data data bintree bintree solves recursive domain equation order relation infinite tuples bintree defined element-wise order relation finite tuples defined section bintree cpo note inverse limit construction applied solve sets simultaneous domain equations cpos defined inverse limit construction generally lattices order apply prop cpos embedded complete lattices dedekind-macneille completion shows partially ordered set complete lattice order embedding davey priestley set bintree objects defined inverse limit construction includes infinite trees denotational semantics include values non-terminating computations non-terminating computations produce infinite trees values result display functions lattice isomorphisms depends assumption data display lattices complete data lattice define includes solutions recursive domain equations include infinite data objects inverse limit construction defines set data objects data type solves recursive domain equation approach section define large lattice contained data objects data types continue approach defining lattice includes data types constructed scalar types tuples arrays solutions recursive domain equations subject section universal domains fundamental result theory ordered sets fixed point theorem cpo continuous function fix fix fix fix fixed point fix fixed point scott developed elegant solve recursive domain equations applying fixed point theorem scott gunter scott idea solution recursive domain equation fixed point function operates cpos scott defined universal domain set retracts set retracts set projections set finitary projections set closures set finitary closures terms defined appendix showed set type construction operators operators build cpo cpo represented continuous functions sense continuous function makes diagram figure commute cpo cpo figure type construction operator represented function note unary similar commuting expressions hold multiary operators recursive domain equation composed operators continuous function represents fixed point theorem fixed point fix fix fix fix fix cpo satisfying recursive domain equation solution domain equation set simultaneous domain equations involving type construction operators cpo subset universal domain approach similar embedded data types complete lattice coincidentally denoted section universal domains representations defined sets include type constructors denotational semantics including common universal domain complete lattice power set subsets natural numbers general embeddings data types universal domains defined papers denotational 
semantics suitable display theory single integer object type function integers integers object type embedded member power display function applied lattice power embeddings produce display integer function integers integers displays effectively communicate information data objects embeddings types universal domains developed display recursively defined data types goal visualization communicate information data people extension theory focus data lattice display function lattice isomorphism sublattice structure subset solution recursive domain equation set data objects recursively defined data type isomorphic solution recursive domain equation set solution bintree set solve equation isomorphism definition operators defines relation tree objects subtree objects isomorphism interpret operators relations graphical display logical structure exists complexity structure display objects interpreted graphical equivalent pointers implement data objects graphical analogs pointers commonly displays diagrams icons represent nodes data objects lines icons represent pointers hypertext links visible contents display screen represents nodes data object icon embedded display screen represents interactive link node set nodes user selects icon mouse point click display screen contents depicting display object possibly objects referenced icon order extend display theory data types defined recursive domain equations extend display lattice include graphical interpretations pointers difficult open problem find produces display lattice complex isomorphic universal domain section chapter conclusions thesis motivated physical scientists visualization techniques applied data wide variety scientific applications produce wide variety visualizations data interactive require minimal effort scientists integrated scientific programming environment approach achieve generality simplicity developing abstractions scientific data scientific displays visualization mapping data displays main contributions limitations main contributions thesis summarized development system scientific visualization enables wide variety visual experiments scientific computations system integrates visualization scientific programming language express scientific computations programming language supports wide variety scientific data types integrates common forms scientific metadata computational display semantics data data object defined program language visualized wide variety ways program execution displays controlled set simple mappings program logic mappings independent data type separate user scientific programs clear distinction previous visualization systems require scientists embed calls visualization functions programs computation visualization highly interactive selection data objects display controls displayed treated interactive display control interactive rotation previous visualization systems require user alter program order make generality integration interactivity ease-of-use system enhance user ability perform visual experiments algorithms introduction systematic approach analyzing visualization based lattices defined set data objects set displays showed lattice structure expresses fundamental property scientific data displays approximations physical world visualization repertoire system defined set mappings form common define system visualization repertoire enumerating set functions enumerated repertoire justified tastes experience people decide functions include set contrast interpreted wellknown expressiveness conditions visualization mapping terms lattice structure defined visualization repertoire set functions satisfy conditions repertoire justified generality expressiveness conditions showed visualization mappings satisfy conditions lattice isomorphisms lattice structures defined wide variety data display models result applied analyze visualization repertoires wide variety situations demonstration specific lattice structure unifies data objects scientific types data model demonstration lattice structure express interactive animated three-dimensional displays display model models integrate kinds scientific metadata computational display semantics data context scientific data display models showed expressiveness conditions imply mappings data aggregates display aggregates factored mappings data primitives display primitives showed display mappings complete sense characterized mappings satisfying expressiveness conditions results limitations foremost include data objects pointers visualization techniques applicable data objects general programming languages thesis developed single lattice-structured scientific data model real numbers approximated intervals functions approximated finite sets samples values ways approximate numbers functions based serve basis lattice-structured models scientific data display model developed thesis models ways computers generate displays model ways people perceive displays finally thesis considered conditions visualization mappings based lattice structures conditions based kinds mathematical structures future directions work presented thesis extended lattice-structured models data displays analytic conditions visualization functions based types mathematical structures lattices specific future directions include extend visad system display model include display scalars transparency reflectivity flow vectors interpreted including volume flow rendering techniques mapping render extending visad system supply default mappings controlling displays data objects accomplished integrating visad work automating design displays robertson senay ignatius senay ignatius beshers feiner extending lattice results data objects pointers data objects recursively-defined data types chapter showed embed scientific data objects data types lattice chapter showed extended describing scott technique embedding data objects recursively-defined data types lattice graphical analogs data objects pointers scott embeddings suitable visualization finding ways extend scott embeddings form suitable visualization important step enable extend visad system general programming language scientific programming language defining lattice structures based forms approximations numbers functions intervals finite samplings data objects identified sets mathematical objects apply math math define lattice structure data model functions approximated finite sets fourier coefficients finite sets function values analytic approach great potential making study visualization rigorous systematic difficult explicitly identify assumptions synthetic approach visualization assumptions explicit analytic approach analytic conditions visualization mappings based mathematical structures defined data display models thesis explored consequences single set conditions defined terms lattice structures full potential analytic approach realized exploring wider set conditions based variety mathematical structures data display models topological structures metric structures symmetry structures structures based arithmetic operations type hierarchy structures kinds structures define conditions visualization mappings conditions express wide range visualization goals mathematical analysis visualization mappings satisfying conditions provide rigorous foundation visualization defining structures display models express principles human perception metric defined perceived distance displays measured psychology experiments predicted psychological models alternatively perception displays invariant operations time translation spatial translation expressed defining symmetry groups sets displays appendix definitions ordered sets appendices formal definitions propositions proofs developing model display process based lattices list basic definitions theory ordered sets def partially ordered set poset set binary relation reflexive anti-symmetric transitive def upper bound set element def upper bound set exists upper bound upper bound upper bound denoted written def lower bound set element def greatest lower bound set exists lower bound lower bound greatest lower bound denoted inf inf written def subset set define define def subset set define define def subset chain def subset directed finite subset def poset complete called cpo directed subset upper bound element def posets notation denote set functions def posets function strict def posets function monotone notation mon denote set monotone functions def posets function order embedding def posets function set notation 
denote def cpos function continuous monotone directed def cpo compact directed def cpo algebraic compact directed def cpo domain algebraic countable number compact elements ordered sets programming language semantics domains def poset lattice exist def poset complete lattice exist def lattices function lattice homomorphism bijection lattice isomorphism def binary relation set equivalence relation reflexive symmetric transitive def idd denotes identity function function def cpo continuous function retraction retraction projection idd finitetary projection addition domain retraction closure idd finitetary closure addition domain def cpos pair continuous functions retraction pair idd ide function called embedding called projection appendix proofs section present technical details section interpret mackinlay expressiveness conditions condition mon mon condition mon mon prop satisfies condition monotone bijection proof function condition requires functon conditon requires bijection assume condition monotone function bijection equivalent monotone prop conditon strong requires display display data object complete lattice maximal data object upper bound members data objects monotone implies notation set displays complete lattice data objects replace condition order require display data object modify condition condition mon mon def function display function satisfies conditions propositions demonstrate consequences definition prop display function bijective order embedding proof part function condition requires functon bijection show order embedding assume condition monotone function assume condition monotone function bijection equivalent order embedding part note part part part corollary prop show display functions lattice isomorphisms continuous sense defined scott prop display function lattice isomorphism sublattice display function continuous proof assume display function prop lattice homomorphism sublattice prop bijective lattice isomorphism assume lattice isomorphism order embedding injective defined mon define set includes defined function monotone monotone equivalent satisfies condition mon define function monotone monotone lattice isomorphism bijection equivalent satisfies condition display function display function order embedding monotone directed set prop continuous appendix proofs section present technical details section lattices data objects displays defined terms scalar types scalar type defines set discrete continuous includes undefined symbol denote set real numbers def discrete scalar defines countable set includes element discrete order def continuous scalar defines set set closed real intervals order defined prop discrete continuous scalars cpos discrete scalars domains continuous scalar algebraic compact element domain proof discrete scalar complete show continuous scalar complete directed set show interval set max min set directed implies contradiction continuous pick compact set nan directed set interval contained compact element continuous define tuple space cross product set scalar sets define data lattice members sets tuples note notation cross product members set def finite set scalars set tuples element denote component tuple define order relation prop defined sups infs componentwise cpo proof upper bound upper bound upper bound upper bound argument similar directed set ais finite subset finite subset ais directed set showed complete def power denote set subsets explained section power lattice structure define equivalence classes power scott topology scott topology defines open closed sets def set open directed subsets def set closed directed subsets denote set closed subsets def define relation power open define relation power prop relation equivalence relation proof open reflexive symmetric transitive equivalence relation equivalence classes ordered show closed sets scott topology place equivalence classes def equivalence class relation prop equivalence class relation proof pick open prop equivalence class relation proof show open directed set open shows closed prop equivalence classes relation closed set equivalence class proof note open complement denoted open conversely one-toone correspondence closed sets equivalence classes closed set belongs equivalence class open contradicts proposition showed correspondence equivalence classes show closed sets obey usual laws governing intersections unions closed sets topology prop set closed subsets closed finite closed proof directed subset closed assume finite directed subset assume closed finite sets contradicts closed directed set subset closed show equivalence classes relation equivalently form complete lattice prop set equivalence classes relation defined similarly defined smallest closed set equivalence classes relation form complete lattice equivalently complete lattice finite proof prop closed prop equivalence class equivalence class prop intersection closed sets closed set prop equivalence class equivalence class finite closed equal prove propositions determining sets tuples closed prop proof denote tuple components order relation sups infs cross product componentwise sufficient prove proposition tuple component show discrete discrete order conclusion true continuous members real intervals order relation corresponds inverse interval containment corresponds intersection intervals inf corresponds smallest interval union intervals note show words intersection intervals min max contained interval intersection intervals max min min max max min min max min similarly showing needed containment prop directed closed proof show set prop show directed finite set ibi ibi ibi ibi directed set show closed sups directed subset show directed set define finite note exists exists finite belongs member subset finite union members closed set belong closed set belongs pick finite set finite subset iqi finite subset uici iqi directed subset member closed sups closed set appendix proofs section present technical details section def set data types defined set scalars functions dom defined dom dom defined dom struct struct uisc dom struct uidom array array dom array dom type struct tuple element types type array array domain type range type set scalars occurring dom set scalars occurring array domains note scalar occur type def scalar define countable set closed infs sups member set members discrete implies recall defined discrete scalars countable sets note continuous cpo def scalar fin finite def extend definition struct array fin def define embedding struct eti array notation closed set tuples show prop tuple merges noncomponents tuples types defined disjoint sets scalars similarly tuple merges noncomponents tuples scalar occur type prop show map members members def define prop tuples proof prove induction structure true struct pick fti bns induction bis uisc uisc array pick induction propositions show maps members closed sets mapping injective prop closed set proof prove induction structure closed prop struct show eti closed show down-set pick eti sets prop show closed sups directed sets pick directed set eti show directed set pick finite subset directed note disjoint sets noncomponents directed eti closed sups directed sets array show closed define note estruct struct tuple type hstruct argument tuple types closed note finite union finite number closed 
sets closed prop embedding injective proof prove induction structure scalar assume loss generality struct inductive hypothesis etk etk assume loss generality etk etk pick eti etk cks cis array case assume loss generality assume loss generality pick case inductive hypothesis assume loss generality pick injective define order relation members simply assuming order embedding injective map pair members member induce anti-symmetric relation def order induces simple intuitive structure proposition shows prop scalar struct eti eti order relation tuples defined element-wise array array array embedding sample embeddings set values samples greater proof recall members closed sets ordered set inclusion scalar assume struct eti eti eti eti assume eti eti parenthetical argument assume etk eti eti prop dis cks dks impossible eti etk eti eti words eti eti array assume continuing chain assume result parenthetical argument tuple case proof pick define appendix proofs section present technical details section def define max max consists maximal elements zorn lemma non-empty ordered set chain upper bound maximal element prop max max proof pick define chains directed set closed empty chain upper bound zorn lemma maximal element contradicting maximality max max max max closed max max prop max max proof assume max max show converse assume loss generality max max down-set max max max prop max proof max max open max max open max max max prop tuple type struct fti max max proof note tuples tuples componentwise ans note max ais bis ajs bjs ais bis max conversely max ajs bjs max prop types max finite max struct max max array max max max proof demonstrate proposition induction structure max max single member finite struct prop max max inductive hypothesis max finite max finite array finite set fin function define object fstruct tuple type struct prop max max max max pick max max max max contradicts defintion fin max larger max max max max max max max max finite inductive hypothesis max max finite max finite appendix proofs section present technical details section definitions provide context work subsequent appendices def denote finite set scalars denote set tuples denote lattice data objects consisting closed sets tuples primitive values scalars def denote finite set display scalars denote set tuples denote lattice displays consisting closed sets tuples primitive values display scalars prove propositions lemmas proofs prop proof prop proof note element largest element impossible similarly prop display function inverse continuous function proof function injective monotone order embedding continuous directed homomorphism directed set continuous simplifies showing continuous prop display function proof prop equivalent applying sides define open neighborhood tuple prove lemmas note notation component tuple def tuple continuous define neighbor set tuples discrete continuous continuous prop set neighbor open scott topology proof neighbor set directed set belongs neighbor componentwise discrete css continuous continuous intervals max min exist directed css shown css finite directed neighbor neighbor open set prop set open set proof closed smallest closed set sets set prop directed closed equal directed set open define embeddings scalar objects display scalar objects lattices def scalar define embedding notation elements tuple define def display scalar define embedding define argument involving open neighborhoods show display function maps embedded scalar objects displays form display tuple prop show embedded display scalar objects prop display function proof prop note exists show closed sets prop show finite complex argument construct define sequence tuples continuous interval ans continuous ans discrete ans ans define note neighbor anis open neighbor anso prop neighbor ansay intersection neighbor anan- and- equivalently xnd anxn xnxn set chain directed set cpo closed sups note hand prop showed display function maps embedded scalar objects displays form display tuple show embedded display scalar objects embedded scalar objects mapped embedded display scalar objects kind discrete continuous prop display function discrete discrete continuous continuous proof form belongs prop prop discrete continuous cases separately discrete carry continuous define wef elements tuple define wef similarly prop real intervals belong continuous scalar smallest interval interval hand contradicts show discrete scalar values map discrete scalar values continuous scalar values map continuous scalar values discrete continuous impossible discrete discrete continuous continuous show embedded objects scalars mapped display scalar embedding prop display function proof assume notation treat continuous case prop real intervals smallest interval contradicts treat discrete case note set elements tuple fact impossible discrete order contradicts corollary prop show embedded scalar objects mapped embedded display scalar objects non-scalar objects mapped non-display scalar objects prop display function proof scalar embedding assume scalar embeddings prop mapped belong display scalar embedding show embedded objects continuous scalar mapped embedded objects display scalar note embedded objects discrete scalar mapped embedded objects display scalars prop display function continuous scalar proof assume continuous notation prop real intervals smallest interval contradicts show display function maps objects form objects form conversely values display functions objects form determined values embedded scalar objects easy step prop show values display functions determined values embedded scalar objects prop display function tuple exists tuple conversely tuple exists tuple prop similarly prop assert tuple elements determine tuple elements vice versa values scalar embeddings proof similar proof prop prop note exists define sequence tuples discrete ans continuous ans continuous ans define note neighbor anis open neighbor anby prop neighbor ansay intersection neighbor anan- and- tuple components define xnd ans set xnd ans define xnd ans xnd set ans xnd note xnd xnd prop form ans ans exists xnd show xnd ans xnd ans ans ans ans xnd ans ans xnd xnd xnd transition fourth line shows ans ans scalar xnd xnd display scalar show ans xnd ans xnd xnd ans xnd ans transition fourth line shows xnd display scalar ans scalar putting shows ans ans xnd xnd discrete display scalar xmd xnd define xnd continuous display scalar xnd xid xjd case define case define case nxnd defining tuple components nxn closed directed set definition nan shown and- and- closed define xnd ans xnd ans apply logic show takes set tuple components set tuple components converse tuple argument converse identical relying properties shared homomorphism props show continuous preserves arbitrary sups argument applied members guaranteed defined proposition show values display 
functions determined values scalar embeddings interesting elements expressed sups sets elements scalar embeddings prop display function values determined values scalar embeddings proof prop tuple prop determined values applied tuple components determined values scalar embeddings propositions appendix combined definition theorem mappings scalars display scalars def display function define mapping mapd power mapd theorem display function injective lattice homomorphism values determined values scalar embeddings maps values scalar embedding values display scalar embeddings mapd discrete mapd discrete continuous mapd continuous mapd mapd continuous mapd single display scalar appendix proofs section present technical details section prove lemmas explore relation closed real intervals terms lattice structure prop continuous scalar proof prop continuous scalar set inf proof inf inf exist lower upper bounds exist prop display function continuous scalar proof prop prop hand define values display functions embedded continuous scalar objects terms functions real numbers def display function continuous scalar prop prop continuous values mapped values define functions injective maps intervals intervals defined define functions prop show functions defined terms functions prop display function continuous scalar inf proof prop prop define prop inf prove lemmas studying functions prop display function continuous scalar finite set inf inf inf proof finite inf exist prop inf inf inf inf prop inf inf prop display function continuous scalar proof show behavior display function continuous scalar fall categories prop display function continuous scalar implies implies proof prop min max prop impossible equalities hold impossible similar argument applies relation min max implies show true true apply assume applies case applies case assume assumptions impossible applying result previous paragraph applies applies similarly apply assume applies case applies case assume assumptions impossible applying result previous paragraph applies applies results paragraphs applied show applied consistently chain triples applies applies triples pick applies uniformly triples applies uniformly triples proving proposition define names categories established prop def display function continuous scalar prop applies triples applies increasing applies decreasing prop showing categories established prop apply functions prop display function continuous scalar set inf proof union closed sets closed equals prop prop inf assume pick contradicts similar argument shows inf show categories behavior established prop apply functions prop display function continuous scalar increasing decreasing proof assume increasing prop prop similarly pick prop prop inf prop similarly pick prop assume decreasing prop prop similarly pick prop prop inf prop similarly pick prop show functions continuous functions real variables key idea increasing decreasing discontinuous gap values contradicts prop prop display function continuous scalar functions continuous topological sense proof assume increasing prop monotone increasing assume discontinuous fix satisfying contradicts case prop prop prop prop inf impossible discontinuous case prop prop prop prop inf impossible discontinuous proof continuous proofs continuous decreasing virtually identical prop completes list conditions functions define sufficient conditions display functions prop display function continuous scalar lower bound upper bound proof prop prop prop lower bound proof upper bound virtually identical impossible results appendix summarized definition def pair functions called continuous display pair lower bound upper bound continuous increasing decreasing appendix proofs section present technical details section def finite set scalars finite set display scalars function scalar mapping function function mapd power mapd mapd continuous mapd single continuous discrete mapd discrete continuous continuous display pair inf mapd discrete mapd represents tuple components values defined values defined definition variety expressions subsets proposition shows expressions consistent subsets overlap involves showing monotone prop definition scalar mapping functions values defined consistent monotone proof apply conflict definition apply conflict definition definition consistent empty set objects defined apply disjoint sets conflict applies objects defines singleton set defined consistent applies objects consistent consistent objects show consistency defines show consistency show definition monotone monotone relation discrete monotone default continuous inf inf monotone monotone monotone consistent remains show monotone monotone show prop values scalar mapping function decomposed values auxiliary function define auxiliary function show order embedding prove lemmas proof prop def scalar mapping function define prop scalar mapping function order embedding proof mapd note monotone mapd mapd chain logical equivalences prop scalar mapping function proof implies discrete continuous inf inf continuous lower bound continuous upper bound increasing decreasing increasing inf inf decreasing inf inf determined set prop scalar mapping function directed set proof directed set order embedding directed exists sups componentwise discrete continuous real intervals adopt convention intersection inf inf mapd inf inf increasing continuous inf inf inf inf inf inf inf decreasing continuous inf inf inf inf inf inf inf case show scalar mapping function defined terms auxiliary function prop scalar mapping function proof show closed closed assume prop assume directed order embedding directed prop closed show definition scalar mapping functions comparing definition prop smallest closed set closed propositions show scalar mapping function satisfies conditions display function prop scalar mapping function order embedding injective proof prop members ordered set inclusion prop order embedding injective order embedding prop scalar mapping function surjective function proof assume show proof prop show closed set member assume closed assume directed directed order embedding prop closed results sections show display functions completely characterized scalar mapping functions summarized theorem theorem display function scalar mapping function proof display function theorem shows satisfies conditions definition scalar mapping functions theorem props show satisfies condition prop shows satisfies condition prop shows satisfies condition proof prop shows satisfies condition scalar mapping function scalar mapping function props show display function appendix proofs section present technical details section define set display scalars red green blue transparency reflectivity vectorx vectory vectorz contour contourn animation selector selectorm define subset display scalars domds animation selector selectorm define ydomds domds pdomds ydomds natural projection pdomds domds define vdisplay def vdisplay max pdomds pdomds object vdisplay tuples set values display scalars domds prop define conditions displays data objects members vdisplay prove lemmas note notation component tuple prop type tuples mapd proof prop prop mapd prop mapd prop tuple type struct fti max max proof note tuples tuples componentwise note prop mapd mapd max aid bid ajd bjd aid bid max conversely max mapd ajd bjd max prop tuple type struct proof prove note tuples prop bis bjs exists prop prop mapd prop mapd mapd aid ajd exists prop 
components determine components components determine components bis bjs components components proving prop conversely prop prove pick prop directed set prop sups tuples componentwise mid mjd closed proves show max finite data objects types demonstrate conditions ensure displays data objects type vdisplay prop display function types max finite mapd dom domds vdisplay proof demonstrate parts proposition induction structure note subtype mapd dom mapd dom satisfies hypothesis part subtypes satisfy hypothesis part note mapd dom domds theorem mapd max max single member finite vdisplay vdisplay struct ftn prop prop apply prop prop ftn prop max max inductive hypothesis max finite max finite assume mapd dom domds vdisplay assume part proposition true max pdomds pdomds sups componentwise tuples bnd cnd pdomds pdomds domds pick domds show bid cid mapd mapd bid cid bid cid mapd bid cid pdomds pdomds implies domds bid cid pdomds pdomds hand mapd bie cie mapd imply mapd bje cje bie cie implies inductive hypothesis shown pdomds pdomds assumption vdisplay led contradiction vdisplay array finite set fin function define finite union objects fstruct tuple type struct union finte set closed sets sets preserves sups shown tuple case proof equal recall max set maximal elements clear max max max max max prop max max max finite inductive hypothesis max max finite max finite assume mapd dom domds shown scalars max single member max applying prop mapd dom mapd domds domds pdomds pdomds pick max assume pdomds pdomds max max max max pdomds pdomds mapd mapd pdomds pdomds pdomds pdomds contradicts assumption max single member max mapd mapd implies pdomds pdomds pdomds pdomds inductive hypothesis vdisplay pdomds pdomds establishing vdisplay vdisplay proposition shows auxiliary function compute maximal tuples display objects prop display function auxiliary function defined appendix max max proof prop prop order embedding max max inverse part prop true propositions make precise prop display function array domds vdisplay proof fin pick define pick max members note members max max maximal mapd mapd members max domds pdomds pdomds mapd mapd vdisplay prop display function sub-type vdisplay vdisplay proof inductive argument prove sub-type tuple struct pick max pdomds pdomds pick max define mapd mapd max max pdomds pdomds pdomds pdomds pdomds pdomds pdomds vdisplay array array proof prop max single member vdisplay pick fin pick max pdomds pdomds define erd- implies exists implies erd- exists max members max mapd mapd pdomds pdomds vdisplay bibliography avila taosong lichan kaufman pfister silva sobierakski wang volvis diversified volume visualization system proc ieee visualization bancroft merrit plessel kelaita mccabe globus fast multi-processed environment visualization computational fluid dynamics proc ieee visualization bertin semiology graphics berg wisconsin press beshers feiner automated design virtual worlds visualizing multivariate relations proc visualization ieee bier stone pier buxton rose toolglass magic lenses seethrough interface proc acm siggraph brittain aller wilson s-l wang design end-user data visualization system proc ieee visualization brodlie poon wright brankin banecki gay grasparc problem solving environment integrating computation visualization proc ieee visualization brown sedgewick system algorithm animation computer graphics chen mountford sellen study interactive rotation control devices computer graphics corrie mackerras data shaders proc ieee visualization davey priestly introduction lattices order cambridge press defanti brown mccormick visualization expanding scientific engineering research opportunities ieee computer domik gutkauf user modeling adaptive visualization systems proc ieee visualization duff interval arithmetic recursive subdivision implicit functions constructive solid geometry computer graphics foley van dam fundamentals interactive computer graphics addison-wesley gierz hofmann keimal lawson mislove scott compendium continuous lattices springer-verlag globus levit lasinski tool visualizing topology three-dimensional vector fields proc ieee visualization green kass error-bounded antialiased rendering complex environments proc acm siggraph gunter scott semantic domains handbook theoretical computer science vol van leeuwen mit press elsevier haber lucas collins data model scientific visualization provisions regular irregular grids proc visualization ieee haberli conman visual programming language interactive graphics computer graphics haeberli akeley accumulation buffer hardware support high-quality rendering computer graphics haltiner williams numerical prediction dynamic meteorology edition john wiley sons hanrahan lawson language shading lighting calculations computer graphics hansen hinker massively parallel isosurface extraction proc ieee visualization helman hesselink surface representations twoand three-dimensional fluid flow topology proc ieee visualization hibbard computer generated imagery meteorological data bull amer met soc hibbard display meteorological data proceedings workshop interactive graphics chapel hill siggraph hibbard santek interactivity key chapel hill workshop volume visualization north carolina chapel hill hibbard santek visualizing large data sets earth sciences ieee computer hibbard uccellini santek brill application mcidas model diagnostic study presidents day cyclone bull amer met soc hibbard santek visd system easy interactive visualization proc visualization ieee hibbard santek tripoli interactive atmospheric data access high speed networks computer networks isdn systems hibbard dyer paul display scientific data structures algorithm visualization proc ieee visualization hibbard dyer paul lattice model data display proc ieee visualization hibbard paul battaiola santek m-f voidrot-martinez dyer interactive visualization computations earth space sciences ieee computer hultquist raible superglue programming environment scientific visualization proc visualization ieee itoh koyamada isosurface generation extrema graphs proc ieee visualization kass condor constraint-based dataflow computer graphics kochevar ahmed shade sharp bridging gap visualization data management simple visualization management system proc ieee visualization lang lang ruhle integration visualization scientific calculation software system proc ieee visualization lee grinstein database issues data visualization proc ieee visualization workshop springer-verlag levkowitz color icons merging color texture perception integrated visualization multiple parameters proc ieee visualization lischinski smits greenberg bounds error estimates radiosity proc acm siggraph lohse rueter biolsi walker classifying visual knowledge representations foundation visualization research proc ieee visualization lorensen cline marching cubes high-resolution surface construction algorithm computer graphics lorenz deterministic nonperiodic flow atmos sci lucas abrams collins epstein gresh mcauliffe architecture scientific visualization system proc ieee visualization mackinlay automating design graphical presentations relational information acm transactions graphics matveyev approximation isosurface marching cube ambiguity problem proc ieee visualization mcconnell lawton software environments proc iuw mccormick defanti brown eds visualization scientific computing computer graphics montani scateni scopigno discretized marching cubes proc ieee visualization moore interval analysis prentice hall nadas fournier grape environment build display processes computer graphics nielson hamann asymptotic decider resolving ambiguity marching cubes proc ieee visualization ning hesselink fast volume rendering 
compressed data proc ieee visualization perlin fox pad alternative approach computer interface proc acm siggraph potmesil hoffert frames software tools modeling animation rendering scenes computer graphics rabin stadler wetzel stensrud gregory observed effects landscape variability convective clouds bull amer meteor soc ranjan fournier volume models volumetric data ieee computer rasure argiro sauer williams visual language software development environment image processing international imaging systems technology vol read fussell silberschatz algorithms sandbag approach imprecise set representation technical report tr- department computer sciences texas austin robertson methodology scientific data visualization choosing representations based natural scene paradigm proc ieee visualization robertson methodology choosing data representations computer graphics applications robertson earnshaw thalman grave gallup jong research issues foundations visualization computer graphics applications rogowitz treinish architecture rule-based visualization proc ieee visualization rolf helman iris performer high performance multiprocessing toolkit real-time graphics proc acm siggraph sanders edgar juda kraushaar mccammon snowden zhang skinner jahoda kelley smalle stahle szymkowiak preliminary results diffuse x-ray spectrometer euv x-ray gamma-ray instrumentation astronomy spie vol schmidt denotational semantics brown schroeder lorenson montanaro volpe visage object-oriented scientific visualization system proc visualization ieee scott lattice flow diagrams symposium semantics algorithmic languages engler springer-verlag scott data types lattices siam comput scott lectures mathematical theory computation broy schmidt eds theoretical foundations programming methodology nato advanced study institutes series reidel dordrecht segal tolerances guarantee valid polyhedral modeling results computer graphics senay ignatius compositional analysis synthesis scientific data visualization techniques scientific visualization physical phenomena patrikalakis springer-verlag senay ignatius knowledge-based system visualization design computer graphics applications snyder interval analysis computer graphics computer graphics springmeyer blattner max characterization scientific data analysis process proc ieee visualization treinish siggraph workshop report data structure access software scientific visualization computer graphics tuchman jablonowski cybenko run-time visualization program data proc ieee visualization twiddy cavallo shiri restorer visualization technique handling missing data proc ieee visualization upson faulhaber kamins laidlaw schlegel vroom gurwitz van dam application visualization system computational environment scientific visualization computer graphics applications wehrend lewis problem-oriented classification visualization techniques proc ieee visualization williams rasure hansen state art visual languages visualization proc ieee visualization wyvill mcpheeters wyvill data structures soft objects visual computer 

sunny rainy foggy start end 
space time time computational vision optical flow point tracking edge detection stereopsis dynamic static recognition-from-motion structure-from-motion time time parameter space surface cos sin time surface patch sizesmoothing kernel error radians patch sizesmoothing kernel error radians patch sizesmoothing kernel error radians patch sizesmoothing kernel error radians translation pixels error radians patch size patch size patch size rotation radians error radians patch size patch size patch size standard deviation noise sequence gray-level error radians translation rotation standard deviation noise motion radians error radians patch size patch size standard deviation noise motion pixels error radians patch size patch size standard deviation noise temporal sampling rate error radians patch size patch size standard deviation noise temporal sampling rate error radians patch size patch size time time time difference item spatiotemporal surface time absolute relative common absolute relative common 
articles magazine understanding charniak goldman goldman vision levitt mullin binford heuristic search hansson mayer fair bayesian networks large segment ai-uncertainty community resolution theorem proving ailogic community obvious importance ideas techniques spread research community responsible ideas techniques easy understand hope rectify situation making bayesian networks accessible probabilistically unsoover years method reasoning probabilities variously called belief networks bayesian networks knowledge maps probabilistic causal networks popular probability uncertainty community method summarized judea pearl book ideas product hands adopted pearl bayesian networks grounds completely neutral status networks represent beliefs causality bayesian networks applied problems medical diagnosis heckerman spiegelhalter franklin bull map learning dean language bayesian networks tears eugene charniak give introduction bayesian networks researchers limited grounding probability theory years method reasoning probabilities popular probability uncertainty community fair bayesian networks large segment ai-uncertainty community resolution theorem proving ai-logic community obvious importance ideas techniques spread research community responsible ideas techniques easy understand hope rectify situation making bayesian networks accessible probabilistically unsophisticated aaai making bayesian networks accessible probabilistically unsophisticated phisticated article make basic ideas intuitions accessible limited grounding probability theory equivalent presented charniak mcdermott bayesian network understand bayesian networks imagine model situation causality plays role understanding incomplete describe things probabilistically suppose home night family home doors convenient door enter double locked home wife leaves house turns outdoor light turns light expecting guest dog home dog put back yard true dog bowel troubles finally dog backyard hear barking barking confused dogs barking partially inspired pearl earthquake illustrated figure find graph unlike diagrams predict happen family dog infer observed effects light dog family important thing note causal connections absolute family left putting dog turning light diagrams cases hard infer evidence points assume family light hear dog hear dog light naturally knew relevant probabilities family-out light-on hearbark set typically numbers combinations circumstances bayesian networks calculate small set probabilities relating neighboring nodes bayesian networks directed acyclic graphs dags figure nodes random variables independence assumptions hold nature discuss assume loss generality dag connected figure random variables thought states affairs variables values true false case node denoting intensity earthquake values no-quake trembler rattler major catastrophe variable values discrete variable earthquake richter scale number algorithms discuss work discrete values stick case sans serif font names random variables earthquake variable italics denote proposition variable takes concerned earthquake special case boolean variables values true false variable sans serif font denote proposition variable true family-out show arrows pointing downward understood arrow direction arcs bayesian network independence assumptions hold random variables independence assumptions determine probability information required probability distribution random variables network reader note informally talking dag arcs denote causality bayesian network things probabilities section resolves conflict probability distribution bayesian network give prior probabilities root nodes nodes predecessors conditional probabilities articles winter light-on family-out dog-out bowel-problem hear-bark figure causal graph nodes denote states affairs arcs interpreted causal connections articles magazine nonroot nodes combinations direct predecessors figure shows fully bayesian network figure states family members leave house turn light percent time light turned leave percent time expected bayesian networks calculate conditional probabilities nodes network values nodes observed earlier observe light light-on true hear dog hear-bark false calculate conditional probability family-out pieces evidence case talk calculation evaluating bayesian network evidence realistic cases networks consist hundreds thousands nodes evaluated times information evidence tempting probabilities nodes changing changing conditional probability nodes changing evidence people talk belief node changing talking harmless provided mind belief simply conditional probability evidence remainder article describe independence assumptions implicit bayesian networks show relate causal interpretation arcs independence assumptions show independence assumptions numbers fact needed consistent probabilities evaluating networks describes bayesian networks evaluated section describes applications independence assumptions objection probability theory complete specification probability distribution requires absurdly numbers binary random variables complete distribution joint probabilities wait section define joint probabilities complete distribution figure require values savings great doubled complete specification probability distribution requires absurdly numbers light-on family-out dog-out bowel-problem hear-bark figure bayesian network family-out problem added prior probabilities root nodes posterior probabilities nonroots values parents size network grafting copy shown figure give savings answer bayesian networks built-in independence assumptions simple case random variables family-out hear-bark variables independent intuitively family leaves home dog hear happen dog house hear-bark independent family-out hear-bark family-out dogout hear-bark dog-out answer hearing bark dependent family concern beginning tie interpretation arcs direct causality probabilistic interpretation causal interpretation arcs family direct causal connection dog turn directly connected hearing probabilistic interpretation adopt independence assumptions causal interpretation suggests note wanted location family directly relevant hearing dog put arc directly direct relevance occur dog bark family home case dog rest section define independence assumptions bayesian networks show correspond expect interpretation arcs causal section formally show makes independence assumptions probabilities needed reduced roots priors nonroots conditionals predecessors give rule dependence independence bayesian networks bayesian network variable articles winter dog-out family-out light-on bowel-problem hear-bark frog-out family-lout night-on towel-problem hear-quark figure network nodes illustration copies graph figure attached nonsense names nodes copy path d-connecting respect evidence nodes interior node path property linear diverging member converging descendants literature term d-separation common nodes d-separated d-connecting path find explanation terms d-connecting slightly easier understand definition slowly moment roughly speaking nodes d-connected causal path part definition evidence renders nodes correlated part understand definition start pretending part d-connecting path blocked evidence converging interior nodes evidence blocking restriction restriction middle node restriction converging nodes figure diagram bowel-problem family-out dog-out probability bowel-problem depend family-out imagine case dependent case ball game bayesian network note path converging node path dog-out put things state affairs connection things independent time potential state affairs converging node major bayesian networks deciding potential converging nodes common part definition d-connecting path suppose dog dog-out member family-away bowel-problem independent independent evidence showed knowing family home raise slightly probability dog bowel problems eliminated dependent variable evidence d-connecting path call evidence nodes empty include dependent independent note random variable variables independent dependent vise versa dependent independent variables independent simply case independent connect definition claim family-out independent hear-bark dog-out explain d-connecting d-connecting path family-out hear-bark dog-out dog-out effect blocks path understand d-connecting paths mind kinds connections random variable neighbors path possibilities shown figure correspond combinations arrow directions case node case remember assume 
arrows diagram high low direction arrow node path linear converging diverging depending situation finds figure give definition d-connecting path articles magazine acb linear converging diverging figure connection types case node undirected path explanation dog explanations situation covered part d-connecting path familyaway bowel-problem converging node dog-out dog-out conditioning node similar situation dog heard barking case dog relevant evidence raises probability hear-bark effect connects nodes converging node intuitively part means path converging node conditioning indirect effect converging node consistent probabilities problem plague naive probabilistic scheme inconsistent probabilities system eyeballing equations amiss quick application bayes law shows probabilities consistent require bayes law needless system lot numbers making consistent problem system prospector implement special-purpose techniques handle inconsistencies duda hart nilsson nice property bayesian networks required numbers probability node combinations parents numbers consistent network uniquely define distribution hard claim true introduce notion joint distribution joint distribution set random variables defined values set boolean variables probabilities joint distribution set random variables information distribution suppose just-mentioned joint distribution wanted compute note boolean variables joint distribution values sum joint probabilities probability outcomes joint distribution numbers section show joint distribution bayesian network uniquely defined product individual distributions random variable network figure combination values joint probability network consisting variables easily proven law probability equation true set random variables equation factor joint distribution component parts right-hand side equation joint distribution factored equation depends order random variables variable make proof called topological sort random variables sort ordering variables variable descendants graph assume ordering figure show ordering figure terms product illustration nodes figure graph show nodes immediately ignore concenarticles winter dog-out family-out light-on bowel-problem hear-bark figure topological ordering case made simple top-down numbering nodes product figure shown numbers bayesian network formalism fact define single joint distribution uniqueness numbers local distribution consistent global distribution consistent local consistency matter numbers sum evaluating networks noted basic computation belief networks computation node belief conditional probability evidence observed important constraint bayesian networks fact general computation np-hard cooper exponential time limitation show realistic networks people solved depending particulars network algorithm care implementation networks small tens nodes long networks thousands nodes acceptable time issue trating connects ways call left paths figure conditioning nodes nodes conditioned conditional probability conditioning node condition holds numbering show parents conditioning portion term factorization true suppose immediately numbering path blocked nodes path figure node lower left path figure case path d-connecting converging node descendants part conditioning nodes numbered path d-connecting eliminate conditioning section independence assumptions bayesian networks independent conditioning nodes fashion remove nodes conditioning case immediately figure reduction leave articles magazine figure node network show conditioning successors dependent successors figure nodes singly connected network singly connected property nodes connected node path path important constraint computation np-hard exact solution np-hard make approximate answer answer exact high probability small distance correct answer start algorithms finding exact solutions exact solutions evaluating bayesian networks general np-hard restricted class networks efficiently solved time linear number nodes class singly connected networks singly connected network called polytree underlying undirected graph path nodes underlying undirected graph graph simply ignores directions edges bayesian network figure singly connected network figure note direction arrows matter left path requires direction arrow counts path algorithm solving singly connected bayesian networks complicated give hard singly connected case easier suppose case sketchily illustrated figure probability values sense step takes arrow pointing similarly assume sense depends examination shows sets evidence possibly empty sets save bit notation matter nodes nodes claim fact network singly connected singly connected condition show break problem determining simpler problems involving network network bayes rule taking term numerator break conditioning note separates singly connected condition substituting term term numerator conditioning denominator rearrange terms apply bayes rule reverse collection terms set term involves material term involves calculated solve equation values true false boolean term remains calculate making probabilities values sum naturally make sketch real algorithm finding conditional probabilities polytree bayesian networks show calculate ease divided problem distinct parts serve calculations efficiently complete description algorithm pearl neapolitan points previous discussion made fact network singly connected argument work general case articles winter bayesian networks extended handle decision theory called clustering clustering combines nodes resulting graph singly connected turn figure singly connected network combine nodes resulting graph shown figure note node values cross-product values singly well-understood techniques producing local probabilities clustered network evaluates network singly connected algorithm values variables original network read clustered network values easily calculated values moment variant technique proposed lauritzen spiegelhalter improved jensen fastest exact algorithm applications problem nodes creates large numbers values node combination boolean-valued nodes values dense networks explosion values worse happen considers settling approximations exact turn area approximate solutions lot ways find approximations conditional probabilities bayesian network depends exact nature network makes multiply connected networks hard glance belief network easy evaluate evidence assume node values nodes time reevaluating network extra fact turn located node information decide probability probability neighbors determine probability fact probability parents claims correct misleading singly connected networks change neighbor change neighbor single-connection condition multiple connections nodes calculations easy figure suppose learn node true conditional probabilities node network change affect account direct change change caused unlike separate cleanly evaluate multiply connected networks turn network equivalent singly connected ways perform task common ways variations technique articles magazine figure multiply connected network paths node node figure clustered multiply connected network clustering nodes turned graph figure singly connected network algorithms lot common essentially randomly posit values nodes pick values nodes statistics values nodes statistics give answer clear case technique called logic sampling henrion guesses values root nodes accordance prior probabilities root node randomly chooses node true percent time works network guessing lower node basis values higher nodes nodes assigned true false pick random number assign true false procedure track nodes assigned values note procedure evidence nodes account problem fixed variations improve cases shacter peot shwe cooper approximation techniques horvitz suermondt cooper moment single technique approximate exact works kinds networks interesting exact algorithms feature network determines performance topology approximation algorithms quantities np-hard result exact algorithm works kinds bayesian networks find approximation scheme works end simply library algorithms researchers choose suits problem finally mention bayesian networks evaluate care implement algorithms 
software packages implement algorithms mentioned ideal srinivas breese hugin andersen applications stated introduction bayesian networks variety applications expect common diagnosis problems medical diagnosis current bayesian networks area pathfinder heckerman program diagnose diseases lymph node patient suspected lymph node disease lymph node removed examined pathologist pathologist examines microscope information gained possibly tests node leads diagnosis pathfinder physician enter information conditional probabilities diseases evidence pathfinder decision theory decision theory close cousin probability theory specifies desirability outcomes utility costs actions performed affect outcomes idea find action plan maximizes expected utility minus costs bayesian networks extended handle decision theory bayesian network incorporates decision nodes nodes indicating actions performed nodes nodes indicating values outcomes articles winter figure map learning finding north-south corridor makes intersection north robot current location bayesian networks obvious applications brown applications map learning work ken basye tom dean story understanding robert goldman bayesian networks map learning imagine robot corridor time heading west point sensors pick features corridor heading north figure current task robot heading west information robot increase probability east-west corridor slightly north current intersect north-south corridor domain diseases abnormalities turn reflected test results corridor layouts kinds junctions corridors turn sensor readings diagnosis problem reason backward tests diseases map learning problem reason backward sensor readings corridor layout map intent combine diagnostic problem decision theory robot weigh alternative deviating planned explore portions building map work story understanding charniak goldman goldman depends similar analogy called influence diagram concept invented howard howard matheson pathfinder decision theory choose test performed current tests sufficient make diagnosis pathfinder ability make treatment decisions purpose decisions sensitive details utilities treatment pain tolerate decrease risk death percentage pathfinder model lymph node diseases includes diseases features observed make diagnosis features outcomes binary valued nonbinary values common laboratory tests real-number results conceivably values random variable real numbers typically number values finite breaks values significant regions gave early earthquake divided richter scale earthquake intensities regions versions program implemented current pathfinderand bayesian networks decision theory proven mycin-style certainty factors shortliffe dempster-shafer theory belief shafer simpler bayesian models realistic independence assumptions program achieved expert-level performance implemented commercially articles magazine eat order straw-drinking milk-shake drink-straw animal-straw straw milk-shake order figure bayesian network simple story connecting straw earlier context makes drink-straw reading imagine things simple story reading created writer observed sequence events wrote reader happened suppose sally engaged shopping supermarket observer sees sally bus supermarket buy bread writes story string english words disease high-level hypothesis sally task shopping intermediate levels include things writer things traveling supermarket note shopping immediately observable put simpler observations bottom layer network evidence english words author put paper framework problems word-sense ambiguity intermediate random variables network figure shows simplified version network story sue ordered milkshake picked straw top hypothesis sue eating hypothesis drink milkshake called straw-drinking action requires drinking straw connection word sense bottom network word straw author intended understand word describing drinking straw animal straw kind animals sleep expect network probability drinking-straw higher evidence words evidence suggests drinking event turn makes drinking straw probable note program knowledge base tells general eating relates drinking straw drinking straw drinking relates straws knowledge base construct fly bayesian network figure represents story numbers points made article beneficial reduction number parameters required bayesian networks overstated numbers typically required bayesian network common situation result situation occurs symptom caused diseases person action result plans situation shown figure assuming boolean nodes node fever require conditional probabilities doctors numbers probability fever cold pneumonia chicken pox probability fever slightly higher pearl suggested cases probabilities individual stereotypical combination rules combining case present current case handled pearl noisy-or random variable numbers require fewer numbers fewer numbers numbers skeptic numbers required fact obtained examples previously made naturally makes statement elicited expert subjectively assesses statement sounds lot wrong making numbers thing experts fairly good study spiegelhalter franklin bull doctors assessments numbers required bayesian network compared numbers subsequently collected found pretty close doctors typically quick things probability suspect prejudice making numbers articles winter cold fever chicken-pox pneumonia figure fever viewing fever node noisy-or node makes easier construct posterior distribution grant iriand office naval research contract -kreferences andersen hugin shell building bayesian belief universes expert systems proceedings eleventh international joint conference artificial intelligence menlo park calif international joint conferences artificial intelligence charniak goldman probabilistic model plan recognition proceedings ninth national conference artificial intelligence menlo park calif american association artificial intelligence charniak goldman semantics probabilistic quantifier-free first-order languages application story understanding proceedings eleventh international joint conference artificial intelligence menlo park calif international joint conferences artificial intelligence charniak goldman plan recognition stories life proceedings workshop uncertainty artificial intelligence mountain view calif association uncertainty artificial intelligence charniak mcdermott introduction artificial intelligence reading mass addisonwesley cooper probabilistic inference belief networks np-hard technical report ksl- medical computer science group stanford univ dean coping uncertainty control system navigation exploration proceedings ninth national conference artificial intelligence menlo park calif american association artificial intelligence duda hart nilsson subjective bayesian methods rule-based inference systems proceedings american federation information processing societies national computer conference washington american federation information processing societies goldman probabilistic approach language understanding technical report cs- dept computer science brown univ making rules fears set examples explained producing numbers reduced number set required bayesian networks fear longer justified extensive group test examples overconstrains numbers required cases collect data produce required numbers ideal case probabilities constrains theories fit datacollection abilities bayesian network practitioners subjectively access probabilities conclusions bayesian networks offer researcher convenient attack multitude problems conclusions warranted logically probabilistically attack problems traditional hurdles set numbers grows exponentially complexity model major drawback time evaluation exponential time general case large number people bayesian networks great deal research efficient exact solution methods variety approximation schemes belief bayesian networks descendants wave future acknowledgments robert goldman solomon shimony charles moylan dzung hoang dilip barman cindy grimm comments earlier draft article geoffrey hinton title work supported national science foundation articles magazine major drawback time evaluation hansson mayer heuristic search evidential reasoning proceedings workshop uncertainty artificial intelligence mountain view calif association uncertainty artificial intelligence heckerman probabilistic similarity networks technical report stan-csdepts computer science medicine stanford univ henrion propagating uncertainty bayesian networks logic sampling uncertainty artificial 
intelligence eds lemmer kanal amsterdam north holland horvitz suermondt cooper bounded conditioning flexible inference decisions scarce resources proceedings workshop uncertainty artificial intelligence mountain view calif association uncertainty artificial intelligence howard matheson influence diagrams applications decision analysis volume eds howard matheson menlo park calif strategic decisions group jensen bayesian updating recursive graphical models local computations technical report dept mathematics computer science aalborg lauritzen spiegelhalter local computations probabilities graphical structures application expert systems journal royal statistical society levitt mullin binford modelbased influence diagrams machine vision proceedings workshop uncertainty artificial intelligence mountain view calif association uncertainty artificial intelligence neapolitan probabilistic reasoning expert systems york wiley pearl probabilistic reasoning intelligent systems networks plausible inference san mateo calif morgan kaufmann shacter peot simulation approaches general probabilistic inference belief networks proceedings workshop uncertainty artificial intelligence mountain view calif association uncertainty artificial intelligence shafer mathematical theory evidence princeton princeton press shortliffe computer-based medical consultations mycin york american elsevier shwe cooper empirical analysis likelihood-weighting simulation large multiply connected belief network proceedings sixth conference uncertainty artificial intelligence mountain view calif association uncertainty artificial intelligence spiegelhalter franklin bull assessment criticism improvement imprecise subjective probabilities medical expert system proceedings workshop uncertainty artificial intelligence mountain view calif association uncertainty artificial intelligence srinivas breese ideal software package analysis influence diagrams proceedings sixth conference uncertainty artificial intelligence mountain view calif association uncertainty artificial intelligence srinivas breese ideal influence diagram evaluation analysis lisp technical report rockwell international science center palo alto california eugene charniak professor computer science cognitive science brown chairman department computer science received degree physics chicago computer science massachusetts institute technology published books computational semantics yorick wilks north holland artificial intelligence programming edition chris riesbeck drew mcdermott james meehan lawrence erlbaum introduction artificial intelligence drew mcdermott addison-wesley fellow american association artificial intelligence previously councilor organization editorial boards journals cognitive science founding editor computational linguistics research area language understanding resolution ambiguity noun-phrase syntactic analysis case determination word-sense selection plan recognition generally abduction years work concentrated probability theory elucidate problems bayesian nets belief nets articles winter 
svms practical consequence learning theory bernhard sch lkopf gmd worthwhile learn svm algorithm fall category yet-another-algorithm case readers stop save time short overview argue studying support-vector learning respects satisfying theoretical point view learning based beautifully simple ideas clear intuition learning examples lead high performances practical applications sense algorithm considered lying intersection learning theory practice simple types algorithms statistical learning theory identify precisely factors account learn successfully real-world applications mandate complex models algorithms neural networks harder analyze theoretically algorithm achieves constructs models complex large class neural nets radial basis function rbf nets polynomial classifiers special cases simple analyzed mathematically shown correspond linear method high-dimensional feature space nonlinearly related input space linear algorithm high-dimensional space practice involve computations high-dimensional space kernels computations performed directly input space characteristic twist methods dealing complex algorithms nonlinear pattern recognition regression feature extraction sake analysis algorithmics pretend working simple linear algorithm explain gist methods describing roots learning theory optimal hyperplane algorithm kernel trick function estimation details vladimir vapnik authoritative treatment collection colleagues put web page http svm gmd learning pattern recognition examples pattern recognition estimate function training data n-dimensional patterns class labels correctly classify examples examples generated underlying probability distribution training data put restriction class functions choose estimate function training data satisfying index understood run generalize unseen examples suppose additional smoothness values training patterns carry information whatsoever values patterns learning impossible minimizing training error imply small expected test error statistical learning theory vapnik-chervonenkis theory shows crucial restrict class functions learning machine implement capacity suitable amount training data hyperplane classifiers design learning algorithms class functions capacity computed classifiers based class hyperplanes decision functions sign show optimal hyperplane defined maximal margin separation classes figure lowest caieee intelligent systems support vector machines trends controversies marti hearst california berkeley hearst sims berkeley exposure support vector machines spring heard sue dumais present impressive results text categorization analysis technique issue collection essays familiarize readers interesting racehorse machine learning stable bernhard sch lkopf introductory overview points advantage svms learning algorithms analyzed theoretically concepts computational learning theory time achieve good performance applied real problems examples real-world applications provided sue dumais describes aforementioned text-categorization problem yielding results date reuters collection edgar osuna presents strong results application face detection fourth author john platt practical guide technique implementing algorithm efficiently marti hearst july august pacity uniquely constructed solving constrained quadratic optimization problem solution expansion terms subset training patterns lie margin figure training patterns called support vectors carry relevant information classification problem omitting details calculations crucial property algorithm emphasize quadratic programming problem final decision function depend dot products patterns precisely lets generalize nonlinear case feature spaces kernels figure shows basic idea machines map data dot product space called feature space nonlinear map perform linear algorithm noted requires evaluation dot products high-dimensional righthand side equation expensive compute cases simple kernel evaluated efficiently instance polynomial kernel shown correspond map space spanned products dimensions defining generally prove kernel rise positive matrix construct map equation holds equation practitioners radial basis function rbf kernels sigmoid kernels gain offset svms tools construct nonlinear classifiers figure end substitute training perform optimal hyperplane algorithm kernels end nonlinear decision function form parameters computed solution quadratic programming problem input space hyperplane corresponds nonlinear decision function form determined kernel figures algorithm number astonishing properties based statistical learning theory practical reduces quadratic programming problem unique solution number heuristic algorithms special cases choice kernel functions obtain architectures figure polynomial classifiers equation rbf classifiers equation figure three-layer neural nets equation important restriction case classification generalization regression estimation case algorithm construct linear function feature space training points lie distance similar pattern-recognition case write quadratic programming problem terms kernels nonlinear regression estimate takes form sign tanh exp sign note figure separable classification toy problem separate balls diamonds optimal hyperplane orthogonal shortest line connecting convex hulls classes dotted intersects half weight vector threshold rescaling point closest hyperplane satisfy obtain form hyperplane note margin measured perpendicularly hyperplane equals maximize margin minimize subject feature spaceinput space figure idea machines map training data nonlinearly higher-dimensional feature space construct separating hyperplane maximum margin yields nonlinear decision boundary input space kernel function compute separating hyperplane explicitly carrying map feature space apply algorithm priori upper bound fraction training points allowed lie distance regression estimate asymptotically number svs computed automatically current developments open issues chances readers interested hear researchers built applied algorithm real-world problems developed extensions respect fields emerged training methods speeding quadratic program installment trends controversies john platt speeding evaluation decision function interest variety applications optical-character recognition choice kernel functions feature space work theoretical practical interest determines functional form estimate objective function quadratic program type regularization constrain estimate kernels lead types learning machines choice kernel crucial sight ocr applications kernels equations lead similar performance strongly overlapping sets support vectors methods applications recently begun application developers reported state-of-the-art performances variety applications pattern recognition regression estimation time series prediction fair missing application methods significantly outperform algorithm solve problem impossible tackle methods solving inverse problems promising candidate sue dumais edgar osuna describe promising applications discussion kernels algorithms emerges exciting opportunity developing learning techniques kernel method computing dot products feature spaces restricted machines derive nonlinear generalizations algorithm cast terms dot products mere start decided apply idea widely algorithms data analysis principal component analysis leads kernel pca algorithm performs nonlinear pca carrying linear pca feature space ieee intelligent systems figure classifier found radial basis function kernel equation circles disks classes training examples solid line decision surface support vectors found algorithm lie dashed lines colors code modulus argument decision function equation output weights test vector support vectors mapped vectors dot product figure architecture methods input support vectors digits nonlinearly mapped feature space dot products computed kernel layers practice computed single step results linearly combined weights found solving quadratic program pattern recognition regression estimation eigenvalue problem kernel pca linear combination fed function pattern recognition sign regression stimation kernel pca july august method consists solving linear eigenvalue problem matrix elements computed kernel function resulting feature extractors architecture machines figure number researchers started kernelize linear algorithms boser guyon vapnik training algorithm optimal margin classifiers proc ann workshop computational learning theory acm 
press york vapnik nature statistical learning theory springer-verlag york sch lkopf smola ller nonlinear component analysis kernel eigenvalue problem neural computation vol sch lkopf burges smola advances kernel methods support vector learning mit press cambridge mass sch lkopf support vector regression automatic accuracy control published proc eighth int conf artificial neural networks perspectives neural computing springer-verlag berlin burges simplified support vector decision rules proc int conf machine learning morgan kaufmann san francisco smola sch lkopf regularization operators support vector kernels advances neural information processing systems jordan kearns solla eds mit press girosi equivalence sparse approximation support vector machines memo mit cambridge mass weston density estimation support vector machines tech report csd-tr- royal holloway univ london svms text categorization susan dumais decision theory adaptive systems group microsoft research volume electronic information increases growing interest developing tools people find filter manage resources text categorization assignment natural-language texts predefined categories based content important component information organization management tasks machine-learning methods including svms tremendous potential helping people effectively organize electronic resources today text categorization people save hundreds files e-mail messages urls folders day asked choose keywords approved set indexing terms describing technical larger scale trained specialists assign items categories large taxonomies dewey decimal library congress subject headings medical subject headings mesh yahoo internet directory extremes people organize objects categories support wide variety information-management tasks including information routing filtering push identification objectionable materials junk mail structured search browsing topic identification topicspecific processing operations human categorization time-consuming costly limiting applicability large rapidly changing collections interest growing developing technologies semi automatic text categorization rule-based approaches similar employed expert systems generally require manual construction rules make rigid binary decisions category membership typically difficult modify strategy inductive-learning techniques automatically construct classifiers labeled training data researchers applied growing number learning techniques text categorization including multivariate regression nearest-neighbor classifiers probabilistic bayesian models decision trees neural networks recently colleagues svms text categorization promising results essay briefly describe results experiments svms classify newswire stories reuters susan dumais senior researcher decision theory adaptive systems group microsoft research research interests include algorithms interfaces improved information retrieval classification human-computer interaction combining search navigation user modeling individual differences collaborative filtering organizational impacts technology received mathematics psychology bates college phd cognitive psychology indiana member acm asis human factors ergonomic society psychonomic society contact microsoft research microsoft redmond sdumais microsoft http research microsoft sdumais edgar osuna returned native venezuela receiving phd operations research massachusetts institute technology research interests include study aspects properties vapnik svm received computer engineering universidad simon bolivar caracas venezuela contact iesa poba international box miami eosuna usb john platt senior researcher signal processing group microsoft research recently concentrated fast general-purpose machine-learning algorithms processing signals generally research interests include neural networks machine learning computer vision signal processing received phd computer science caltech studied computer graphics neural networks received chemistry california state long beach contact microsoft research microsoft redmond jplatt microsoft http research microsoft jplatt bernhard sch lkopf researcher gmd berlin research interests machine learning perception svms kernel pca msc mathematics london diploma physics phd computer science max planck institute contact gmd-first rudower chaussee berlin gmd http gmd learning text categorizers goal automatic text-categorization systems assign items set predefined categories basis textual content optimal categorization functions learned labeled training examples inductive learning classifiers classifier function maps input attribute vector confidence input belongs class confidence class case text classification attributes words document classes categories interest reuters categories include interest earnings grain classifiers reuters category interest interest rate quarterly confidence interest category confidence interest category interest rate quarterly key idea svms inductive-learning approaches training set labeled instances learn classification function automatically svm classifiers resemble vector learned feature weights resulting classifiers easy construct update depend information easy people provide examples items categories users smoothly trade precision recall depending task text representation feature selection document represented vector words typically information retrieval text-retrieval applications entries vector weighted reflect frequency terms documents distribution terms collection text classification simpler binary feature values word occurs occur document text collections millions unique terms common efficiency efficacy feature selection widely applying machinelearning methods text categorization reduce number features remove features based frequency counts select small number features based fit categories mutual information feature category reduce feature space smaller document descriptions serve input svm learning svms simple linear svms provide good generalization accuracy fast learn thorsten joachims explored classes nonlinear svms polynomial classifiers radial basis functions observed small benefits compared linear models john platt sequential minimal optimization method essay learn vector feature weights weights learned items classified computing vector learned weights binary vector representing document learned parameters sigmoid function transform output svm probabilities reuters reuters collection popular text-categorization research publicly http research att lewis reuters html reuters stories classified categories modapte split stories stories build classifiers remaining stories test accuracy resulting models reproducing manual category assignments stories assigned category text files automatically processed produce vector words document eliminating words document selecting words highest mutual information category reduces number features -element binary feature vectors serve input svm separate ieee intelligent systems table break-even performance learning algorithms findsim naive bayes bayesnets trees linearsvm earn acq money-fx grain crude trade interest ship wheat corn avg top avg find similar decision tree lsvm naive bayes recall figure roc curve july august classifier learned category smo train linear svm takes average cpu seconds category averaged categories -mhz pentium running windows learning methods times slower instances classified computing score document comparing score learned threshold documents exceeding threshold belong category learned svm classifiers intuitively reasonable weight vector category interest includes words prime rate interest rates discount large positive weights words group year sees world dlrs large negative weights typical evaluating text categorization measure classification accuracy average precision recall so-called breakeven point precision proportion items category category recall proportion items category category table summarizes microaveraged breakeven performance learning algorithms explored colleagues explored frequent categories score categories linear svms accurate method averaging frequent categories categories results consistent joachims results spite substantial differences text preprocessing term weighting parameter selection suggesting svm approach robust generally applicable textcategorization problems figure shows representative roc curve category grain generate curve varying decision threshold 
produce higher precision higher recall depending task advantages svm entire recall-precision space summary summary inductive learning methods offer great potential support flexible dynamic personalized information access management wide variety tasks lewis hayes special issue acm trans information systems vol july yang evaluation statistical approaches text categorization published information retrieval joachims text categorization support vector machines learning relevant features published proc european conf machine learning ecml springer-verlag http www-ai uni-dortmund personal joachims html joachims dumais inductive learning algorithms representations text categorization published proc conf information knowledge management http research microsoft sdumais cikm doc salton mcgill introduction modern information retrieval mcgraw hill york platt fast training svms sequential minimal optimization published advances kernel methods support vector machine learning sch lkpf burges smola eds mit press cambridge mass applying svms face detection edgar osuna mit center biological computational learning operations research center essay introduces smv application detecting vertically oriented unoccluded frontal views human faces gray-level images application handles faces wide range scales works lighting conditions moderately strong shadows define face-detection problem input arbitrary image digitized video signal scanned photograph determine human faces image return encoding location encoding system fit face bounding box defined image coordinates corners face detection computer-vision task applications direct relevance face-recognition problem important step fully automatic human face recognizer identifying locating faces unknown image face detection potential application human-computer interfaces surveillance systems census systems discussion face detection interesting natural challenging problem demonstrating testing potentials svms real-world object classes phenomena share similar characteristics tumor anomalies mri scans structural defects manufactured parts successful general methodology finding faces svms generalize spatially well-defined pattern- feature-detection problems face detection object-detection problems difficult task significant pattern variations hard parameterize analytically common sources pattern variations facial appearance expression presence absence common structural features glasses moustache light-source distribution system works testing candidate image locations local patterns faces classification procedure determines local image pattern face approach face-detection problem classification problem examples classes faces nonfaces previous systems researchers approached facedetection problem techniques years including neural networks detection face features geometrical constraints density estimation training data labeled graphs clustering distribution-based modeling results kah-kay sung tomaso poggio henry rowley reflect systems high detection rates low false-positive detection rates sung poggio clustering distance metrics model distribution face nonface manifold neural network classify pattern measurements key quality result clustering combined mahalanobis euclidean metrics measure distance pattern clusters important features approach nonface clusters bootstrapping technique collect important nonface patterns approach provide principled choose important free parameters number clusters similarly rowley colleagues problem information design retinally connected neural network trained classify face nonface patterns approach relies training neural networks emphasizing sets training data obtain sets weights approach schemes arbitration reach final answer svm approach face-detection system prior information obtain decision surface interesting property exploited approach detecting objects digital images svm face-detection system system detects faces exhaustively scanning image face-like patterns scales dividing original image overlapping subimages classifying svm determine class face nonface system handles multiple scales examining windows scaled versions original image major svms classification step critical part work figure geometrical interpretation svms work context face detection specifically system works train database face nonface pixel patterns assigned classes support vector algorithm process second-degree homogeneous polynomial kernel function upper bound obtain perfect training error compensate sources image variation perform preprocessing data masking binary pixel mask removes pixels close window-pattern boundary allowing reduction dimensionality input space step reduces background patterns introduce unnecessary noise training process illumination gradient correction process subtracts best-fit brightness plane unmasked window pixel values allowing reduction light heavy shadows ieee intelligent systems figure geometrical interpretation svm separates face nonface classes patterns real support vectors obtained training system notice small number total support vectors fact higher proportion correspond nonfaces figure false detections obtained version system false positives served nonface examples training process non-faces faces july august histogram equalization process performs histogram equalization patterns compensate differences illumination brightness cameras response curves process obtains decision surface training runtime system images faces storing misclassifications negative examples subsequent training phases images landscapes trees buildings rocks good sources false positives textured patterns bootstrapping step sung poggio successfully important context face detector learns examples negative examples abundant negative examples learning standpoint difficult characterize define approaching problem object detection case face detection paradigm binary pattern classification classes object nonobject equally complex nonobject class broader richer examples accurate definition separates object class figure shows image bootstrapping misclassifications served negative examples training svm implementation algorithm colleagues describe incorporate classifier runtime system similar sung poggio performs operations rescale input image times cut window patterns scaled image preprocess window masking light correction histogran equalization classify pattern svm class corresponds face draw regtangle aroung face output image figure reflects system architecture runtime experimental results static images test runtime system sets images set contained highquality images number faces set contained images mixed quality total faces tested sets system sung poggio give true meaning number false positives obtained note set involved pattern windows set involved table compares systems figure presents output images system training phase system extension real-time system system discussed spends approximately seconds sparcstation pixels gray-level image faster previous systems fast runtime system build runtime version system steps ported code developed sun environment windows pentium -mhz computer added matrox rgb frame grabber hitachi three-chip color camera special hardware speed computational burden system collected color images faces extracted areas skin nonskin pixels collected dataset examples figure system architecture runtime permission input image pyramid extracted window pixels light correction histogram equalization classification support vector machines svm quick discard possible-face non-face svm complete classifier face nonface face preprocessing subsampling figure results face-detection system table performance svm face-detection system test set test set detect detect rate false rate false alarms alarms svm sung trained svm classifier skin nonskin data input variables normalized green red values figure presents image captured system skin-detection output coded primitive motion detector based thresholded frame differencing identify areas movement focus attention motion requirement detected system frames current implementation skipped step scanned image put hierarchical system step motion-detection module svm skin-detection system layer identify candidate locations faces face nonface svm classifier earlier gray-level version candidate locations system achieves rates frames 
figure presents couple images captured pc-based color real-time face-detection system burel carel detection localization faces digital images pattern recognition letters vol rowley baluja kanade human face detection visual scenes tech report computer science dept carnegie mellon univ pittsburgh yang huang human face detection complex background pattern recognition vol moghaddam pentland probabilistic visual learning object detection tech report mit media laboratory cambridge mass ger tzsch malsburg determination face position pose learned representation based labeled graphs tech report ruhruniversit sung learning selection object pattern detection phd thesis mit lab center biological computational learning sung poggio example-based learning view-based human face detection memo paper dec osuna freund girosi improved training algorithm support vector machines proc ieee workshop neural networks signal processing ieee press piscataway implement svms john platt microsoft research past years svms proven effective real-world classification tasks installment trends controversies describes tasks face recognition text categorization people found numerical implementation svms intimidating essay attempt demystify implementation svms step interested implementing svm recommend reading chris burges tutorial svms http svm research bell-labs svmdoc html svm parameterized function functional form defined training training svm requires labeled training set svm fit function set examples training set consists set examples consists input vector label describes input vector predefined category free parameters svm trained examples parameters called find parameters solve quadratic programming problem matrix depends training inputs labels functional form svm call problem quadratic programming function minimized called objective function depends quadratically appears linearly constraints http wwwc mcs anl gov home otc guide optweb continuous constrained qprog definitions applications tutorial burges conceptually svm problem find minimum bowl-shaped objective function search minimum constrained lie cube plane search occurs high-dimensional space bowl high dimensional cube hypercube minimize subject ieee intelligent systems figure skin detection module implemented svms figure face detection pc-based color realtime system july august plane hyperplane typical svm functional forms matrix special properties objective function bowl-shaped positive definite flat-bottomed troughs positive semidefinite saddleshaped indefinite unique minimum connected set equivalent minima svm definite termination optimality condition describes minima call optimality conditions karush-kuhntucker kkt conditions simply describe set constrained minima values intuitive explanation training determines training influences svm function training examples affect svm function simple form expect solution svm problem simple realworld problems matrix enormous dimension equal number training examples training set examples yield matrix billion elements easily fit memory standard computer ways solving gigantic problems methods sophisticated data structures methods require storage entire matrix access rows columns correspond deep loop methods perform dot products rows columns vector performing entire matrix-vector multiplication decomposing problem method attacking largescale svm problem decompose large problem series smaller problems selection submatrices package inside decomposition method compatible standard packages vapnik suggested decomposition approach method chunking chunking algorithm exploits fact objective function remove rows columns matrix correspond large problem break series smaller problems ultimate goal identify nonzero discard step chunking solves problem consists nonzero step correspond worst violations kkt conditions figure size subproblem grow time step chunking approach identified entire set nonzero step solves problem chunking reduces matrix dimension number training examples approximately number nonzero chunking handle large-scale training problems reduced matrix fit memory combine chunking sophisticated methods require full storage matrix edgar osuna colleagues suggested strategy solving svm problem osuna showed large problem broken series smaller subproblems long violates kkt conditions added previous subproblem step reduces objective function maintains constraints sequence subproblems add kkt violator asymptotically converge osuna suggests keeping constant size matrix subproblem implies adding deleting number examples step figure constant-size matrix training arbitrarily sized datasets algorithm osuna paper suggests adding deleting step algorithm converges fastest algorithm practice researchers add delete multiple examples unpublished heuristics typically heuristics add kkt violators step delete joachims published algorithm adding deleting examples steps rapidly decreases objective function decomposition methods require numerical package packages expensive commercial users programs section writing efficient package difficult numerical-analysis background sequential minimal optimization sequential minimal optimization alternative method decompose svm problem extra matrix storage numerical optimization steps smo decomposes problem subproblems identically osuna method unlike previous decomposition heuristics smo chooses solve smallest optimization problem step standard svm problem smallest optimization problem involves elements obey linear equality constraint step smo chooses jointly optimize finds optimal values updates svm reflect optimal values figure figure alternative methods training svms chunking osuna algorithm smo steps method horizontal thin line step represents training set thick boxes represent optimized step group lines corresponds training iterations iteration top smo solve analytically avoiding numerical optimization loop expressed short amount code invoking entire library routine optimization subproblems solved algorithm subproblem fast problem solved quickly combinations packages decomposition heuristics code optimizations data structures benchmark problems difficult determine svm algorithm efficient smo compared standard chunking algorithm suggested burges tutorial algorithm version chunking projected conjugate gradient pcg table compares results smo versus pcg chunking algorithms coded share svm evaluation code compiled microsoft visual version run -mhz pentium windows mbytes memory algorithms loops advantage input vectors entries sparse vectors details comparison experiments synthetic datasets consult upcoming adult experiment income-prediction task derived uci machine-learning benchmark web experiment text-categorization task adult web datasets http research microsoft jplatt smo html mnist experiment ocr benchmark http research att yann ocr mnist training cpu time listed smo pcg chunking training set size shown table scaling exponent slope linear fit log-log plot training time versus training set size scaling exponent varies dataset empirical worst-case scaling smo quadratic empirical worst-case scaling pcg chunking cubic linear problem sparse inputs smo times faster pcg chunking joachims compared algorithm svm light version smo datasets algorithm smo comparable scaling training set size cpu time joachims algorithm roughly comparable smo code optimizations make exact comparison algorithms difficult programs pseudocode smo technical report http research microsoft jplatt smo html smo quickly implemented programming language choice pseudocode recommend smo planning linear svms data sparse write end-to-end code decide qp-based system careful writing code subtle numerical precision issues involved find quagmire rapidly wary freeware packages web experience packages tend run slowly work ill-conditioned large problems purchasing package well-known numerical analysis source bet extensive numerical analysis background case create package osuna colleagues minos package licensing information http www-leland stanford saunders brochure brochure 
html loqo robust large-scale interior-point package suitable fee http princeton rvdb finally program implements joachims version osuna algorithm called svm light free scientific purposes http www-ai informatik unidortmund forschung verfahren svm light svm light eng html vapnik estimation dependencies based empirical data springer-verlag york burges tutorial support vector machines pattern recognition submitted data mining knowledge discovery platt fast training svms sequential minimal optimization published advances kernel methods support vector learning sch lkopf burges smola eds mit press cambridge mass kaufman solving quadratic programming problem arising support vector classification published advances kernel methods support vector learning mit press osuna freund girosi improved training algorithm support vector machines proc ieee neural networks signal processing vii workshop ieee press piscataway joachims making large-scale svm learning practical published advances kernel methods support vector learning mit press platt sequential minimal optimization fast algorithm training support vector machines microsoft research tech report msr-tr- microsoft redmond wash merz murphy uci repository machine learning databases univ california irvine dept information computer science irvine calif http ics uci mlearn mlrepository html ieee intelligent systems table experiments comparing smo pcg chunking functional form svm training set size cpu times scaling exponents shown pcg smo chunking pcg training training smo chunking kernel training cpu cpu scaling scaling experiment set size time sec time sec exponent exponent adult linear linear web linear linear adult gaussian gaussian web gaussian gaussian mnist polynomial coming issue information integration web essays william cohen craig knoblock alon levy 
question output perceptron output impossible separate hidden layer output perceptron question give reasonable procedure calculation program receive full credit question forward pass input output sigmod input output input output input output back-propagation del wbias del wah wbh wbiash del wah wbh wbiash del wah wbh wbiash question mapping functions equation hyperplane question discussion points reasonable figure sse accuracy points working code points 
prof dyer spring introduction artificial intelligence neural networks svms face detection assigned march due april late policy homework handed start class due date electronically turned time hours late including weekend days deduction maximum score addition points incorrect answers hours late including weekend days deduction maximum score addition points incorrect answers hours late including weekend days deduction maximum score addition points incorrect answers hours late receive assignment addition late days time semester late day hours save hours collaboration policy complete assignment individually encouraged discuss general algorithms ideas classmates instructor order answer questions give examples assignment order demonstrate solve problems require explicitly answer copy answers code fragments answers copied code internet cases work people discussion assignment surrounding topics suggest specifically record assignments names people discussion prof dyer spring question representing boolean functions neural networks sentences propositional logic define perceptron correctly computes desired output correspond true false simple threshold activation ltu function unit label weights thresholds unit network define function perceptron give feedforward network hidden layer ltus implements question perceptron learning rule problem textbook note show procedure calculation epoch assume alpha perceptrons initialized question neural networks back-propagation learning task real-valued input features binary output decide -layer neural network hidden units defining hidden layer activation function sigmoid function defined figure textbook input unit connected hidden unit hidden unit connected output unit draw neural network initialize weights weights weights initialize bias hidden unit output unit practice weights set small randomly chosen numbers grading simplicity initial values training show back-propagation algorithm figure textbook change network weights biases learning rate prof dyer spring question support vector machines data set single input feature desired classification output shown figure training set examples class examples class figure training set examples desired classifications define transformation feature mapping function maps data function maps data point data linearly separable construct maximum-margin separating hyperplane hyperplane line parameterized normal equation choices points plane result applying function developed original feature explicitly compute margin classifier circle support vectors prof dyer spring question face detection neural networks implement feed-forward neural network hidden layer backpropagation algorithm train network detect existence human face grayscale image things simple concentrate neural network implementation preprocessing images simplistic approach demonstrates neural network cases task understood hard domain knowledge pre-compute important features learning algorithm discuss general issues professor students implementation code related back-propagation find web share code students class part implement back-propagation algorithm primary task implement back-propagation algorithm figure textbook implementation represent network single hidden layer learning problem algorithm components array examples long array doubles image pixel intensity values row-major order array string classifications classifications indicating image face number inputs neural network number pixels input image initially hidden layer hidden units experiment parameter assignment assume full network-connectivity means input unit connected hidden unit hidden unit connected output unit unit hidden layer output layer compute sigmoid function function return real range binary linear threshold unit initialize weights network random values range experiment values learning rate parameter initially setting parameter implement real-valued objects including activation values weights doubles goal train network correctly classifies examples based input pixel values classify classify based highestvalued output unit output unit positive classification positive prof dyer spring detection human face output unit negative classification nondetection human face output unit learning recognize class training examples target output correct classification image positive detection face general output unit target set set target values obvious prevent unstable weight behavior sigmoid function reaches implement program implement routines called forwardprop backprop train test additionally call program command line command java image file directory training images list file testing images list file learning rate number hidden units number training epochs information list files image directory part important make main class named case sensitive make testing easier summary program determine number input output units based problem specification build train single-hidden-layer artificial neural network training examples back-propagation learn weights run number epochs classify testing testing images list file learned network report test set accuracy rate list incorrectly classified file target test data file computed network print input image intensity vector big pseudo-code notation back-propagation algorithm book figure confusing alternative definition notation figure back-propagation algorithm network hidden layer output units referenced hidden units referenced input units referenced refers input values input unit specifies target teacher output values output unit prof dyer spring sum forward pass starts compute weighed input hidden units sigmoid compute outputs hidden units sum compute weighed inputs output units sigmoid compute outputs output units del backward pass starts compute modified error output units del sum del compute modified error hidden units alpha del update weights hidden output units alpha del update weights input hidden units part training neural nets detect faces data experiments part focus task detecting existence human faces grayscale images images study created mit center biological computation learning original cbcl face database training set faces non-faces testing set faces non-faces subset training set testing set assignment images resolution reduced size pixels order training times manageable retaining information good classification performance neural net input units face detection learning task output units started copy directories working directory directory -dyer public html spring directory names file set directory dyer training images faces train-face training images faces train-non-face testing images faces test-face testing images faces test-non-face working directory argument command line run program pgm images viewed image viewer prof dyer spring linux machines program called easy view input images java class provided collect information set pgm images present format ready neural network training read comments code including usage header required input top-level image directory image list file returns images linear arrays row-major order intensity values range parses filename returns classification image string write code handling images make image list file format program requires file list images files processed provide files testing homework part set images list files train list training test list testing lists images write code pgm images training information format found web link homework page aware training testing sets examples program run reasonable amount time machines debug program small subset training data training implemented neural network train training list run epochs epochs compute sum squared errors sse training set 
accuracy percentage correct classification testing set make program testing examples learning compute sse ijij otsse number examples training set number output units target output unit training actual real-valued output output unit training compute sse epoch stopping back-propagation running training examples compute error compute fly training update weights error based network set weights prof dyer spring auto-grading section java code submit print sse information print test set accuracy information end plot sse data x-axis show epoch number y-axis show sse plot point epochs similarly plot test set accuracy function number training epochs plot point epochs create plots manually entering data plotting program matlab gnuplot excel label axes plots hint print information file correct format import programs retyping based test set accuracy incorrectly-classified test examples briefly discuss performance program plot curves sse accuracy evidence overfitting number training epochs produces optimal results view incorrectly-classified image neural network misclassifications similar human eye include printout experiment parameter settings repeat training testing steps part varying number hidden units network show training plot final test set accuracy networks separate graph comment performance number hidden units discuss number hidden units affects classification accuracy test set compare number epochs network converge qualitatively compare runtimes number hidden units repeat procedure test values learning rate parameter values submit plots total produce plots combinations hidden units set parameters number hidden units number epochs problem based experiments briefly explain extra credit points extra credit extend ability program detect faces single large image assume size faces fixed positions arbitrary extract windows centered pixel reduce normalize images appropriately run neural network directory dyer extra-credit sample test images prof dyer spring turn electronically copy java files handin directory handin -handin java directory called -handin paper hand class hard copy answers questions question report includes required plots results test set accuracy test runs answers discussion questions image comparisons put stapled login date top page 
homework solutions spring question points question represents expanded sequence number represents expanded sequence number represents cost represents expanded sequence number represents represents expanded sequence number represents homework solutions spring question points inf -inf inf inf inf question points 
spring introduction artificial intelligence csp logic inference assigned march due march late policy homework handed noon due date electronically turned time hours late including weekend days deduction maximum score addition points incorrect answers hours late including weekend days deduction maximum score addition points incorrect answers hours late including weekend days deduction maximum score addition points incorrect answers hours late receive assignment addition late days time semester late day hours save hours collaboration policy complete assignment individually encouraged discuss general algorithms ideas classmates instructor order answer questions give examples assignment order demonstrate solve problems require explicitly answers copy answers code fragments answers copied code web cases work people general discussion assignment surrounding topics suggest specifically record assignment names people discussion spring question models vocabulary propositions models sentences question soundness demorgan laws stated prove disprove soundness laws truth table explicit stating truth table proves disproves soundness law question valid unsatisfiable sentences propositional logic sentences propositional logic valid unsatisfiable justify answer question deductive inference propositional logic prove implication transitive propositional logic showing truth table method natural deduction method rules inference section textbook method assume prove resolution refutation method spring question translation first-order logic problem parts problem textbook predicates student takes meaning student takes semester passes meaning student passes semester means greater means equal german language speaks meaning person speaks language function score means score obtained student semester question constraint satisfaction constraint satisfaction problem variables variable values constraints draw constraint graph problem assuming alphabetical numerical ordering variables values list variable assignments step backtracking dfs forward checking step give remaining domains variables steps dfs give variable assignments step backtracking dfs forward checking heuristics minimum remaining values mrv least-constraining-value lcv break mrv ties degree heuristic explained page alphabetically break lcv ties numerically smaller values give variable assignments arc consistency algorithm acfirst preprocessing step initial domains variable assignment ordering process acrepeatedly propagating inconsistencies remain show remaining domains variables 
homework solutions spring question points question represents expanded sequence number represents expanded sequence number represents cost represents expanded sequence number represents represents expanded sequence number represents homework solutions spring question points question points 
homework solutions spring question points models models models homework solutions spring question points prove soundness show premise true derived sentence true truth table true line cases true rule sound prove soundness show premise true derived sentence true truth table true line cases true rule sound homework solutions spring question points unsatisfiable valid valid satisfiable homework solutions spring question points truth table valid true models natural deduction implication elimination and-elimination similarly preceding step resolution rule inference finally reverse implication elimination resolution refutation method negate put cnf form refutation proof graph pvq qvr false homework solutions spring question points homework solutions spring question points step step step arcs queue arc 
spring checkers tournament players win tie loss points plays aschrein ccarey edwin epping federspi geil gilchris griffith henry hoelz hollinge jelani jong-hoo kerry leonard lhendrix aschrein lwt lwtwwt ccarey wwwwwwwww edwin wwwwwwww epping llw lllwltlllltw federspi wwwww geil wlwww lwwl lwl gilchris wwww griffith llwltwt lttlllwl henry tttt ttlll hoelz wwlltww wlllww hollinge plays jelani wwwwwwwwwww jong-hoo kerry wwwwww leonard wlwt lttwlt lhendrix llw llll ljheng wwwwwwwwwww losenegg wwww mlenz nathanae lwltltllltltlll ozeki twtttttwtttttt perron wwwww plonka ltltwwttllll reineman lllwl schobert wlltttwlttltt steinich lll llllllltllll tchristi tlwltltwwlllllll theodore wwwwww tristan wwwwwwwww vogelsan wwww waclawik wwwwwwwwww wchristi wttlwllltwlltl witte record starting game points record ljheng losenegg mlenz nathanae ozeki perron plonka reineman schobert steinich tchristi theodore tristan vogelsan waclawik wchristi witte lttttlwllwwtltltl wwwwwwwwwww wwww wwwwwwwwww llltlllwlwllllltl llllllwl tlt llllwll tlll lllwllltl lllltwl ltl tllltwltlll ttttwl ltltl lltttllllwtt wwwwwwwwwwwwwwwww wwww lllw tllltwllllll lllttwltlltwl wwwwwww ttttwttltwltlt wtw ttwwtttw lwwlwlt ttt tlttltl tltl ltlwt wwlwwwltlwl wlwlwt ltt lllwtll wltllttl twt twtwt tllll llt ttlt wwww llllwl twtwwtwwtww tww wwwwwwww lwt lwwtwt lwt wwwwwwwwwwww ltlltlwllwltlll hen starting game record starting game combined record login score rank points points points aschrein ccarey edwin epping federspi geil gilchris griffith henry hoelz hollinge jelani jong-hoo kerry leonard lhendrix ljheng losenegg mlenz nathanae ozeki perron plonka reineman schobert steinich tchristi theodore tristan vogelsan waclawik wchristi witte 
neural network-based face detection henry rowley har cmu http cmu har shumeet baluja baluja cmu http cmu baluja school computer science carnegie mellon forbes avenue pittsburgh usa takeo kanade cmu http cmu abstract present neural network-based face detection system retinally connected neural network examines small windows image decides window face system arbitrates multiple networks improve performance single network bootstrap algorithm training networks adds false detections training set training progresses eliminates difficult task manually selecting non-face training examples chosen span entire space non-face images comparisons stateof-the-art face detection systems presented system performance terms detection false-positive rates introduction paper present neural network-based algorithm detect frontal views faces gray-scale images algorithms training methods work supported grant siemens corporate research army research office grant number daah -gand office naval research grant number work started shumeet baluja supported national science foundation graduate fellowship supported graduate student fellowship national aeronautics space administration administered lyndon johnson space center views conclusions contained document authors interpreted representing official policies endorsements expressed implied sponsoring agencies interactive demonstration world wide web http cmu har faces html submit images processing face detector displays detection results pictures submitted general applied views faces similar object pattern recognition problems training neural network face detection task challenging difficulty characterizing prototypical non-face images unlike face recognition classes discriminated faces classes discriminated face detection images faces images faces easy representative sample images faces harder representative sample size training set class grow quickly avoid problem huge training set non-faces selectively adding images training set training progresses sung poggio bootstrap method reduces size training set needed detailed descriptions training method network architecture section section performance system examined find system detect faces test set images acceptable number false positives section compares system similar systems conclusions directions future research presented section description system system operates stages applies set neural network-based filters image arbitrator combine filter outputs filter examines location image scales locations face arbitrator merges detections input network output subsampling preprocessing neural network pixels extracted windowinput image pyramid pixels correct lighting histogram equalization receptive fields hidden units figure basic algorithm face detection individual filters eliminates overlapping detections stage neural network-based filter component system filter receives input pixel region image generates output ranging signifying presence absence face detect faces input filter applied location image detect faces larger window size input image repeatedly reduced size subsampling filter applied size filter invariance position scale amount invariance built filter determines number scales positions filter applied work presented apply filter pixel position image scale image factor step pyramid filtering algorithm shown figure preprocessing step adapted sung poggio applied window image window passed neural network decides window face preprocessing attempts equalize intensity values window fit function varies linearly window intensity values oval region inside window pixels oval represent background intensity values computing lighting variation face linear function approximate brightness part window subtracted window compensate variety lighting conditions histogram equalization performed non-linearly maps intensity values expand range intensities window histogram computed pixels inside oval region window compensates differences camera input gains improving contrast cases preprocessed window passed neural network network retinal connections input layer receptive fields hidden units shown figure types hidden units pixel subregions pixel subregions overlapping pixel horizontal stripes pixels types chosen hidden units represent features important face detection horizontal stripes hidden units detect features mouths pairs eyes hidden units square receptive fields detect features individual eyes nose corners mouth figure shows single hidden unit subregion input units replicated experiments networks sets hidden units similar input connection patterns commonly speech character recognition tasks waibel cun network single real-valued output window face examples output single network shown figure figure box represents position size window neural network gave positive response network invariance position scale results multiple boxes faces note false detections eliminated methods presented section figure images threshold detections boxes train neural network stage serve accurate filter large number face nonface images needed face examples gathered face databases cmu harvard images contained faces sizes orientations positions intensities eyes center upper lip face located manually points normalize face scale orientation position image rotated eyes horizontal line image scaled distance point eyes upper lip pixels pixel region centered pixel point eyes upper lip extracted woodward yang harvard provided mugshot images training training set face examples generated original image randomly rotating images center points scaling translating half pixel mirroring window set preprocessed applying lighting correction histogram equalization images shown figure randomization filter invariance translations pixel scalings larger translation scale dealt applying filter pixel position image pyramid images scaled factors figure face images randomly mirrored rotated translated scaled small amounts practically image serve non-face space non-face images larger space face images collecting representative set non-faces difficult collecting images training started images collected training manner adapted sung poggio create initial set non-face images generating images random pixel intensities apply preprocessing steps images train neural network produce output face examples non-face examples training algorithm standard error backpropogation iteration loop network weights initially random iteration weights computed training previous iteration starting point training run system image scenery faces collect subimages network incorrectly identifies face output activation select subimages random apply preprocessing steps add training set negative examples step examples non-faces collected training shown figure images scenery collecting negative examples bootstrap manner typical training run selects approximately non-face images subimages locations scales training scenery images stage merging overlapping detections arbitration examples figure showed raw output single network number false detections section present strategies improve reliability detector merging overlapping detections single network arbitrating multiple networks merging overlapping detections note figure faces detected multiple nearby positions scales false detections occur consistency observation leads heuristic eliminate false detections location scale face detected number detections neighborhood location counted number threshold location classified face centroid nearby detections defines location detection result collapsing multiple detections experiments section heuristic referred thresholding location correctly identified face detection locations overlap errors eliminated based heuristic nearby detections preserve location higher number detections small neighborhood eliminate locations fewer detections discussion experiments heuristic called overlap elimination cases heuristic fails case illustrated left faces figure face partially occludes implementation heuristics detection network location scale marked image pyramid labelled output pyramid 
location pyramid replaced number detections neighborhood location effect spreading detections neighborhood extends equal number pixels dimensions scale position threshold applied values centroids position scale threshold regions computed detections contributing centroids collapsed single points centroid examined order starting highest number detections neighborhood centroid locations represent face overlapping current centroid removed output pyramid remaining centroid locations constitute final detection result arbitration multiple networks reduce number false positives apply multiple networks arbitrate outputs produce final decision network trained manner random initial weights random initial non-face images random permutations order presentation scenery images section detection false positive rates individual networks close training conditions self-selection negative training examples networks biases make errors detection network position scale recorded image pyramid figure training partially-trained system applied images scenery faces left regions image detected faces expanded shown errors added set negative training examples combine pyramids anding strategy signals detection networks detect face precisely scale position due biases individual networks rarely agree false detection face anding eliminate false detections heuristic decrease detection rate face detected network thrown show individual networks detect roughly set faces number faces lost due anding small similar heuristics oring outputs networks voting networks arbitration methods applied thresholding overlap elimination heuristics applied combine centroid locations actual detection locations require neighborhood precisely aligned arbitration strategies anding oring voting intuitively reasonable obvious heuristics perform rowley tested hypothesis separate neural network arbitrate multiple detection networks found neural network-based arbitration produces results comparable produced heuristics presented earlier experimental results large number experiments performed evaluate system show analysis features neural network detect faces present error rates system large test sets sensitivity analysis order determine part input image network decide input face performed sensitivity analysis method baluja pomerleau collected positive test set based training database face images randomized scales translations rotations training negative test set built set negative examples collected training earlier version system pixel input images divided pixel subimages subimage turn test set replacing subimage random noise tested neural network resulting sum squared errors made network indication important portion image detection task plots error rates networks developed shown figure network sets hidden units illustrated figure network sets networks rely heavily eyes nose mouth figure anecdotally behavior real network face scalenetwork figure error rates vertical axis small test resulting adding noise portions input image horizontal plane networks network copies hidden units shown figure total hidden units connections network copies total hidden units connections test images cases eye visible detection face reliable entire face visible system sensitive occlusion features nose mouth testing system tested large sets images completely distinct training sets test set collected cmu consists scanned photographs newspaper pictures images collected world wide web digitized television pictures images frontal views faces require networks examine pixel windows test set consists images faces windows sung poggio measure accuracy system test set similar test set images complex backgrounds faces accurately measure false detection rate images faces windows feature face detection system common systems outputs binary neural network filters produce real values indicating input test sets world wide web url http cmu har faces html face threshold training select negative examples network outputs greater input scenery image considered mistake intuitively reasonable changing testing vary conservative system examine effect threshold testing measured detection false positive rates threshold varied threshold false detection rate faces detected threshold decreased number correct detections increase number false detections tradeoff illustrated figure shows detection rate plotted number false positives threshold varied networks presented previous section threshold locations close knees curves figure threshold testing experiments underway examine effect threshold training table shows performance networks working effect overlap elimination collapsing multiple detections results anding oring voting neural network arbitration networks identical networks negative images presented order training results anding oring fraction faces detected false detections windows examined roc curve test sets network network figure detection rate plotted false positives detection threshold varied networks performance measured images test sets network sets hidden units illustrated figure network sets points labelled threshold points experiments networks based networks voting based networks table shows percentage faces correctly detected number false detections combination test sets rowley breakdown performance system test sets performance systems neural networks arbitration multiple detection networks discussed earlier thresholding heuristic merging detections requires parameters size neighborhood searching nearby detections threshold number detections found neighborhood table parameters shown parentheses word threshold similarly anding oring voting arbitration methods parameter close detections detection centroids order counted identical systems show raw performance networks systems networks include thresholding overlap elimination steps decrease number false detections significantly expense small decrease detection rate remaining systems arbitration multiple networks arbitration reduces false positive rate cases increases detection rate slightly note systems arbitration ratio false detections windows examined extremely low ranging false detection windows depending type arbitration systems show detector tuned make conservative system anding extremely small number false positives detection rate hand system based oring higher detection rate larger number false detections system compromise differences performance systems understood arbitration strategy anding false detection made network suppressed leading lower false positive rate hand oring faces detected correctly network preserved improving detection rate system voting networks yields detection rate lower false positive rate system oring networks based results shown table concluded system makes acceptable tradeoff number false detections detection rate system detects average faces average false detection pixel windows examined figure shows examples output images system comparison systems sung poggio reports face detection system based clustering techniques system passes small window portions image determines face exists window system supervised clustering method face non-face clusters distance metrics measure distance input image prototype clusters metric measures partial distance test pattern cluster significant eigenvectors distance metric euclidean distance test pattern table combined detection error rates test sets missed detect false false detect type system faces rate detects rate ideal system single network heuristics network copies hidden units total connections network copies hidden units total connections network copies hidden units total connections network copies hidden units total connections single network heuristics network threshold overlap elimination network threshold overlap elimination network threshold overlap elimination network threshold overlap elimination arbitrating networks networks networks threshold overlap elimination networks threshold overlap elimination networks thresh overlap thresh 
overlap nets networks voting overlap elimination threshold distance threshold accept detection threshold detections cube extending scale detection pyramid surrounding detection size cube determined distance number pixels center cube edge position scale overlap elimination set detections erroneously faces overlapping heuristic examines detections order votes small neighborhood removing conflicting overlaps voting distance distance distance heuristics arbitrating multiple networks distance parameter similar threshold heuristic close detections individual networks counted occuring location scale distance detections occur precisely location scale voting requires networks detect face requires requires signal detection network arbitration architecture results detection networks fed arbitration network parameter specifies network architecture simple perceptron network hidden layer fully connected hidden units network hidden layers fully connected hidden units additional connections hidden layer output figure output obtained system table image numbers shown number faces image number faces detected correctly number false detections notes specific images false detections present faces missed babies fingers mouths represented training set lighting causing side face information bright band eyes removed false detect overlapped system trained real faces hand drawn faces detected images obtained world wide web scanned photograph digitized television image provided sung poggio mit scanned newspapers scanned printed photograph projection dimensional subspace distance measures close ties principal components analysis pca sung poggio step system perceptron neural network hidden layer trained classify points distances clusters total inputs system trained positive examples negative examples collected bootstrap manner comparison system approximately positive examples negative examples table shows accuracy system test set results system heuristics employed systems table sung poggio faces labelled test set labelled faces difficult system detect based assumption sung poggio unable detect additional faces labelled number missed faces values listed paper noted implementation details sung poggio process slightly smaller number windows entire test set account computing false detection rates table shows equal numbers false detections achieve higher detection rates main computational cost sung poggio computing distance measures window clusters estimate computation requires fifty times floating point operations needed classify window system main costs preprocessing applying neural networks window insufficient space present rowley describes techniques speeding system based work umezaki license plate detection techniques related high level presented vaillant work networks network single output system trained produce maximal positive centered faces maximal negative non-faces unlike system faces perfectly centered network trained produce intermediate related off-center face network scans image produce candidate face locations runs quickly network architecture retinal connections shared weights computation required application detector reused adjacent pixel position optimization requires preprocessing restricted form takes input entire image produces output image window-by-window preprocessing system network precise localization trained produce positive response centered face negative response faces centered trained non-faces candidates produce positive response network output detections potential problem vaillant negative training examples selected manually small set images indoor scenes similar testing system make detectors robust bootstrap technique sung poggio conclusions future research algorithm detect faces set total images acceptable number false detections depending application system made conservative varying arbitration heuristics thresholds system tested wide variety images faces unconstrained backgrounds number directions future work main limitation current system detects upright faces camera separate versions system trained head orientations results combined arbitration methods similar presented methods improving system performance include obtaining positive examples training applying sophisticated image preprocessing normalization techniques instance table comparison sung poggio system test set missed detect false false detect system faces rate detects rate networks threshold overlap elimination networks threshold overlap elimination networks threshold overlap elim threshold overlap elimination sung poggio multi-layer network sung poggio perceptron color segmentation method hunke color-based face tracking filter images face detector applied portions image skin color speed algorithm eliminating false detections application work area media technology year improved technology cheaper efficient ways storing information automatic high-level classification information content limited bottleneck prevents media technology reaching full potential work user make queries form scenes video human faces query answered automatically acknowledgements authors kah-kay sung tomaso poggio mit woodward yang harvard providing series test images mug-shot database michael smith cmu provided digitized television images testing purposes eugene fink xue-mei wang hao-chi wong tim rowley kaari flagstad comments drafts paper baluja pomerleau shumeet baluja dean pomerleau encouraging distributed input reliance spatially constrained artificial neural networks applications visual scene analysis control submitted hunke martin hunke locating tracking human faces neural networks master thesis karlsruhe cun cun boser denker henderson howard hubbard jackel backpropogation applied handwritten zip code recognition neural computation rowley henry rowley shumeet baluja takeo kanade human face detection visual scenes cmu-cs- carnegie mellon november http cmu har faces html sung poggio kah-kay sung tomaso poggio example-based learning view-based human face detection memo cbcl paper mit december umezaki tazio umezaki personal communication vaillant vaillant monrocq cun original approach localisation objects images iee proceedings vision image signal processing august waibel alex waibel toshiyuki hanazawa geoffrey hinton kiyohiro shikano kevin lang phoneme recognition time-delay neural networks readings speech recognition pages 
introduction artificial intelligence homework assignment learning decision trees adapted david jong-hoon due feb question boolean functions decision trees points noc noyes question information gain points entropy attribute color based training dataset log log log information gain attributes color shape size based data color remainder color gain color remainder color log log log log log log shape remainder shape log log log log gain shape remainder shape size remainder size gain size remainder size decision tree algorithm figure data table training set based information gain computed choose attribute color root tree entropy attribute blue node classification case similarly attribute yellow leaf node classification note color green assumed default node classification continue compute information gain decision tree attribute red shape remainder shape gain shape log log log log log size remainder size log log gain size computation gain shape gain size notice computation required leaves classifications conclude tht tree color blue yellow red green shape square circle examples decision tree green square big assumed default node classification classified positive blue square small decision tree built blue classified positive missing data reasonable answer noisy data reasonable answer question building decision trees java points deduction point points program achieve requirement written part points forget print tree points forget answer question points small test points fail parse train txt points fail create tree train data train data train data train data train data points parser limited mushroom data points tree created mushroom data correct points points program run checked effort made give points attempt 
spring introduction artificial intelligence homework assignment learning decision trees assigned wednesday january due wednesday february late policy homework handed start class due date electronically turned time hours late including weekend days deduction maximum score addition points incorrect answers hours late including weekend days deduction maximum score addition points incorrect answers hours late including weekend days deduction maximum score addition points incorrect answers hours late receive assignment addition late days time semester late day hours save hours collaboration policy complete assignment individually encouraged discuss general algorithms ideas classmates instructor order answer questions give examples assignment order demonstrate solve problems require explicitly answers copy answers code fragments answers copied code web cases work people general discussion assignment surrounding topics suggest specifically record assignment names people discussion spring question boolean functions decision trees define manually decision trees represent boolean functions definitions logical connectives figures textbook question information gain attributes values color blue green red yellow shape circle square size big small class labels training dataset color shape size class blue circle big yellow circle small blue square small red square big blue circle small yellow circle small red circle big red square small entropy aka information attribute color based training dataset compute information gain gain attributes color shape size based data table construct complete decision tree algorithm figure data table training set choose attribute node information gain criterion case tie selecting attribute break ties alphabetical order attribute names examples classified decision tree green square big blue square small spring suppose data collection future built decision tree collect information color resulting unknown square small decision tree classify classified explain suggest alternative method overcome problem suppose training set shape circle resulting examples identical feature vector red circle big classified differently noisy attribute error general problem learning method noisy examples occur training set suggest address issue question building decision trees java part assignment required implement java decisiontree construction algorithm figure textbook case classes main class called java created sample training testing datasets program creation experimentation datasets subset mushroom records drawn audubon society field guide north american mushrooms online uc-irvine archive task description sample mushroom classify classes edible poisonous training data file called mushtrain data testing data file called mushtest data posted class homework page http wisc dyer hw-toc html program tested datasets unrelated provided mushroom domain program learn decision trees based training datasets create class calling convention java train data test data printtreeflag random max-gain seed train data file training dataset test data file testing dataset printtreeflag print tree don print tree random max-gain random choose-attribute max-gain choose-attribute seed seed number random number generator http java sun docs api java util random html details input seed treat default system currenttimemillis seed random yourrandom random system currenttimemillis spring program functionality training dataset build decision tree decision-tree program methods choose-attribute max-gain random maxgain node choose-attribute method choose attribute highest information gain information gain criterion defined section textbook random node choose-attribute method randomly pick attribute attributes print decision tree printtreeflag set simple indented ascii text node level tree depth-first tree traversal printout tree corresponds fig book root patrons full hungry type french italian thai fri sat burger classify testing dataset learned decision tree report examples incorrectly classified printing predicted classification actual classification finally print accuracy learned decision tree fraction correctly classified total number examples testing dataset eliminate ambiguities algorithm defined figure text book case tie majority-value return listed classification training file case tie selecting attribute choose attribute appears training file choosing attribute find explanation helpful implementing chooseattribute function figure textbook description assumes general class case notation section textbook implement -class case spring number classes case binary classification problem names classes number training examples node number training examples node class define fraction examples node class information content aka entropy node computed log note general log logarithm base entropy measure expected encoding length bits attribute number values values number examples node attribute number examples node attribute class define define finally define remainder log gain remainder programming tips hints java classes bufferedreader stringtokenizer helpful parsing data files java class arraylist nice built-in data structure java arraylist part list structure automatically resized insert objects normal list structure method called recover element arraylist cast back original class remember log log log base log log log base debugging purposes training data question verify program results question ignore suggestions implement classes tips hints run experiments run decision-tree-learning program provided training data set build trees domain random seed number max-gain choose-attribute method include printout results runs report briefly explain max-gain decision tree performed relative tree created random spring run decision-tree-learning program times convention java train data test data collect accuracy results runs print record examples incorrectly correctly classified report random-decision-tree average accuracy runs compare average accuracy resulting runs step accuracy information-gain decision tree step discuss pros cons learning decision tree based max-gain random criteria hint save time write small script file run tests save results file training data file format training data file start header section header information classification values attributes values attributes classification values discrete valued line begins double slash comment lines elements comma-separated line beginning double classification values line begins specifies discrete values attribute order successive attributes important order training examples file nonempty line training training element element true classification elements line left values ordered list attributes note white space line training data file classification credit card application approved disapproved attributes credit history good bad unknown collateral sufficient insufficient credithistory collateral applicant applicant applicant end training data file spring testing data file format testing data file testing examples elements order training examples testing data file applicant applicant end testing data file turn electronically primary file called java copy java files compile run program linux machines private handin directory called -handin add line cshrc local file home directory set path path handin bin execute command directory handin directory handin -handin information electronically hand code web page http wisc handin-instruc html code compile run departmental linux machines grade paper hand class hard copy answers questions requested printout report question printout well-documented source code question staple pages put 
login date top page attention print report misclassified cases experimental runs question extra credit concept extra credit define concept classification problem collect data create set examples define training testing sets partitioning examples collected run decision tree construction algorithm training set spring testing set determine accuracy decision tree write description problem domain obtained data real made interpretation resulting decision tree turn electronically training testing sets extra credit missing values introduced issue missing values question question assume training testing datasets contained missing values practice missing values common things missing values case sensor fails case information filled form impossible collect data values circumstances general data collection extra credit address issue allowing examples missing values attributes training set testing set earn full extra credit complete tasks write explanation pseudocode algorithm solve issue implement ideas decision-tree program program accept training testing datasets missing values create decision-tree based training dataset test decision-tree based testing dataset list code part program extra credit section report note supervised learning method assume examples training dataset class labels training testing data file formats question missing part replace symbol examples training testing data files missing values training data file classification credit card application approved disapproved attributes credit history good bad unknown collateral sufficient insufficient credithistory collateral applicant applicant applicant end training data file spring testing data file applicant applicant end testing data file training testing purpose create small training testing file artificial data larger training testing datasets visit ucirvine archive online http ics uci mlearn mlrepository html lot interesting data datasets missing values advised complete homework assignment add extra credit code version program note completed extra credit hand java programs electronically question classes 
samuel studies machine learning game checkers ii-recent progress abstract signature table technique improved book learning procedure thought superior linear polynomial method earlier full made called alpha-beta pruning forms forward pruning restrict spread move tree permit program ahead greater depth unable outplay checker masters program playing ability greatly improved introduction limited progress made development improved book-learning technique optimization playing strategies applied checker playing program earlier paper title sharpening understanding substantial improvements playing ability resulted recent studies reporting time desirable basic limitation machine learning techniques previously outlined overcome program outplay human checker players briefly review earlier work reader find review adequate refresh memory referring earlier paper machine learning procedures detail rote learning procedure record board situation encountered actual play information results machine analyses situation record referenced terminating board situations newly initiated tree search effect machine ahead turther time permit generalization learning procedure program continuously re-evaluated coefficients linear polynomial evaluate board positions terstanford studies machine learning game checkers ibm journal reprinted minor additions corrections computers thought edited feigenbaum feldman mcgrawhill match program world champion hellman won games played mail played draw burriedly played cross-board game recently hanson pacific occasions coast champion beaten current versions program separate minating board situations look-ahead tree search cases program applied mini-max procedure back scores assigned terminating situations select move assumption opponent apply selection rules turn play rote learning procedure characterized slow continuous learning rate effective opening end-game phases play generalization learning procedure contrast learned rapid rate approached plateau set limitations adequacy man-generated list parameters evaluation polynomial surprisingly good mid-game play fared badly opening end-game phases learning procedures cross-board play human players self-play spite absence absolute standards improve play demonstrating usefulness techniques discussed expressions introduced find ply defined number moves ahead ply consists proposed move machine anticipated reply opponent oardparameter defined numerical measured property parameter board situation parameter values multiplied learned coefficients terms learning polynomial entire polynomial score glaring defects program earlier discussed absence effective machine procedure generating parameters evaluation procedure incorrectness assumption linearity squares player potentially move disregarding forced jumps board parameter mob total mobility number ref describes parameters ibm journal november underlies linear polynomial general slowness learning procedure inadequacies heuristic procedures prune terminate tree search absence strategy considerations altering machine mode play light tactical situations develop play progress made respect defects progress made overcoming limitations restrict discussion paper generalization learning schemes preassigned list board parameters attempts made improve list make precise inclusive remains man-generated list subject human failings programmer good checker player checker experts consulted good players world fact general unable express immense knowledge game words words understandable programmer present time twenty-seven parameters selected list ref additions modifications longer list experiments methods combining evaluations parameters studied considerable detail earlier linear polynomial method values individual parameters multiplied coefficients determined learning process added obtain score recent procedure tabulations called signature tables express observed relationship parameters subsets values read tables number subsets combined final evaluation evaluation procedures digression matters heuristic search heuristics risk repetition sounding pedantic bit problem immensity related game checkers pointed earlier paper checkers deterministic practical sense exists algorithm predict move short complete exploration acceptable path end game lacking time sucha search depend heuristic procedures attempts people deal games checkers chess reveal players engage behavior extremely complex bit irrational jump aspect complete line reasoning fact writer limited observation checker players convinced player apparent confusion exists approach problem samuel intuitive reactions viewed average person blessed similar proficiency conclude present stage knowledge practical approach digital computer development heuristics tend ape human behavior computer heuristics weighted direction placing greater reliance speed case human player assume complexity human response dictated complexity task performed indication problems handled step maintain task making decisions heuristics problem attacked heuristic procedures essentially complicated task playing seldom perform simple test determine effectiveness heuristic keeping scientist generally simply heuristics tested simply time embark program cost computer time object importantly heuristics tested independent affect parameters hold constant definitive set experiments virtually impossible attainment forced make compromises make complicated program varying parameters time basis incomplete tests conclude direction playing techniques investigation learning procedures forms essential core experimental work improvements made playing techniques improvements largely concerned tree searching involve schemes increase effectiveness alpha-beta pruning so-called alpha-beta heuristic variety techniques sons relate so-called alpha-beta heuristic word acceptable advisedly reathe problem complexity ibmjournd newell shaw simon chess playing programs games samuel programming computer play games advances computers alt academic press york conclude precisely adopt heuristic procedure assuming veetigxted prof mccarthy students inso named prof john mccarthy procedure extensively inadequately literature heuristic simple algorithmic procedure special case general branch bound technique rediscovered times exploited integer programming research land doight automatic method solving disgramming extensions george dantzig princeton press crete programming problems reported bibliography linear prom rossman twery combinatorial programming abstract operations research john katta murty dura sweeney caroline karel algorithm traveling salesman problem operations research figure look-ahead move tree alpha-beta pruning fully effective tree explored left board positions look-ahead move player shown squares board positions player shown circles branches shown dashed lines left unexplored influencing final move choice generic tree pruning improvements enable program analyze depth albeit introduction hazards discussed lacking ideal board evaluation scheme tree searching occupies central role checker program alpha-beta pruning alpha-beta pruning explained simply technique exploring branches search tree analysis point interest player making analysis obvious opponent frequently overlooked effect scores alpha exceeded board considered desirable side play beta exceeded move leading board hen made opponent note board acceptable side play player deny opponent opportunity making move leading board making earlier move people technique instinctively look-ahead analyses understand full implications principle saving required amount tree searching achieved extremely large consequence alpha-beta pruning essential ingredient game playing program hazards form pruning making improvements tree pruning techniques nice interesting speculate fact human learning involved assign learning task computer practical devised move tree type results alpha-beta pruning effective shown fig assumed moves investigated left paths shown dashed lines considered verified assigning arbitrary scores terminals dashed paths mini-maxing usual admittedly chosen special illustrate savings result realize maximum saving computational effort shown investigate moves ideal order order result side move great deal thought effort devising techniques 
increase probability moves investigated approaching order limiting values mccarthy alpha beta pruning referring fig tree fig redrawn uninvestigated branches deleted reasons symmetry boards look-ahead scored viewed side turn move means mini-maxing changing sign score ply backing tree maximizing set values alpha values considered alpha values assigned boards tree terminating boards boards generated values reflect score exceeded branch leading board entered player turn play look-ahead terminated terminal board evaluated board fig assigned board levels tree machine learning figure move tree fig redrawn illustrate detailed method track comparison values board positions lettered order investigated numbers successive alpha values assigned boards investigation proceeds case board alpha terminal board score exceeds alpha player board ill advised entering branch leading terminal board similarly negative terminal board score exceed alpha board immediately tree case board player bourd desirable move alternate stating condition keeping mccarthy usage negative alpha board level tree case board beta exceeded score board question case board single set alpha values assigned boards tree performs dual role mccarthy alpha referenced boards levels tree negated mccarthy beta referenced boards level tree returning analysis fig note initial look-ahead leading boarde boards assigned alpha values set minus infinity computer large negative number board evaluated score compared alpha found larger negative score compared alpha larger replace alpha unaffected subsequent consideration terminal boardsfand paths board considered final alpha compared current alpha board larger negative alpha compared current alpha larger replace move board investigated leading board board tree assign alpha board alpha board interested minimum side accept advance alpha board case initial board evaluated compared alpha board comparison unfavorable unnecessary moves originating board immediately consideration boards similar situation exists process simply repeated tree forward alpha values advanced time levels backing comparisons made tree completely explored final alpha initial board score correct move path alpha derived saving results alpha-beta pruning expressed reduction apparent amount branching node increase maximum ply search extended fixed time interval optimum ordering apparent branching factor reduced square root original put investment computer time maximum ply doubled moderately complex trees savings astronomical situation samuel branching factor ideal alpha-beta pruning factor reduced approximately time permits evaluation boards minutes checkers ahead approximately ply alpha-beta pruning alpha-beta depth require evaluation approximately board positions require hours computation savings dependent perfect ordering moves actual savings great alpha-beta pruning easily reduce work factors thousand real game situations improvement results alpha-beta pruning attempt optimize search order number branches pruned highly variable depending accidental ordering moves problem complicated case checkers variable nature branching alpha-beta apparent branching factor reduced vicinity reduced forced jump moves selection ordering practiced date apparent branching reduced leads substantial increase depth search carried principal alpha beta values prune useless branches move tree avoid amount inconsequential work difference current alpha current beta small means sides agreed optimum score advantage side found exploration paths investigation back-up tree part tree found alpha-beta margin longer small finding situation terminate search added savings achieved spectacular savings initial alpha-beta significant frequently reducing work additional factor plausibility analysis order alpha-beta pruning effective mentioned introduce technique increasing probability paths explored ways conduct preliminary plausibility survey board situation ahead fixed amount list moves apparent order goodness basis information order subsequent analysis compromise required depth plausibility survey conducted short look-ahead renders doubtful long look-ahead takes time depth final analysis curtailed question plausibility analysis applied ply levels main look-ahead levels time program plausibility survey ply levels main look-ahead plausibility analysis carried minimum ply recently plausibility analysis applied stages main look-ahead carried minimum ply portions look-ahead conditions explained pause note alpha-beta pruning called backward pruning technique enables branches pruned time program ready back making mini-max comparisons assumes analyses branches carried fixed ply board evaluations made fixed ply level mentioned earlier rigorous application alpha-beta technique introduces opportunities erroneous pruning results terms final moves chosen pruning extent procedure heuristic plausibility analysis technique makes effective heuristic simple plausibility analysis found effective increasing amount alpha-beta pruning suffers defects place actual amount pruning varies greatly move move depending random variations average correctness plausibility predictions move trees wrong prediction point search tree program follow optimum path detect fact poor prediction made excessive amount useless work multiple-path enhanced-plausibility procedure studying procedures checker players struck fact evaluations made continuously levels look-ahead unpromising lines play discarded completely cursory examination promising lines put briefly competing lines play study simultaneously attention switching relative goodness lines play appears change increasing depth tree search action undoubtedly prompted desire improve alpha-beta pruning effectiveness find checker master explains terms advised copy behavior fortunately plausibility analysis information making desired comparisons fairly modest increase data storage requirements small amount reprogramming machine learning tree search procedure beginning move moves considered plausibility search made opponent replies plays moves sorted apparent order goodness branch carried ply making machine move opponent reply machine counter move case moves made based plausibility analysis carried minimum depth ply path yielding highest score machine level chosen investigation forward moves making opponent reply machine counter reply based plausibility analysis point score found path compared score path saved earlier path investigation found good alternate path stored alternative path picked extended depth moves comparison made process repeated alternately original path investigation found continued moves analysis continues limiting depth set considerations reached point flitting path path discontinued normal mini-maxing procedure instituted probability found optimum path increased procedure alpha-beta pruning work greater effectiveness net effect increase amount alpha-beta pruning decrease playing time decrease spread playing time move move enhanced plausibility analysis affect hazard-free nature alpha-beta pruning plausibility scores look-ahead procedure determine order analyses replaced properly mini-maxed scores analysis proceeds minor point require explanation order saved scores directly comparable related side machine side compared opponent turn move comparisons made alternate play principle make comparisons move gained complications arise thought offset advantage move tree recorded computer actual play shown fig simply listing moves order considered arranged page reveal tree structure asterisks alternate moves branch points principal branches identified serial numbers interest clarity moves made individual plausibility search shown search explained flitting path path visible start case initial moves surveyed start listed initially expected order identified serial numbers branches carried depth ply apparent branch found identified serial number 
verified scores expressed terms side made recorded move line question branch investigated moves put investigation branch identified serial number turn displaced finally back point normal mini-maxing initiated amount flitting move move critically dependent exact board configuration studied fairly simple situation portrayed illustration noted completion investigation branch program back branch branch branch branches investigated matter general interest tree move game opening opponent move move branch finally chosen computer minute seconds make move record tree game set games played simultaneously machine length tree search arbitrarily reduced speed play alpha beta values listed columns expressed terms side making move score considered larger alpha smaller beta clarity presentation deletions made large negative values alpha column large positive values values beta column forward pruning addition hazardless alpha-beta pruning exist forms forward pruning reduce size search tree risk forward pruning absolute assurance scores obtained deeper analysis computed earlier ply reasons ahead reasonable assume net improvement result judicious procedures simple forms forward pruning found variety complicated procedures based initial imperfect understanding problem great effort success figure actual look-ahead move tree printed computer play move tree alpha beta score ouolo ooolu iooc -it -ic -zz vll- lz- brz ll- ooloo rzc- ll-l -ltl -li -ie -ll -ls ocuj ll- ply total usage ends bzl machine learning apply form limit number moves saved future analysis point tree provisions saving moves ply small gradually restricting number saved ply greater finally maximum feasible ply approached moves saved decision saved based plausibility analysis form forward pruning compares apparent scores measured plausibility analysis current values alpha beta carried forward terminates look-ahead comparison unfavorable apply comparison unvarying reasonable set margins vary ply amount pruning increases increasing ply low plies paths pruned fairly severe pruning caused occur effective ply limit approached margins set high negligible pruning result low nonexistent pruning extreme risks unwise pruning correspondingly large factors experimentally studied magnitudes forms pruning magnitudes caused vary ply problem complicated kinds forward pruning independent reasonable assume rate margins reduced form forward pruning rate number pruning increased earlier form depend position plausibility listings earlier boards branch investigation impractical make detailed study interdependencies range combinations extremely large series games played combination valid conclusions drawn arrangements fact final scheme adopted based apparent reasonableness arrangement real data problem pitch moves forms forward pruning difficulties arise respect proper consideration called pitch moves moves piece sacrificed return positional advantage eventually leads equalizing capture actual winning position principle assign proper relative weights positional material advantages assess moves correctly situations generally detail-specific impossible evaluate directly look-ahead troubles encountered samuel limited look-ahead distance plausibility analysis extended equalizing moves found consequence good pitch move pruned two-ply plausibility search analysis terminated non-jump situation correctly evaluate move sequences type stands pitch jump non-jump moves forcing powerless evaluate sequences type type occur frequently normal play three-ply search handle situations handle case unsatisfactory practical compromise achieved date employ two-ply plausibility search normal non-pitch situation extend search three-ply move plausibility search jump noted earlier three-ply search customarily employed preliminary multi-path phase analysis complicated methods handling problem considered methods date proved expensive terms computing time discarded methods marginally effective consisted procedure keeping separate account pitch moves encountered plausibility search defined case sequences move search jump move jump pitch moves sorted basis relative scores record pitch moves moves rated good moves independently pitch status moves type return capture delayed ply depth search normal number unpruned moves branch point explored remaining pitch move eliminating considered apparent pitch moves fact sheer giveaway moves impractical single pitch move apparent pitch led highest positional score move investigate procedure two-ply plausibility search salvage candidate move type increases power three-ply plausibility search correspondingly high percentage additional moves considered found bookkeeping costs procedure excessive extension general method handling pitch moves pitch sequences type investigated two-ply plausibility search main tree terminated jump move pending cost addition small practice leads exploration depth extended giveaway sequences consequence questionable look-ahead termination form amount forward pruning time arrives path terminate look-ahead evaluate board position instructive termination simply end pruning process pruning complete fixed depth final act pruning previously assumed reasonable fact earlier work attention wisdom terminating lookahead called dead positions current made plausibility analysis restriction applicable plausibility analysis terminating main tree limit set amount storage assigned tree tree storage requirements excessive allowed operate plausibility analysis effective ration computing time branches basis relative probability initial path survives swapping routine initial look-ahead procedure carried compared path resulting investigating fourth choice found plausibility fourth choice tree procedure found effective defining parameter called branching count assigned board encountered tree search insure initial moves adequate consideration identical values counts resulting boards initial moves move originating boards made branching count originating board reduced unit resulting board move assigned process repeated branch point tree branching count reaches search path terminated correctly steps initiate termination factors call extension search explained preferred branch branching count reduced unit ply level choice branch point two-unit reduction occurs choice three-unit net result paths terminated sooner paths direct proportion decreasing likelihood slightly complicated procedure branching count set higher initial reduced unit move consideration jump move units normal move procedure search extended paths involving piece exchanges search permitted terminate automatically branching count reaches score move consideration implies fact preferred path case search extended depth reached path reached previously preferred path tree pruning results found singularly diacult assess relative tree pruning techniques terms effect goodness play special situations found forward pruning procedures effective inadequate short extensive tests good determine relative ferquency situations occur normal play observe resulting game trees depend opinions checker masters goodness resulting moves reasonableness appearance trees mentioned earlier move tabulated fig auxiliary plausibility move analysis ply shown reasons clarity fine brush moves emanating recorded move examples types pruning noted tree additional information needed unambiguous identification checker experts agree trees denser attempts make dense stronger pruning result occasional examples conspicuously poor play denser trees machine play human play compensate deficiencies board evaluation methods evaluation procedures learning covered major improvements playing techniques relate tree searching improvements evaluation procedures learning discuss older linear polynomial scheme signature-table procedure linear polynomial evaluations parameter interaction binary connective terms ref number interactions large pair-wise interactions 
makes difficult depart linear machine learning case improvement performance resulted game split initially phases opening mid-game end-game recently phases set coefficients determined phase procedures defining phase game tested simple making determination solely terms total number pieces board good indications gained phases total number parameters time varied customary assessed successful parameters learning phase number attempts made speed actual play limiting number parameters selecting larger magnitude coefficients terms learning polynomial proved inadequate improvement terms appeared barely discernible evidence found improvements terms fact indication fortuitous combination ineffectual parameters correspondingly low coefficients occasion override effective term program play ineffectual parameters omitted series games played nealey blind checker champion terms machine achieved draws loss poorest moves games selected taylor checker analyst replayed terms improvements terms distinct improvement cases reason program fewer number terms made grievous errors untested board situations twenty terms games hellman referenced footnote work linear polynomial schema view demonstrated superiority signaturetable procedure signature-table evaluations impracticality inter-parameter effects obvious importance interactions led consideration number compromise proposals successful compromise solution proposed tested project mac computer arnold criffith graduate student early modification scheme subsets parameters initially selected parameters redundancy subsets subset designated signature type characterized argument computed terms values measured parameters subset board situation arguments signature type samuel combinations parameters subset serve addresses entering signature tables tabulated values meant reflect relative worth computer side combinations initial griffith scheme values read signature tables simply added obtain final board evaluation parameters thought related grouped individual subsets desirable values parameter interrelations quickly unmanageable range parameter values restricted values sides equal ahead terms board property question board properties type parameter limited values parameters subset total entries signature table completely characterizes interactions parameters checkers sum game parameters defined symmetrically reduce table size roughly entries listing values positive arguments taking values reversal sign negative arguments evaluated allowing signature tables signature types phases arrive memory space requirement table entries words table entry learning phase explained total memory requirement learning data words make procedure clear signature type comprise parameters angle center oreo guard kcent explained control king row center board guard parameter assigned sides complete control back rows side question controls back row opponent conditions reversed parameters similarly valued giving ternary number consisting -digit string selected set characterizes combination parameters argument function large positive desirable combination function advantages sides large negative disadvantageous combination arguments functions symmetric argument function side reversing signs ternary system symbol list sign processes complementing sign reversal synonymous argument side allowable range level range values tables values entries entries entries table entries final score entrie entries entries figure -level signature-table arrangement terms negative number tabulated function negative listed sum functions sides results obtained simple method handling parameter interactions encouraging result series elaborate studies made signature procedures varying degrees complexity efforts made decrease total number parameters eliminating found marginal utility increase range values permitted parameter initially increasing range parameters permit values recently dividing parameters equal groups-one group restricted range values introduce hierarchical structure signature tables outputs level signature tables combined groups inputs set level tables illustrated simplified form cover design issue experimental work restricted consideration arrangements shown figs three-level arrangements differ degree correlation parameters range level values tables values entries entries entries entries entries range entries values level table figure revised -level signature-table scheme terms recognized range values permitted individual parameters compromises optimum arrangement depends actual number parameters degree parameters interrelated extent individual parameters safely represented limited range integers case checkers desired number parameters lie range constraints range values required define parameters easily determined substantially interdependencies parameters series inconclusive experiments performed effort measure interdependencies constraints imposed permissible distribution pieces board actual game set rules game dictated good playing procedures produce apparent average correlation parameters independent specific character parameters problem complicated fact opposing lines argument advanced-the suggest closely related terms subsets interdependencies suggest terms scattered machine learning groups suggestion made reasonable situation parameters unknowingly closely related measure property placing terms subset accomplish placing subgroups permits direct trade-off evaluation made property question properties measured parameters subgroups comments order time supposedly symmetrical nature parameter data true checkers zero-sum game true parameters defined symmetrical black white concerned board situation defined parameters dependent turn play small real bias exists parameters favor side turn move parameters reverse true linear polynomial method scoring sensitive peculiarities parameters partial scores types simply added signature table procedure added complication account distinctions lost data incorrectly stored incorrectly acquired storing data uncompressed form evaluate effect matter arrangement shown fig parameters divided groups group made -valued parameter -valued parameter -valued parameter level signature table entries output values tables quantized values level signature tables employed combine sets level tables entries outputs quantized levels level signature table entries combine outputs second-level tables final output final board evaluation parameters enter level tables grouped basis assumed cases measured interdependencies resulting signature types grouped consistent assumed interdependencies complete set tables game phases tables stored full making zero-sum characteristic halve size occupied cells memory outputs level tables quantized levels outputs level tables levels latest signature table procedure arrangement shown fig parameters divided subgroups parameters subgroup -valued parameter samuel -valued parameters case level tables compacted taking advantage assumed symmetrical character data dubious procedure noted justified case added parameter interactions made large inverse effect table size speed learning reduced size level tables words outputs level tables quantized levels outputs level tables quantized levels level tables compacted attempt preserve non-symmetrical features total memory requirement tables constituted words discuss results obtained signature table scheme turn attention book learning procedures book learning book learning mentioned briefly ref describe detail studies reported books speed human learning expect substantial increase machine-learning speed result made book information case existing library master play end reasonable sample approximately board situations master play key punched transcribed magnetic tape draw games cases win achieved data moves made winning side program arranged play recorded games side person analyzing situation terms existing evaluation procedures listing preferred move move compared bookrecommended move suitable adjustment made evaluation procedure assumes book-recommended move correct move plurality good moves cases actual error book moves books correct adjustments move proper size process converge optimum evaluation procedure subject basic limitation appropriateness completeness 
parameter list takes substantial amount machine time play book games learning process faster learning actual play place game paths start representative play program forced make recommended book move proceeding move assign values moves direct fashion depending unreliable techniques earlier finally analysis move extremely limited minimaxing made scores measuring learning earlier procedures scores needed determine credit assignments parameters net effect factors make moves rate moves minute roughly move minute rate typical actual games explain learning achieved terms coefficients linear polynomial signature table case learning process made previously determined coefficients perform evaluation board situations initial moves jump situations encountered terminating ply depth scores backed mini-maxing procedure mini-maxing back values parameter values i-e terms coefficients selected terminating board situations optimized path leading moves moves table produced rows correspond moves columns correspond parameters basis book information row move program analyze data table accumulate totals average relative worth parameters predicting book move alter coefficients reflect cumulative learning totals variety procedures tested accumulating totals simplest surprisingly effective simply count number moves parameter separately parameter larger book move number moves parameter smaller book move cumulated counts board situations examined date designated hand measure goodness parameter predicting book move dimensions correlation coefficient parameter question predicted book move made correct prediction correlation machine indications book procedure found date simply values obtained coefficients evaluation polynomial arguments advanced values raised power greater overcome effect inconsequential terms overriding valuable indication term mentioned earlier typical coefficients tabulated computer shown table based roughly board situations functions learning process terms phase largest magnitude coefficients listed play hellman mentioned earlier set terms book learning signature tables extending book learning technique signature table case easy back signatures signature types analogous handling parameters linear polynomial case taking earlier signature move stored machine binary form signature type move similarly characterized totals called accumulated signature types additions made totals signature moves identified preferred book move addition number nonbook moves made totals signatures identified recommended book move reason adding book move totals give greater positive weight book recommended move negative weight moves happen correspond currentiy found book recommendation good move authority recommend moves procedure incidental effect maintaining equality grand totals accumulated separately signatures table preserving zero-sum character data data accumulated board situations additions made columns signature arguments program computes correlation coefficients signature defined analogous fashion earlier usage case level table values directly board evaluations levels signature table hierarchy actual values entered quantized restrict range tabulated values quantization separating values entering tables nonzero values quantized ranking positive values negative values separately desired number equisized groups table entries made terms small positive machine learning table linear polynomial terms parameter names learned coefficients games hellman coefficients resulted analysis approximately book moves phase terms coefficients guard quart diagl edges front angle centr nodes dchol advan pins dyksq free exchs thret stars press uncen lines phase terms coefficients spike guard edges quart centr angle front advan shove thret nodes pins dchol stars ofset holes diagl uncen mobil phase terms coefficients spike kcent pants guard front cramp advan edges centr stars quart angle thret dchol pins shove nodes uncen ofset phase terms coefficients spike guard pants kcent stars advan front thret angle edges diagl centr shove quart pins uncen ofset denys unden phase terms coefficients guard spike pants kcent thret diagl advan uncen angle shove unden front denys pins centr edges dyksq quart deuce phase terms coefficients press kcent uncen unden dyksq denys shove diagl spike thret exchs ofset advan pins angle front deuce free quart negative integer numbers relative ranking order groups process updating signature tables intervals determined rate significant data accumulate intervals updating additions continually made tables problems newer learning scheme made space time limitations restrict number parameters combined signature type restrict range allowed parameter program written numbers easily varied facility rapid rate performance storage requirements vary values chosen values lead performance exhibited older linear polynomial experiments larger values greatly increase memory requirements slow learning rate great deal juggling required order make simplest change operating times reasonable range complicates problem meaningful experiments inverse effect table size learning rate accumulate data columns signature table entry effect compounded hierarchical nature table complex start learning run entries tables computed set program basis mini-maxing procedure depending selection book games fact long period time significant fraction signatures encountered consequence statistically unreliable data persist table individual function values suspect quantizing levels perforce based insufficient data magnitude effect depend size tables program generating palliative measures adopted smooth tables order compensate blank entries entries based insufficient data effective smoothing techniques found smoothing inversion smoothing adjacent phases smoothing interpolation smoothing extrapolation smoothing needed early samuel stages learning process play extensive learning run matter fact signatures improbable book play fact impossible voids found exist signature tables playing book game board situations reassuring thought signatures found learning process found play board situations explored look-ahead process consequences making decisions basis statistically unreliable entries quality play unsmoothed data found erratic fairly large amount learning achieved pointed smoothing techniques employed temporary expedients previous smoothed results discarded completely calculations values made periodically learning accumulated uncorrupted data effects smoothing persist entries level tables locations data stored influenced smoothing inversion averaging positive negative entries compensating sign inversions partially justified zero-sum symmetrical characteristic data smoothing adjacent phases transferring data phases random data accumulate phases valid values signature vary adjacent phases form smoothing found limited utility reasons account absence specific data phase operate prevent data generated adjacent phases smoothing interpolation based assumption missing correlation signature zeros argument approximated averaging values appearing related signatures zeros individually replaced order effective data cases zero-valued parameters form smoothing assumes linear relationship effect parameter interpolation applied parameter concerned older linear polynomial procedure form smoothing ineffectual balanced pairs entries found smoothing extrapolation forms simplest entries found function case void remaining case filled table correlation coefficients measuring effects learning signature table procedure linear polynomial procedure function total number book moves analyzed tests parameters signature table score grouped configuration shown figure correlation coefficient signature total number table polynomial book moves analyzed case case recalcitrant cases entry parameter found substitute data sought case recourse fact compute apparent effect missing parameter pertinent data signature 
table assumption linearity program computes correlation coefficient parameter found signature data admittedly dangerous form extrapolation completely ignores nonlinear effects recourse signature table learning results results signature table learning run made date shown table run arranged yield comparable figures newer signature table procedure older linear polynomial procedure great amount machine time required approximately hours run optimize choice parameters range values assigned parameters specific assignments parameters signature types machine learning detailed hierarchical structure signature tables table sizes smoothing techniques early learning phases table reports apparent goodness play based correlation factor defined accumulated count moves program rates lower rating book recommended move accumulated count moves program rates higher equal rating book recommended move learning run program looked ahead single ply cases jumps pending observed correlation coefficients fairly good measures goodness evaluation procedures minimaxing coefficients computed run signature table procedure older linear polynomial procedure figures tabulated columns total number moves column observed coefficient polynomial procedure appears stabilize figure moves coefficient signature table procedure continues rise finally moves reaches limit interestingly signature-table coefficient larger polynomial coefficient early stage detailed analysis move-by-move basis easily reproduced show signature table method erratic stage noted linear polynomial results directly comparable coefficients individual terms reported table table values computing include moves rated equal book move table equals included computed coefficients correspondingly lower discrepancy marked respect parameters moves extremely valuable differentiating ability depart terms high coefficients table characteristic mini-maxing required tests based criteria table linear polynomial table signature tables results table signature table procedure superior linear polynomial procedure presently unoptimized form nice measure improvement precise making correct allowance difference computation times higher rating book recommended move typical figures tabulated measured test lot representative moves program learned analyzing book moves moves higher equal fractional times found view high probability occurrence equally acceptable moves sum figures columns reasonable estimate fraction time program make acceptable move look-ahead mini-maxing look-ahead greatly improves play accounts difference prediction observed fact playing program follow book-recommended moves higher fraction time introduction strategies chief defect program recent past checker masters failure maintain fixed strategy play good player play note board situation favorable respect unfavorable respect follow fairly consistent policy moves row general maintain advantage time overcome unfavorable aspect ignore secondary properties circumstances dominant program treats board situation problem true procedure program exploit human failings opponent revealed earlier play conduct war nerves intended trick opponent actions place games complete information questioned failure account initial board situation setting goals considered look-ahead process anonymous reviewer rightly pointed desirable statement questioned fact questioned program define called deep objectives importantly detect deep objectives part human opponent reviewer part good player define deep objective maneuver point lookout possibilities opponent opponent unaware true objective late defend adequately loses -it helpful opponent playing similar deep game practical indeterminacy checkers makes technique deep objectives good players feasible don doubt technique part basic equipment champion player inarticulately describe reason hellman games mail bad time study appropriately deep objectives realize checker masters mind criticize program failure maintain fixed strategy play ooint view finds suooort observation master ularperhaps assess goodness play ers whd defeated computer asked searching questions reusing signature tables list fraction time hold program awe generally fail make attempt undergarding program good players fail win stand program rates moves equal opens fruitful line additional research samuel program adopt strategy move program finally made move consistent strategy opponent unable vitiate strategy program move tend adopt strategy program unable maintain advantage initial strategy find strategy change strategy average program follow strategy moves row exhibit playing characteristics give impression long range planning mechanism introducing kind strategic planning provided signature table procedure plausibility analysis view signature types strategic elements alter relative weights assigned signature types result plausibility analysis initial board situation effective care groupings parameters signature types signature types tend correspond recognizable strategic concepts fortunately initial-level grouping parameters interdependency considerations reasonable terms strategies conclude feasible introduce concept strategy restricted reasons symmetry desirable pick signature types emphasis yielding highest positive yielding negative plausible move found initial plausibility analysis procedure recognizes fact opponent signs reversed strongest signature type player weakest vice versa simplest emphasize strategy multiply resulting values found selected signature types arbitrary constant entering subsequent stage analysis factor limit maximum resulting exceed table range reasonable experiments date results date disappointing ineffectual arrangement terms usable strategic groups consequence method introducing strategies temporarily abandoned conclusions goal outlined ref program generate parameters remains fzr future conclude techniques hand dealing tree pruning parameter interaction problems understood time earlier paper newer tools apply machine learning techniques problems economic importance waiting long-sought ultimate solution acknowledgments studies largely carried writer thomas watson research laboratories ibm corporation visiting professor recently work supported part stanford advance research projects agency office secretary defense sdthe ibm corporation continued aid work supplying time ibm computer san jose development laboratories individuals contributed studies arnold griffith deserves commendation suggesting initial form signature table procedure continuing interest cooperation officers playermembers american checker federation helpful received june machine learning 
midterm examination introduction artificial intelligence march family problem scoremax score total midterm exam spring search methods state space graph arcs represent legalsuccessors node arcs bi-directional meaning successor function applied node cost moving successor node givenbythe number arc heuristic evaluation function ifcomputed state shown side node start state goal node expanded assume children put nodes list alphabetical order child closest front alphabet removedbefore siblings uninformed searches ties siblings informed searches generate child node node ancestor current node search tree selecting node nodes case ties non-siblings fifo order select node nodes longest give sequence nodes theyare removed nodes list expansion halting goal search methods uniform-cost search heuristic search greedy best-first search page midterm exam spring search short answer questions general conditions search expand nodes breadth-first search issues related ties true false greedy best-first search nodes guaranteed find optimal solution arc costs true false finite search space goal state algorithm explore states search space large large branching factor nodes infinite paths search space noheuristic function search method good situation true false simulated annealing constant positive temperature times hill-climbing page midterm exam spring constraint satisfaction problem assigning colors fivesquares board belowsuch horizontally adjacent vertically adjacent squares color assume colors red black formulated constraint satisfaction problem fivevariables squares twopossible values variable initially variable values assign variable result forward checking algorithm initially variable values arc consistencyprocedure run resulting domains variables initially variable values assign variable result arc consistencyalgorithm page midterm exam spring adversarial search game tree root corresponds max node values static evaluation function applied givenatthe leaves kjihgfe max min max minimax computed root node tree move max choose nodes examined alpha-beta pruning performed assume children visited left ordering children root pruning result alpha-beta state order ifnot whynot page midterm exam spring decision trees domain twoattributes values concept learned output true drawa decision tree represents concept assume training set combinations values howisthe problem overfitting training data exhibited constructing decision tree build decision tree adding nodes small number examples anode makealeaf prune tree deleting leavesuntil score tree starts worse question howtoscore pruning tree foreach definitions scoring method explain good idea whyorwhy score percentage correct classification tree training set build tree score percentage correct classification tree separate set examples training set build tree page midterm exam spring propositional logic define soundness terms propositional logic sentences sentence valid unsatisfiable satisfiable justify prove answer giventwo arbitrary sentences sentence sentence iii page midterm exam spring deductive inference propositional logic premise sentences convert premise sentences conjunctive normal form cnf showthe result set clauses prove sentence true giventhe premises resolution refutation algorithm showyour result proof tree resolution refutation algorithm showthat givensentence true givenaset premise sentences explain ifnot explain whynot page midterm exam spring representation first-order logic foreach sentences english accompanying sentence first-order logic good translation answer ifno explain whynot give correct answer twopeople social security number isperson isperson hasss hasss ssocial security number digits nisperson hasss numdigits page 
midterm examination introduction artificial intelligence march family solution problem scoremax score total midterm exam spring search methods state space graph arcs represent legalsuccessors node arcs bi-directional meaning successor function applied node cost moving successor node givenbythe number arc heuristic evaluation function ifcomputed state shown side node start state goal node expanded assume children put nodes list alphabetical order child closest front alphabet removedbefore siblings uninformed searches ties siblings informed searches generate child node node ancestor current node search tree selecting node nodes case ties non-siblings fifo order select node nodes longest give sequence nodes theyare removed nodes list expansion halting goal search methods uniform-cost search sbachaedbfg heuristic search sbacedfg greedy best-first search sbefdg page midterm exam spring search short answer questions general conditions search expand nodes breadth-first search issues related ties cost operators heuristic function returns constant true false greedy best-first search nodes guaranteed find optimal solution arc costs false true depending tie-breaking true false finite search space goal state algorithm explore states true search space large large branching factor nodes infinite paths search space noheuristic function search method good situation depth-first iterative deepening search space dfs guarantees finding solution paths infinite length true false simulated annealing constant positive temperature times hill-climbing false non-negative probability moving worse state simulated annealing page midterm exam spring constraint satisfaction problem assigning colors fivesquares board belowsuch horizontally adjacent vertically adjacent squares color assume colors red black formulated constraint satisfaction problem fivevariables squares twopossible values variable initially variable values assign variable result forward checking algorithm forward checking propagates constraints current assigned variable adjacent unassigned variables case variables results domains variables initially variable values arc consistencyprocedure run resulting domains variables domains change variable values initially variable values assign variable result arc consistencyalgorithm page midterm exam spring adversarial search game tree root corresponds max node values static evaluation function applied givenatthe leaves kjihgfe max min max minimax computed root node tree move max choose nodes examined alpha-beta pruning performed assume children visited left ordering children root pruning result alpha-beta state order ifnot whynot children ordered worst ordering children page midterm exam spring decision trees domain twoattributes values concept learned output true drawa decision tree represents concept assume training set combinations values howisthe problem overfitting training data exhibited constructing decision tree adding nodes decision tree due irrelevant attributes tree correctly classifies training set generalizes poorly unseen examples build decision tree adding nodes small number examples anode makealeaf prune tree deleting leavesuntil score tree starts worse question howtoscore pruning tree foreach definitions scoring method explain good idea whyorwhy score percentage correct classification tree training set build tree good idea original tree constructed maximize performance training set pruning part tree reduce performance training set pruning score percentage correct classification tree separate set examples training set build tree good idea separate set examples provide independent check pruning node increase decrease performance unseen data page midterm exam spring propositional logic define soundness terms propositional logic sentences means derivable logically sentence valid unsatisfiable satisfiable justify prove answer satisfiable sentence sentence giventwo arbitrary sentences sentence valid sentence unsatisfiable iii false page midterm exam spring deductive inference propositional logic premise sentences convert premise sentences conjunctive normal form cnf showthe result set clauses prove sentence true giventhe premises resolution refutation algorithm showyour result proof tree false resolution refutation algorithm showthat givensentence true givenaset premise sentences explain ifnot explain whynot ways case finite finite number resolvents generated resolution rule inference generating based premises negation query sentence empty clause derived query sentence true premises asecond negate sentence prove involves negating resolution refutation note method fail prove page midterm exam spring representation first-order logic foreach sentences english accompanying sentence first-order logic good translation answer ifno explain whynot give correct answer twopeople social security number isperson isperson hasss hasss problems sentence sentence person social security number doesn restrict cases equal acorrected version nisperson isperson hasss hasss ssocial security number digits nisperson hasss numdigits correct social security number acorrected version isperson hasss numdigits page 
final examination introduction artificial intelligence august problem scoremax score total final exam summer perceptrons perceptron learn function binary inputs defined inputs argue showthat impossible construct perceptron correctly represents function perceptron learn correctly classify data consists binary input values binary classification argue showthat impossible construct perceptron perceptron inputs output unit linear threshold activation function threshold learning rate initial weights output perceptron giventhe inputs weights values applying perceptron learning rule input desired output briefly describe good determine stop perceptron learning algorithm page final exam summer probabilistic reasoning abarrel manyplastic eggs eggs painted red blue eggs barrel pearls rest eggs pearls painted blue eggs blue probability blue egg pearl boolean random variables blue egg pearl showyour work page final exam summer naive bayes youare givensome documents feature vector component binary twopossible classifications document itis times document class class youalso drawthe bayesian network cpts represents naive bayes model givenanew document feature vector determine classification document naive bayes model represented showyour work express conditional independence assumption defining naive bayes give answer listing iii page final exam summer bayesian networks design troubleshooting advisor pcs boolean random variable representing computer fails true assume twopossible failure electricity-failure represented boolean random variables drawthe bayesian network cpts problem compute compute compute page final exam summer hidden markov models hmm hidden states twopossible observation values time observation sequence assume initial state probability givenby compute probability hidden state sequence probability observation sequence state problem hmm appropriately solved viterbi algorithm page final exam summer partial-order planning intermediate state partial-order planner operators operator spreconditions listed sbox effects listed causal links solid arcs temporal links dashed arcs finishstart add causal links temporal links partial-order plan open preconditions threats case threat state threatening give solution plans consistent final partial-order plan produced true false general plan partial-order plan open preconditions threats linearization correct solution plan page 
midterm examination introduction artificial intelligence july solution problem scoremax score free total midterm exam summer search answer questions answer include explanation true false greedy best-first search admissible heuristic guaranteed find optimal cost solution false admissible true false hill-climbing search complete algorithm solving constraint satisfaction problems csps false stuck local minimum fail find solution true false simulated annealing fixed positive temperature givesthe result hill-climbing false means positive probability moving worse state true false optimal solution path search problem positive arc costs repeated states true solution path repeated states removing cycle solution lower cost true false beam search beam width admissible heuristic function guaranteed find optimal solution false throw node optimal path page midterm exam summer heuristic search search space goal find path start state goal state node heuristic functions admissible give solution path found algorithm heuristic functions break ties alphabetically solution path found greedy best-first search break ties alphabetically page midterm exam summer constraint satisfaction solving -queens problem csp place queens board queen row column diagonal anyother queen formulate problem variable queen binary constraints pair queens indicating theycannot row column diagonal assuming ith queen put ith column values variable rownumbers initially assign queen unique meaning column row results initial constraint graph givenby apply forward-checking give resulting values variables starting initial configuration shown figure apply arcconsistency checking showthe resulting values variables page midterm exam summer decision trees set training examples indicating student aced exam givenbythe boolean classification variable giv entwo boolean attributes student studied student cheat sheet foryour information log log log log log log log log log log log log log log logs base sca information content aka entropy classification variable set examples log log compute remainder information gain choosing attribute root decision tree showyour work round values order log table givenabove remainder log log gain remainder page midterm exam summer compute remainder information gain choosing attribute root decision tree showyour work remainder gain remainder drawthe complete decision tree learned set examples true true false note leaf branch attribute alternatively classification false depending majority-value function breaks ties constructing large complexdecision tree training set attributes find training set accuracyisvery high test set accuracyisvery low explain whythis situation occurred overfitting training data page midterm exam summer logic propositional logic sentence valid unsatisfiable satisfiable briefly explain answer column sentence satisfiable true false true prove rule inference sound modus tolens proved sound noting truth table column column fff fft ttt prove set clauses unsatisfiable constructing refutation tree page midterm exam summer pair literals unify give general unifier predicate function constant variable symbols unification produce occurs check means literals unify english sentence likes red hair ambiguous person red hair likes person likes possibly red-haired person predicates red-haired likes meaning likes translate twomeanings first-order logic red hair likes red hair likes person likes red hair red hair likes page midterm exam summer deductive inference propositional logic sentence propositional logic prove givensentence valid resolution refutation algorithm note premises problem theorem proved give set clauses refutation proof showthe refutation proof tree clauses gav horn clauses theybeused construct backwardchaining goal-reduction proof explain briefly poor question answer question definition book defines horn clause disjunction literals positive literal definition means horn clause type called integrity constraint class horn clauses single positive literal definition definite horn clause definition answer definite horn clause question isn clear terms query set clauses threw part altogether page 
midterm examination introduction artificial intelligence march problem score max ulululululululul ulululululululul ulululululululul ulululululululul ulululululululul ulululululululul total ulululululululul midterm exam spring search road map represented graph cities represented nodes arcs connect pairs cities arc connecting cities distance indicating length road connecting cities road directly connecting city city predicate adjacent true initially people located initial cities step people start time moves city adjacent started time required travel adjacent city equal distance cities people arrived cities step begins goal people meet city quickly state defined pair indicating person city person city state define legal successor states condition state goal cost step time start successive steps sld straight-line euclidean distance cities road connecting distance connecting road heuristic function definitions admissible justify answer sld sld iii sld roads freeways speed limit roads normal roads speed limit admissible heuristic roads speed limit define heuristic function admissible types roads page midterm exam spring constraint satisfaction problem coloring nodes graph colors adjacent nodes connected arc color fill table domain node steps selecting node assigning color forward checking initial domain brbr brbr brbr brbr brbr brbr brbr brbr general condition table deadend backtracking search forward checking constitute backtrack point searching solution general condition table solution found backtracking search forward checking apply arc consistency results step color selected node write resulting domains nodes arc brbr brbr brbr brbr brbr brbr brbr brbr page midterm exam spring adversarial search game tic-tac-toe turn player mark empty square board pass meaning mark square assume represents max player draw full game tree depth root depth show nodes rotations reflections siblings included assume pass move generated making rightmost child node tree nodes depth static evaluation function defined number board minus number leaf node mark minimax compute values non-leaf nodes iii assuming children visited left-to-right tree circle node evaluated alpha-beta simple game compute complete playing strategy completely player play matter player guarantee wins explain alpha-beta pruning algorithm minimax algorithm page midterm exam spring game tree assuming children nodes visited left assign static evaluation function values leaf nodes alpha-beta pruning eliminates nodes nodes visited case min max page midterm exam spring decision trees set training examples attributes desired binary classification information log log log log log log log log log log log log logs base brbr information content entire set examples compute remainder information gain choosing attribute root decision tree show work round values order log table page midterm exam spring attributes draw complete decision tree set examples tree consistent training examples true false arbitrary decision tree binary attributes equivalent sentence propositional logic represents information classification tree true false decision trees correctly classify set training examples classify testing trees output class noise training set meaning values attributes desired class wrong decision tree learning algorithm learns poor tree general problem alleviate problem decision tree construction procedure modified page midterm exam spring logic sentences entailed sentence note truth table iii set sentences unsatisfiable aka contradiction true answer sentence satisfiable sentence valid iii sentence satisfiable sentence valid syntactically semantically correct translations first-order logic zipcode state digit digit function returns nth digit zipcode zipcode function returns zipcode state livesin predicates answer correct incorrect state livesin zipcode livesin zipcode digit digit state livesin zipcode livesin zipcode digit digit iii state livesin livesin digit zipcode zipcode state livesin livesin digit zipcode digit zipcode page midterm exam spring inference propositional logic sentences propositional logic defining knowledge base order prove truth table method rows table model sentences prove resolution refutation algorithm page 
midterm examination introduction artificial intelligence july problem scoremax score free total midterm exam summer search answer questions answer include explanation true false greedy best-first search admissible heuristic guaranteed find optimal cost solution true false hill-climbing search complete algorithm solving constraint satisfaction problems csps true false simulated annealing fixed positive temperature givesthe result hill-climbing true false optimal solution path search problem positive arc costs repeated states true false beam search beam width admissible heuristic function guaranteed find optimal solution page midterm exam summer heuristic search search space goal find path start state goal state node heuristic functions admissible give solution path found algorithm heuristic functions break ties alphabetically solution path found greedy best-first search break ties alphabetically page midterm exam summer constraint satisfaction solving -queens problem csp place queens board queen row column diagonal anyother queen formulate problem variable queen binary constraints pair queens indicating theycannot row column diagonal assuming ith queen put ith column values variable rownumbers initially assign queen unique meaning column row results initial constraint graph givenby apply forward-checking give resulting values variables starting initial configuration shown figure apply arcconsistency checking showthe resulting values variables page midterm exam summer decision trees set training examples indicating student aced exam givenbythe boolean classification variable giv entwo boolean attributes student studied student cheat sheet foryour information log log log log log log log log log log log log log log logs base sca information content aka entropy classification variable set examples compute remainder information gain choosing attribute root decision tree showyour work round values order log table givenabove page midterm exam summer compute remainder information gain choosing attribute root decision tree showyour work drawthe complete decision tree learned set examples constructing large complexdecision tree training set attributes find training set accuracyisvery high test set accuracyisvery low explain whythis situation occurred page midterm exam summer logic propositional logic sentence valid unsatisfiable satisfiable briefly explain answer true false prove rule inference sound prove set clauses unsatisfiable constructing refutation tree page midterm exam summer pair literals unify give general unifier predicate function constant variable symbols english sentence likes red hair ambiguous person red hair likes person likes possibly red-haired person predicates red-haired likes meaning likes translate twomeanings first-order logic red hair likes person likes red hair page midterm exam summer deductive inference propositional logic sentence propositional logic prove givensentence valid resolution refutation algorithm note premises problem theorem proved give set clauses refutation proof showthe refutation proof tree clauses gav horn clauses theybeused construct backwardchaining goal-reduction proof explain briefly page 
final examination introduction artificial intelligence august solution problem scoremax score total final exam summer perceptrons perceptron learn function binary inputs defined inputs argue showthat impossible construct perceptron correctly represents function complement xor linearly separable represented perceptron proof afigure showing input space perceptron learn correctly classify data consists binary input values binary classification argue showthat impossible construct perceptron output inputs aperceptron weights equal work perceptron inputs output unit linear threshold activation function threshold learning rate initial weights output perceptron giventhe inputs weights values applying perceptron learning rule input desired output update weights weights briefly describe good determine stop perceptron learning algorithm good idea iterate local minimum training set achieved overfitting training data tuning set separate training set testing set determine stop stop tuning set error minimized training set iteratively update weights performance evaluated testing set page final exam summer probabilistic reasoning abarrel manyplastic eggs eggs painted red blue eggs barrel pearls rest eggs pearls painted blue eggs blue probability blue egg pearl boolean random variables blue egg pearl showyour work probability page final exam summer naive bayes youare givensome documents feature vector component binary twopossible classifications document itis times document class class youalso drawthe bayesian network cpts represents naive bayes model givenanew document feature vector determine classification document naive bayes model represented showyour work compute select class larger bayes rule denominator drop term compute numerator values conditionally independent similarly document class express conditional independence assumption defining naive bayes give answer listing iii page final exam summer bayesian networks design troubleshooting advisor pcs boolean random variable representing computer fails true assume twopossible failure electricity-failure represented boolean random variables drawthe bayesian network cpts problem compute chain rule compute independent compute page final exam summer hidden markov models hmm hidden states twopossible observation values time observation sequence assume initial state probability givenby compute probability hidden state sequence chance probability observation sequence desired probability determined summing state transition sequences produce observation sequence initial starting state compute state transition sequences produce observations start state transition sequences produce observations start state transition sequences produce observations computing probabilities hmm state problem hmm appropriately solved viterbi algorithm find sequence hidden states maximizes hmm sequence observation values page final exam summer partial-order planning intermediate state partial-order planner operators operator spreconditions listed sbox effects listed causal links solid arcs temporal links dashed arcs finishstart add causal links temporal links partial-order plan open preconditions threats case threat state threatening open precondition step finish solved simple establishment existing step creating causal link shown bold solid arc modified partial plan solving open precondition threats step threatens causal link step threatens causal link finish threats eliminated demotion threatening step adding temporal link forces occur shown bold dotted arc give solution plans consistent final partial-order plan produced fixes linearizations resulting solution plans true false general plan partial-order plan open preconditions threats linearization correct solution plan true page 
midterm examination introduction artificial intelligence july family problem score max score total midterm exam summer decision tree learning describe briefly overfitting learning decision tree maxgain criterion suppose generate training set correct decision tree decision tree learning algorithm maxgain training set case algorithm guaranteed construct correct decision tree training set size infinity briefly explain page midterm exam summer decision tree making binary decision bike ride write single sentence propositional logic expresses information bike ride sunny sunday yesno summer warm problem binary attributes select attribute decision tree node depth root depth attributes compared page midterm exam summer search methods -puzzle problem simpler version -puzzle board tiles numbered operators move blank left operators applied order uninformed searches case sibling ties searches break ties increasing time open cost operator start goal states start goal draw entire state space problem labeling nodes arcs assuming checking repeated states kind draw search trees produced search methods node tree label number indicating removed open list expanded detected goal node method find solution show part search tree explain solution found breadth-first search page midterm exam summer depth-first search iii search heuristic equal number misplaced tiles page midterm exam summer evaluation functions heuristic search define evaluation function heuristic search problem cost path found start state state admissible heuristic function estimates cost path goal state search algorithm iii based answer range values expect algorithm admissible page midterm exam summer search propositional logic sat problem determine sentence conjunctive normal form cnf propositional logic true assignment true false symbols sentence cnf means form sentence conjunction disjunctions solve problem greedy hill-climbing search state corresponds complete assignment true false symbol successors state states symbol truth state true false successor states true true false false evaluation function number clauses cnf sentence true distinct symbols sentence cnf neighboring states state state space states state space sentence state false false false goal state briefly explain local global maximum state space briefly explain page midterm exam summer constraint satisfaction work factory makes flashlights requires tasks completed constructing light bulb charging battery wiring assembling housing task takes hours takes hour takes hours takes hour total time make flashlight hours tasks started beginning hour designated tasks concurrently simultaneously completed problem formulated constraint satisfaction problem csp letting variables start times tasks call times values variable start times based information initial values variable constraints draw constraint graph showing information assuming chosen step backtracking search domain variable applying forward checking page midterm exam summer assume original domains variable apply arc consistency show domain variable steps removing inconsistent values filling table propagate means values domain removed inconsistent values domain initial domains propagating domain change fill table resulting sequence propagation steps action initial domain propagate propagate propagate propagate propagate page midterm exam summer propositional logic defining sentences logically equivalent show tautology give alternative definition logical equivalence terms entailment definition gave answer prove clause logically equivalent implication sentence resolution refutation algorithm page midterm exam summer propositional symbols means job means work hard means promoted convert english sentences sentences propositional logic job work hard promoted promoted job work hard give inference rule based sentences prove sound rule inference fol sentence tautology aka valid contradiction aka unsatisfiable satisfiable explain answer part truth table page midterm exam summer first-order logic sentences english accompanying fol sentence good translation answer explain correct computer science harder courses psychology dept dept psychology harder harder courses math computer science dept math harder dept page 
final examination introduction artificial intelligence problem scoremax score total final exam spring neural networks perceptron compute majority function givenbinary input values outputs sinthe input outputs explain whyitcannot explain howtoset weights threshold general case input units true false training neural networks potential problem over-fitting training data true false perceptron learning rule sound complete method perceptron learn correctly classify anytwo-class problem search space search method back-propagation algorithm training neural networks page final exam spring backpropagation learning -layer feedforward network nodes sigmoid units givenaninput desired output network computes outputs twohidden units output unit compute iteration backpropagation anyupdated weights anycomputation alearning rate parameter backpropagation algorithm run minimum achieved find solution matter initial set weights briefly explain whyorwhy good determine stop iterating backpropagation algorithm page final exam spring probabilistic reasoning women overage forty screened breast cancer women breast cancer positive mammography meaning test cancer women breast cancer positive mammography meaning incorrectly diagnosed cancer define twoboolean random variables meaning positive mammographytest meaning negative test meaning woman breast cancer means woman age group positive mammography probability breast cancer true false prior probability indicating percentage women breast cancer needed compute posterior probability woman breast cancer givenapositive mammography woman positive mammographytest back mammography positive naive bayes assumption compute probability breast cancer giventhe results twotests true false calculated general givenonly page final exam spring bayesian networks bayesian network boolean random variables howmanyindependent values required store full joint probability distribution problem true false network compute values full joint probability distribution true false based topology network true false based topology network page final exam spring compute means true means false compute page final exam spring hidden markov models ihav twocoins turn pick twocoins don tknowwhich picked coin selected assumed obeyafirst-order markov assumption ipick coin flip observewhether sahead tail twocoins fair meaning don thav equal likelihood turning heads tails complete situation including probability coin pick givenbythe hmm hidden states twopossible observable values start hth compute meaning turn coin picked compute meaning turn picked coin giventhe observation head coin flipped generate sequence turns observations hidden state observation page final exam spring face recognition eigenfaces svm classification method eigenface algorithm recognize face test image giventhe representations people face space representation test face method classify test face image give major advantage major disadvantage support vector machine svm recognize people sfaces compared eigenface method page final exam spring planning robot strips operators operator preconditions add delete robot robot robot pick robot drop robot write effect axiom situation calculus captures meaning operator pick givenstrips operators pop algorithm partial-order planning assume initial state robot goal state assume generated partial plan consists start finish states states steps pick pick drawthe partial plan set states include causal links showing open preconditions drawthe states boxes preconditions listed top box effects belowthe box threat partial plan drawn iii add temporal links remove threats page 
midterm examination introduction artificial intelligence july family solution problem score max score total midterm exam summer decision tree learning describe briefly overfitting learning decision tree maxgain criterion noisy attribute values irrelevant attributes suppose generate training set correct decision tree decision tree learning algorithm maxgain training set case algorithm guaranteed construct correct decision tree training set size infinity briefly explain training examples eventually general unique decision tree logically equivalent decision tree created maxgain criterion picks attribute node correct tree decision tree making binary decision bike ride write single sentence propositional logic expresses information bike ride sunny sunday yesno summer warm summer warm summer sunny summer sunny sunday problem binary attributes select attribute decision tree node depth root depth attributes compared page midterm exam summer search methods -puzzle problem simpler version -puzzle board tiles numbered operators move blank left operators applied order uninformed searches case sibling ties searches break ties increasing time open cost operator start goal states start goal draw entire state space problem labeling nodes arcs letting state blank tiles upper-left upper-right lower-left lower-right corners means operation moving blank state space disconnected cycles states lurdl lurdl assuming checking repeated states kind draw search trees produced search methods node tree label number indicating removed open list expanded detected goal node method find solution show part search tree explain solution found breadth-first search ruld page midterm exam summer depth-first search iii search heuristic equal number misplaced tiles page midterm exam summer evaluation functions heuristic search define evaluation function heuristic search problem cost path found start state state admissible heuristic function estimates cost path goal state search algorithm uniform-cost search search iii greedy best-first search based answer range values expect algorithm admissible page midterm exam summer search propositional logic sat problem determine sentence conjunctive normal form cnf propositional logic true assignment true false symbols sentence cnf means form sentence conjunction disjunctions solve problem greedy hill-climbing search state corresponds complete assignment true false symbol successors state states symbol truth state true false successor states true true false false evaluation function number clauses cnf sentence true distinct symbols sentence cnf neighboring states state state space states state space symbol values sentence state false false false goal state briefly explain case clauses true local global maximum state space briefly explain evaluation function state neighboring states true false false false true false false false true page midterm exam summer constraint satisfaction work factory makes flashlights requires tasks completed constructing light bulb charging battery wiring assembling housing task takes hours takes hour takes hours takes hour total time make flashlight hours tasks started beginning hour designated tasks concurrently simultaneously completed problem formulated constraint satisfaction problem csp letting variables start times tasks call times values variable start times based information initial values variable constraints draw constraint graph showing information sbsl assuming chosen step backtracking search domain variable applying forward checking assume original domains variable apply arc consistency show domain variable steps removing inconsistent values filling table propagate means values domain removed inconsistent values domain initial domains propagating domain change fill table resulting sequence propagation steps action initial domain propagate propagate propagate page midterm exam summer propagate propagate page midterm exam summer propositional logic defining sentences logically equivalent show tautology give alternative definition logical equivalence terms entailment definition gave answer prove clause logically equivalent implication sentence resolution refutation algorithm prove premise clause form negating goal converting clause form clauses resulting negation goal clauses resolution refutation algorithm prove case nil prove converting premise clause form converting negation goal clause form clauses resulting negation goal clauses proof tree results entailments prove sentences logically equivalent page midterm exam summer propositional symbols means job means work hard means promoted convert english sentences sentences propositional logic job work hard promoted promoted job work hard give inference rule based sentences prove sound rule inference prove soundness show premises true inferred sentence true constructing truth table shows rows inference rule sound fol sentence tautology aka valid contradiction aka unsatisfiable satisfiable explain answer part truth table satisfiable tautology entries truth table true true true sentence true true false true sentence false page midterm exam summer first-order logic sentences english accompanying fol sentence good translation answer explain correct computer science harder courses psychology dept dept psychology harder correct version dept dept psychology harder harder courses math computer science dept math harder dept correct version dept math harder dept page 
midterm examination introduction artificial intelligence march solutions problem score max ulululululululul ulululululululul ulululululululul ulululululululul ulululululululul ulululululululul total ulululululululul midterm exam spring search road map represented graph cities represented nodes arcs connect pairs cities arc connecting cities distance indicating length road connecting cities road directly connecting city city predicate adjacent true initially people located initial cities step people start time moves city adjacent started time required travel adjacent city equal distance cities people arrived cities step begins goal people meet city quickly state defined pair indicating person city person city state define legal successor states successors state pairs adjacent true adjacent true condition state goal state form cost step time start successive steps cost state state max sld straight-line euclidean distance cities road connecting distance connecting road heuristic function definitions admissible justify answer sld step people move straight distance reducing distance times time cost step sld overestimate true cost meaning admissible sld admissible reason iii sld admissible reason roads freeways speed limit roads normal roads speed limit admissible heuristic roads speed limit define heuristic function admissible types roads relaxes constraint roads slower freeways page midterm exam spring constraint satisfaction problem coloring nodes graph colors adjacent nodes connected arc color fill table domain node steps selecting node assigning color forward checking initial domain brbr brbr brbr brbr brbr brbr brbr brbr general condition table deadend backtracking search forward checking constitute backtrack point searching solution domain node empty general condition table solution found backtracking search forward checking node single apply arc consistency results step color selected node write resulting domains nodes arc brbr brbr brbr brbr brbr brbr brbr brbr page midterm exam spring adversarial search game tic-tac-toe turn player mark empty square board pass meaning mark square assume represents max player draw full game tree depth root depth show nodes rotations reflections siblings included assume pass move generated making rightmost child node tree nodes depth min max static evaluation function defined number board minus number leaf node mark minimax compute values non-leaf nodes iii assuming children visited left-to-right tree circle node evaluated alpha-beta simple game compute complete playing strategy completely player play matter player guarantee wins explain alpha-beta pruning algorithm minimax algorithm pass move game tree infinite size minimax loop forever infinite sequence pass moves players assuming rightmost child node pass move alpha-beta prune pass move finds win infinite looping avoided page midterm exam spring game tree assuming children nodes visited left assign static evaluation function values leaf nodes alpha-beta pruning eliminates nodes nodes visited case min max page midterm exam spring decision trees set training examples attributes desired binary classification information log log log log log log log log log log log log logs base brbr information content entire set examples log log compute remainder information gain choosing attribute root decision tree show work round values order log table remainder log log log log gain rounded page midterm exam spring attributes draw complete decision tree set examples tree consistent training examples true false arbitrary decision tree binary attributes equivalent sentence propositional logic represents information classification tree true true false decision trees correctly classify set training examples classify testing trees output class false noise training set meaning values attributes desired class wrong decision tree learning algorithm learns poor tree general problem alleviate problem decision tree construction procedure modified problem learning algorithm overfits data lessen problem prune tree creating leaf node information content examples node close epsilon page midterm exam spring logic sentences entailed sentence note truth table entailed and-elimination entailed equivalent weaker clause iii entailed removes literal strengthens clause set sentences unsatisfiable aka contradiction true answer satisfiable valid iii satisfiable valid conjunction sentences unsatisfiable negation valid syntactically semantically correct translations first-order logic zipcode state digit digit function returns nth digit zipcode zipcode function returns zipcode state livesin predicates answer correct incorrect state livesin zipcode livesin zipcode digit digit correct state livesin zipcode livesin zipcode digit digit incorrect existentially quantified variable wrong scope universally quantified variables connective iii state livesin livesin digit zipcode zipcode incorrect syntactically wrong zipcode zipcode term predicate state livesin livesin digit zipcode digit zipcode correct page midterm exam spring inference propositional logic sentences propositional logic defining knowledge base order prove truth table method rows table boolean variables table rows model sentences true false false true prove resolution refutation algorithm false page 
final examination introduction artificial intelligence august family problem score max score total final exam summer neural networks nand function binary inputs defined true represented false fixed constant function represented perceptron construct perceptron argue function inputs defined inputs function represented perceptron construct perceptron argue explain difference perceptron learning algorithm sigmoid activation function output units versus linear threshold unit ltu output units support vector machine perceptron answer describing characteristics specific situation makes point page final exam summer probabilistic reasoning acute pancreatitis acute inflammation pancreas multiple suppose prior probability population blood serum level amylase amy piece information diagnosing assume amy measured levels high low high level amylase indicator suppose training data amy high true amy low false false positive rate level amylase diagnosing percentage time test lead wrongly suspect patient write terms compute answer compute amy high compute true amy high show full joint probability distribution table problem page final exam summer bayesian networks situation reason relationship weather traveling boolean random variables represent weather bad airline flights madison chicago cancelled automobile travel highway madison chicago delayed intuitively weather condition cancelled flights affect highway delays highway delays affect flight cancellations experience weather bad chance flights cancelled weather good chance flights cancelled bad weather highway delays time good weather chance delays chance bad weather madison time year create bayesian network problem including graph conditional probability tables compute compute page final exam summer situation calculus domain playing cards manipulated ways actions flip card card face flip results card face card face flip results face predicates card faceup facedown domain predicates fluents predicates action write sentence situation calculus describes act flipping card face face sentence require additional frame axioms completely flip action explain page final exam summer partial-order planning pop algorithm makes choices stages execution choice made selecting open precondition solve choice points suppose bomb bathroom bomb armed toilet unclogged goal disarm bomb toilet unclogged disarm bomb dunk toilet provided toilet unclogged dunking bomb toilet toilet clogged clogged toilet unclogged flushing formulate problem binary variables clogged armed initially clogged armed goal clogged armed strips-type operators dunk flush preconditions clogged preconditions effects armed clogged effects clogged starting initial plan problem apply sequence pop algorithm plan modification operations results complete plan open preconditions threats draw final plan notation draw steps boxes operator inside box list preconditions box list effects threats resolved explain threatened resolved page final exam summer markov models hidden markov models high school student outcomes school year dropping probability repeating year probability advancing year probability years high school student graduates draw markov model situation including defining states show transitions probabilities constraints parameters model simplified version weather hidden markov model hmm presented paper fosler-lussier problem assume weather sunny rainy day prior probability day weather stays probability probability sunny day probability observe caretaker carrying umbrella rainy day prior probability caretaker carries umbrella day weather hidden presence absence umbrella day observed draw hmm include hidden states observable values vector label arcs probabilities page final exam summer day observe umbrella chance weather day rainy words compute hint product rule iii probability umbrella day umbrella day day rainy day sunny compute page 
final examination introduction artificial intelligence solution problem scoremax score total final exam spring neural networks perceptron compute majority function givenbinary input values outputs sinthe input outputs explain whyitcannot explain howtoset weights threshold general case input units setting weights setting threshold true false training neural networks potential problem over-fitting training data true true false perceptron learning rule sound complete method perceptron learn correctly classify anytwo-class problem false learn linearly separable functions search space search method back-propagation algorithm training neural networks search space n-dimensional weight space defined nweights network search method gradient descent page final exam spring backpropagation learning -layer feedforward network nodes sigmoid units givenaninput desired output network computes outputs twohidden units output unit compute iteration backpropagation anyupdated weights anycomputation alearning rate parameter error output node backpropagation algorithm run minimum achieved find solution matter initial set weights briefly explain whyorwhy iterate local minimum squared error reached good determine stop iterating backpropagation algorithm good idea iterate local minimum training set achieved overfitting training data tuning set separate training set testing set determine stop stop tuning set error minimized training set iteratively update weights performance evaluated testing set page final exam spring probabilistic reasoning women overage forty screened breast cancer women breast cancer positive mammography meaning test cancer women breast cancer positive mammography meaning incorrectly diagnosed cancer define twoboolean random variables meaning positive mammographytest meaning negative test meaning woman breast cancer means woman age group positive mammography probability breast cancer chance true false prior probability indicating percentage women breast cancer needed compute posterior probability woman breast cancer givenapositive mammography false bayes rule woman positive mammographytest back mammography positive naive bayes assumption compute probability breast cancer giventhe results twotests ifwefurther assume independent correctly wedon tassume independent original naive bayes assumption conditionally indpendent givenc inthis case compute page final exam spring true false calculated general givenonly false page final exam spring bayesian networks bayesian network boolean random variables howmanyindependent values required store full joint probability distribution problem true false network compute values full joint probability distribution true true false based topology network false true false based topology network false page final exam spring compute means true means false compute page final exam spring hidden markov models ihav twocoins turn pick twocoins don tknowwhich picked coin selected assumed obeyafirst-order markov assumption ipick coin flip observewhether sahead tail twocoins fair meaning don thav equal likelihood turning heads tails complete situation including probability coin pick givenbythe hmm hidden states twopossible observable values start hth compute meaning turn coin picked start compute meaning turn picked coin giventhe observation head coin flipped generate sequence turns observations hidden state observation compare greater bayes rule eliminating denominator cases means determine greater term case page final exam spring directly hmm compute steady state solving state page final exam spring face recognition eigenfaces svm classification method eigenface algorithm recognize face test image giventhe representations people face space representation test face method classify test face image nearest neighbor weight space give major advantage major disadvantage support vector machine svm recognize people sfaces compared eigenface method advantages aset training images single person non-linear boundary derived kernel function separating person people faces maximizes margin classes robustness efficient implementations relative eigenface analysis define good subspace disadvantages svm -class decisions svms comparing person svm requires kind pre-processing extract feature vector image entire image realistic robust hard distinguish faces non-faces page final exam spring planning robot strips operators operator preconditions add delete robot robot robot pick robot drop robot write effect axiom situation calculus captures meaning operator pick robot result pick result pick givenstrips operators pop algorithm partial-order planning assume initial state robot goal state assume generated partial plan consists start finish states states steps pick pick drawthe partial plan set states include causal links showing open preconditions drawthe states boxes preconditions listed top box effects belowthe box start pick pick finish threat partial plan drawn threats step effect step threatens causal link start solves sub-goal similarly step threatens causal link start solves sub-goal page final exam spring iii add temporal links remove threats remove threat add temporal link promotes threatening step similarly remove threat add temporal link promotes threatening step note introduces cycle graph impossible initiate backtracking find solve open preconditions page 
final examination introduction artificial intelligence august family solution problem score max score total final exam summer neural networks nand function binary inputs defined true represented false fixed constant function represented perceptron construct perceptron argue output inputs perceptron achieves weights equal threshold single output unit equal function inputs defined inputs function represented perceptron construct perceptron argue linearly separable function explain difference perceptron learning algorithm sigmoid activation function output units versus linear threshold unit ltu output units weight update function differs perceptron learning algorithm differs ltus desired output output unit actual output learning rate parameter ith input unit sigmoid function extra term derivative sigmoid function support vector machine perceptron answer describing characteristics specific situation makes point perceptrons represent linearly separable functions svms represent nonlinear functions mapping inputs higher dimensional space data linearly separable addition maximizing margin classes svms robust noise outliers perceptrons page final exam summer probabilistic reasoning acute pancreatitis acute inflammation pancreas multiple suppose prior probability population blood serum level amylase amy piece information diagnosing assume amy measured levels high low high level amylase indicator suppose training data amy high true amy low false false positive rate level amylase diagnosing percentage time test lead wrongly suspect patient write terms compute answer false amy high amy high amy high false false amy high false false amy high true true amy high false false false positive rate compute amy high equal denominator amy high compute true amy high true amy high false amy high show full joint probability distribution table problem amy amy true high true low false high false low page final exam summer bayesian networks situation reason relationship weather traveling boolean random variables represent weather bad airline flights madison chicago cancelled automobile travel highway madison chicago delayed intuitively weather condition cancelled flights affect highway delays highway delays affect flight cancellations experience weather bad chance flights cancelled weather good chance flights cancelled bad weather highway delays time good weather chance delays chance bad weather madison time year create bayesian network problem including graph conditional probability tables compute compute page final exam summer page final exam summer situation calculus domain playing cards manipulated ways actions flip card card face flip results card face card face flip results face predicates card faceup facedown domain predicates fluents faceup facedown fluents change time card fluent object card card predicates action write sentence situation calculus describes act flipping card face face card facedown faceup result flip sentence require additional frame axioms completely flip action explain require frame axiom order cards change flipping card page final exam summer partial-order planning pop algorithm makes choices stages execution choice made selecting open precondition solve choice points choice points simple establishment step addition satisfy open precondition step addition operator chosen applicable satisfy open precondition resolve threat promotion demotion suppose bomb bathroom bomb armed toilet unclogged goal disarm bomb toilet unclogged disarm bomb dunk toilet provided toilet unclogged dunking bomb toilet toilet clogged clogged toilet unclogged flushing formulate problem binary variables clogged armed initially clogged armed goal clogged armed strips-type operators dunk flush preconditions clogged preconditions effects armed clogged effects clogged starting initial plan problem apply sequence pop algorithm plan modification operations results complete plan open preconditions threats draw final plan notation draw steps boxes operator inside box list preconditions box list effects threats resolved explain threatened resolved clogged armed armed clogged start flush dunk finish armed clogged clogged clogged step dunk threatened causal link flush finish fixed demotion page final exam summer markov models hidden markov models high school student outcomes school year dropping probability repeating year probability advancing year probability years high school student graduates draw markov model situation including defining states show transitions probabilities constraints parameters model dropout year year year year grada dddd addition simplified version weather hidden markov model hmm presented paper fosler-lussier problem assume weather sunny rainy day prior probability day weather stays probability probability sunny day probability observe caretaker carrying umbrella rainy day prior probability caretaker carries umbrella day weather hidden presence absence umbrella day observed draw hmm include hidden states observable values vector label arcs probabilities start sunny rainy hidden states sunny rainy observable states values vector shown probabilities arcs start state page final exam summer day observe umbrella chance weather day rainy words compute hint product rule note people denominator homework correct confusion homework time class accepted question iii probability umbrella day umbrella day day rainy day sunny compute page 
bayes nets bayes net called belief network augmented directed acyclic graph represented pair set vertices set directed edges joining vertices loops length allowed vertex information random variable probability distribution table indicating probability variable values depends combinations parents values building bayes net choose set relevant variables choose ordering assume called ordering add node network set parents minimal subset xisuch conditional independence members xigiven parents define probability table assignments parents computing joint entry compute entry joint distribution computing bayes net general case xnxn- xnxn- xnxn- xnxn- xnxn- xnxn- xnxn- iii iiii xxxp xxxxxxp parents sassignment entry joint pdf table computed conditional probability computed computing bayes net marginalization methodology building bayes nets don require exponential storage hold probability table exponential maximum number parents node compute probabilities assignment truth values variables time linear number nodes compute answer question compute methodology building bayes nets don require exponential storage hold probability table exponential maximum number parents node compute probabilities assignment truth values variables time linear number nodes compute answer question compute step compute step compute step return methodology building bayes nets don require exponential storage hold probability table exponential maximum number parents node compute probabilities assignment truth values variables time linear number nodes compute answer question compute step compute step compute step return sum rows joint match sum rows joint match methodology building bayes nets don require exponential storage hold probability table exponential maximum number parents node compute probabilities assignment truth values variables time linear number nodes compute answer question compute step compute step compute step return sum rows joint match sum rows joint match obtained computing joint probability entry method earlier slides joint computes joint computes good news inference compute conditional probability variable variable values matching entriesjoint matching entriesjoint entryjoint entryjoint eepeep sad bad news conditional probabilities enumerating matching entries joint expensive compute exponential number variables faster ways querying bayes nets sadder worse news general querying bayes nets np-complete 
james skrentny notes dyer genetic algorithms chapter section james skrentny notes dyer introduction genetic algorithms inspired natural evolution living things evolved successful organisms offspring exhibit traits parent hereditary traits determined genes genetic instructions contained chromosomes chromosomes strands dna dna composed base pairs acgt meaningful combinations encode hereditary traits james skrentny notes dyer introduction genetic algorithms mechanisms evolutionary change crossover random exchange parent chromosomes reproduction resulting offspring traits parent crossover requires genetic diversity parents ensure sufficiently varied offspring james skrentny notes dyer introduction genetic algorithms mechanisms evolutionary change mutation rare occurrence errors process copying chromosomes resulting nonsensical deadly producing organisms survive beneficial producing stronger organisms aren harmful deadly aren beneficial producing organisms aren improved james skrentny notes dyer introduction genetic algorithms mechanisms evolutionary change natural selection competitive environment fittest survive resulting organisms individuals survival traits generally survive longer period time chance reproducing passing successful traits offspring generations species improves traits number weaker james skrentny notes dyer introduction genetic algorithms population individuals complete partial solutions explore solution space individuals interact compete interaction produces individuals competition eliminates weak individuals multiple generations strong individual solution found james skrentny notes dyer representation individuals problems solutions represented vector values satisfiability problem sat determine statement propositional logic satisfiable element corresponds proposition truth true false vector values problems solutions represented permutation values traveling sales person problem tsp james skrentny notes dyer algorithm simulated evolution individual evolutionaryalgorithm problem problem problem object initialize returns initial population individuals population size evaluate sorts population individuals fitness atfitnessthreshold test desired solution quality reached select chooses individuals survive alter generates individuals method implements crossover fraction population generated crossover method implements mutation mutation rate individual solution found james skrentny notes dyer algorithm simulated evolution individual evolutionaryalgorithm problem problem population currgen problem initialize problem evaluate currgen problem atfitnessthreshold currgen population nextgen problem select currgen problem alter nextgen currgen nextgen problem evaluate currgen return problem mostfitindividual currgen james skrentny notes dyer initialization seeding population initialization sets beginning population individuals future generations produced concerns size initial population experimentally determined problem diversity initial population genetic diversity common issue resulting lack diversity premature convergence non-optimal solution james skrentny notes dyer initialization seeding population diverse initial population generated uniformly random generate individuals randomly solution space uniform distribution grid initialization choose individuals regular intervals solution space non-clustering require individuals predefined distance population local optimization technique find initial population local optima doesn ensure diversity guarantees solution worse james skrentny notes dyer evaluation ranking fitness evaluation ranks individuals fitness measure corresponds quality individual solutions individual classification correct tsp distance sat oftermssatisfied walking animation subjective rating fitness functions local minima james skrentny notes dyer selection finding fittest choose individuals survive possibly reproduce generation selection depends evaluation function dependent greedy search nonoptimal solution found dependent converge solution nature doesn eliminate unfit genes recessive long period time mutate james skrentny notes dyer selection techniques deterministic selection relies heavily evaluation converges fastest approaches generation parents children parents current generation parents produce children survive generation children parents current generation parents produce children parents don survive counters early convergence james skrentny notes dyer selection techniques proportional fitness selection individual selected proportionally evaluation score worst individual chance survive helps prevent stagnation population approaches rank selection individual selected probability proportional rank population sorted fitness proportional selection individual selected probability fitness individual sum fitness individuals james skrentny notes dyer selection techniques proportional selection population fitness fitnessindividual sum fitness determine probabilities fitness prob james skrentny notes dyer selection techniques tournament selection randomly select individuals highest fitness wins reproduce cares ranking spread scores puts upper lower bound chances individual reproduce generation equal size population rank winning individual generalized select individuals james skrentny notes dyer selection techniques tournament selection population fitness fitnessindividual select wins probability prob james skrentny notes dyer selection techniques crowding potential problem selection occurs individuals fit quickly reproduce large percentage entire population similar reduces diversity population hinder long-run progress algorithm james skrentny notes dyer alteration producing individuals alteration produce individuals mutation randomly change individual tsp swap interchange sat bit flip parameters mutation rate size mutation james skrentny notes dyer alteration producing individuals crossover vector representations pick pairs individuals parents randomly swap segments cut splice parameters crossover rate number crossover points positions crossover points james skrentny notes dyer alteration producing individuals -point crossover pick dividing point parents vectors swap segments parents crossover point digit children produced james skrentny notes dyer alteration producing individuals n-point crossover generalization -point crossover pick dividing points parents vectors splice alternating segments uniform crossover element vector randomly chosen values elements parents techniques exist permutation representations james skrentny notes dyer genetic algorithms search problem local maxima individuals stuck pretty good optimal small mutation worse fitness crossover local maximum mutation random process sudden large mutation individuals situation james skrentny notes dyer genetic algorithms search kind hill-climbing search similar randomized beam search significant difference gas generally good idea gas fill local maxima individuals gas problems local maxima back-propagation neural networks james skrentny notes dyer summary easy apply wide range problems optimization tsp inductive concept learning scheduling layout results good problems poor slow mutation crossover makes algorithm significantly faster 
copyright andrew moore bayes classifiers andrew moore professor school computer science carnegie mellon cmu awm awm cmu note teachers users slides andrew delighted found source material giving lectures feel free slides verbatim modify fit powerpoint originals make significant portion slides lecture include message link source repository andrew tutorials http cmu awm tutorials comments corrections gratefully received notes sume met bayesian etworks copyright andrew moore slide simple bayesnet rzc return king oncer live zipcode brought coat classroomc person juniorj copyright andrew moore slide simple bayesnet rzc return king oncer live zipcode brought coat classroomc person juniorj parameters stored cptsof bayesnet copyright andrew moore slide simple bayesnet rzc return king live zipcode brought coat classroomc person juniorjp suppose datab ase people attende lecture estim ate cpt copyright andrew moore slide simple bayesnet rfc return king live zipcode brought coat classroomc person juniorjp suppose datab ase people attende lecture estim ate cpt databasein people school walked whopeople school walked whopeople coat abrought school walked whopeople school walk todidn whopeople school walk todidn hobringers-coat copyright andrew moore slide bayesclassifier rzc return king live zipcode brought coat classroomc walked schooljp input attributes output attribute person shows class wearing live manor theater lord rings movies night overcoat probability junior copyright andrew moore slide bayesclassifier inference rzc rzcjp rzcp rzcjp rzcjprzcjp rzcjp jpjrpjzpjcp jpjrpjzpjcp jpjrpjzpjcp copyright andrew moore slide general case xmx estimate fraction records estimate fraction records predict observations xivalues compute argmax predict mmv uxuxvypy copyright andrew moore slide bayes classifier argmax predict mmv uxuxvypy vyuxpvypy predict argmax argmax predict vypvyuxuxpy mmv argmax predict uxuxp uxuxvypy argmax predict uxuxp vypvyuxuxpy structure bayesnet copyright andrew moore slide facts bayes classifiers bayesclassifiers built real-valued inputs technical complaint bayes classifiers don maximally discriminative---they honestly model probabilities painful joint hack justifiable magic words dirichlet prior bayes wonderfully cheap survives attributes cheerfully future andrew lectures copyright andrew moore slide build bayesclassifier predict 
constraint satisfaction problems chapter section derived slides russell norvig moore constraint satisfaction problem graph coloring inside circle marked assign connected circles assigned symbol notice circles assignment constraint satisfaction problems csps standard search problem state black box data structure supports successor function heuristic function goal test csp state defined variables values domain goal test set constraints allowable combinations values subsets variables simple formal representation language general-purpose algorithms power standard search algorithms map-coloring variables nsw domains red green blue constraints adjacent regions colors red green red blue green red green blue blue red blue green map-coloring solutions complete consistent assignments red green red nsw green red blue green constraint graph binary csp constraint relates variables constraint graph nodes variables arcs constraints movie seating problem varieties csps discrete variables finite domains variables domain size complete assignments boolean csps incl boolean satisfiability np-complete infinite domains integers strings job scheduling variables start end days job constraint language startjob startjob continuous variables start end times hubble space telescope observations linear constraints solvable polynomial time linear programming varieties constraints unary constraints involve single variable green binary constraints involve pairs variables higher-order constraints involve variables cryptarithmetic column constraints cryptarithmetic variables domains constraints alldiff real-world csps assignment problems teaches class timetabling problems class offered scheduling problems vlsi pcb layout problems boolean satisfiability graph coloring games minesweeper magic squares sudoku crosswords line-drawing labeling notice real-world problems involve real-valued variables standard search formulation incremental start straightforward approach fix states defined values assigned initial state empty assignment successor function assign unassigned variable goal test current assignment complete variables assigned constraints satisfied find solution cost important csps solution appears depth variables depth-first search path irrelevant complete-state formulation depth leaves dfs csps variable assignments commutative red green green red assignments single variable node leaves dfs order assignments makes dfs stupid http cmu awm animations constraint html backtracking search don successor inconsistency neighbors perform consistency checking successor function assigns unassigned variable conflict current assignment fail legal assignments successors backtracking search basic uninformed algorithm csps solve n-queens backtracking search backtracking backtracking backtracking backtracking improving backtracking efficiency general-purpose methods give huge gains speed variable assigned order values detect inevitable failure early constrained variable constrained variable choose variable fewest legal values minimum remaining values mrv heuristic constraining variable tie-breaker constrained variables constraining variable choose variable constraints remaining variables constraining variable choose constraining rules fewest values remaining variables combining heuristics makes queens feasible improvement forward checking start variable record current set legal values assign variable search update set legal values unassigned variables backtrack immediately empty variable constraint set dfs order assignments http cmu awm animations constraint html forward checking algorithm idea track remaining legal values unassigned variables terminate search variable legal values forward checking idea track remaining legal values unassigned variables terminate search variable legal values forward checking idea track remaining legal values unassigned variables terminate search variable legal values forward checking idea track remaining legal values unassigned variables terminate search variable legal values constraint propagation forward checking propagates information assigned unassigned variables doesn provide early detection failures blue constraint propagation repeatedly enforces constraints locally constraint propagation delete domain check variables connected change delete inconsistent values connected web http cmu awm animations constr aint html arc consistency simplest form propagation makes arc consistent consistent iff allowed arc consistency simplest form propagation makes arc consistent consistent iff allowed arc consistency simplest form propagation makes arc consistent consistent iff allowed loses neighbors rechecked arc consistency simplest form propagation makes arc consistent consistent iff allowed loses neighbors rechecked arc consistency detects failure earlier forward checking run preprocessor assignment arc consistency algorithm acn time complexity constraint propagation constraint propagation solves problem search lucky constraint propagation preprocessing step cheap maintained dynamically search expensive backtrack undo additional constraints extra arc waltz algorithm earliest examples computation posed csp waltz algorithm interpreting line drawings solid polyhedra intersections kind intersection concave intersection faces external convex intersection adjacent intersections impose constraints csp find unique set labelings important step understanding image waltz alg simple scenes assume objects shadows cracks three-faced vertices general position junctions change small movements eye line image boundary line edge object hand arrow denoting solid left hand denoting space interior convex edge interior concave edge legal kinds junctions representation diagram label junction ways junctions labeled lines labeled consistently ends formulate csp fun fact constraint propagation works perfectly waltz examples local search csps hill-climbing simulated annealing typically work complete states variables assigned apply csps states unsatisfied constraints operators reassign variable values variable selection randomly select conflicted variable selection min-conflicts heuristic choose violates fewest constraints hill-climb total number violated constraints -queens states queens columns states actions move queen column goal test attacks evaluation number attacks random initial state solve n-queens constant time arbitrary high probability summary csps special kind problem states defined values fixed set variables goal test defined constraints variable values backtracking depth-first search variable assigned node simple consistency checking variable ordering selection heuristics significan tly forward checking prevents assignments guarantee failu constraint propagation arc consistency additional work constrain values detect inconsistencies iterative minconflicts effective practice 
james skrentny notes dyer uninformed search chapter james skrentny notes dyer building goal-based agents key questions needing addressed circle goal agent achieve circle knowledge agent circle actions agent james skrentny notes dyer building goal-based agents goal agent achieve circle describe goal task accomplished situation reached set properties acquired circle goal reached goal test defines means achieved satisfied goal hexasterisk determining goal difficult left system designer user james skrentny notes dyer building goal-based agents knowledge agent circle info sufficient describe relevant aspects reaching goal adequate describe world state situation circle closed world assumption information problem domain accessible percept state complete description world incomplete information point time james skrentny notes dyer building goal-based agents circle agent knowledge represented circle knowledge representation problem information raw percept relevant represent domain knowledge hexasterisk determining represent difficult left system designer james skrentny notes dyer building goal-based agents actions agent circle set actions events decomposed primitive steps discrete treated instantaneous quantified fully describe initial final states uncertainty sufficient describe hexasterisk number actions needed depends world states represented james skrentny notes dyer building goal-based agents actions agent circle action operator move description current state world circle action completely specifies action applied applicable legal exact state world action performed current world history information needed compute world state james skrentny notes dyer formalizing search state space circle state space graph set nodes vertexes set arcs edges arc directed node node circle node data structure state description information circle link parent node circle operator generated node parent circle bookkeeping data james skrentny notes dyer formalizing search state space circle arc corresponds operators operator applied state arc source node resulting state state arc destination node circle arc fixed positive cost corresponds cost operator james skrentny notes dyer formalizing search state space circle node set successor nodes corresponds legal operators applied source node state circle expanding node means generate successor nodes add arcs state-space search tree james skrentny notes dyer formalizing search state space circle nodes designated start nodes circle goal test applied node state determine goal node circle solution sequence operators path state space start goal node goal state cryptarithmetic path start goal state -puzzle circle cost solution sum arc costs solution path james skrentny notes dyer formalizing search state space circle state-space search process searching state space solution making explicit sufficient portion implicit state-space graph include goal node initially start node expanded successors generated nodes added arcs added process continues goal node found james skrentny notes dyer formalizing search state space circle node implicitly explicitly represents partial solution path start node node cost partial solution path circle node paths partial path prefix solutions james skrentny notes dyer state space diagram start ggoal size problem terms number states tic-tac-toe states checkers states rubik cube states chess states james skrentny notes dyer state-space search algorithm note algorithm doesn detect loops state space node generalsearch problem problem list fringe fringe add node problem getstartstate true fringe isempty return node failure node node fringe remove problem isgoal node getstate return node fringe add expand node problem operators expand generates node children nodes note goal test nodes generated james skrentny notes dyer key issues state-space search algorithm circle search process constructs search tree root start state leaf nodes circle unexpanded nodes nodes list circle dead ends nodes aren goals successors operators applicable circle goal node leaf node found circle loops graph search tree infinite state space small circle changing nodes list data structures leads search strategies james skrentny notes dyer evaluating search strategies circle completeness solution exists found complete algorithm find solution circle optimality admissibility solution found guaranteed optimal admissible algorithm find solution minimum cost james skrentny notes dyer evaluating search strategies circle time complexity long find solution measured worst average case measured number nodes expanded tested circle space complexity space algorithm measured terms maximum size nodes list search james skrentny notes dyer uninformed search strategies uninformed search strategies order nodes domain specific information circle bfs breadth-first search hexasterisk queue fifo nodes list remove front add back circle dfs depth-first search hexasterisk stack lifo nodes list remove front add front james skrentny notes dyer breadth-first search bfs nodes tested expanded nodes listexpnd node start ggoal generalsearch problem queue james skrentny notes dyer breadth-first search bfs nodes tested expanded goal nodes listexpnd node start ggoal generalsearch problem queue james skrentny notes dyer breadth-first search bfs nodes tested expanded goal nodes listexpnd node start ggoal generalsearch problem queue james skrentny notes dyer breadth-first search bfs nodes tested expanded goal nodes listexpnd node start ggoal generalsearch problem queue james skrentny notes dyer breadth-first search bfs nodes tested expanded goal nodes listexpnd node start ggoal generalsearch problem queue james skrentny notes dyer breadth-first search bfs nodes tested expanded goal nodes listexpnd node start ggoal generalsearch problem queue james skrentny notes dyer breadth-first search bfs nodes tested expanded goal nodes listexpnd node start ggoal generalsearch problem queue james skrentny notes dyer breadth-first search bfs nodes tested expanded expandg goal nodes listexpnd node start ggoal generalsearch problem queue james skrentny notes dyer breadth-first search bfs nodes tested expanded nodes listexpnd node start ggoal generalsearch problem queue path cost james skrentny notes dyer breadth-first search bfs circle complete circle optimal admissible operators arcs cost optimal guarantee finding solution shortest length fewest arcs james skrentny notes dyer breadth-first search bfs circle time space complexity exponential depth solution branching factor non-leaf node hexasterisk long time find solutions large number steps shorter length possibilities james skrentny notes dyer breadth-first search bfs circle complete search tree total nodes tree depth branching factor non-leaf node circle bfs expands nodes sec node bytes storage bfs years run worst case terabytes memory james skrentny notes dyer nodes tested expanded depth-first search dfs nodes listexpnd node start ggoal generalsearch problem stack james skrentny notes dyer nodes tested expanded depth-first search dfs goal nodes listexpnd node start ggoal generalsearch problem stack james skrentny notes dyer nodes tested expanded depth-first search dfs goal nodes listexpnd node start ggoal generalsearch problem stack james skrentny notes dyer nodes tested expanded depth-first search dfs goal nodes 
listexpnd node start ggoal generalsearch problem stack james skrentny notes dyer nodes tested expanded depth-first search dfs goal nodes listexpnd node start ggoal generalsearch problem stack james skrentny notes dyer nodes tested expanded depth-first search dfs goal nodes listexpnd node start ggoal generalsearch problem stack james skrentny notes dyer nodes tested expanded depth-first search dfs expandg goal nodes listexpnd node start ggoal generalsearch problem stack james skrentny notes dyer nodes tested expanded depth-first search dfs nodes listexpnd node start ggoal generalsearch problem stack path cost james skrentny notes dyer depth-first search dfs circle terminate depth bound cutting search fixed depth circle complete cycle detection depth cutoff circle optimal admissible hexasterisk find long solutions quickly lucky james skrentny notes dyer depth-first search dfs circle time complexity exponential space complexity linear depth solution branching factor non-leaf node circle chronological backtracking search hits dead end backs level time problematic mistake occurs bad operator choice top search tree james skrentny notes dyer uninformed search strategies circle ucs uniform-cost search hexasterisk priority queue order nodes sort path cost cost path start node current node sort nodes increasing uninformed search worries costs james skrentny notes dyer nodes tested expanded generalsearch problem priorityqueue uniform-cost search ucs nodes listexpnd node start ggoal james skrentny notes dyer nodes tested expanded generalsearch problem priorityqueue uniform-cost search ucs goal nodes listexpnd node start ggoal james skrentny notes dyer nodes tested expanded generalsearch problem priorityqueue uniform-cost search ucs goal nodes listexpnd node start ggoal james skrentny notes dyer nodes tested expanded generalsearch problem priorityqueue uniform-cost search ucs goal nodes listexpnd node start ggoal james skrentny notes dyer nodes tested expanded generalsearch problem priorityqueue uniform-cost search ucs goal nodes listexpnd node start ggoal james skrentny notes dyer nodes tested expanded generalsearch problem priorityqueue uniform-cost search ucs goal nodes listexpnd node start ggoal james skrentny notes dyer nodes tested expanded generalsearch problem priorityqueue uniform-cost search ucs expand goal nodes listexpnd node start ggoal james skrentny notes dyer nodes tested expanded generalsearch problem priorityqueue uniform-cost search ucs nodes listexpnd node start ggoal path cost james skrentny notes dyer uniform-cost search ucs circle called dijkstra algorithm algorithms lit circle similar branch bound algorithm operations research literature circle complete circle optimal admissible requires goal test applied node removed nodes list node generated parent node expanded james skrentny notes dyer uniform-cost search ucs circle time space complexity exponential depth solution branching factor non-leaf node james skrentny notes dyer uninformed search strategies circle ids depth-first iterative-deepening search requires modification search algorithm dfs depth treat children start node leafs solution found dfs depth repeat increasing depth solution found hexasterisk start node depth james skrentny notes dyer depth-first iterativedeepening search ids node deepeningsearch problem problem int depth stack dsnodes stack true solved node node dfs depthbound problem dsnodes depth dfs depthbound limits dfs search level depth node isn failure return node solved depth deeper james skrentny notes dyer deepeningsearch problem depth nodes expanded tested depth-first iterativedeepening search ids nodes listexpnd node start ggoal james skrentny notes dyer deepeningsearch problem depth nodes tested expanded depth-first iterativedeepening search ids start ggoal goal nodes listexpnd node james skrentny notes dyer deepeningsearch problem depth nodes tested expanded depth-first iterativedeepening search ids start ggoal expanda goal nodes listexpnd node james skrentny notes dyer deepeningsearch problem depth nodes tested expanded depth-first iterativedeepening search ids start ggoal expandb goal nodes listexpnd node james skrentny notes dyer deepeningsearch problem depth nodes tested expanded depth-first iterativedeepening search ids start ggoal expand-failc goal nodes listexpnd node james skrentny notes dyer deepeningsearch problem depth nodes tested expanded depth-first iterativedeepening search ids start ggoal test nodes listexpnd node james skrentny notes dyer deepeningsearch problem depth nodes tested expanded depth-first iterativedeepening search ids start ggoal test nodes listexpnd node james skrentny notes dyer deepeningsearch problem depth nodes tested expanded depth-first iterativedeepening search ids start ggoal expandd goal nodes listexpnd node james skrentny notes dyer deepeningsearch problem depth nodes tested expanded depth-first iterativedeepening search ids start ggoal expande goal nodes listexpnd node james skrentny notes dyer deepeningsearch problem depth nodes tested expanded depth-first iterativedeepening search ids start ggoal test nodes listexpnd node james skrentny notes dyer deepeningsearch problem depth nodes tested expanded depth-first iterativedeepening search ids start ggoal expa goal nodes listexpnd node james skrentny notes dyer deepeningsearch problem depth nodes tested expanded depth-first iterativedeepening search ids start ggoal nodes listexpnd node path cost james skrentny notes dyer depth-first iterativedeepening search ids circle advantages bfs completeness optimality stated bfs circle advantages dfs limited space practice redundant effort finds longer paths quickly bfs james skrentny notes dyer depth-first iterativedeepening search ids circle space complexity linear dfs circle time complexity worse bfs dfs nodes top search tree generated multiple times redundant effort circle worst case time complexity exponential nodes bottom tree james skrentny notes dyer depth-first iterativedeepening search ids redundant effort circle number times nodes generated solution depth branching factor non-leaf node circle worst case nodes searched redundant effort exist depth increases decreases james skrentny notes dyer direction search choices forward backwards bidirectional issues start goal states branching factors direction work compare states james skrentny notes dyer general search open close note algorithm detect loops state space node generalsearch problem problem list open open add node problem getstartstate list close list initially empty list true open isempty return node failure node node open remove removes front node problem isgoal node getstate return node close add node remember expanded open add expand node problem operators expand add successors open close 

constraint satisfaction problems chapter section derived slides russell norvig moore constraint satisfaction problem graph coloring inside circle marked assign connected circles assigned symbol notice circles assignment constraint satisfaction problems csps standard search problem state black box data structure supports successor function heuristic function goal test csp state defined variables values domain goal test set constraints allowable combinations values subsets variables simple formal representation language general-purpose algorithms power standard search algorithms map-coloring variables nsw domains red green blue constraints adjacent regions colors red green red blue green red green blue blue red blue green map-coloring solutions complete consistent assignments red green red nsw green red blue green constraint graph binary csp constraint relates variables constraint graph nodes variables arcs constraints movie seating problem varieties csps discrete variables finite domains variables domain size complete assignments boolean csps incl boolean satisfiability np-complete infinite domains integers strings job scheduling variables start end days job constraint language startjob startjob continuous variables start end times hubble space telescope observations linear constraints solvable polynomial time linear programming varieties constraints unary constraints involve single variable green binary constraints involve pairs variables higher-order constraints involve variables cryptarithmetic column constraints cryptarithmetic variables domains constraints alldiff real-world csps assignment problems teaches class timetabling problems class offered scheduling problems vlsi pcb layout problems boolean satisfiability graph coloring games minesweeper magic squares sudoku crosswords line-drawing labeling notice real-world problems involve real-valued variables standard search formulation incremental start straightforward approach fix states defined values assigned initial state empty assignment successor function assign unassigned variable goal test current assignment complete variables assigned constraints satisfied find solution cost important csps solution appears depth variables depth-first search path irrelevant complete-state formulation depth leaves dfs csps variable assignments commutative red green green red assignments single variable node leaves dfs order assignments makes dfs stupid http cmu awm animations constraint html backtracking search don successor inconsistency neighbors perform consistency checking successor function assigns unassigned variable conflict current assignment fail legal assignments successors backtracking search basic uninformed algorithm csps solve n-queens backtracking search backtracking backtracking backtracking backtracking improving backtracking efficiency general-purpose methods give huge gains speed variable assigned order values detect inevitable failure early constrained variable constrained variable choose variable fewest legal values minimum remaining values mrv heuristic constraining variable tie-breaker constrained variables constraining variable choose variable constraints remaining variables constraining variable choose constraining rules fewest values remaining variables combining heuristics makes queens feasible improvement forward checking start variable record current set legal values assign variable search update set legal values unassigned variables backtrack immediately empty variable constraint set dfs order assignments http cmu awm animations constraint html forward checking algorithm idea track remaining legal values unassigned variables terminate search variable legal values forward checking idea track remaining legal values unassigned variables terminate search variable legal values forward checking idea track remaining legal values unassigned variables terminate search variable legal values forward checking idea track remaining legal values unassigned variables terminate search variable legal values constraint propagation forward checking propagates information assigned unassigned variables doesn provide early detection failures blue constraint propagation repeatedly enforces constraints locally constraint propagation delete domain check variables connected change delete inconsistent values connected web http cmu awm animations constr aint html arc consistency simplest form propagation makes arc consistent consistent iff allowed arc consistency simplest form propagation makes arc consistent consistent iff allowed arc consistency simplest form propagation makes arc consistent consistent iff allowed loses neighbors rechecked arc consistency simplest form propagation makes arc consistent consistent iff allowed loses neighbors rechecked arc consistency detects failure earlier forward checking run preprocessor assignment arc consistency algorithm acn time complexity constraint propagation constraint propagation solves problem search lucky constraint propagation preprocessing step cheap maintained dynamically search expensive backtrack undo additional constraints extra arc waltz algorithm earliest examples computation posed csp waltz algorithm interpreting line drawings solid polyhedra intersections kind intersection concave intersection faces external convex intersection adjacent intersections impose constraints csp find unique set labelings important step understanding image waltz alg simple scenes assume objects shadows cracks three-faced vertices general position junctions change small movements eye line image boundary line edge object hand arrow denoting solid left hand denoting space interior convex edge interior concave edge legal kinds junctions representation diagram label junction ways junctions labeled lines labeled consistently ends formulate csp fun fact constraint propagation works perfectly waltz examples local search csps hill-climbing simulated annealing typically work complete states variables assigned apply csps states unsatisfied constraints operators reassign variable values variable selection randomly select conflicted variable selection min-conflicts heuristic choose violates fewest constraints hill-climb total number violated constraints -queens states queens columns states actions move queen column goal test attacks evaluation number attacks random initial state solve n-queens constant time arbitrary high probability summary csps special kind problem states defined values fixed set variables goal test defined constraints variable values backtracking depth-first search variable assigned node simple consistency checking variable ordering selection heuristics significan tly forward checking prevents assignments guarantee failu constraint propagation arc consistency additional work constrain values detect inconsistencies iterative minconflicts effective practice 
tracking condensation conditional density propagation isard blake condensation conditional density propagation visual tracking int computer vision goal model-based visual tracking dense clutter video frame rates condensation algorithm approach probabilistic framework tracking objects curves clutter iterative sampling algorithm model motion shape target top-down approach simulation analytic solution probabilistic framework object dynamics form temporal markov chain observations independent mutually process bayes rule tttt xxpxp ittttt xzpxxpxxzp notation state vector curve position orientation measurement vector image edge locations prior probability state vector summarizes prior domain knowledge independent measurements probability measuring fixed image probability measuring state compares image expectation based state probability measurement occurred called state posterior tracking estimation compute state posterior select state maximizes maximum posteriori map estimate measurements complex noisy posterior evaluated closed form particle filter iterative sampling idea stochastically approximate state posterior set weighted particles sample state weight bayes rule compute factored sampling generate set samples approximates posterior sample set generated sample weight probability xzpxp factored sampling condensation image estimating target state xxz knowing state priori predict evaluate bayes rule constant image condensation algorithm select randomly select particles based weights particle picked multiple times factored sampling predict move particles deterministic dynamics drift perturb individually diffuse measure likelihood sample comparing image local appearance based update weight obtain posterior time predicted state time posterior time observation density drift diffuse measure notes updating enforcing plausibility particles represent impossible configurations discarded diffusion modeled gaussian likelihood function convert goodness prediction score pseudo-probability markings closer predicted markings higher likelihood state posterior state posterior animation object motion model video tracking propagate probability densities motion model noise term state transition matrices learned training sequences state object b-spline curve represented point state space affine transformations object zxifzx mmmm evaluating pxzpclutterzqpxzp true measurement probability target visible dancing hand pointing hand glasses state space affine transformations spline curve edge detector applied normals spline autoregressive motion model model-based state space image position angle polyhedral model object minerva museum tour guide robot condensation track position museum desired location exhibit advantages particle filtering nonlinear dynamics measurement model easily incorporated copes lots false positives multi-modal posterior unlike kalman filter multiple samples multiple hypotheses fast simple implement 
tracking condensation conditional density propagation isard blake condensation conditional density propagation visual tracking int computer vision goal model-based visual tracking dense clutter video frame rates condensation algorithm approach probabilistic framework tracking objects curves clutter iterative sampling algorithm model motion shape target top-down approach simulation analytic solution probabilistic framework object dynamics form temporal markov chain observations independent mutually process bayes rule tttt xxpxp iitittttt xzpxxpxxzp notation state vector curve position orientation measurement vector image edge locations prior probability state vector summarizes prior domain knowledge independent measurements probability measuring fixed image probability measuring state compares image expectation based state probability measurement occurred called state posterior tracking estimation compute state posterior select state maximizes maximum posteriori map estimate measurements complex noisy posterior evaluated closed form particle filter iterative sampling idea stochastically approximate state posterior set weighted particles sample state weight bayes rule compute factored sampling generate set samples approximates posterior sample set generated sample weight probability nss xzpxpz factored sampling condensation image estimating target state xxzzx ppp knowing state priori predictthis canevaluate bayes rule constant image condensation algorithm select randomly select particles stn based weights pitn particle picked multiple times factored sampling predict move particles deterministic dynamics drift perturb individually diffuse measure likelihood sample comparing image local appearance based update weight obtain pit posterior time predicted state time posterior time observation density drift diffuse measure notes updating enforcing plausibility particles represent impossible configurations discarded diffusion modeled gaussian likelihood function convert goodness prediction score pseudo-probability markings closer predicted markings higher likelihood state posterior state posterior animation object motion model video tracking propagate probability densities motion model noise term state transition matrices learned training sequences state object b-spline curve represented point state space affine transformations object zxifzx mmmm evaluating pxzpclutterzqpxzp true measurement probability target visible dancing hand pointing hand glasses state space affine transformations spline curve edge detector applied normals spline autoregressive motion model model-based state space image position angle polyhedral model object minerva museum tour guide robot condensation track position museum desired location exhibit advantages particle filtering nonlinear dynamics measurement model easily incorporated copes lots false positives multi-modal posterior unlike kalman filter multiple samples multiple hypotheses fast simple implement 
wisconsin-madison dyer support vector machine optimally defined surface typically nonlinear input space linear higher dimensional space implicitly defined kernel function acknowledgments slides combine modify provided andrew moore cmu glenn fung wisconsin olvimangasarian wisconsin wisconsin-madison dyer support vector machines classification regression data-fitting supervised unsupervised learning wisconsin-madison dyer linear classifiers denotes denotes sign classify data wisconsin-madison dyer linear classifiers akalinear discriminantfunctions definition function linear combination components input wis weight vector bthe bias two-category classifier rule decide class class decide wtx wisconsin-madison dyer linear classifiers denotes denotes sign classify data wisconsin-madison dyer linear classifiers denotes denotes sign classify data wisconsin-madison dyer linear classifiers denotes denotes sign classify data wisconsin-madison dyer linear classifiers denotes denotes sign fine wisconsin-madison dyer classifier margin denotes denotes sign define margin linear classifier width boundary increased hitting data point wisconsin-madison dyer maximum margin denotes denotes sign maximum margin linear classifieris linear classifier maximum margin simplest kind svm called lsvm linear svm wisconsin-madison dyer maximum margin denotes denotes sign maximum margin linear classifieris linear classifier maximum margin simplest kind svm called lsvm support vectors data points margin pushes linear svm wisconsin-madison dyer maximum margin denotes denotes sign x-b maximum margin linear classifieris linear classifier maximum margin simplest kind svm called lsvm support vectors data points margin pushes intuitively feels safest made small error location boundary jolted perpendicular direction chance misclassification robust outliers sincethe mod immune change removal non-support-vector data points theory dimension related pro osition good thing empirically works wisconsin-madison dyer line margin represent mathematically dinput dimensions plus-plane minus-plane classifier boundary pred ict ass zone pred ict ass zone wisconsin-madison dyer line margin plus-plane minus-plane plus-plane minus-plane classifier boundary pred ict ass zone pred ict ass zone ifuniverse explodes ifwt classify weight vector bias threshold wisconsin-madison dyer computing margin plus-plane minus-plane claim vector wis perpendicular plus-plane pred ict ass zone pred ict ass zonewx margin width compute min terms wisconsin-madison dyer wis plane normal vector distance origin wisconsin-madison dyer computing margin plus-plane minus-plane vector wis perpendicular plane x-be point minus plane closest plus-plane-point pred ict ass zone pred ict ass zonewx margin compute min terms location necessarily datapoint point wisconsin-madison dyer computing margin plus-plane minus-plane vector wis perpendicular plane x-be point minus plane closest plus-plane-point claim pred ict ass zone pred ict ass zonewx margin compute min terms wisconsin-madison dyer computing margin plus-plane minus-plane vector wis perpendicular plane x-be point minus plane closest plus-plane-point claim pred ict ass zone pred ict ass zonewx margin compute min terms line x-to perpendicular planes x-to travel distance direction wisconsin-madison dyer computing margin wxb -xm easy min terms wand pred ict ass zone pred ict ass zonewx margin wisconsin-madison dyer computing margin wxb -xm easy terms wand pred ict ass zone pred ict ass zonewx margin wisconsin-madison dyer computing margin wxb -xm redic clas zone pred ict ass zonewx margin -xw wwww wisconsin-madison dyer learning maximum margin classifier guess wand bwe compute data points correct half-planes compute width margin write program search space find widest margin matches data points pred ict ass zone pred ict ass zonewx margin wisconsin-madison dyer learning quadratic programming well-studied class optimization algorithms maximize quadratic function real-valued variables subject linear constraints minimize subject xin class xin class wisconsin-madison dyer uh-oh denotes denotes problem wisconsin-madison dyer uh-oh denotes denotes problem idea find minimum minimizing number training set errors problem things minimize makes ill-defined optimization wisconsin-madison dyer uh-oh denotes denotes problem idea minimize train errors practical problem make reject approach guess tradeoff parameter wisconsin-madison dyer uh-oh denotes denotes problem idea minimize train errors practical problem make reject approach guess tradeoff parameter expressed quadratic programming problem solving slow doesn distinguish disastrous errors misses ideas wisconsin-madison dyer uh-oh denotes denotes problem idea minimize distance error points correct place wisconsin-madison dyer learning maximum margin noise guess compute sum distances points correct zones compute margin width assume nexamples quadratic optimization criterion constraints wisconsin-madison dyer learning maximum margin noise guess bwe compute sum distances points correct zones compute margin width assume nexamples quadratic optimization criterion minimize constraints kif kif wisconsin-madison dyer suppose dimension svms data wisconsin-madison dyer suppose dimension big surprise positive plane negative plane wisconsin-madison dyer harder -dimensional dataset wiped smirk svm face wisconsin-madison dyer harder -dimensional dataset kernel trick preprocess data mapping higher dimensional space kkk wisconsin-madison dyer harder -dimensional dataset kkk kernel trick preprocess data mapping higher dimensional space wisconsin-madison dyer wisconsin-madison dyer project examples higher dimensional space data islinearly separable defined training depends dot products form dimensionality zspace generally larger dimension input space wisconsin-madison dyer common svm basis functions polynomial terms xkof degree radial basis functions sigmoid functions kernelfn kjk cxxz wisconsin-madison dyer svm kernel functions dis svm kernel function polynomials high dimensional basis functions made practical finding kernel function radial-basis-style kernel function neural-net-style kernel function exp babak tanh babak magic parameters chosen model selection method vcsrm wisconsin-madison dyer federalist papers written alexander hamilton john jay james madison persuade citizens york ratify constitution papers consisted short essays words length authorship papers dispute madison hamilton papers referred disputed federalist papers wisconsin-madison dyer description data paper machine readable text created scanner computed relative frequencies words mosteller-wallace identified good candidates author-attribution studies document represented vector real numbers word frequencies dataset consists papers madison papers hamilton papers disputed papers wisconsin-madison dyer function words based relative frequencies wisconsin-madison dyer sla feature selection classifying disputed federalist papers apply svm successive linearization algorithm feature selection train federalist papers authors find classification hyperplane words hyperplane classify disputed papers wisconsin-madison dyer hyperplaneclassifier words hyperplane depending words found disputed papers ended madison side plane wisconsin-madison dyer results plot hyperplane wisconsin-madison dyer multi-class classification svms handle two-class outputs answer n-class problems learn svm svm learns output output svm learns output output svm learns output output wisconsin-madison dyer multi-class classification ideally case practice predict output input predict svm find puts prediction furthest positive region classify class ciif max wisconsin-madison dyer summary learning linear functions pick separating plane maximizes margin separating plane defined terms support vectors learning non-linear functions project examples higher dimensional space kernel functions efficiency generally avoids over-fitting problem global optimization method local optima 
expensive apply multiclass problems 
dyer skrentny speech recognition chapter dyer skrentny introduction speech dominant form communication humans humans machines speech recognition mapping acoustic signal string words speech understanding mapping meaning dyer skrentny introduction human languages limited set distinct sounds called phones bet boy bottom button phones characterized terms acoustic features frequency amplitude extracted sound waves dyer skrentny speech recognition architecture goal large vocabulary continuous speech words separated speaker-independent speech waveform spectral feature vectors likelihoods words feature extraction signal processing likelihood estimation gaussians neural networks decoding viterbi stack decoder neural net n-gram grammar hmm lexicon dyer skrentny speech recognition task signal processor match search analog speech discrete observations word sequence dyer skrentny introduction isn easy develop dictionary pronunciation coat kowt recognize speech wreck nice beach problems homophones fragments sound rec wreck segmentation determining breaks words nize speech nice beach signal processing problems dyer skrentny signal processing sound analog energy source resulting pressure waves striking eardrum microphone analog-to-digital converter record speech sounds sampling number times sound level measured quantization number bits precision sound level measurements telephone khz times speech recognizer khz bits sample minute takes bytes dyer skrentny signal processing wave encoding group msec frames larger blocks analyzed individually frames overlap ensure important acoustical events frame boundaries aren lost frames analyzed terms features amount energy frequencies total energy frame differences prior frame vector quantization encodes mapping frame regions n-dimensional feature space dyer skrentny input sequence vector quantization encodes successive region observation values aka labels input sequence dyer skrentny signal processing goal speaker independence representation sound independent speaker specific pitch volume speed aspects dialect speaker identification opposite specific details needed decide speaking significant problem dealing background noises speakers dyer skrentny speech recognition model bayes rule break problem manageable parts words signal words signal words signal signal normalizing constant words language model likelihood words heard recognize speech wreck nice beach signal words acoustic model likelihood signal words accounts differences pronunciation words nice likelihood pronounced nuys signal observation sequence words string words match metric probability bayes rule observation likelihood prior probability acoustic model language model maxarg owpw ooooo wwwww maxarg maxarg wpwop wpwop dyer skrentny language model words joint probability sequence words natural language joint probability expressed chain rule order reversed collecting probabilities complex requires statistics starting sequences sequence words language words simplification dyer skrentny language model first-order markov assumption probability word depends previous word simplifies called bigram model relates consecutive pairs words dyer skrentny language model context words called trigram model difficult collect sufficient data accurate probabilities weighted sum unigram bigram trigram models combination bigram trigram models account local context-sensitive effects bag tricks bottle tricks local grammar dyer skrentny language model probabilities obtained computing statistics frequency pairs words large training set word strings appears training data times clock times clock probabilities stored probability table probabilistic finite state machine dyer skrentny language model probabilistic finite state machine fully connected directed graph nodes states words start state arcs labeled probability start word prior probability destination word word probability destination word source word start tomato attack killer dyer skrentny language model probabilistic finite state machine fully connected directed graph joint probability estimated bigram model starting start multiplying probabilities arcs traversed sentence attack killer tomato attack attack killer tomato killer start tomato attack killer dyer skrentny acoustic model signal words conditional probability signal sequence words natural language divided probabilities phones word probability sequence phones word signal probability sequence vector quantization values acoustic signal dyer skrentny finding patterns speech general problem finding patterns time sequence deterministic patterns fixed sequence states state dependent solely previous state european stop light dyer skrentny non-deterministic patterns discrete set states model deterministically sequence predicting weather states sunny cloudy rainy arcs probability called state transition probability moving state nth-order markov assumption today weather predicted solely knowledge days weather -order markov assumption today weather predicted solely knowledge yesterday weather dyer skrentny -order markov model markov process process moves state state probabilistically based state transition matrix graph sum values row column -order markov model weather prediction dyer skrentny -order markov model initialize process state probability initial state time called vector day sunny simplicity assume single state start state dyer skrentny -order markov model markov model consists discrete set states vector state transition matrix state transition matrix fixed times describes probabilities completely-connected graph states dyer skrentny markov model weather prediction today sunny probability days sunny rainy dyer skrentny weather prediction cont sun rain sun rain cloudy dyer skrentny acoustic model phones word markov model describing process series states tomato nodes correspond production sound slurring coarticulation typically quickly pronouncing word variation pronunciation words typically due dialects arcs probability transitioning current state dyer skrentny acoustic model phones word markov model describing process series states tomato phones word path diagram towmeytow tomato towmaatow tomato tahmeytow tomato tahmaatow tomato dyer skrentny acoustic model probabilities phonemes listen corpus starts sound possibilities sound probability sound possibilities sound time sound omitted probability transitioning sound circles represent things states observations real world state hidden sound don phoneme word knee phoneme word simplify word phoneme dyer skrentny problem don sequence phonemes observation sequence relate input sequence phoneme sequences dyer skrentny hidden markov models hmms states predict directly observable observations indirect evidence major direct access weather observe state piece corn dry dryish damp soggy speech recognition observe features changing sound direct evidence words spoken dyer skrentny hmms hidden states states real interest true weather sequence words spoken represented -order markov model observable values discrete set observable values number observable values general equal number hidden states observable values related hidden states -tocorrespondence dyer skrentny hidden markov model dyer skrentny arcs probabilities hmms arcs connecting hidden states observable values represent probability generating observed markov process hidden state observation likelihood matrix aka confusion matrix output probability distribution stores probabilities arcs hidden states observable values obs hidden corn dyer skrentny hmm summary hmm types information hidden states observable values speech recognition vector quantization values input sequence hmm sets probabilities vector state transition matrix observation likelihood start end word model observation sequence hmm word model dyer skrentny acoustic model signal hmm model nodes probability distribution set vector 
quantization values arcs probability transitioning current state onset mid end final outputs dyer skrentny generating hmm observations choose initial state based choose output symbol probability distribution state transition state state transition probability distribution state dyer skrentny computation conditioning rule fixed state sequence allq poq poq qqt qqqq qqqt dyer skrentny computation sequences calculations required computations dyer skrentny acoustic model signal hmm model signal path diagram variation speed pronunciation onset mid end final dyer skrentny combining models start tomato attack killer tomato onset mid end final create large hmm dyer skrentny evaluation scoring problem find probability observed sequence hmm hmms summer hmm winter hmm sequence corn observations hmm generated sequence speech recognition hmm word observation sequence spoken word compute recognize word identifying probable hmm bayes rule solve state estimation problems observation sequence state forward algorithm dyer skrentny decoding matching problem find probable sequence path hidden states observation sequence viterbi algorithm dyer skrentny learning training problem generate hmm sequence observations set hidden states learn probable hmm forward-backward algorithm expectationmaximization algorithm dyer skrentny evaluation problem forward algorithm observation sequence hmm model specific hidden state sequence hmm dyer skrentny compute bayesian likelihood incrementally state transitions hmm model state previously state transition probability state state observation likelihood state label matches forward algorithm dyer skrentny forward algorithm multiple states leading state sum probabilities dyer skrentny evaluation exhaustive search observation sequence dry damp soggy unroll state sequence trellis matrix dyer skrentny evaluation exhaustive search column trellis matrix shows state weather state column connected state adjacent columns sum probabilities sequence hidden states weather sequences dry damp soggy hmm dry damp soggy sunny sunny sunny dry damp soggy sunny sunny cloudy dry damp soggy rainy rainy rainy practical number paths number hidden states number observations dyer skrentny forward algorithm intuition idea compute cache values representing probability state observations cell expresses probability means probability state sequence states state compute summing extensions paths leading current cell extension path state time state computed multiplying previous path probability previous cell transition probability previous state current state iii observation likelihood current state matches observation symbol dyer skrentny evaluation forward algorithm compute probability reaching intermediate state trellis observation sequence dry damp soggy compute cloudy hmm cloudy cloudy paths cloudy dyer skrentny forward algorithm cont sum paths trellis dyer skrentny forward algorithm cont compute recursively states computation time linear length sequence dyer skrentny decoding problem probable sequence hidden states state sequence maximizes similar forward algorithm max sum computing probability probable path state trellis dyer skrentny decoding viterbi algorithm state time compute recursively maximum probability sequences ending state time partial path state assumption dynamic programming invariant ultimate path includes state includes path including dyer skrentny viterbi algorithm variant forward algorithm considers words simultaneously computes path type dynamic programming algorithm input sequence observations hmm output probable state sequence probability works computing max previous paths sum sequence deciding final state back pointers recover path linear time linear space algorithm dyer skrentny viterbi algorithm intuition idea compute probability taking max extensions paths leading current cell trellis extension path state time state computed multiplying previous path probability previous cell transition probability previous state current state observation likelihood current state matches observation symbol dyer skrentny summary viterbi algorithm hmm viterbi algorithm finds probable sequence hidden states sequence observed values exploits time invariance probabilities avoid examining path trellis sequence deciding final state back pointers recover path entire context make decision robust respect noise bad observation middle sequence dyer skrentny summary speech recognition systems work high snr low noise background sounds small vocabulary good language model pauses words trained specific speaker current systems vocabulary words single speaker vocabulary words multiple speakers accuracy depends task dyer skrentny error rates machine human telephone speech sentences read wsj transactional speech letters digits task machine human lippmann speech comm dyer skrentny hmms bet robot planning sensing uncertainty robot learning control spam deobfuscation mis-spelling words speech recognition understanding phones words signal phones human genome project complicated stuff lecturer consumer decision modeling economics finance things 
wisconsin-madison dyer support vector machine optimally defined surface typically nonlinear input space linear higher dimensional space implicitly defined kernel function acknowledgments slides combine modify provided andrew moore cmu glenn fung wisconsin olvimangasarian wisconsin wisconsin-madison dyer support vector machines classification regression data-fitting supervised unsupervised learning wisconsin-madison dyer linear classifiers denotes denotes sign classify data wisconsin-madison dyer linear classifiers akalinear discriminantfunctions definition function linear combination components input weight vector bthe bias two-category classifier rule decide class class decide wtx wisconsin-madison dyer linear classifiers denotes denotes sign classify data wisconsin-madison dyer linear classifiers denotes denotes sign classify data wisconsin-madison dyer linear classifiers denotes denotes sign classify data wisconsin-madison dyer linear classifiers denotes denotes sign fine wisconsin-madison dyer classifier margin denotes denotes sign define margin linear classifier width boundary increased hitting data point wisconsin-madison dyer maximum margin denotes denotes sign maximum margin linear classifieris linear classifier maximum margin simplest kind svm called lsvm linear svm wisconsin-madison dyer maximum margin denotes denotes sign maximum margin linear classifieris linear classifier maximum margin simplest kind svm called lsvm support vectors data points margin pushes linear svm wisconsin-madison dyer maximum margin denotes denotes sign maximum margin linear classifieris linear classifier maximum margin simplest kind svm called lsvm support vectors data points margin pushes intuitively feels safest made small error location boundary jolted perpendicular drection chance misclassification robust outliers sincethe mod immune change removal non-support-vector data points theory dimension related pro osition good thing empirically works wisconsin-madison dyer line margin represent mathematically dinput dimensions plus-plane minus-plane classifier boundary pred ict ass zone pred ict ass zone wisconsin-madison dyer line margin plus-plane minus-plane plus-plane minus-plane classifier boundary pred ict ass zone pred ict ass zone ifuniverse explodes ifwt classify weight vector bias threshold wisconsin-madison dyer computing margin plus-plane minus-plane claim vector perpendicular plus-plane pred ict ass zone pred ict ass zonewx margin width compute min terms wisconsin-madison dyer plane normal vector distance origin wisconsin-madison dyer computing margin plus-plane minus-plane vector perpendicular plane point minus plane closest plus-plane-point pred ict ass zone pred ict ass zonewx margin compute min terms location necessarily datapoint point wisconsin-madison dyer computing margin plus-plane minus-plane vector perpendicular plane point minus plane closest plus-plane-point claim pred ict ass zone pred ict ass zonewx margin compute min terms wisconsin-madison dyer computing margin plus-plane minus-plane vector perpendicular plane point minus plane closest plus-plane-point claim pred ict ass zone pred ict ass zonewx margin compute min terms line perpendicular planes travel distance direction wisconsin-madison dyer computing margin easy min terms pred ict ass zone pred ict ass zonewx margin wisconsin-madison dyer computing margin easy terms pred ict ass zone pred ict ass zonewx margin wisconsin-madison dyer computing margin redic clas zone pred ict ass zonewx margin wwww wisconsin-madison dyer learning maximum margin classifier guess bwe compute data points correct half-planes compute width margin write program search space find widest margin matches data points pred ict ass zone pred ict ass zonewx margin wisconsin-madison dyer learning quadratic programming well-studied class optimization algorithms maximize quadratic function real-valued variables subject linear constraints minimize subject class class wisconsin-madison dyer uh-oh denotes denotes problem wisconsin-madison dyer uh-oh denotes denotes problem idea find minimum minimizing number training set errors problem things minimize makes ill-defined optimization wisconsin-madison dyer uh-oh denotes denotes problem idea minimize train errors practical problem make reject approach guess tradeoff parameter wisconsin-madison dyer uh-oh denotes denotes problem idea minimize train errors practical problem make reject approach guess tradeoff parameter expressed quadratic programming problem solving slow doesn distinguish disastrous errors misses ideas wisconsin-madison dyer uh-oh denotes denotes problem idea minimize distance error points correct place wisconsin-madison dyer learning maximum margin noise guess compute sum distances points correct zones compute margin width assume nexamples quadratic optimization criterion constraints wisconsin-madison dyer learning maximum margin noise guess bwe compute sum distances points correct zones compute margin width assume nexamples quadratic optimization criterion minimize constraints kif kif wisconsin-madison dyer suppose dimension svms data wisconsin-madison dyer suppose dimension big surprise positive plane negative plane wisconsin-madison dyer harder -dimensional dataset wiped smirk svm face wisconsin-madison dyer harder -dimensional dataset kernel trick preprocess data mapping higher dimensional space kkk wisconsin-madison dyer harder -dimensional dataset kkk kernel trick preprocess data mapping higher dimensional space wisconsin-madison dyer wisconsin-madison dyer project examples higher dimensional space data linearly separable defined training depends dot products form dimensionality space generally larger dimension input space wisconsin-madison dyer common svm basis functions polynomial terms xkof degree radial basis functions sigmoid functions kernelfn kjk cxxz wisconsin-madison dyer svm kernel functions dis svm kernel function polynomials high dimensional basis functions made practical finding kernel function radial-basis-style kernel function neural-net-style kernel function exp babak tanh babak magic parameters chosen model selection method vcsrm wisconsin-madison dyer federalist papers written alexander hamilton john jay james madison persuade citizens york ratify constitution papers consisted short essays words length authorship papers dispute madison hamilton papers referred disputed federalist papers wisconsin-madison dyer description data paper machine readable text created scanner computed relative frequencies words mosteller-wallace identified good candidates author-attribution studies document represented vector real numbers word frequencies dataset consists papers madison papers hamilton papers disputed papers wisconsin-madison dyer function words based relative frequencies wisconsin-madison dyer sla feature selection classifying disputed federalist papers apply svm successive linearization algorithm feature selection train federalist papers authors find classification hyperplane words hyperplane classify disputed papers wisconsin-madison dyer hyperplaneclassifier words hyperplane depending words found disputed papers ended madison side plane wisconsin-madison dyer results plot hyperplane wisconsin-madison dyer multi-class classification svms handle two-class outputs answer n-class problems learn svm svm learns output output svm learns output output svm learns output output wisconsin-madison dyer multi-class classification ideally case practice predict output input predict svm find puts prediction furthest positive region classify class ciif max wisconsin-madison dyer summary learning linear functions pick separating plane maximizes margin separating plane defined terms support vectors learning non-linear functions project examples higher dimensional space kernel functions efficiency generally avoids over-fitting problem global optimization method local optima expensive apply multiclass problems 
james skrentny notes dyer informed search chapter james skrentny notes dyer informed search hexasterisk informed searches domain knowledge guide selection path continue searching circle heuristics informed guesses circle heuristic means serving aid discovery james skrentny notes dyer informed search circle define heuristic function domain-specific info computable current state description estimates circle goodness node circle close node goal circle cost minimal cost path node goal state james skrentny notes dyer informed search circle nodes circle implies goal node circle implies dead end goal reached circle domain knowledge search encoded heuristic function circle weak method limited domain-specific information solve problem james skrentny notes dyer best-first search hexasterisk sort nodes nodes list increasing values evaluation function incorporates domain-specific information circle generic referring class informed search methods james skrentny notes dyer greedy best-first search hexasterisk evaluation function sorting nodes nodes list increasing values circle selects node expand believed closest smallest goal node james skrentny notes dyer greedy best-first search nodes tested expanded open listexpnd node james skrentny notes dyer greedy best-first search nodes tested expanded goal open listexpnd node james skrentny notes dyer greedy best-first search nodes tested expanded goal open listexpnd node james skrentny notes dyer greedy best-first search nodes tested expanded expandg goal open listexpnd node james skrentny notes dyer greedy best-first search nodes tested expanded open listexpnd node path cost hexasterisk fast optimal james skrentny notes dyer greedy best-first search ggoal ggoal circle complete circle optimal admissible greedy search finds left goal solution cost optimal solution path goal solution cost james skrentny notes dyer beam search hexasterisk evaluation function greedy best-first search restrict maximum size nodes list constant circle nodes candidates expansion throw rest circle space efficient greedy search throw node solution path circle complete circle optimal admissible james skrentny notes dyer algorithm search hexasterisk evaluation function minimal cost path start current node defined ucs circle term adds breadth-first component evaluation function circle nodes search frontier nodes list ranked estimated cost solution cost start node node estimated cost node goal james skrentny notes dyer algorithm search circle complete algorithm expands circle optimal admissible james skrentny notes dyer algorithm search hexasterisk evaluation function algorithm add constraint nodes search space true cost minimal cost path goal circle cost nearest goal overestimated circle holds true admissible circle admissible heuristic guarantees node optimal path bad considered james skrentny notes dyer algorithm search circle complete branching factor finite required bfs ids ucs operator fixed positive cost circle optimal admissible james skrentny notes dyer actual cost node start james skrentny notes dyer actual cost node start james skrentny notes dyer actual cost node start james skrentny notes dyer actual cost node start james skrentny notes dyer actual cost node start james skrentny notes dyer actual cost node start james skrentny notes dyer actual cost node start james skrentny notes dyer estimated cost goal node james skrentny notes dyer estimated cost goal node james skrentny notes dyer actual cost start estimated cost goal james skrentny notes dyer true cost minimal path goal james skrentny notes dyer true cost minimal path goal james skrentny notes dyer true cost minimal path goal james skrentny notes dyer true cost minimal path goal james skrentny notes dyer true cost minimal path goal james skrentny notes dyer true cost minimal path goal james skrentny notes dyer optimal path cost james skrentny notes dyer admissible james skrentny notes dyer algorithm put start node nodes list called open open empty exit failure remove open node minimum place closed list nodes expanded goal node exit solution path trace back links expand generating successors store link back successor open closed calculate place open open closed check lower newly generated lower lower replace existing link back closed move node closed open goto james skrentny notes dyer open listexpnd node search nodes tested expanded james skrentny notes dyer goal open listexpnd node search nodes tested expanded james skrentny notes dyer search nodes tested expanded goal open listexpnd node james skrentny notes dyer search nodes tested expanded replace goal open listexpnd node james skrentny notes dyer search nodes tested expanded expanded goal open listexpnd node james skrentny notes dyer search nodes tested expanded open listexpnd node path cost hexasterisk pretty fast optimal james skrentny notes dyer proof contradiction optimality circle optimal goal sub-optimal goal cost optimal path start circle assume found admissible hexasterisk found sub-optimal path shouldn james skrentny notes dyer proof contradiction optimality circle node optimal path path circle admissibility overestimates cost goal cost optimal path circle chosen sub-optimal goal found circle combining equations james skrentny notes dyer proof contradiction optimality circle circle substituting definition circle goal node circle contradicts assumption suboptimal hexasterisk optimal respect path cost search finds sub-optimal goal james skrentny notes dyer devising heuristics circle devised relaxing problem compute exact cost solution simplified version remove constraints -puzzle movement simplify problem straight line distance actual text james skrentny notes dyer devising heuristics hexasterisk goal admissible heuristic close actual cost hexasterisk fast compute circle trade time compute complex heuristic versus time expand nodes simpler heuristic james skrentny notes dyer devising heuristics circle nodes optimal solution path expanded unnecessary work performed circle heuristic admissible performs uniform-cost search ucs hexasterisk closer fewer extra nodes expanded james skrentny notes dyer devising heuristics circle aren goals dominates heuristic expands nodes informed james skrentny notes dyer devising heuristics circle admissible heuristic frequently simple search resorts ucs parts search space james skrentny notes dyer devising heuristics circle optimality required satisficing solution hexasterisk goal heuristic close actual cost circle results fewer nodes expanded poor provably admissible heuristic james skrentny notes dyer devising heuristics circle suffers venture single path continuously success decreasing failure decrease immediately search switch path james skrentny notes dyer local searching circle systematic searching search path start state goal state execute solution path sequence operators bfs ids ucs greedy best-first small search spaces toy world problems np-hard problems requiring exponential time find optimal solution james skrentny notes dyer traveling salesperson problem tsp circle classic np-hard problem salesman visit list cities stopping city returning city traveling shortest distance james skrentny notes dyer traveling salesperson 
problem tsp city tsp scale nodes cities arcs labeled distances cities adjacency matrix notice graph fully connected edcba james skrentny notes dyer traveling salesperson problem tsp city tsp scale solution permutation cities called tour edcba james skrentny notes dyer traveling salesperson problem tsp city tsp scale solution permutation cities called tour edcba assume tours return home james skrentny notes dyer traveling salesperson problem tsp city tsp scale solutions exist cities results tours results tours results tours edcba james skrentny notes dyer problems circle n-queens place queens checkerboard capture circle boolean satisfiability boolean expression boolean variables find assignment variable expression evaluates james skrentny notes dyer local searching circle hard problems solved reasonable time polynomial approximate model find exact solution simpler version problem approximate solution find non-optimal solution original hard problem circle explore means search solution space iteratively improving solutions found optimal optimal james skrentny notes dyer local searching circle local searching node solution operators solution stop time valid solution search finding solution hexasterisk longer searching state space solution path executing steps solution path circle isn local searching searches partial solutions estimated cost solution path james skrentny notes dyer local searching hexasterisk operator needed transform solution circle tsp two-swap common cities swap location tour a-b-c-d-e swap yields d-b-c-a-e graph fully connected circle tsp two-interchange reverse path cities a-b-c-d-e interchange yields d-c-b-a-e james skrentny notes dyer local searching circle solutions reached application operator current solution neighborhood circle local search considers solutions neighborhood circle neighborhood smaller size search space search degenerates james skrentny notes dyer local searching hexasterisk evaluation function map solution number quality solution circle tsp distance tour path solution shorter tour path circle maximize called hill climbing gradient ascent continuous circle minimize called valley finding gradient descent continuous circle maximize minimize cost james skrentny notes dyer local searching visualized surface circle height quality solution circle solution space surface circle initial solution point circle goal find higher point surface solution space circle hill-climbing direction steepest ascent increases james skrentny notes dyer local searching node hillclimbing problem problem node currentnode node problem getstartpoint true node newnode neighbor currentnode neighbor highest evaluation lowest problem eval newnode problem eval currentnode valley finding avoid cycles closed list currentnode newnode return currentnode james skrentny notes dyer hill-climbing circle exploits neighborhood greedy best-first search chooses locally doesn backtracking jumping alternative path open list circle space efficient beam search beam width recall beam width size open list closed nodes list large circle fast effective practice james skrentny notes dyer hill-climbing circle local maximum circle plateaus ridges circle global maximum found trade greedily exploiting locality exploring state space bfs solution found totally determined starting point fundamental weakness stuck james skrentny notes dyer hill-climbing restarts circle run multiple times independently randomly generated start solutions circle solution found circle fast easy implement works applications solution space surface bumpy local maxima james skrentny notes dyer escaping local maxima hexasterisk stuck local maximum limiting quality solution found circle ways modify choice neighbor criteria deciding move neighbor circle choose neighbor randomly move neighbor isn accept fixed probability james skrentny notes dyer escaping local maxima circle modified escape local maxima chance making bad move beginning search end magnitude improvement lack circle fix replacing fixed probability bad move accepted probability decreases search proceeds circle search progresses chances taking bad move reduces james skrentny notes dyer escaping local maxima circle lets change valley finding find global minima lowest solution search node lower replace fixed probability temperature decreases search proceeds eval currentnode eval newnode james skrentny notes dyer escaping local maxima eval currentnode eval newnode boltzman equation circle badness move increases probability taking decreases exponentially circle temperature decreases probability taking bad move decreases james skrentny notes dyer escaping local maxima eval currentnode eval newnode boltzman equation circle badness move small compare move accepted circle badness move large compare move accepted james skrentny notes dyer simulated annealing finds minima valley finding node simulatedannealing problem problem int temperature problem getintialtemperature node currentnode node problem getstartpoint node bestnode currentnode temperature problem getstoppingtemperature node newnode random neighbor currentnode check newnode accepted check newnode bestnode temperature problem schedule temperature return bestnode james skrentny notes dyer simulated annealing check newnode accepted int deltae problem eval currentnode problem eval newnode deltae newnode currentnode newnode backtracking currentnode newnode probability deltae check newnode bestnode needed current node problem eval currentnode problem eval bestnode bestnode currentnode james skrentny notes dyer simulated annealing circle perform multiple backward steps row escape local optimum circle chance finding global optima increased circle fast neighbor generated iteration neighborhood isn checked find neighbor circle finds good quality solution short amount time james skrentny notes dyer simulated annealing circle requires parameters set starting temperature circle high escape local optima high random exploration space cooling schedule circle typically exponential halting temperature circle domain knowledge helps set values size search space bounds maximum minimum solutions james skrentny notes dyer summary circle systematic searching hexasterisk state space goal solution path determined nodes state descriptions partial solution path arcs operator state cost solution sequence operators change start goal state james skrentny notes dyer summary circle systematic searching uninformed domain info guide search circle complete optimal arc costs uniform bfs ids circle complete optimal ucs arc costs circle complete optimal dfs informed domain info weakly guide search circle cost start circle estimated cost goal heuristic circle estimated cost solution circle complete optimal admissible circle complete optimal greedy best-first beam james skrentny notes dyer summary circle local searching hexasterisk iteratively improve solution nodes complete solution arcs operator solution stop time technique suited circle hard problems tsp circle optimization problems james skrentny notes dyer summary circle local searching evaluates quality solution weakly domain knowledge maximizes minimizes circle solution found determined starting point circle stuck prevents finding global optimum explores settles circle bad moves accepted probability decreases search progress decreases badness move worsens circle requires parameters set 
recognizing learning object categories based work fergus perona zisserman ponce lazebnik schmid dimaio traditional problem single object recognition objects exhibit considerable intra-class variability task recognition object categories object categories learn examples difficulties size variation background clutter occlusion intra-class variation viewpoint variation illumination variation chairs related function form approach discriminative methods object detection recognition formulated classification problem bag image patches decision boundary decision window target object computer screen background feature space screens image partitioned set overlapping windows formulation binary classification formulation training data image patch labeled object test data features labels belongs family functions classification function minimize misclassification error simple guarantees generalization discriminative methods examples nearest neighbor shakhnarovich viola darrell berg berg malik neural networks lecun bottou bengio haffner rowley baluja kanade support vector machines kernels conditional random fields mccallum freitag pereira kumar hebert guyon vapnik heisele serre poggio object categorization statistical viewpoint imagezebrap ezebra imagnop bayes rule zebranop zebrap zebranoimagep zebraimagep imagezebranop imagezebrap posterior ratio likelihood ratio prior ratio object categorization statistical viewpoint zebranop zebrap zebranoimagep zebraimagep imagezebranop imagezebrap posterior ratio likelihood ratio prior ratio discriminative methods model posterior generative methods model likelihood prior discriminative direct modeling zebra non-zebra decision boundary imagezebranop imagezebrap model generative zebraimagep zebranoimagep middle lowhigh middlelow zebranoimagep zebraimagep main issues representation represent object category learning form classifier training data recognition classifier data approach generative methods bag words models image represented collection visual words counts universal dictionary object categories modeled distributions visual words bag words models generative discriminative approaches focus generative models approach generative methods part-based models object image represented collection parts characterized visual appearances locations object categories modeled appearance spatial distributions characteristic parts issues models include efficient methods finding correspondences object scene model constellation parts fischler elschlager yuille brunelli poggio lades malsburg cootes lanitis taylor amit geman perona representation object set parts generative representation model relative locations parts appearance part issues model location represent appearance sparse dense pixels regions handle occlusion clutter figure fischler model structure model shape gaussian distribution image location parts scale part model appearance patches pixel intensities represent object class graph image patches parameters sparse representation computationally tractable pixels parts generative representation class avoid modeling global variability success specific object recognition throws image information parts distinctive separate classes representation occlusion explicit additional match part missing state implicit truncated minimum probability appearance appearance space part representation background clutter explicit model generative model clutter foreground object sub-window correct position clutter present object model gaussian shape pdf poisson pdf detections uniform shape pdf prob detection gaussian part appearance pdf generative probabilistic model background clutter model gaussian relative scale pdf log scale gaussian appearance pdf uniform relative scale pdf log scale interest operator kadir brady interest operator finds maxima entropy scale location representation appearance patch normalize projection pca basis object categorization statistical viewpoint imagezebrap ezebra imagnop bayes rule zebranop zebrap zebranoimagep zebraimagep imagezebranop imagezebrap posterior ratio likelihood ratio prior ratio model structure assume prior ratio learned find values parameters maximizes likelihood ratio set valid correspondences image features model parts factor likelihood simplify computation chain rule hasxpasxp learning learning procedure e-step compute assignments regions belong part red green blue dots m-step update model parameters find regions location appearance initialize model parameters algorithm iterate convergence maximize likelihood consistency shape appearance task estimation model parameters learning assignments hidden variable algorithm learn model parameters chicken egg type problem initially model parameters assignment regions parts recognition parts run template locations image detect local maxima giving locations part learned model find maximum likelihood ratio correspondences number locations part image greater threshold signify object detected experimental procedure series experiments datasets motorbikes faces spotted cats airplanes cars side images training images identifcation object image scale variant pre-scaled images scale invariant testing images simple object present absent test roc equal error rate computed background set images parameters part pca features motorbikes input images motorbikes features detected motorbikes max likelihood result motorbikesequal error rate shape model background images frontal facesequal error rate airplanesequal error rate scale-invariant spotted catsequal error rate scale-invariant carsequal error rate robustness algorithm roc equal error rates pre-scaled data identical settings scale-invariant learning recognition probabilistic parts structure models summary correspondence problem efficient methods large parts positions image challenge representation desired invariance minimal supervision future directions multiple views approaches learning multiple category training 
james skrentny notes dyer game playing chapter james skrentny notes dyer game playing circle game playing thought good problem research game playing non-trivial circle players human-like intelligence circle games complex chess circle requires decision making limited time games circle well-defined repeatable circle limited accessible directly compare humans computers james skrentny notes dyer game playing bridge poker scrabble kinds games admissible imperfect info backgammon monopoly checkers chess othello admissible perfect info chancedeterministic james skrentny notes dyer game playing search circle player board game chess checkers tic-tac-toe board configuration unique arrangement pieces circle representing board games search problem states board configurations operators legal moves initial state current board configuration goal state winning terminal board configuration james skrentny notes dyer game tree representation handle aspect search problem opponent control james skrentny notes dyer complexity game playing circle assume opponent moves predicted computer moves circle complex search case worst case branching factor depth tic-tac-toe legal moves max moves circle states chess legal moves moves game circle states legal states hexasterisk common games produce enormous search trees james skrentny notes dyer greedy search evaluation function hexasterisk evaluation utility function map terminal state board number state computer positive winning negative losing draw typical values lost win circle circle james skrentny notes dyer greedy search evaluation function circle expand search tree terminal states branch circle evaluate utility terminal board configuration circle make initial move results board configuration maximum edb computer moves opponent moves board evaluation computer perspective terminal states james skrentny notes dyer greedy search evaluation function circle assuming reasonable search space problem ignores opponent computer chooses opponent chooses defeats computer computer moves opponent moves board evaluation computer perspective terminal states james skrentny notes dyer minimax principle circle assuming worst opponent plays optimally plays till terminal states high utility numbers favor computer circle computer choose maximizing moves low utility numbers favor opponent circle smart opponent chooses minimizing moves james skrentny notes dyer edb minimax principle circle computer assumes moves opponent choose minimizing move circle computer chooses move move opponent optimal move computer moves opponent moves board evaluation computer perspective terminal states james skrentny notes dyer propagating minimax values game tree circle explore tree terminal states circle evaluate utility resulting board configurations circle computer makes move put board configuration assuming opponent makes moves turn start leaves assign parent node circle minimum children opponent moves circle maximum children computer moves james skrentny notes dyer deeper game trees circle minimax generalized moves circle propagate percolate values upwards tree terminal states oppponent min computer max oppponent min computer max james skrentny notes dyer general minimax algorithm move computer perform depth-first search terminal state evaluate terminal state propagate upwards minimax values opponent move propagate minimum children cumputer move propagate maximum children choose move maximum minimax values children note minimax values gradually propagate upwards dfs proceeds minimax values propagate left-to-right fashion minimax values sub-tree propagate upwards nodes memory time james skrentny notes dyer complexity minimax algorithm assume terminal states depth circle space complexity depth-first search circle time complexity branching factor hexasterisk time complexity major problem computer typically finite amount time make move james skrentny notes dyer complexity minimax algorithm circle direct minimax algorithm impractical practice depth-limited search depth evaluation defined terminal states non-terminal states hexasterisk static board evaluator sbe functions heuristics estimate non-terminal states james skrentny notes dyer static board evaluator sbe hexasterisk static board evaluation function estimate good current board configuration computer reflects computer chances winning node easy calculate board configuration circle chess sbe materialbalance centercontrol material balance white pieces black pieces pawn rook queen james skrentny notes dyer static board evaluator sbe circle typically subtracts good computer good opponent circle board evaluation player opponent circle agree utility function calculated terminal nodes james skrentny notes dyer minimax algorithm sbe int minimax node int depth int limit vector vector isterminal depth limit base case return staticevaluation minimax successors save values hasmoresuccessors addelement minimax getnextsuccessor depth limit iscomputersturn return maxof computer move return max children return minof opponent move return min children james skrentny notes dyer minimax evaluation functions circle general minimax depth estimates sbe function circle algorithm perform chess ahead pairs moves ply consistently beaten average players ahead pairs typical good human master james skrentny notes dyer summary circle minimax search end game choosing move easy circle sbe isn perfect estimating scoring choose move searching circle feasible interesting games combine minimax sbe minimax depth sbe estimate score board configuration james skrentny notes dyer alpha-beta idea circle branches game tree won playing intelligent opponent circle pruning ignore branches circle track dfs game tree maximizing level alpha circle highest circle lower bound node evaluation score minimizing level beta circle lowest circle higher bound node evaluation score james skrentny notes dyer alpha-beta idea circle pruning occurs maximizing alpha parent beta stop expanding opponent won computer route minimizing beta parent alpha stop expanding computer shouldn route james skrentny notes dyer alpha-beta minimax max callstack james skrentny notes dyer alpha-beta minimax max callstack min james skrentny notes dyer alpha-beta minimax max callstack min max james skrentny notes dyer alpha-beta minimax max call stack min max blue terminal state james skrentny notes dyer alpha-beta minimax returned max callstack alpha maximum min max blue terminal state james skrentny notes dyer alpha-beta minimax max callstack min max blue terminal state min james skrentny notes dyer blue terminal state alpha-beta minimax max callstack min max depth limit min james skrentny notes dyer blue terminal state alpha-beta minimax returned max callstack beta minimum min max min james skrentny notes dyer blue terminal state alpha-beta minimax returned max callstack beta alpha stop expanding alpha cut-off min max min james skrentny notes dyer blue terminal state alpha-beta smart opponent choose worse upper bound computer shouldn choose max callstack min max min james skrentny notes dyer blue terminal state alpha-beta minimax returned max callstack min max fmin alpha changed maximizing james skrentny notes dyer blue terminal state alpha-beta minimax returned max callstack min max min beta minimum james skrentny notes dyer blue terminal state alpha-beta minimax max callstack min max min james skrentny notes dyer blue 
terminal state alpha-beta minimax returned max callstack min max min beta updated minimum james skrentny notes dyer blue terminal state alpha-beta minimax returned max callstack min max min alpha maximum james skrentny notes dyer blue terminal state alpha-beta minimax max callstack min max min james skrentny notes dyer blue terminal state alpha-beta minimax max callstack min max min james skrentny notes dyer blue terminal state alpha-beta minimax returned max callstack min max min beta minimum james skrentny notes dyer blue terminal state alpha-beta minimax max callstack min max min james skrentny notes dyer blue terminal state alpha-beta minimax returned max callstack min max min beta changed minimizing james skrentny notes dyer blue terminal state alpha-beta minimax max callstack min max min james skrentny notes dyer blue terminal state alpha-beta minimax max callstack min max min james skrentny notes dyer blue terminal state alpha-beta minimax returned max callstack min max min alpha james skrentny notes dyer blue terminal state alpha-beta minimax returned max callstack min max min alpha beta stop expanding beta cut-off james skrentny notes dyer blue terminal state alpha-beta max callstack min max min computer choose lower bound smart opponent won worse james skrentny notes dyer blue terminal state alpha-beta minimax returned max callstack min max min beta changed minimizing james skrentny notes dyer blue terminal state alpha-beta minimax returned max callstack min max min alpha updated maximum james skrentny notes dyer blue terminal state alpha-beta minimax max callstack min max min james skrentny notes dyer blue terminal state alpha-beta minimax returned max callstack min max min alpha updated maximizing james skrentny notes dyer blue terminal state alpha-beta algorithm finish search tree max callstack min max min james skrentny notes dyer blue terminal state alpha-beta beta alpha stop expanding alpha cut-off max callstack min max min james skrentny notes dyer blue terminal state alpha-beta max callstack min max min smart opponent choose worse upper bound computer shouldn choose path james skrentny notes dyer blue terminal state alpha-beta result computer chooses move max callstack min max min james skrentny notes dyer effectiveness alpha-beta search hexasterisk effectiveness depends order successors examined effective examined circle worst case ordered pruning takes place improvement exhaustive search circle case player move evaluated left-most circle practice performance closer worst case james skrentny notes dyer effectiveness alpha-beta search circle practice branching factor circle chess permits deeper search time makes computer chess competitive humans james skrentny notes dyer dealing limited time circle real games time limit making move circle account stop alpha-beta midway expect results confidence set conservative depth-limit guarantees find move time search finish early opportunity wasted search james skrentny notes dyer dealing limited time circle practice iterative deepening search ids run alpha-beta search increasing depth limit clock runs solution found completed alpha-beta search deepest search completed james skrentny notes dyer horizon effect circle disaster lurks search depth computer captures queen moves opponent checkmates wins circle computer limited horizon significant event happen circle avoid catastrophic losses due short-sightedness quiescence search secondary search james skrentny notes dyer horizon effect circle quiescence search evaluation frequently changing deeper limit point game quiets circle secondary search find move depth steps verify good doesn repeat step move james skrentny notes dyer book moves circle build database opening moves end games studied configurations circle current state database database determine move evaluate board circle alpha-beta search james skrentny notes dyer evaluation functions hexasterisk board evaluation function estimates good current board configuration computer heuristic function features board circle function features numeric characteristics circle feature number white pieces circle feature number black pieces circle feature circle feature estimate threat white king circle james skrentny notes dyer linear evaluation functions circle linear evaluation function features weighted sum features weights hexasterisk important features weight james skrentny notes dyer linear evaluation functions hexasterisk quality play depends directly quality evaluation function circle build evaluation function construct good features expert knowledge pick learn good weights james skrentny notes dyer learning weights linear evaluation function circle learn weights circle basic idea play lots games opponent move game error true outcome evaluation function error positive underestimating adjust weights increase evaluation function error error negative overestimating adjust weights decrease evaluation function james skrentny notes dyer examples algorithms learn play checkers samuel studies machine learning game checkers ibm journal research development circle learned playing copy thousands times circle ibm words ram magnetic tape clock speed khz circle successful compete human tournaments james skrentny notes dyer examples algorithms learn play backgammon tesauro sejnowski parallel network learns play backgammon artificial intelligence circle learns playing copies circle non-linear evaluation function neural network circle rated top players world james skrentny notes dyer non-deterministic games circle games involve chance roll dice spin game wheel deal cards shuffled deck circle handle games random elements circle game tree representation extended include chance nodes computer moves chance nodes opponent moves james skrentny notes dyer non-deterministic games game tree representation extended max chance min james skrentny notes dyer non-deterministic games circle weight score probabilities move occurs circle expected move sum random outcomes max chance min james skrentny notes dyer non-deterministic games circle choose move highest expected max chance min james skrentny notes dyer non-deterministic games circle non-determinism increases branching factor rolls dice circle lookahead diminishes depth increases probability reaching node decreases circle alpha-beta pruning effective circle tdgammon depthsearch good heuristic plays world champion level james skrentny notes dyer computers play grandmaster chess deep blue ibm circle parallel processor nodes circle node dedicated vlsi chess chips circle search million configurations circle minimax alpha-beta sophisticated heuristics circle search ply pairs moves circle avoid horizon searching deep ply circle book moves james skrentny notes dyer computers play grandmaster chess kasparov deep blue circle game full-regulation chess match sponsored acm circle kasparov lost match wins tie wins tie circle historic achievement computer chess time computer chess player planet circle note deep blue plays brute force raw power computer speed memory similar human intuition cleverness james skrentny notes dyer chess rating scale ratings garry kasparov current world champion deep blue deep thought james skrentny notes dyer status computers deterministic 
games circle checkers draughts current world champion chinook beat human beat tinsley alpha-beta search book moves billion circle othello computers easily beat world experts circle branching factor large million prize system beat world expert james skrentny notes dyer summary circle game playing modeled search problem circle search trees games represent alternate computer opponent moves circle evaluation functions estimate quality board configuration player good opponent good computer neutral james skrentny notes dyer summary circle minimax procedure chooses moves assuming opponent choose move circle alpha-beta pruning procedure eliminate large parts search tree enabling search deeper circle well-known games computer algorithms heuristic search match out-perform human world experts james skrentny notes dyer conclusion circle initially thought good area research circle brute force proven lot knowledge engineering high-speed hardware issues simplifying part enabled scaling hardware circle good test-bed computer learning circle machines don 
dyer skrentny speech recognition chapter dyer skrentny introduction speech dominant form communication humans humans machines speech recognition mapping acoustic signal string words speech understanding mapping meaning dyer skrentny introduction human languages limited set distinct sounds called phones bet boy bottom button phones characterized terms acoustic features frequency amplitude extracted sound waves dyer skrentny speech recognition architecture goal large vocabulary continuous speech words separated speaker-independent speech waveform spectral feature vectors likelihoods words feature extraction signal processing likelihood estimation gaussians neural networks decoding viterbi stack decoder neural net n-gram grammar hmm lexicon dyer skrentny speech recognition task signal processor match search analog speech discrete observations word sequence dyer skrentny introduction isn easy develop dictionary pronunciation coat kowt recognize speech wreck nice beach problems homophones fragments sound rec wreck segmentation determining breaks words nize speech nice beach signal processing problems dyer skrentny signal processing sound analog energy source resulting pressure waves striking eardrum microphone analog-to-digital converter record speech sounds sampling number times sound level measured quantization number bits precision sound level measurements telephone khz times speech recognizer khz bits sample minute takes bytes dyer skrentny signal processing wave encoding group msec frames larger blocks analyzed individually frames overlap ensure important acoustical events frame boundaries aren lost frames analyzed terms features amount energy frequencies total energy frame differences prior frame vector quantization encodes mapping frame regions n-dimensional feature space dyer skrentny input sequence vector quantization encodes successive region observation values aka labels input sequence dyer skrentny signal processing goal speaker independence representation sound independent speaker specific pitch volume speed aspects dialect speaker identification opposite specific details needed decide speaking significant problem dealing background noises speakers dyer skrentny speech recognition model bayes rule break problem manageable parts words signal words signal words signal signal normalizing constant words language model likelihood words heard recognize speech wreck nice beach signal words acoustic model likelihood signal words accounts differences pronunciation words nice likelihood pronounced nuys signal observation sequence words string words match metric probability bayes rule observation likelihood prior probability acoustic model language model maxarg owpw tooooo nwwwww maxarg maxarg wpwop wpwopw dyer skrentny language model hexasterisk words joint probability sequence words natural language joint probability expressed chain rule order reversed wnl collecting probabilities complex requires statistics mnstarting sequences sequence words language words simplification dyer skrentny language model first-order markov assumption probability word depends previous word wip wil simplifies wncalled bigram model relates consecutive pairs words dyer skrentny language model context words called trigram model difficult collect sufficient data accurate probabilities weighted sum unigram bigram trigram models combination wic wiwi- bigram trigram models account local context-sensitive effects bag tricks bottle tricks local grammar dyer skrentny language model probabilities obtained computing statistics frequency pairs words large training set word strings appears training data times clock times clock probabilities stored probability table probabilistic finite state machine dyer skrentny language model probabilistic finite state machine fully connected directed graph nodes states words start state arcs labeled probability start word prior probability destination word word probability destination word source word start tomato attack killer dyer skrentny language model probabilistic finite state machine fully connected directed graph joint probability estimated bigram model starting start multiplying probabilities arcs traversed sentence attack killer tomato attack attack killer tomato killer start tomato attack killer dyer skrentny acoustic model signal words conditional probability signal sequence words natural language divided probabilities phones word probability sequence phones word signal probability sequence vector quantization values acoustic signal dyer skrentny finding patterns speech general problem finding patterns time sequence deterministic patterns fixed sequence states state dependent solely previous state european stop light dyer skrentny non-deterministic patterns discrete set states model deterministically sequence predicting weather states sunny cloudy rainy arcs probability called state transition probability moving state nth-order markov assumption today weather predicted solely knowledge days weather st-order markov assumption today weather predicted solely knowledge yesterday weather dyer skrentny st-order markov model markov process process moves state state probabilistically based state transition matrix graph sum values row column st-order markov model weather prediction dyer skrentny st-order markov model initialize process state probability initial state time called vector day sunny simplicity assume single state start state dyer skrentny st-order markov model markov model consists discrete set states vector pii state transition matrix aij aij state transition matrix fixed times describes probabilities completely-connected graph states dyer skrentny markov model weather prediction today sunny probability days sunny rainy dyer skrentny weather prediction cont sun rain sun rain cloudy dyer skrentny acoustic model phones word markov model describing process series states tomato nodes correspond production sound slurring coarticulation typically quickly pronouncing word variation pronunciation words typically due dialects arcs probability transitioning current state dyer skrentny acoustic model phones word markov model describing process series states tomato phones word path diagram towmeytow tomato towmaatow tomato tahmeytow tomato tahmaatow tomato dyer skrentny acoustic model probabilities phonemes listen corpus starts sound possibilities sound probability sound possibilities sound time sound omitted probability transitioning sound circles represent things states observations real world state hidden sound don phoneme word knee phoneme word simplify word phoneme dyer skrentny problem don sequence phonemes observation sequence relate input sequence phoneme sequences dyer skrentny hidden markov models hmms states predict directly observable observations indirect evidence major direct access weather observe state piece corn dry dryish damp soggy speech recognition observe features changing sound direct evidence words spoken dyer skrentny hmms hidden states states real interest true weather sequence words spoken represented st-order markov model observable values discrete set observable values number observable values general equal number hidden states observable values related hidden states -tocorrespondence dyer skrentny hidden markov model dyer skrentny arcs probabilities hmms arcs connecting hidden states observable values represent probability generating observed markov process hidden state observation likelihood matrix aka confusion matrix output probability distribution stores probabilities arcs hidden states observable values obs hidden corn dyer skrentny hmm summary hmm types information hidden states observable values speech recognition vector quantization values input sequence hmm sets probabilities vector state transition matrix aij aij qtsj observation likelihood start end word model observation sequence hmm word model 
dyer skrentny acoustic model signal hmm model nodes probability distribution set vector quantization values arcs probability transitioning current state onset mid end final outputs dyer skrentny generating hmm observations choose initial state based choose output symbol probability distribution state transition state state transition probability distribution state aij dyer skrentny computation conditioning rule fixed state sequence allq dyer skrentny computation sequences calculations required computations dyer skrentny acoustic model signal hmm model signal path diagram variation speed pronunciation onset mid end final dyer skrentny combining models start tomato attack killer tomato onset mid end final create large hmm dyer skrentny evaluation scoring problem find probability observed sequence hmm hmms summer hmm winter hmm sequence corn observations hmm generated sequence speech recognition hmm word observation sequence spoken word compute recognize word identifying probable hmm bayes rule solve state estimation problems observation sequence state forward algorithm dyer skrentny decoding matching problem find probable sequence path hidden states observation sequence viterbi algorithm dyer skrentny learning training problem generate hmm sequence observations set hidden states learn probable hmm forward-backward algorithm expectationmaximization algorithm dyer skrentny evaluation problem forward algorithm observation sequence hmm model specific hidden state sequence bqt piq aqtqt piq aqoq aqtqt bqt hmm dyer skrentny compute bayesian likelihood incrementally state transitions hmm model otot oti bjt state previously state otl transition probability state state observation likelihood state label matches forward algorithm otot dyer skrentny forward algorithm multiple states leading state oti bjt sum probabilities otot dyer skrentny evaluation exhaustive search observation sequence dry damp soggy unroll state sequence trellis matrix dyer skrentny evaluation exhaustive search column trellis matrix shows state weather state column connected state adjacent columns sum probabilities sequence hidden states weather sequences dry damp soggy hmm dry damp soggy sunny sunny sunny dry damp soggy sunny sunny cloudy dry damp soggy rainy rainy rainy practical number paths number hidden states number observations dyer skrentny forward algorithm intuition idea compute cache values representing probability state observations cell expresses probability means probability tth state sequence states state compute summing extensions paths leading current cell extension path state time state computed multiplying previous path probability previous cell transition probability aij previous state current state iii observation likelihood bjt current state matches observation symbol dyer skrentny evaluation forward algorithm compute probability reaching intermediate state trellis observation sequence dry damp soggy compute cloudy hmm cloudy cloudy paths cloudy dyer skrentny forward algorithm cont sum paths trellis dyer skrentny forward algorithm cont compute recursively pij states aij computation time linear length sequence dyer skrentny decoding problem probable sequence hidden states state sequence maximizes similar forward algorithm max sum computing probability probable path state trellis dyer skrentny decoding viterbi algorithm state time compute recursively maximum probability sequences ending state time partial path state assumption dynamic programming invariant ultimate path includes state includes path including dyer skrentny viterbi algorithm variant forward algorithm considers words simultaneously computes path type dynamic programming algorithm input sequence observations hmm output probable state sequence probability works computing max previous paths sum sequence deciding final state back pointers recover path linear time linear space algorithm dyer skrentny viterbi algorithm intuition idea compute probability taking max extensions paths leading current cell trellis extension path state time state computed multiplying previous path probability previous cell transition probability aij previous state current state observation likelihood bjt current state matches observation symbol dyer skrentny summary viterbi algorithm hmm viterbi algorithm finds probable sequence hidden states sequence observed values exploits time invariance probabilities avoid examining path trellis sequence deciding final state back pointers recover path entire context make decision robust respect noise bad observation middle sequence dyer skrentny summary speech recognition systems work high snr low noise background sounds small vocabulary good language model pauses words trained specific speaker current systems vocabulary words single speaker vocabulary words multiple speakers accuracy depends task dyer skrentny error rates machine human telephone speech sentences read wsj transactional speech letters digits task machine human lippmann speech comm dyer skrentny hmms bet robot planning sensing uncertainty robot learning control spam deobfuscation mis-spelling words speech recognition understanding phones words signal phones human genome project complicated stuff lecturer consumer decision modeling economics finance things 
volumetric scene reconstruction volumetric scene reconstruction multiple views multiple views chuck dyer chuck dyer wisconsin wisconsin dyer dyer cscs wisc wisc cscs wiscwisc dyer dyer image image based scene reconstruction based scene reconstruction goal goal automatic construction photoautomatic construction photo realistic models realistic models scene multiple images set arbitrary scene multiple images set arbitrary viewpointsviewpoints imageimage based modeling photographybased modeling photography applications applications interactive visualization remote environments objects interactive visualization remote environments objects virtual video camera flybys mission rehearsal virtual video camera flybys mission rehearsal planning site analysis treaty monitoringplanning site analysis treaty monitoring virtual modification real scene augmented reality virtual modification real scene augmented reality taskstasks general approaches general approaches world representation world representation world centeredworld centered recover complete geometric recover complete geometric possibly photometric model scene possibly photometric model scene operationsoperations feature correspondence tracking feature correspondence tracking calibration structure motion model fitting calibration structure motion model fitting plenoptic plenoptic function representation function representation camera centeredcamera centered integration images integration images sample scene geometrysample scene geometry panoramas light fields panoramas light fields ldisldis operationsoperations image segmentation registration image segmentation registration warping warping compositingcompositing interpolation interpolation light fields light fields range viewpoints represented set range viewpoints represented set images images levoy hanrahan standard approach multiple view stereo standard approach multiple view stereo fitzgibbon zisserman weaknesses standard approach weaknesses standard approach views close order obtain point views close order obtain point point correspondences tracked point correspondences tracked consecutive framesconsecutive frames partial models fusedmany partial models fused fit parameterized surface model point featuresmust fit parameterized surface model point features explicit handling occlusion differences explicit handling occlusion differences viewsviews approach volumetric scene modeling approach volumetric scene modeling scene volume input images calibrated goal goal determine transparency radiance points vdetermine transparency radiance points scene reconstruction multiple views scene reconstruction multiple views input imagesinput images reconstruction reconstruction camera camera calibrationcalibration discrete formulation discrete formulation voxel voxel spacespace discretized scene volume input images calibrated goal goal assign rgba values voxels areassign rgba values voxels photophoto consistentconsistent input imageswith input images voxels colors discretized scene volume space colorings space colorings space photo space photo consistent colorings computable consistent colorings computable true scene computable true scene computable complexity computability complexity computability shape silhouettes shape silhouettes volume intersection volume intersection martin aggarwal shape photo shape photo consistency consistency voxelvoxel coloring coloring seitz dyer space carving space carving kutulakos seitz voxel voxel based scene reconstruction methods based scene reconstruction methods reconstruction silhouettes reconstruction silhouettes binary images approach approach backprojectbackproject silhouetteeach silhouette intersect backprojected generalizedintersect backprojected generalized cone volumescone volumes volume intersection volume intersection reconstruction true scenereconstruction true scene case infinite views case infinite views visual hullvisual hull complement lines don intersect complement lines don intersect convex hull convex hull convex hull convex hull hyperbolic regionshyperbolic regions shape silhouettes shape silhouettes reconstruction object concavities points reconstruction object concavities points visible visible voxel voxel algorithm volume intersection algorithm volume intersection colorcolor voxelvoxel black silhouette image black silhouette image mno time images time images voxelsvoxels don search don search scenespossible scenes image image based visual hulls based visual hulls matusik cmu cmu virtualized reality system virtualized reality system shape silhouettes shape silhouettes surface model constructed marching cubes algorithm virtual camera fly virtual camera fly byby texture mapped sound synthesized sources properties volume intersection properties volume intersection prospros easy implementeasy implement accelerated accelerated octreesoctrees cons cons concavities reconstructedconcavities reconstructed reconstruction photometric properties reconstruction photometric properties imagein image requires image segmentation extract silhouettesrequires image segmentation extract silhouettes shape silhouettes shape silhouettes volume intersection volume intersection martin aggarwal shape photo shape photo consistency consistency voxelvoxel coloring coloring seitz dyer space carving space carving kutulakos seitz voxel voxel based scene reconstruction methods based scene reconstruction methods choose voxel project correlate color photo-consistent voxel coloring approach voxel coloring approach visibility problem visibility problem images voxel visible images voxel visible global visibility problem global visibility problem inverse visibility inverse visibility imagesknown images unknown scene points visible images points visible images scene forward visibility forward visibility sceneknown scene layers depth ordering visit depth ordering visit occluders occluders firstfirst scene traversal condition condition depth order depth order viewview independentindependent viewview independent independent depth order depth order function function scene camera space scene camera space distance separating plane distance separating plane plane sweepplane sweep order order collins occludes occludes ifonly scene line cameras scene line cameras arrange cameras simplify occlusion relationships arrange cameras simplify occlusion relationships depth depth order traversal order traversal voxels voxels determines visibility determines visibility panoramic depth ordering panoramic depth ordering cameras oriented directions cameras oriented directions planar depth ordering apply planar depth ordering apply panoramic depth ordering panoramic depth ordering layers radiate outwards cameras layers radiate outwards cameras panoramic layering panoramic layering layers radiate outwards cameras layers radiate outwards cameras panoramic layering panoramic layering layers radiate outwards cameras layers radiate outwards cameras compatible camera configurations compatible camera configurations depth depth order constraint order constraint scene convex hull camera centersscene convex hull camera centers outward outward cameras inside scenecameras inside scene cameras scenecameras scene calibrated image acquisition calibrated image acquisition calibrated turntable calibrated turntable rotation images rotation images selected dinosaur imagesselected dinosaur images selected flower imagesselected flower images layered scene traversal layered scene traversal results dinosaur results dinosaur voxels voxels voxels input images spanning rotation results rose results rose input images synthesized views results results dinosaur reconstruction input images voxels colored voxels tested flower reconstruction input images voxels colored voxels tested scaling scaling voxel voxel coloring coloring time complexity time complexity voxels voxels images images voxels voxels large high large high resolution scenes resolution scenes enhancements enhancements texture mappingtexture mapping hardware project images hardware project images layer ofeach layer voxelsvoxels variable variable voxelvoxel resolutionresolution octreesoctrees coarsecoarse toto fine processingfine processing volumetric warpingvolumetric warping warp warp voxel voxel space extend anspace extend infinite domaininfinite domain coarsecoarse toto fine fine voxel voxel coloring coloring octrees octrees determine colored determine colored voxels voxels current level current level spatial coherence spatial coherence add neighboring add neighboring voxels voxels decompose colored decompose colored voxels voxels octants repeat octants repeat volumetric warping volumetric warping slabaugh 
slabaugh malzbender malzbender culbertson culbertson results results voxel voxel coloring dynamic scenes coloring dynamic scenes goal interactive real time fly dynamic scene video sequences multiple cameras dynamic dynamic voxel voxel coloring input views coloring input views reconstruction time instant reconstruction time instant sequence reconstructions sequence reconstructions voxel voxel coloring dynamic scenes coloring dynamic scenes coarse coarse fine recursive decomposition focuses fine recursive decomposition focuses regions interest regions interest exploit temporal coherence exploit temporal coherence coloring time coloring time initialize lowest resolution initialize lowest resolution voxelsvoxels time time trace rays changed pixels onlytrace rays changed pixels limitations depth ordering limitations depth ordering view view independent depth order exist independent depth order exist general algorithm general algorithm unconstrained camera positionsunconstrained camera positions unconstrained scene geometry topologyunconstrained scene geometry topology shape silhouettes shape silhouettes volume intersection volume intersection martin aggarwal shape photo shape photo consistency consistency voxelvoxel coloring coloring seitz dyer space carving space carving kutulakos seitz voxel voxel based scene reconstruction methods based scene reconstruction methods space carving algorithm space carving algorithm step step initialize volume true scene initialize volume true scene voxelsvoxels marked marked opaqueopaque step step voxelvoxel surface von surface test test photophoto consistencyconsistency voxel voxel cameras cameras front itare front voxelvoxel inconsistent inconsistent carvecarve mark mark transparenttransparent step step repeat step repeat step voxels voxels consistentconsistent visibility property visibility property consistent consistent consistent consistent inconsistent inconsistent inconsistent inconsistent property ensures carving converges property ensures carving converges space carving convergence space carving convergence guaranteed convergence guaranteed convergence photo hullphoto hull union photounion photo consistent scenesconsistent scenes worst case worst case consistency checks consistency checks cameras cameras voxelsvoxels true scene reconstruction space carving algorithm space carving algorithm optimal algorithm unwieldy optimal algorithm unwieldy complex visibility update procedurecomplex visibility update procedure alternative multi alternative multi pass plane sweep algorithm pass plane sweep algorithm efficient textureefficient texture mapping hardwaremapping hardware converges quickly practiceconverges quickly practice easy implementeasy implement multi multi pass plane sweep pass plane sweep sweep plane principle directionssweep plane principle directions cameras side planeconsider cameras side plane repeat convergencerepeat convergence true scene reconstruction multi multi pass plane sweep pass plane sweep sweep plane principle directionssweep plane principle directions cameras side planeconsider cameras side plane repeat convergencerepeat convergence multi multi pass plane sweep pass plane sweep sweep plane principle directionssweep plane principle directions cameras side planeconsider cameras side plane repeat convergencerepeat convergence multi multi pass plane sweep pass plane sweep sweep plane principle directionssweep plane principle directions cameras side planeconsider cameras side plane repeat convergencerepeat convergence multi multi pass plane sweep pass plane sweep sweep plane principle directionssweep plane principle directions cameras side planeconsider cameras side plane repeat convergencerepeat convergence multi multi pass plane sweep pass plane sweep sweep plane principle directionssweep plane principle directions cameras side planeconsider cameras side plane repeat convergencerepeat convergence multi multi pass plane sweep pass plane sweep sweep plane principle directionssweep plane principle directions cameras side planeconsider cameras side plane repeat convergencerepeat convergence multi multi pass plane sweep pass plane sweep sweep plane principle directionssweep plane principle directions cameras side planeconsider cameras side plane repeat convergencerepeat convergence multi multi pass plane sweep pass plane sweep sweep plane principle directionssweep plane principle directions cameras side planeconsider cameras side plane repeat convergencerepeat convergence multi multi pass plane sweep pass plane sweep sweep plane principle directionssweep plane principle directions cameras side planeconsider cameras side plane repeat convergencerepeat convergence multi multi pass plane sweep pass plane sweep sweep plane principle directionssweep plane principle directions cameras side planeconsider cameras side plane repeat convergencerepeat convergence multi multi pass plane sweep pass plane sweep sweep plane principle directionssweep plane principle directions cameras side planeconsider cameras side plane repeat convergencerepeat convergence multi multi pass plane sweep pass plane sweep sweep plane principle directionssweep plane principle directions cameras side planeconsider cameras side plane repeat convergencerepeat convergence multi multi pass plane sweep pass plane sweep sweep plane principle directionssweep plane principle directions cameras side planeconsider cameras side plane repeat convergencerepeat convergence multi multi pass plane sweep pass plane sweep sweep plane principle directionssweep plane principle directions cameras side planeconsider cameras side plane repeat convergencerepeat convergence multi multi pass plane sweep pass plane sweep sweep plane principle directionssweep plane principle directions cameras side planeconsider cameras side plane repeat convergencerepeat convergence multi multi pass plane sweep pass plane sweep sweep plane principle directionssweep plane principle directions cameras side planeconsider cameras side plane repeat convergencerepeat convergence multi multi pass plane sweep pass plane sweep sweep plane principle directionssweep plane principle directions cameras side planeconsider cameras side plane repeat convergencerepeat convergence multi multi pass plane sweep pass plane sweep sweep plane principle directionssweep plane principle directions cameras side planeconsider cameras side plane repeat convergencerepeat convergence multi multi pass plane sweep pass plane sweep sweep plane principle directionssweep plane principle directions cameras side planeconsider cameras side plane repeat convergencerepeat convergence multi multi pass plane sweep pass plane sweep sweep plane principle directionssweep plane principle directions cameras side planeconsider cameras side plane repeat convergencerepeat convergence multi multi pass plane sweep pass plane sweep sweep plane principle directionssweep plane principle directions cameras side planeconsider cameras side plane repeat convergencerepeat convergence results african violet results african violet input image reconstruction results hand results hand input image views reconstruction texture effects texture effects voxel voxel coloring coloring effects noise effects noise effects effects voxel voxel resolution resolution voxel size voxel size voxel size voxel size voxel size voxel size voxel size extensions extensions dealing calibration errorsdealing calibration errors kutulakoskutulakos construct approximate photo hull defined weakening construct approximate photo hull defined weakening definition photodefinition photo consistency requires consistency requires exists photothere exists photo consistent pixel distance consistent pixel distance ideal positionideal position partly transparent scenespartly transparent scenes dede bonetbonet viola viola compute compute voxel voxel probability visible probability visible degree opacity degree opacity optimization algorithm finds linear combination optimization algorithm finds linear combination colors opacities colors opacities voxels voxels visual ray visual ray minimize error input image colorsminimize error input image colors marble wastes statue grows michelangelomichelangelo prospros nonnon parametricparametric model arbitrary geometry topologycan model arbitrary geometry 
topology camera positions unconstrainedcamera positions unconstrained guaranteed convergenceguaranteed convergence conscons expensive process high resolution expensive process high resolution voxelvoxel gridsgrids carving stops carving stops firstfirst consistent consistent voxelvoxel bestbest assumes simple surface reflectance model assumes simple surface reflectance model lambertianlambertian steve seitz andrew steve seitz andrew prockprock kyros kutulakoskyros kutulakos voxel voxel coloring space carving summary coloring space carving summary current work current work brdf estimation multiple views brdf estimation multiple views modeling geometry modeling geometry simultaneously recover surface reflectance simultaneously recover surface reflectance modelsmodels widewide baseline feature point correspondence baseline feature point correspondence calibration multiple moving objects calibration multiple moving objects metric metric calibration static scenes calibration static scenes 
projective mappings image warping paul heckbert rendering sept excerpted pages fundamentals texture mapping image warping paul heckbert master thesis ucb csd division berkeley june url http cmu homogeneous notation homogeneous representation points consistent notation affine projective mappings homogeneous notation projective geometry maxwell coxeter long introduction computer graphics roberts homogeneous notation misunderstood moment clarify properties familiar euclidean geometry represent points real plane vectors form projective geometry deals projective plane superset real plane homogeneous coordinates projective geometry real point represented homogeneous vectora wherea arbitrary nonzero number vectors form form equivalence class homogeneous representations real point recover actual coordinates homogeneous vector simply divide homogeneous component homogeneous vector represents actual point division projection thea plane cancels effect scalar multiplication bya representing real points homogeneous notation nonzeroa convenient choosea real coordinates recovered division projective space includes points infinity vectors forma excludinga points infinity lie line infinity augmentation real plane points simplifies projective geometry homogeneous notation points represented -vectors points represented -vectors affine projective mappings denote points source space points destination space bya projective mappings projective mapping perspective homogeneous transformation projection plane point plane maxwell homogeneous transformations extensively affine modeling transformations perspective camera transformations foley-van dam projective mappings studied subset familiar homogeneous transformations rendering sept general form projective mapping rational linear mapping manipulation projective mappings easier homogeneous matrix notation wherea fora anda fora coefficients matrix mappings homogeneous nonzero scalar multiple matrices equivalent mapping degrees freedom projective mapping assume loss generality special case source point maps point infinity projective mapping affine projective mappings general map line infinity line real plane line horizon line vanishing points analogy perspective projection affine mappings special case projective mappings map line infinity defining projective mapping projective plane real plane projective mappings bijections one-to-one mapping matrix singular nondegenerate mappings forward inverse transforms single-valued affine mapping projective mappings share desirable properties affine mappings unlike bilinear mappings preserve equispaced points lines projective mappings general preserve equispaced points preserve quantity called cross ratio points coxeter affine mappings projective mappings preserve lines orientations fact projective mappings general line-preserving bijective mappings projective mappings composed concatenating matrices remarkable property inverse projective mapping projective mapping intuitively explained reversing plane-to-plane mapping projective mapping defined matrix inverse mapping inverse adjoint forward mapping adjoint matrix transpose matrix cofactors strang homogeneous algebra adjoint matrix place inverse matrix inverse transform needed scalar multiples adjoint exists inverse matrix singular inverse transformation note document row vector post-multiplication convention transformations graphics textbooks column vector pre-multiplication convention transpose change conventions rendering sept mapping point inverse transform computea froma ifa anda choosea calculate inferring projective mappings interactive image warper corners source destination quadrilaterals tablet mouse warp area sort task ideal application projective mappings find mapping matrix projective mapping degrees freedom determined source destination coordinates corners quadrilateral correspondence mapa vertices numbered cyclically coordinates assumed real finite compute forward mapping matrix assuming equations unknowns rewritten system linear system solved gaussian elimination forward mapping coefficients inverse mapping desired compute adjoint follow procedure starting equation solve system coefficients speed-critical special cases efficient formulas computing mapping matrix formula handles case polygon general quadrilateral source destination spaces additional cases square-to-quadrilateral quadrilateral-to-square general mapping case system easily solved symbolically special case thea quadrilateral unit square vertex correspondence rendering sept case case case figure quadrilateral quadrilateral mapping composition simpler mappings equations reduce define solution splits sub-cases implies thea polygon parallelogram mapping affine projective mapping rendering sept computation faster straightforward system solver mapping easily generalized map rectangle quadrilateral pre-multiplying scale translation matrix case inverse mapping quadrilateral square optimized turns efficient algorithm computing purely symbolic previous case numerical square-to-quadrilateral formulas find inverse desired mapping adjoint compute quadrilateral-to-square mapping case compute quadrilateral-to-square square-to-quadrilateral mappings quickly mappings easily composed yield general mapping figure solution method faster general system solver coxeter coxeter non-euclidean geometry toronto press foley-van dam james foley andries van dam fundamentals interactive computer graphics addison-wesley reading maxwell maxwell methods plane projective geometry based general homogeneous coordinates cambridge press london roberts lawrence roberts homogeneous matrix representation manipulation n-dimensional constructs mslincoln lab lexington july strang gilbert strang linear algebra applications academic press york 
feature located world pointx epipolar plane epipole baseline left epipolar line epipolar line left epipole ray epipolar lines corner features left image image epipolar lines left image corner features image infinitye infinitye left image epipolar lines left image corner features image epipolar lines image corner features hypothesis hypothesis hypothesis imageleft image constraint left image image violates uniqueness constraint imageleft image satisfies ordering constraint left image image violates ordering imageleft image forbidden zone left image image point epipolar line matches left image match point image point exceed disparity gradient limit point imageleft image line epipolar epipolar image line left image point search band line epipolar line epipolar imageleft image slope scene world eye red image green image parallel cameras red filter green filter left eye raw images epipolar lines horizontal rectified images epipolar lines horizontal fused superimposed red green viewed filtered glasses left image pair detected corners projective structuremetric structure triangulate fully calibrated cameras compute work rays fully calibrated cameras work pixels compute correspondences unknown intrinsic parameters intrinsic parameters metric structure triangulate recover rays decompose calculate left left match corners epipolar constraintsmatch corners epipolar constraints 
ieee computer graphics applications ieee vol march video mosaics virtual environments richard szeliski microsoft corporation panning camera scene automatically compositing video frames system creates large panoramic images arbitrary shape detail depth recovery motion parallax enables limited rendering photographic imagery part computer graphics creation process established popular technique imagery variety ways including manipulation compositing photographs inside video paint systems texture mapping photographs graphical models achieve photorealism laborious merge computer graphics seamlessly video imagery produce dramatic special effects computer-based video ubiquitous expansion transmission storage manipulation capabilities offer rich source imagery computer graphics applications article video source high-resolution photorealistic imagery applications current broadcast-standard forms video low-resolution medium compares poorly computer displays scanned imagery suffers input imaging devices limited field view walked environment building interior filmed video sequence subsequently register composite video images large mosaics scene achieve essentially unlimited resolution acquire images optical technology microscopy hand-held videocams satellite photography reconstruct scene range scale video mosaics applications including creation virtual reality environments computer-game settings movie special effects applications commonly environment map -degree spherical image environment serve backdrop correctly generate reflections shiny objects article present algorithms align images composite scenes increasing complexity beginning simple planar scenes progressing panoramic scenes finally scenes depth variation begin review basic imaging equations conclude applications virtual environments created algorithms presented basic imaging equations techniques developed based ability align pieces scene tiles larger picture scene mosaic seamlessly blend images ways resembles current image morphing techniques combination image warping image blending automatically construpt virtual environments automatically derive alignment warping transformations directly images relying manual intervention proceeding geometric transformations relate images mosaic homogeneous coordinates represent points denote points image plane cartesian coordinates similarly points homogeneous coordinates cartesian coordinates homogeneous coordinates describe class planar projective transformations matrix multiplication simplest transformations general class pure translations translations rotations rigid transformations scaling similarity transformations affine transformations full projective transformations figure shows square rigid affine projective deformations forms rigid affine transformation matrix degrees freedom projective transformations general matrix degrees freedom note matrices equivalent scalar multiples remove redundancy setting figure square rigid affine projective transformations hierarchy transformations exists rigid similarity affine full projective transformations degrees freedom matrices case interest rigid euclidean transformation orthonormal rotation matrix translation vector viewing matrix projects points origin projection plane distance axis note general camera model upper triangular matrix account aspect ratio offset optical center skew real camera optical distortions follow pinhole model combined equations projecting world coordinate screen location written camera matrix equation valid camera calibration parameters camera orientation unknown planar image mosaics simplest set images mosaic views planar scene document whiteboard flat desktop imagine camera fixed directly desk slide document camera portions document visible pieces related translation rotation rigid transformation imagine scanning whiteboard hand-held video camera move position class transformations relating pieces board case full family projective transformations imagine square grid image transformations computed knowledge internal camera calibration parameters focal length optical center relative camera motion frames fact projective transformations capture mappings ideal pinhole camera basic result projective geometry sidebar knowledge compute transformations relating scene pieces paste variety techniques automated manually identify points views information solve unknowns projective transformation iteratively adjust relative positions input images blink comparator alternating images high rate transparency kinds manual approaches tedious large compositing applications local image registration approach directly minimizes discrepancy intensities pairs images applying recovered transformation advantages requiring easily identifiable feature points statistically optimal giving maximum likelihood estimate vicinity true solution rewrite transformations technique minimizes sum squared intensity errors pairs pixels inside images pixels mapped image boundaries contribute generally fall integer pixel coordinates bilinear interpolation intensities perform resampling perform minimization levenberg-marquardt iterative nonlinear minimization algorithm algorithm requires computation partial derivatives respect unknown motion parameters straightforward compute denominator equation image intensity gradient partial derivatives levenberg-marquardt algorithm computes approximate hessian matrix weighted gradient vector components updates motion parameter estimate amount time-varying stabilization parameter advantage levenberg-marquardt straightforward gradient descent converges fewer iterations complete registration algorithm consists steps pixel location compute position image equation compute error intensity pixels equation intensity gradient bilinear intensity interpolation compute partial derivative respect equation add pixel contribution equation solve system equations update motion estimate check error equation decreased increment press compute continue iterating error threshold fixed number steps completed steps algorithm similar operations performed warping images additional operations correcting current warping parameters based local intensity error gradients details exact implementation szeliski coughlan found transformation blend resampled image image reduce visible artifacts hide edges component images weighted average pixels center image contributing final composite weighting function simple bilinear function triangle hat function edges image practice approach completely eliminates edge artifacts figure low-frequency mottling remain individual tiles exposures figure whiteboard image mosaic mosaic component locations shown colored outlines complete color mosaic central square shows size input tile global image registration gradient descent levenberg-marquardt find locally optimal solutions motion successive frames large strategy find registration techniques handle problem technique commonly computer vision hierarchical matching registers smaller subsampled versions images apparent motion smaller motion estimates smaller coarser levels initialize motion estimates finer levels avoiding local minimum problem szeliski coughlan details technique guaranteed find correct registration proved empirically work initial misregistration pixels exact domain convergence depends intensity pattern image larger displacements phase correlation technique estimates translation pair images taking fourier transforms image computing phase difference frequency performing inverse fourier transform searching peak magnitude image found technique work remarkably experiments providing good initial guesses image pairs overlap percent moderate projective distortions occur wide-angle lenses technique work interframe motion large rotations zooms occur practice results demonstrate performance algorithm developed digitized image sequence camera panning whiteboard figure shows final mosaic whiteboard constituent images outlined color figure shows final mosaic location single image shown white outline mosaic pixels based compositing ntsc resolution images compute mosaic developed interactive image-manipulation tool lets user coarsely position successive frames relative tool includes automatic registration option phase correlation compute initial rough placement image respect previous algorithm refines location image minimizing equation current mosaic input frame adjusted images figure automatically composited user intervention employing middle frame center image base image deformation technique works panoramic image mosaics build panoramic image mosaic environment map rotate camera optical center resembles action panoramic photographic cameras rotation 
camera tripod mechanically coordinated film transport case mosaic multiple images arbitrary detail resolution camera motion examples applications include constructing true scenic panoramas view rim bryce canyon limited virtual environments recreated meeting room office location images viewpoint stationary optical center related projective transformations planar scene case sidebar presents quick proof motion parallax relative depth points scene rotate images located plane formally transformation denoted related viewing matrices inter-view rotation sidebar calibrated camera recover independent rotation parameters parameters focal length values unknown usual represent panoramic scene composited techniques approach divide viewing sphere large potentially overlapping regions represent region plane paste images figure shows mosaic bookshelf cluttered desk composited single plane highlighted central square forms base relative images registered images obtained tilting panning video camera mounted tripod taking special steps ensure rotation true center projection complete scene registered figure panoramic image mosaic bookshelf cluttered desk images pasted planar viewing surface approach compute relative position frame relative base frame periodically choose base frame alignment note algebraic properties projective transformation group associativity matrix multiplication make compute transformation frames represent arbitrary views including -degree rotations requires replacing condition equation recompute arbitrary view fly visible pieces view direction zoom factor approach composite large wide-angle mosaic bryce canyon shown figure figure portion bryce canyon mosaic large motions involved single plane represent mosaic tiles selected base images approach cylindrical viewing surface represent image mosaic approach map world coordinates cylindrical screen locations figure shows complete circular panorama office unrolled cylindrical surface build panorama image mapped cylindrical coordinates focal length assuming camera horizontal complete sequence registered composited pure translations focal length camera recovered images registered planar viewing surface figure shows similar panorama banks charles river cambridge figure circular panoramic image mosaic office interior total images pasted cylindrical viewing surface figure circular panoramic image mosaic exterior scene total images pasted cylindrical viewing surface addition constructing large single-resolution mosaics build mosaics spatially varying amounts resolution zoom areas interest modifications algorithm straightforward affect image-blending portion images added varying resolutions image registered base image close size image create composite mosaic generalization pyramidal parametrics texture mapping projective depth recovery mosaics flat panoramic scenes virtual reality office applications scanning whiteboards viewing outdoor panoramas applications depth scene give illusion depth recovered nearby views generated view interpolation approaches model scene piecewise-planar recover dense depth maps approach assumes scene piecewise-planar case constructed environments building exteriors office interiors mosaicing technique developed planar images applied planar regions image segmentation image planar components interactively drawing polygonal outline region registered automatically associating pixel global motion hypotheses independent planar pieces composited principle recover relative geometry planes camera motion pursuing approach develop general solution recover full depth map infer missing component pixel image sequence camera motion problem depth map recovery called stereo reconstruction multiframe stereo views problem extensively studied photogrammetry computer vision camera motion unknown difficult structure-from-motion problem section presents solution problem based recovering projective depth solution simple robust fits methods developed article formulation formulate projective structure-from-motion recovery problem note coordinates pixel projective depth frame written defined equations computed planar projective motion matrix epipole center projection appears camera equation sidebar recover parameters frame depth values frames levenberg-marquardt algorithm projective depth values recovered directly viewpoint interpolation matrices converted true euclidean depth depth measurements detail write projection equation compute partial derivatives respect concatenate motion vector equation similarly compute partials respect denominator equation estimate unknown parameters alternate iterations levenberg-marquardt algorithm motion parameters depth parameters partial derivatives defined compute approximate hessian matrices weighted error vectors equation current implementation technique total number parameters estimated decreased tensor-product spline represent depth map recovering depth estimates spline control vertices complete depth map computed interpolation results figure shows projective depth recovery algorithm image sequence moving camera table stacks papers figure resulting depth map shown figure intensity-coded range values figure shows original color image texture mapped surface side viewpoint part original sequence view extrapolation figure shows set grid lines overlaid recovered surface judge shape shape recovered areas sufficient texture give depth cues uniform intensity areas give extrapolated views reasonable figure depth recovery table stacks papers input image intensity-coded depth map dark farther back texture-mapped surface viewpoint gridded surface figure shows results sequence outdoor scene trees geometry scene recovered depth map figure figure depth recovery outdoor scene trees input image intensity-coded depth map dark farther back applications automated techniques building scenes video sequences models section describes potential applications video mosaics including whiteboard document scanning environment backdrop acquisition special effects video games supermarket shopping home interactive walkthroughs historical buildings live telepresence applications straightforward application image mosaics scanning whiteboards blackboards aid videoconferencing easy capture ideas scanning produce images greater resolution single wide-angle lens shots techniques developed article video camera attached computer specialized situations classrooms computer-controlled camera scanning removing automatic registration images general combinations image mosaicing superresolution produce photographic stills extremely high resolution document scanning obvious application technology hand-held scanners perform function based linear ccds subject skewing problems strip scanned image corrected manually video images input removes problems final global skew needed make document square performed automatically detecting document edges internal horizontal vertical edges column borders ability mosaic video frames real time opens additional possibilities camera paintbrush generate large composite scenes interactively combination mosaics live video streams produces interesting effects newest frames live older frames areas composite image frozen time potential mass-market application home shopping access complete stores local supermarket advantage familiar organization lets plan shopping trip images aisles current contents digitized rolling video camera store detailed geometric models individual items acquired video-based model-building process future models directly manufacturer shopper stroll aisles pick individual items ingredients prices panoramic mosaics environment maps enhance special effects movies computing illumination maps reflections filling backgrounds panoramas serve backdrops video games collection panoramas limited form virtual reality showing views inside rooms museum historic building museum scenario include ability individual objects sculptures bring related information hypertext system building true models buildings piecewise-planar representations opens possibilities interactive walkthroughs home built walking video camera rooms processing image sequences selling house extension existing still-image based systems remodeling renovations building complete models room interiors including furniture requires true model reconstruction techniques szeliski recent results create walkor fly-throughs general outdoor scenes applications 
include flight driving simulators virtual travel teletourism scene models extremely high complexity require solutions problems representing images employing partial models switching levels resolution ultimate virtual reality systems dynamic virtual reality called telepresence composites video multiple sources real time create illusion dynamic reactive environment application view version concert sporting event control camera shots event player point view examples participate consult surgery remote location telemedicine participate remotely virtual classroom building dynamic models frame rates processing power today high-performance superscalar workstations achieved collection machines special-purpose stereo hardware discussion video mosaics provide powerful creating detailed environments needed virtual reality applications quickly registering multiple images create scenes extremely high resolution simultaneously recover partial geometric information approach direct minimization intensity differences warped images number advantages traditional techniques based tracking features frame frame techniques produce dense estimates shape work highly textured areas features reliably observed make statistically optimal information addition depth map recovery algorithm section projective depth recovery makes perform view interpolation directly real-world scenes synthetically generated graphics techniques article worked scenes remain cautious general applicability intensity-based techniques sensitive image intensity variation caused video camera gain control vignetting darkening corners wide lens apertures working band-pass filtered images proper image blending remove problems registration techniques sensitive geometric distortions deviations pinhole model optics careful calibration optimal accuracy results reported obtained uncalibrated cameras potential sources error include limited depth field imperfect alignment rotational axes panoramic scene compositing depth extraction techniques rely presence texture image areas sufficient texture registration matching algorithm compute erroneous depth estimates due repetitive texture patterns occlusions texture absent interpolation lead erroneous depth estimates conclusion techniques presented automatically register video frames partial scene models realistic virtual environments require object models environment maps automatic construction models directly video subject ongoing investigations creation realistic high-resolution scenes video imagery opens applications ultimately processing speeds reconstruction algorithms improve video mosaics related techniques enable exciting range interactive computer graphics telepresence virtual reality applications greene environment mapping applications world projections ieee vol nov beier neely feature-based image metamorphosis computer graphics proc siggraph vol july wolberg digital image warping ieee computer society press los alamitos calif foley computer graphics principles practice edition addison-wesley reading mass press numerical recipes art scientific computing edition cambridge univ press cambridge england szeliski coughlan hierarchical spline-based image registration proc ieee computer soc conf computer vision pattern recognition cvpr ieee press los alamitos calif kuglin hines phase correlation image alignment method ieee conf cybernetics society ieee york malde panoramic photographs american scientist vol mar -apr mann picard virtual bellows constructing high-quality images video proc int conf image processing vol ieee press los alamitos calif szeliski image mosaicing tele-reality applications proc ieee workshop applications computer vision ieee press los alamitos calif chen quicktime image-based approach virtual environment navigation proc siggraph acm york mcmillan bishop plenptic modeling image-based rendering system proc siggraph acm york williams pyramidal parametrics computer graphics proc siggraph vol july chen williams view interpolation image synthesis proc siggraph acm york faugeras three-dimensional computer vision geometric viewpoint mit press cambridge mass teodosio bender panoramic overview navigating real-world scenes proc acm multimedia acm press york richard szeliski senior researcher advanced technology research division microsoft corporation research interests include computer vision motion estimation virtual environments received beng electrical engineering mcgill montreal meng electrical engineering british columbia vancouver phd computer science carnegie mellon pittsburgh szeliski author bayesian modeling uncertainty low-level vision kluwer member acm ieee sigma associate editor ieee transactions pattern analysis machine intelligence projective transformations planar scene views related projective transformations true general case d-tod mapping world coordinate screen location camera matrix defined equation rank pseudoinvrse null space equation plane world coordinates written iii conclude viewpoint planar projective transformation absence prior information camera location assume world coordinate system coincides camera position equations image point corresponds world coordinate form vii unknown fourth coordinate called projective depth determines point origin panoramic image mosaics rotate point camera optical center obtain viii screen coordinate mapping screen coordinate systems projective transformation projective depth recovery image point corresponds point unknown projective depth equation vii frame relative orientation frame denoted motion frames familiar planar projective motion amount motion proportional projective depth direction called epipole 

estrada jepson fleet local features tutorial nov local features tutorial matlab sift tutorial webpage lowe david distinctive image features scale invariant features international journal computer vision vol local features tutorial estrada jepson fleet local features tutorial previous week view based models object recognition problem build model captures general properties eye appearance identify eyes approach general depend object class generalized model eye appearance based pca images pose normalized contrast demonstrated classi cation key property model instances eyes local features tutorial estrada jepson fleet local features tutorial today local features object recognition problem obtain representation object encountered paco mug opposed mug local features based appearance object interest points features invariant illumination ideally scaling rotation minor viewing direction addition local features matching tracking scene reconstruction local features tutorial estrada jepson fleet local features tutorial key properties good local feature highly distinctive good feature correct object identi cation low probability mismatch question identify image locations distinctive easy extract invariance good local feature tolerant image noise illumination uniform scaling rotation minor viewing direction question construct local feature achieve invariance easy match large database local features local features tutorial estrada jepson fleet sift features scale invariant feature transform sift approach detecting extracting local feature descriptors invariant illumination image noise rotation scaling small viewpoint detection stages sift features scale-space extrema detection keypoint localization orientation assignment generation keypoint descriptors pages examine stages detail sift features estrada jepson fleet scale-space extrema detection interest points sift features correspond local extrema erence-of-gaussian lters erent scales gaussian-blurred image exp variable scale gaussian result convolving image erence-of-gaussian lter scale-space extrema detection estrada jepson fleet erence gaussian-blurred images scales figure diagram showing blurred images erent scales computation erence-of-gaussian images lowe ref beginning tutorial rst step detection interest points convolution image gaussian lters erent scales generation erence-ofgaussian images erence adjacent blurred images scale-space extrema detection estrada jepson fleet scale-space extrema detection convolved images grouped octave octave corresponds doubling selected obtain xed number blurred images octave ensures obtain number erence-of-gaussian images octave note erence-of-gaussian lter approximation scale-normalized laplacian gaussian erence-of-gaussian lter ect tunable bandpass lter scale-space extrema detection estrada jepson fleet scale-space extrema detection figure local extrema detection pixel marked compared neighbors neighborhood spans adjacent dog images lowe interest points called keypoints sift framework identi local maxima minima dog images scales pixel dog images compared neighbors scale neighbors neighboring scales pixel local maximum minimum selected candidate keypoint scale-space extrema detection estrada jepson fleet scale-space extrema detection candidate keypoint interpolation nearby data accurately determine position keypoints low contrast removed responses edges eliminated keypoint assigned orientation determine keypoint orientation gradient orientation histogram computed neighborhood keypoint gaussian image closest scale keypoint scale contribution neighboring pixel weighted gradient magnitude gaussian window times scale keypoint peaks histogram correspond dominant orientations separate keypoint created direction histogram maximum scale-space extrema detection estrada jepson fleet direction maximum properties keypoint measured relative keypoint orientation invariance rotation scale-space extrema detection estrada jepson fleet sift feature representation keypoint orientation selected feature descriptor computed set orientation histograms pixel neighborhoods orientation histograms relative keypoint orientation orientation data gaussian image closest scale keypoint scale contribution pixel weighted gradient magnitude gaussian times scale keypoint figure sift feature descriptor lowe sift feature representation estrada jepson fleet histograms bins descriptor array histograms keypoint leads sift feature vector elements vector normalized enhance invariance illumination sift feature representation estrada jepson fleet sift feature matching find nearest neighbor database sift features training images robustness ratio nearest neighbor ratio nearest neighbor neighbor minimum euclidean distance expensive search approximate fast method nearest neighbor high probability sift feature matching estrada jepson fleet recognition sift features compute sift features input image match features sift feature database keypoint speci parameters location scale orientation increase recognition robustness hough transform identify clusters matches vote object pose keypoint votes set object poses consistent keypoint location scale orientation locations hough accumulator accumulate votes selected candidate object pose matches veri cation step matches training image hypothesized object pose image least-squares hypothesized location scale orientation object recognition sift features estrada jepson fleet sift matlab tutorial gaussian blurred images erence gaussian images range dims figure gaussian dog images grouped octave sift matlab tutorial estrada jepson fleet sift matlab tutorial keypoint detection figure maxima dog scales remaining keypoints removal low contrast points remaining keypoints removal edge responses bottom sift matlab tutorial estrada jepson fleet sift matlab tutorial final keypoints selected orientation scale figure extracted keypoints arrows scale orientation sift matlab tutorial estrada jepson fleet sift matlab tutorial warped image extracted keypoints figure warped image extracted keypoints hough transform matched sift features yields sift matlab tutorial estrada jepson fleet transformation aligns original warped images computed affine transformation rotated image original image disp aff actual transformation rotated image original image disp sift matlab tutorial estrada jepson fleet sift matlab tutorial matching alignment erent views local features orignial view range dims view range dims aligned view range dims minus aligned view range dims figure views wadham college transformation alignment sift matlab tutorial estrada jepson fleet sift matlab tutorial object recognition sift image range dims model range dims location range dims image range dims model range dims location range dims image range dims model range dims location range dims figure cellphone examples erent poses occlusion sift matlab tutorial estrada jepson fleet sift matlab tutorial object recognition sift image range dims model range dims location range dims image range dims model range dims location range dims image range dims model range dims location range dims figure book match similar features object sift matlab tutorial estrada jepson fleet closing comments sift features invariant rotation scaling illumination matching object recognition things robust occlusion long features object compute location pose cient on-line matching recognition performed close-to-real time small object databases closing comments estrada jepson fleet closing comments questions local features solve object recognition problem distinctiveness deal false positives object interest figure learn object models photographing special conditions approach compare object recognition method proposed murase nayar recall model consists pca basis object generated images diverse illumination viewing directions representation manifold training images eigenspace tutorial eigen eyes closing comments 
computer vision homework camera projection calibration rectification due september general information homework based readings textbook sections handout cipolla gee type homework identify answer print matlab code listing submit code handin directory problem set ccd camera transformation perfect perspective projection camera focal length ccd array size pixels field view fov defined angle points opposite edges image ccd array horizontally vertically fovs horizontal vertical assuming image center center image fov angle optical axis edge image give general expression computing fov focal length image width compute horizontal fov vertical fov camera iii comment fov affects resolution image application give expression computing pixel coordinates point scene camera-frame coordinates assume upper-left corner pixel compute pixel scene point coordinates imaged camera projection prove straight lines project straight lines perspective projection making geometric arguments lines planes algebraically line parameterized section vanishing points page cipolla gee handout sphere radius center camera coordinates imaged perfect perspective camera focal length image plane perpendicular optical axis prove formally informally convincingly image sphere circle figure input image detected features left original image detected feature points camera calibration camera calibration fundamental vision problems refers process calculating intrinsic extrinsic parameters camera applications scene reconstruction goal problem implement linear calibration algorithm matlab based method section textbook provided input image compute intrinsic focal length principal point extrinsic rotation translation parameters camera capture image assume radial distortion typical calibrate camera picture calibration object find features image derive calibration features positions case m-wide cube calibration object textured checkerboard pattern detect image features corners tile checkerboard size find position feature relative center cube process finding correspondences simple time consuming part public html fall feature mat public html fall feature mat containthe cornerfeatures andthe positions provideyoureadableform files public html fall feature txt public html fall feature txt linear camera calibration calibrate projective camera simple linear squares approach taking radial distortion account matlab data file coordinates points scene projections image write matlab function called linearcalibthat computes projective camera parameters signature function function cammatrix linearcalib points points input points matrix points points matrix homogeneous coordinates output cammatrix projective camera matrix implementation hints solve problem direct linear transformation algorithm set problem solving linear system form column vector entries projective camera matrix matrix http icaen uiowa dip lecture dvisionp html knownscene http homepages inf rbf cvonline local copies owens lect node html compute svd solution unit eigenvector eigenvalue describe steps method writeup understand define matrices matlab data public html fall find files features mat projection feature mat points represented homogeneous coordinates points features mat projections points features mat function load data matlab load -dyer public html fall features mat load -dyer public html fall features mat method check data loaded whos size bytes class double array double array grand total elements bytes handin values projective camera matrix description steps compute matrix extra credit decompose matrix compute resulting intrinsic extrinsic parameters matrices section text page cipolla gee paper describe methods decomposition projection check accuracy camera calibration result projecting points homogeneous coordinates camera matrix obtained linear camera calibration method write function function projpoints cameraproject points cammatrix input points matrix homogeneous coordinates cammatrix camera matrix output projpoints matrix points make points computed projpoints close points matrix ensure correctness handin transform scene points points chosen image plane comment errors find image rectification perspective images planar surfaces distorted parallel lines remain parallel general converging vanishing point removing perspective distortion compute planeto-plane projective transformation relates view view fronto-parallel parallel image plane compute inverse transformation apply input image result synthesized image scene plane appears camera physically moved directly front plane process called image rectification section discuss methods solve problem rectification true geometry scene ground truth measurements directory public images images showing perspectively distorted planes image hall pgm inside door frame dimensions physically measured procedure image rectification image viewing program imagemagick photoshop view image hand select corner points door determine image coordinates displayed user interactively moves cursor input image convert image coordinates physical coordinates homogeneous coordinates set problem form hxi page handout cipolla gee projective camera transformation homography sui svi homogeneous coordinates image point corresponds scene point homogeneous coordinates scene coordinates hint physical coordinate set choosing arbitrary origin coordinate length unit correspond physical measurement door convert problem form column vector entries matrix pairs point correspondences matrix point correspondence result rows rows rewriting relation terms nonhomogeneous coordinates giving equations shown page handout case term planar scene attention defined scale factor set matlab call svd iii matlab solve linear least-squares solution avoiding obvious solution singular decomposition svd note solution estimate true parameter values noise measurements singular decomposition svd eigenvector smallest eigenvalue solution compute matlab solve homogeneous system svd size svd textbook page projective matrix computed compute inverse matrix matlab function inv matrix compute result image compute bottom page cipolla gee handout information step method depends general coordinate frame points expressed result invariant similarity transformations image make result invariant arbitrary scale coordinate origin improve numerical accuracy results data normalization general important procedure normalize image data scene data translate scale image points coordinates centroid points average distance origin approximately average point homogeneous coordinates magnitude similarly normalize planar scene points centroid average distance origin note approach normalizing scene data suitable set points compactly distributed svd compute projection matrix iii denormalize values applying inverse point transformations step tildewidexi txi normalized image points tildewidexi normalized scene points denormalized projection matrix original coordinates obtained method image rectification based idea location orientation vanishing line aka horizon line scene plane determines true orientation plane respect camera optical axis equation vanishing line image normal scene plane camera coordinates unit vector bardbla bardbl estimated focal length camera bardbla cbardbl denotes euclidean norm words vector normalized fronto-parallel scene plane create image normal made parallel z-axis camera rotating scene plane procedure estimating vanishing line computed computing vanishing points sets parallel lines contained plane line set parallel line set vanishing line line passes vanishing points variety methods automatically estimating vanishing points paper vanishing point detection rother http homepages inf rbf cvonline local copies rother cvonline html assignment estimate vanishing points manually hand-selecting set points set parallel lines image choose image lines parallel scene plane significantly slopes input 
image meaning view oblique ensure vanishing points easier locate improve accuracy zoom image point coordinates determined accurately choose points coordinates points single line compute equation line find approximate intersection point lines parallel estimate line passing vanishing points determining parameters ensure transformation matrix rotation matrix normalize vector unit vector equation earlier computing plane unit normal oriented image bring vector coincidence positive z-axis requires rotation angle acos axis effects camera rotation image simulated invertible projective transformation image plane homogeneous coordinates compute matrix input parameters invert matrix apply input image result image camera pointing directly scene plane expect lot error crude method estimating vanishing line raw pixel coordinates pixel coordinates relative center image improve numerical conditioning rotation matrix image raw image coordinates relative upper-left corner image convert image coordinates coordinates information method paper collins beveridge matching perspective views coplanar structures projective unwarping similarity matching proc computer vision pattern recognition conf http wisc readings collins pdf degrees freedom affine transformation projectivity describe geometricinvariants hold affine transformationthat hold general projective transformation give transformed planar square projective transformation affine transformation viewing conditions affine transformation model describing plane-to-plane transformation extra credit extra credit implement vanishing point detection set line segments manually selected user information method bob collins http wisc dyer vanishing txt numerical code http wisc dyer jacobi txt test images variety test images directory public images parts compute results images hall pgm edwardvi pgm image choice image directory search web find interesting image side building image painting king edward william scrots artistic technique called anamorphosis means distorted image produced optically mirrors case plane-to-plane transformations called plane anamorphosis information technique including paintings websites anamorphosis http artborder anamorph html http anamorphosis http mathsyear explorer anamorphic plane-anamorphosis image experimentally guess real dimensions approximately square part images checkerboard pgm railroad pgm image choice image directory search web find include report parts description procedure parameters step matrix part rectified image method information critical method note provided images pgm ascii format read write pgm ppm pbm images unix command view existing ascii image file pbm image magic word line line lists number columns number rows image ascii remaining lines list image pixel values raster scan order left-to-right top-to-bottom separated white space pgm raw image magic word line line number columns number rows line maximum graylevel image remaining lines successive pixel values raster scan order raw format pgm pixel byte ascii format pgm pixel bytes magic word pgm ascii images complete information formats http astronomy swin pbourke dataformats ppm 
creating full view panoramic image mosaics environment maps richard szeliski heung-yeung shum microsoft research abstract paper presents approach creating full view panoramic mosaics image sequences unlike current panoramic stitching methods require pure horizontal camera panning system require controlled motions constraints images long strong motion parallax images hand-held digital camera stitched seamlessly panoramic mosaics represent image mosaics set transforms singularity problems existing top bottom cylindrical spherical maps algorithm fast robust directly recovers rotations general parameter planar perspective transforms methods recover camera focal length presented present algorithm efficiently extracting environment maps image mosaics mapping mosaic artibrary texture-mapped polyhedron surrounding origin explore virtual environment standard graphics viewers hardware requiring special-purpose players categories subject descriptors computer graphics picture image generation viewing algorithms image processing enhancement registration additional keywords full-view panoramic image mosaics environment mapping virtual environments image-based rendering introduction image-based rendering popular simulate visually rich tele-presence virtual reality experience building rendering complete model environment collection images render scene supporting virtual camera motion single cylindrical image surrounding viewer enables user pan zoom inside environment created real images powerful image-based rendering systems built adding depth map image larger collection images paper focus image-based rendering systems depth information support user panning rotation zoom commercial products based idea quicktime surround video cylindrical images limited vertical field view newer systems support full spherical maps photobubble infinite pictures realvr number techniques developed capturing panoramic images real-world scenes computergenerated environment maps record image long film strip panoramic camera directly capture cylindrical panoramic image lens large field view fisheye lens mirrored pyramids parabolic mirrors directly capture panoramic images hardware-intensive method constructing full view panoramas regular photographic video images order cover viewing space images aligned composited complete panoramic images image mosaic stitching algorithm stitching systems require carefully controlled camera motion pure pan produce cylindrical images paper show uncontrolled camera rotation case general camera rotation studied previously -parameter planar perspective motion model contrast algorithm -parameter rotational motion model robust fewer unknowns algorithm requires knowing camera focal length develop method computing initial focal length estimate set -parameter perspective registrations investigate close gap overlap due accumulated registration errors complete panoramic sequence assembled demonstrate advantages algorithm apply sequence images handheld digital camera work represent mosaic set transformations transformation corresponds image frame input image sequence represents mapping image pixels viewing directions world represents camera matrix stitching process approach makes commitment final output representation spherical cylindrical avoid singularities representations mosaic constructed mapped cylindrical spherical coordinates displayed special purpose viewer paper argue specialized representations represent choice geometry texture coordinate embedding show convert mosaic environment map map mosaic texture-mapped polyhedron surrounding origin standard graphics apis model formats graphics accelerators texture mapping remainder paper structured sections review algorithms panoramic mosaic construction cylindrical coordinates general perspective transforms section describes direct rotation recovery algorithm section presents technique estimating focal length perspective registrations section discusses eliminate gap panorama due accumulated registration errors section presents algorithm projecting panoramas texturemapped models environment maps close discussion description ongoing future work cylindrical spherical panoramas cylindrical panoramas commonly ease construction build cylindrical panorama sequence images camera mounted leveled tripod camera focal length field view perspective image warped cylindrical coordinates figure shows overlapping cylindrical images notice horizontal lines curved build cylindrical panorama map world coordinates cylindrical screen coordinates tan panning angle scanline similarly map world coordinates spherical coordinates tan tan warped input image constructing panoramic mosaics pure translation problem ideally build cylindrical spherical panorama horizontal panning sequence unknown panning angles recovered practice small vertical translations needed compensate vertical jitter optical twist horizontal translation vertical translation estimated input image recover translational motion estimate incremental translation minimizing intensity error images points images global translational motion field pixels order taylor series expansion equation wheree current intensity color error image gradient atx minimization problem simple least-squares solution figure shows portion cylindrical panoramic mosaic built simple translational alignment technique handle larger initial displacements hierarchical coarse-to-fine optimization scheme reduce discontinuities intensity color images composited apply simple feathering algorithm weight pixels image proportionally distance edge precisely distance nearest invisible pixel registration finished clip ends optionally top bottom write single panoramic image creating panoramas cylindrical spherical coordinates limitations handle simple case pure panning motion convert image spherical cylindrical coordinates tilting angle ill-sampling north pole south pole big registration errors requires knowing focal length equivalently field view focal length carefully calibrated lab estimating focal length lens registering images accurate discuss section perspective -parameter panoramas overcome limitations authors suggested full planar perspective motion models planar perspective transform warps image parameters homogeneous projective coordinates equality scale equation re-written translational motion parameters recover paramters iteratively update transform matrix resampling image transformation warping resampled image minimize incremental update parameter jacobian resampled point coordinate respect entries jacobian correspond optical flow induced instantaneous motion plane leastsquares minimization problem solved normal equations analogous hessian accumulated gradient residual -parameter perspective transformation recovery algorithm works provided initial estimates correct transformation close motion model free parameters suffers slow convergence stuck local minima reason prefer -parameter rotational model rotational -parameter panoramas camera centered origin relationship point image coordinates tvrp image plane translation focal length scaling rotation matrices simplicity notation assume pixels numbered origin image center allowing dispense practice mislocating image center affect mosaic registration algorithms direction screen pixel camera rotating center projection mapping perspective projection images image represented focal length rotation assume focal length images recover rotation perform incremental update based angular velocity incremental rotation matrix rodriguez formula sin cos cross product operator keeping terms linear deformation matrix plays role computing jacobian entries respect applying chain rule obtain jacobian jacobian plugged previous minimization pipeline estimate incremental rotation vector updated figure shows method register images arbitrary non-panning rotation compared parameter perspective model easier intuitive interactively adjust images -parameter rotational model estimating focal length order apply rotation technique obtain estimate camera focal length convenient obtain estimate deduce perspective transforms computed -parameter algorithm expanding formulation order estimate focal lengths observe rows columns norm orthogonal matrix scaled compute estimates similar result obtained focal length fixed images geometric estimated focal length multiple estimates median final estimate alternative techniques estimating focal length presented technique frames assumes general camera model unknown optical center aspect ratio techniques assume rotation 
angles complete panorama similar technique section initial set estimates improve estimates part image registration process kind squares approach rotation closing gap panorama algorithms recovering rotations focal length complete panoramic sequence stitched invariably gap overlap due accumulated errors rotation estimates solve problem registering image beginning end sequence difference rotation matrices quotient directly tells amount misregistration error distributed evenly sequence converting error rotation quaternion dividing quaternion number images sequence lack guess update estimated focal length based amount misregistration convert quaternion describing misregistration gap angle update focal length equation figure shows end registered image sequence image big gap image fact image gap wrong estimate focal length figure shows registration closing gap correct focal length notice mosaics show visual misregistration gap figure computed focal length error related approaches developed solve focal length estimation problem pure panning motion cylindrical images recent work developed alternative approach removing gaps overlaps works arbitrary image sequences section environment map construction constructed complete panoramic mosaic convert set input images transforms images quickly rendered viewed traditional choose cylindrical spherical map section environment map representation called latitude-longitude projection color pixel computed converting pixel address ray mapping ray input image transformation colors picked image blended weighting function feathering earlier convert rotational panorama spherical panorama algorithm pixel spherical map compute position unit sphere cos sin sin cos cos determine mapping image form composite blended image warped images map requires specialized viewer advantage hardware texture-mapping acceleration approximating cylinder sphere shape polyhedron introduce distortions rendering true full-view panoramas spherical maps introduce distortion pole alternative propose traditional texturemapped models environment maps shape model embedding face texture space left user choice range simple cube separate texture maps complicated subdivided dodecahedron latitude-longitude tesselated globe choice depend characteristics rendering hardware desired quality minimizing distortions local pixel size external considerations ease painting resulting texture maps embeddings leave gaps texture map section describe efficiently compute texture map color values geometry choice texture map coordinates generalization algorithm project collection images arbitrary model non-convex models surround viewer assume object model triangulated surface collection triangles vertices vertex tagged coordinates texture coordinates faces assigned texture maps restrict model triangular faces order obtain simple closed-form solution projective map potentially triangle texture coordinates image coordinates output algorithm set colored texture maps undefined invisible pixels flagged alpha channel algorithm consists steps paint triangle space unique color triangle determine mapping triangle form composite blended image paint composite image final texture map color values computed step stencil steps detail pseudocoloring triangle painting step auxilliary buffer size texture map rgb image means colors initial coloring grow colors invisible regions simple dilation operation iteratively replacing invisible pixels visible neighbor pseudocolors operation performed order eliminate small gaps texture map support filtering operations bilinear texture mapping mip mapping six-sided cube set coordinates square vertex slightly inside margins texture map texture map covers region operation texture filtering mip mapping performed worrying edge effects step compute mapping triangle finding matrix satisfies triangle vertices andp formed concatenating -vectors mapping essentially mapping directions space cameras origin coordinates step compute bounding box triangle space enlarge slightly amount dilation step form composite image blending input images transformation full -parameter perspective transformation -parameter affine map obtained simply projecting triangle vertices image mapping image coordinates texture space essence ignoring foreshortening projection representation equivalent spherical map limit globe facets infinitessimally small important difference large facets exact rendering obtained regular texture-mapping algorithms hardware model error applying naive erroneous method large texture map facets simple unrefined cube large fourth step find pseudocolor pixel inside composited patch paint composited color texture map pseudocolor matches face algorithm project collection images arbitrary object true inverse texture mapping extending algorithm handle occlusions simply paint pseudocolored polyhedral model input image z-buffering algorithm called item buffer ray tracing compositing image face check pixels match desired pseudocolor set match invisible contribute final composite figure shows results mapping panoramic mosaic longitude-latitude tesselated globe white triangles top parts texture map covered tesselated globe model due triangular elements poles figures show results mapping panoramic mosaics cubical environment maps mosaics high quality good sense extent viewing sphere covered full-view mosaics note figure images hand-held digital camera texture-mapped models constructed rendered directly standard graphics system work simple viewer written top direct api running personal computer hardware graphics acceleration discussion paper developed techniques building full view panoramic image mosaics system place constraints input images images hand held cameras taking overlapping images significantly increase field view constructed panorama remove expensive fisheye lenses method accurate robust estimate unknowns rotation matrix parameters general perspective transforms method greatly increases accuracy flexibility ease previous techniques developed techniques estimating focal length image sequence recovering accumulated registration errors full panoramic mosaic completed building image mosaic long sequence images deal error accumulation problems paper presented gap closing technique updates focal length rotation matrices complete panorama constructed recently developed method based block adjustment simultaneously adjusts rotation matrices focal lengths sum registration errors matching pairs images minimized theory panoramas constructed images camera optical centers moves practice depends amount camera translation relative nearest objects front camera rotation mosaicing method demonstrated images hand held digital camera seamlessly stitched compensate local misregistration caused larger amounts motion parallax camera translation recently developed deghosting technique divide image small patches compute patch-based alignments image locally warped mosaic visible ghosting deghosting method build image mosaic space shuttle flight deck figure sequence images significant motion parallax astronant hand-held camera presented algorithm extracting texture maps image mosaics map image mosaics model exploit graphics hardware apis compared special purpose players cylindrical spherical viewers inverse texture mapping approach easily integrated backdrops virtual worlds games future explore extract three-dimensional world descriptions full-view panoramic image mosaics ayache vision eoscopique perception multisensorielle intereditions paris bergen anandan hanna hingorani hierarchical model-based motion estimation european conference computer vision eccv pages santa margherita liguere italy springer-verlag chen williams view interpolation image synthesis computer graphics siggraph pages august chen quicktime image-based approach virtual environment navigation computer graphics siggraph pages august faugeras three-dimensional computer vision geometric viewpoint mit press cambridge massachusetts gortler grzeszczuk szeliski cohen lumigraph computer graphics proceedings annual conference series pages proc siggraph orleans august acm siggraph greene environment mapping applications world projections ieee computer graphics 
applications november hartley self-calibration multiple views rotating camera european conference computer vision eccv volume pages stockholm sweden springer-verlag irani anandan hsu mosaic based representations video sequences applications international conference computer vision iccv pages cambridge massachusetts june kang weiss characterization errors compositing panoramic images technical report digital equipment corporation cambridge research lab june levoy hanrahan light field rendering computer graphics proceedings annual conference series pages proc siggraph orleans august acm siggraph mann picard virtual bellows constructing high-quality images video ieee international conference image processing icipvolume pages austin texas november mcmillan bishop plenoptic modeling image-based rendering system computer graphics siggraph pages august meehan panoramic photography watson-guptill shum szeliski construction refinement panoramic mosaics global local alignment submitted review april stein accurate internal camera calibration rotation analysis sources error international conference computer vision iccv pages cambridge massachusetts june szeliski image mosaicing tele-reality applications ieee workshop applications computer vision wacv pages sarasota florida december ieee computer society szeliski video mosaics virtual environments ieee computer graphics applications pages march tsai versatile camera calibration technique highaccuracy machine vision metrology off-the-shelf cameras lenses ieee journal robotics automation raaugust weghorst hooper greenberg improved computational methods ray tracing acm transactions graphics january williams pyramidal parametrics computer graphics july http qtvr quicktime apple http bdiamon http omniview http smoothmove http rlspace http behere http columbia cave omnicam figure construction cylindrical panorama warped images part cylindrical panorama composited sequence images figure rotation registration images handheld camera figure gap closing sequentially registering images gap visible focal length wrong gap visible correct focal length figure tessellated spherical panorama covering north pole constructed images white triangles top parts texture map covered tesselated globe model due triangular elements poles figure cubical texture-mapped model conference room images hand-held digital camera figure cubical texture-mapped model lobby images figure cubical texture-mapped model hallway sitting area images figure panorama space shuttle flight deck images hand-held camera deghosting technique 
viewing direction world object image plane real image pin-hole camera image plane optical axis image focal length optical centre world point image circle centre optical vanishing point parallel lines ground plane horizon array centered optical axis rectangular pixelssquare pixels array centered optical axis camera-centered coordinates world coordinatest translation dof rotation dof camera-centered coordinates world coordinates optical axis image plane optical centre optical axis ccd array image plane world plane translation rotation dof dof controlled scene controlled scene controlled scene finding vanishing points camera calibration original uncalibrated photographs computation projection matrices camera motion primitive definition localisation triangulation reconstruction texture mapping world square planar affine imaging rotation scaling stretch translation dof shear fanning bracket spanner image image euclidean similarity affine projective image clever constructions image canonical view 
correction paper shift robust approach feature space analysis dorin comaniciu peter meer ieee-pami vol equations misprinted published paper read equation equation exp exp 
problem ccd camera transformation field view fov diagram shows perspective projection camera width image field view fov atan camera fov-vertical atan fov-horizontal atan iii finite numbers pixels image larger fov scene projected image resolution pixel decreased application camera-frame coordinates point image plane coordinates pixel coordinates combine assume origin camera frame center image computed problem camera projection represents line space camera frame coordinates sphere simulated matlab projection shown sphere project circle image plane center view direction limit relevant vanishing point infinity meaning parallel lines meet vanishing point remain parallel parallel lines parallel x-axis directly image typical x-y coordinates determine distortion sphere direction distortion image sphere therefor perfect circle cammatrix defining matrix reading explicitly code found desired projection matrix finding eigenvector smallest eigenvalue reshaped vector matrix method section text printing input values generated obtained matrix projections equivalent cubes space matrix appears valid decomposed matrix afraid matrix correct notes readings article discern missing product decomposed matrices incorrect generating code file linearcalib mat find relevant parameters rho theta alpha beta points transform approximately desired result line coordinate takes values demonstrating small amount error decimal place points corner points transformed exact values decimal places inspected implying matrix accurate reasonable precision radial distortion image hall pgm corners door image coordinates world coordinates points define matrix reading eigenvector smallest eigenvalue defines desired matrix reshaped matrix find applying inverse matrix input image obtained visible aliasing image size stretched method edwardvi pgm point data image aliasing occurs image stretched viewer expected circle fully circular results present applying method checkerboard pgm data results image method matrix part premultiplied matrix postmultiplied matrix rotates translates image data centered average distance radicalbig origin scene points image hall pgm resulting images part cases reprinted checked method incorporated errors parts teach image found points corners rectangle plane image sets parallel lines rectangle defined find vanishing points line connecting points vanishing line represented matrix formula fixed type-os rectify image found played huge role accuracy resulting image large focal lengths resulted image coordinates times larger desired resulting image range reasonable image generated images produced method accurate parts pixel values centered origin images approximate desired results image hall pgm generated matrix resulting image hall pgm accurate previous methods method applied checkerboard pgm railroad pgm time chosing points plane scene determine vanishing line railroad image long time generate cancel finished top rows pixels matrix vector multiplications taking memory image missing top rows pixels scene similar hall checkerboard square parts results affine projective transformation describe plane-to-plane transformation degrees freedom affine transformation preserves collinearity ratios distances means preserves parallel lines unlike projective transformation projected midpoint line remains midpoint projected line feature preserved projective transformations affine transformations lines planes infinity affine transformations represented combinations rotations translations dilations shears general affine transformation situation degrees freedom compared projective transformation projective transformation loses degrees freedom plane-to-plane transformation allowing loss generality affine transformation loses degrees freedom limited transformations perform projective transformations planar square project triangle limit parallel sides meet vanishing point affine transformations preserlve parallelism case affine transformation affine transformations models distance front back scene small size due perspective small irrelevant appendix images hall pgm edwardvi pgm filecab pgm 
computer vision homework image segmentation shift due tuesday october general information homework based shift segmentation algorithm papers describing method public html fall papers provided matlab functions public html fall code provided test data images pts mat public html fall data print matlab code listing submit code handin directory shift clustering shift algorithm clusters n-dimensional data set data point feature vector values associating point peak data set probability density point shift computes peak defining spherical window data point radius computing points lie window algorithm shifts window repeats convergence shift threshold iteration window shift densely populated portion data set peak reached data equally distributed window implement peak searching processes function function peak findpeak data idx data matrix data points point defined n-dimensional column vector feature values idx column index data point compute density peak search window radius implement meanshift function calls findpeak point assigns label point peak function syntax function labels peaks meanshift data labels vector entry data point data storing cluster label peaks matrix storing density peaks found meanshift data point peaks compared call findpeak similar peaks merged implementation peaks distance peak data point found exist peaks simplicity computed peak discarded label existing peak peaks speeding algorithm shift algorithm slow image segmentation pixel data point incorporate speedups implementation finding peak speedup associate data point distance peak cluster defined peak speedup basin attraction based intuition points window size distance peak high probability converge peak speedup based similar principle points distance search path converged peak constant assignment incorporate speedups implementation meanshift realize speedup modify findpeak function peak cpts findpeakopt data idx cpts vector storing point distance path matlab optimized matrix operations loops avoid loops functions matrix manipulation select points labeled writing loop write found find labels currdata data found find command return indexes elements labels match boolean expression case data found selects columns indexes listed vector found matlab hint find points matrix closer point index idx loop size norm idx end find slow matlab faster size find sqrt sum repmat idx debug test algorithm speedups provided dataset pts mat set points belong gaussian distributions compute results plot result separately provided function plot dclusters image segmentation build implementation perform image segmentation implement function function segim meanshiftsegment input image generally image feature matrix parameter shift algorithm output segmented image constructed cluster labels peak values output image constructed assigning color peak label coloring pixels output image note shift clusters euclidean distance metric euclidean distance rgb color space correlate perceived difference color people green portion spectrum large distances perceived color blue part spectrum small distance represent large change perceived color figures forsyth ponce reason non-linear luv color space space euclidean distance models perceived difference color meanshiftsegment cluster image data luv color space converting rgb color vectors luv provided matlab function rgb luv convert resulting cluster centers back rgb provided matlab function luv rgb experiments segment images sunset bmp terrain bmp input image file read image matlab convert matrix form required data feature vector simply luv color values pixel create matrix number pixels input image include spatial position information define feature vector vector luv coordinates pixel run algorithm luv color values feature vector luv position values feature vector create color output image combination feature vector definition resulting output segmentation images run algorithm test image choice feature vector definition source test images dataset images http eecs berkeley research projects vision grouping segbench questions answer based experiments resulting segmentations answer questions effect varying feature vector resulting segmentations effect adding position information resulting segmentations advantages disadvantages type feature vector suggest extensions avoid situations single regions over-segmented multiple regions hand hardcopy output images answers questions final note efficient implementations exist simplified implementation shift minutes run debug small images comparison normalized cut algorithm matlab implementation normalized cut method image segmentation http seas upenn timothee software ncut software html run test images earlier comment differences methods types images prefer extra credit problem skeletonization shock graphs modeling shapes skeleton description initially studied blum medial axis transform mat extra credit implement method computing generalization mat called shock graph algorithm implement section paper robust efficient skeletal graphs dimitrov phillips siddiqi proc computer vision pattern recognition conf vol paper called siddiqi-cvpr pdf directory http wisc dyer readings steps algorithm implement summarized step compute euclidean distance transform step shock graph construction algorithm compute euclidean distance transform edt matlab reading image file function imread compute edt matlab function bwdist produce real-valued euclidean distance transform array note bwdist assumes object pixels background pixels non-zero order reduce effects boundary aliasing due digital boundary object smooth slightly blurring gaussian kernel create kernel matlab function fspecial create kernel sigma fspecial gaussian experiment kernel sizes values parameter sigma obtain final results kernel sigma kernel sigma final values documentation convolve computed kernel matlab function imfilter result real-valued array smoothed values pixel information creating applying gaussian filter http wisc dyer howtocreatefilter pdf create separate intermediate-result image white background pixel rounded nearest integer object pixel linearly scale values largest black white matlab functions stretchlim imadjust reason inverting background gray level printed images nicer save intermediate-result image image file imwrite print turn image prefer create display print image matlab create intermediate image file step compute gradient vector field real-valuedarraysd secondstep dimitrov shock graphalgorithmis compute gradient vector field deld compute deld simple finite difference approximation blurs singularities precisely skeletal points lie method curiosity comparison purposes matlab function gradient assignment compute deld unit vector -pq bardblpqbardbl object pixel nearest background point computed time edt bwdist bwdist image array type double size image pixel closest background pixel converting raster-scan index image coordinates define point needed compute deld create image vector field matlab quiver function print copy image step compute flux goal step compute flux divergence defined paper dimitrov algorithm paper summing neighbors point values computed product deld unit outward normal center point current -neighbor case deld undefined background pixels modify step compute average flux -neighbors object note matlab function divergence compare result code implementation ofthis step hint rusty linear algebra vectors cosine angle equal product aka dot product unit vectors bardblubardbl bardblvbardbl length norm vector defined bardblubardbl radicalbigu vectors product defined utv 
scalar assignment correspond vectors deld flux average scalar values step thin final step compute skeletal points thinning removing object points order flux values strong negative flux corresponds skeletal points thinning remove endpoints change topology point process method algorithm paper create heap class matlab part create output image background pixels white object pixels middle-gray skeleton pixels black print hand image hand copy source code handin directory hand hardcopy form description parameters values hardcopy images blurred edt vector field final skeleton results test images public images europeanhare gif public images girl gif information papers consulted details related algorithm located directory http wisc dyer readings leymarie levine fast raster scan distance propagation discrete rectangular lattice proc computer vision graphics image processing image understanding pdf leymarie-cvgip pdf siddiqiet hamilton-jacobiskeleton proc int conf computer vision pdf siddiqi-iccv pdf siddiqiet hamilton-jacobiskeleton int computer vision pdf siddiqi-ijcv pdf bouix siddiqi divergence-based medial surfaces proc european conf computer vision pdf siddiqi-eccv pdf siddiqi geometric shock-capturing eno schemes subpixel interpolation computation curve evolution graphical models image processing pdf siddiqi-eno pdf 
robust efficient skeletal graphs pavel dimitrov carlos phillips mcgill school computer science center intelligent machines pdimit carlos siddiqi cim mcgill kaleem siddiqi abstract recently significant interest representations based abstractions blum skeleton graph qualitative shape matching application techniques large databases shapes hinges availability numerical algorithms computing medial axis computation extremely subtle approaches based voronoi techniques preserve topology heuristic pruning measures introduced remove unwanted edges methods based euclidean distance functions localize skeletal points accurately cost altering object topology paper introduce algorithm computing subpixel skeletons robust accurate low computational complexity preserves topology key idea measure net outward flux vector field unit area detect locations conservation energy principle violated conjunction thinning process applied rectangular lattice illustrate approach examples skeletal graphs biological man-made silhouettes introduction recent years significant interest graph-based abstractions blum skeleton qualitative shape recognition application methods large image databases hinges availability robust efficient algorithms computing medial axis approximations subtle numerical problem methods based voronoi techniques preserve topology heuristic pruning measures introduced remove unwanted edges methods based euclidean distance functions localize skeletal points accurately cost altering object topology paper introduce algorithm computing subpixel skeletons robust accurate low computational complexity preserves topology key idea measure net outward flux vector field unit area detect locations conservation energy principle violated conjunction thinning process applied rectangular lattice illustrate approach examples skeletal graphs biological man-made silhouettes divergence-based skeletons blum grassfire flow acting closed curve point boundary moving unit speed direction normal recent work shown formulation leads hamilton-jacobi equation euclidean distance function initial curve physics equations typically solved evolution phase space equivalent hamiltonian system hamiltonian systems conservative locus skeletal points coincides locations conservation energy principle violated loss energy formulate natural criterion detecting singularities distance function specifically euclidean distance function initial curve magnitude gradient identical smooth regime hamiltonian system hamiltonian function straightforward show hamiltonian systems conservative divergence free conversely trajectories system intersect conservation energy principle violated suggests natural approach detecting skeleton compute divergence gradient vector field detect locations divergence defined net outward flux unit area area point shrinks area bounding contour outward normal point contour divergence theorema words integral divergence vector field finite area net outward flux contour bounds locations flux negative energy lost correspond sinks skeletal points interior similarly locations flux positive correspond sources skeletal points exterior figure illustrates divergence-based computation panther silhouette gradient vector field euclidean distance function shown top total outward flux bottom observe smooth regime vector field flux medium gray sinks coincide skeleton interior dark gray sources skeleton exterior light gray threshold divergence map yields close approximation skeleton general impossible guarantee result homotopic original object simple thresholding high threshold yield connected set thin unwanted branches present figure top low threshold yields thin set disconnected figure bottom solution show introduce additional constraints ensure topology object preserved main idea incorporate homotopy preserving thinning process rectangular lattice removal points guided divergence values homotopy preserving skeletons divergence-ordered thinning long history approaches computing skeleton rooted thinning operations methods attempt realize blum grassfire formulation peeling layers object retaining special note classical definition divergence sum partial derivatives vector field component directions singular precisely points interested figure gradient vector field signed distance function boundary panther shape top total outward flux bottom smooth regime vector field flux medium gray sinks correspond skeleton interior dark gray sources skeleton exterior light gray figure thresholding divergence map figure high threshold yields connected set thin unwanted branches present top low threshold yields closer approximation desired skeleton result disconnected bottom points define erosion rules topology object preserved methods figure left neighborhood digital point rectangular lattice neighborhood graph removed note edge neighbors text sensitive euclidean transformations data typically fail localize skeletal points accurately exploit interpretation based divergence developed previous section address concerns topology preserving erosion rules defined rectangular lattice digital point contained object topology object altered removal disconnects object creates hole convenient view graph problem neighborhood shown figure left select neighbors contained object construct neighborhood graph placing edges pairs neighbors including -adjacent -adjacent -tuples nodes graph remove diagonal edges ensures degenerate cycles neighborhood graph cycles length observe removal disconnects object introduces hole neighborhood graph connected cycle conversely connected graph cycles tree simple criterion decide removed proposition digital point removed neighborhood graph cycles length removed tree straightforward determining graph tree check euler characteristic number vertices minus number edges identical note check performed locally neighborhood figure shows neighborhood graph removed proposition guarantee thinning process rectangular lattice preserves topology end result depends order points removed relationship skeleton unclear fact thinning methods give coarse approximation skeleton additional constraints introduced current context derived natural criterion localizing skeletal points based principles physics specifically total outward flux gradient vector field euclidean distance function continuous measure likelihood point sink skeletal point natural order removal points thinning measure outline approach place apply homotopy preserving thinning process interior object candidate points removal considered order decreasing divergence preserve end points significant total outward flux selected threshold thin rest object points removed result thin set rectangular lattice set interior homotopic object divergence measure close true skeleton end points curve points branch points continuous case distinction end point curve point branch point skeleton number times disc centered point intersects skeleton figure specifically interval interval disc radius centered intersects skeleton end point interval interval disc radius centered intersects skeleton curve point interval interval disc radius centered intersects skeleton times branch point digital skeleton rectangular lattice connected -connected pixel thick curve similar characterization applies smallest disc ordered set neighbors simply count number times path neighbors intersects digital skeleton easy thinning candidate end point -connected -connected digital curve characterized proposition point end point pixel thick digital curve neighborhood single neighbor neighbors -adjacent criteria identify end points object thinned detect branch points digital points removed figure end point curve point branch point distinguished determining number times disc infinitesimal radius centered point intersects skeleton text algorithm thinning process made efficient observing point object background point neighbor removed create hole potentially removable points border object border point removed neighbors removable suggests implementation thinning process heap present algorithm algorithm divergence-ordered thinning algorithm part total outward flux compute signed distance transform object compute gradient vector field compute net outward flux point interior object 
-neighbor outward normal unit disc centered part homotopy preserving thinning border point removable insert heap sorting key insertion heap size heapextractmax heap removable end point remove neighbors removable insert heap mark skeletal end point end end end complexity algorithm determined computation distance transform gradient vector field total outward flux figure digital skeleton panther silhouette obtained divergence-ordered thinning skeleton shown light gray end points branch points shown black compare figures operations total number points array worst case complexity thinning process number points interior object reasoning point inserted heap neighbors removed happen times loop points object times iteration insertion heap extraction minimum operations times number elements heap elements heap total points object worst case complexity thinning complexity entire method algorithm converges heap empty stage set points remain comprise skeleton end points labelled branch points interior points detected procedure section figure illustrates output algorithm panther silhouette digital skeleton shown light gray end points branch points shown black observe skeleton corresponds closely sink points divergence map figure contrast earlier results obtained thresholding figure result pixel thin interior homotopic object fact property ensured propositions subpixel skeletal graph straightforward interpret digital skeleton end points branch points labelled graph set end points branch points comprise vertices exception case square block occur branches corners order preserve symmetry abstract skeleton graph lattice point square stored branch branch point middle edge representing ordered list digital points connecting vertices digital points ordered applying depth-first-search algorithm starting vertex pixel -adjacent -adjacent neighbor branch point search terminates vertex reached figure top subpixel skeletal graph branch points shown empty circles end points filled circles compare digital skeleton figure derived bottom reconstruction envelope maximal inscribed disks grey skeleton overlayed original object implementation subpixel contour tracer obtain piecewise circular arc representation boundary object case simulations based exact distance function determining distance lattice point closest circular arc shown appendix move point digital skeleton arbitrary precision true skeletal point leading subpixel skeletal graph curve points idea search direction defined pan-normal object boundary point iteratively refine search branch points idea move point till arbitrarily close center maximal inscribed disc touches contour points examples present examples subpixel skeletal graphs case divergence threshold determine end points preserve figure top shows subpixel skeleton panther silhouette derived earlier digital skeleton figure branch points depicted empty circles end points filled circles figure bottom shows object reconstructed envelope maximal inscribed discs skeletal point figure depicts subpixel skeletal graphs wide variety shapes representing range object categories results demonstrate robustness framework euclidean transformations scale discussion related work introduced algorithm computing subpixel skeletal graphs robust accurate computationally efficient invariant euclidean transformations homotopy preserving essential idea combine divergence computation gradient vector field euclidean distance function introduced earlier work thinning process preserves topology identification end points branch points result interpreted graph digital skeleton shifted arbitrary precision true skeleton illustrated approach variety shapes clear framework applies shapes arbitrary topology extended method framework computing medial surfaces objects note related work leymarie levine utilized magnitude gradient vector field design potential function attract snake moving shape boundary leads intuitive simulation grassfire interpretation singularities skeletal graph geiger introduced variational approach computing symmetric axis trees portions curve matched incorporating constraints including co-circularity parallelism zhu posed computation medial axis statistical inference problem leading approximation skeleton tek kimia introduced promising approach calculating symmetry maps based combination wavefront propagation technique exact analytic distance function finally malandain fernandez-vidal obtain sets based thresholding function measures characterize singularities euclidean distance function empirical results good choice thresholds measures strategies combining based heuristics contrast method rooted physics-based analysis gradient vector field euclidean distance function justifies divergence theorem compute total outward flux vector field locate points energy absorbed paper figure subpixel skeletons wide variety shapes obtained divergence-ordered thinning combined measure homotopy preserving thinning algorithm subpixel shift efficiently obtain robust accurate skeletal graphs subpixel shifting show points digital skeleton shifted arbitrary precision true skeletal points making exact distance function closed contour digital skeleton obtained divergence-ordered thinning end point digital skeleton find closest point contour set closest points partition contour partition refer contour segments side digital branch proceed shift points contained branch loss generality assume figure extend line segment point triangle isosceles side true skeleton respect true line segment normal contour segment definition closest point closest skeletal point extension line segment skeleton definition skeletal point find mid-point updatea closer update segment small return note actual precision shifting depends precision end points segment contour shifting digital branch point slightly approach essential idea move point arbitrarily close center maximal inscribed disc touches boundary points digital branch point approximation identify closest contour points closest contour segments shift branch point center unique circle passes contour points repeat procedure distances closest points tolerance acknowledgements sylvain bouix allen tannenbaum steve zucker helpful discussions research supported cfi fcar nserc arcelli sanniti baja width-independent fast thinning algorithm ieee pami july true skeleton figure illustration subpixel shift text discussion bertrand parallel thinning algorithm medial surfaces pattern recognition letters blum biological shape visual science journal theoretical biology borgefors distance transformations arbitrary dimensions cvgip bouix siddiqi divergence-based medial surfaces eccv dublin ireland june franc ois medioni generic shape learning recognition international workshop object representation computer vision april leymarie levine simulating grassfire transform active contour model ieee pami jan liu geiger kohn representation self-similarity shapes sixth international conference computer vision malandain fernandez-vidal euclidean skeletons image vision computing ogniewicz discrete voronoi skeletons hartunggorre sharvit chan tek kimia symmetrybased indexing image databases ieee workshop content-based access image video libraries june siddiqi bouix tannenbaum zucker hamilton-jacobi skeleton iccv pages kerkyra greece september siddiqi kimia shu geometric shockcapturing eno schemes subpixel interpolation computation curve evolution graphical models image processing september siddiqi shokoufandeh dickinson zucker shock graphs shape matching international journal computer vision tek kimia symmetry maps free-form curve segments wave propagation iccv pages kerkyra greece september zhu stochastic computation medial axis markov random fields cvpr pages santa barbara june 
computer vision homework mohamed eldawy eldawy wisc clustering points optimizations results optimizations shift clustering images chose work images represent sunset scene road scene keyboard real face artistic face luv color values feature vector luv color values feature vectors results number regions image regions number regions image regions number regions image regions number regions image regions number regions image region white luv color values feature vectors results number regions image regions number regions image regions number regions image regions number regions image regions number regions image region white position values luv color values feature vector position luv values feature vector results number regions image regions number regions image regions number regions image regions number regions image regions number regions image regions position luv values feature vector results number regions image regions number regions image number regions image regions number regions image regions number regions image regions normalized cut results present results normalized cut method segment images reach image show detected edges resulting segments cases segments number segments algorithm find experimented values including lack space detected edges detected segments comparison normalized cuts shift clustering normalized cuts algorithm produced results shift clustering color values feature vector artistic face shift clustering failed horribly image discovering white region shift clustering positional features beats normalized cuts shift clustering fails miserably keyboard normalized cuts successfully found worse methods fail types images keyboard segmented correctly method normalized cuts fail shift clustering normalized cut algorithm produce superior results shift clustering exact number segments shift clustering number segments play figure finds results case normalized cuts experimented numbers segments examples couldn put hands make results correct results normalized cuts keyboard segments results optimal rest pads segmented whilst keys keyboard combined region answers written questions effect varying resulting segmentation increasing larger regions discovered algorithm result fewer regions effect varying feature vector resulting segmentation feature vector color values regions spread sunset sea sky merged region barrier image feature vector position information areas didn huge result areas discovered algorithm positions added feature vector advantages disadvantages feature vector color values advantage algorithm runs faster deal data including position values advantage produces acceptable results colors close artistic face color values find good results feature occluded feature blue piece paper ruler top position color detect side paper separate region color find paper single region suggest extensions avoid situations single regions over-segmented multiple regions blurring image slightly applying clustering algorithm idea area totally enclosed area treat smaller area secondary feature main feature bigger area smaller area enclosed work cases keyboard letter enclosed key treated unit key secondary feature letter inside happen sunset rock left segmenting treating close areas area evaluate shapes regions regions combinations regions form uniform shape original regions combined work case keyboard cases key detected separate regions dark light ideas combined regions combined enclose region remove region combine regions 
clustering images latent dirichlet allocation model pradheep elango karthik jayaraman computer sciences department wisconsin madison dec abstract clustering simple words grouping similar data items text domain clustering largely popular fairly successful work apply clustering methods text domain image domain major challenges approach image representation vocabulary definition apply bag-of-words model images image segments words latent dirichlet allocation lda model relationships words image images highly compressed succinct representation image applications image clustering image retrieval image relevance ranking work relationships obtained lda cluster images success introduction advent world wide web proliferation digital cameras images common world large image collections common place capability automatically organize large collections badly needed text retrieval methods vector-space model fairly successful statistical models typically search large text collections text matching relevance algorithms cluster large collections text machine learning data mining techniques late surge interest applying similar techniques computer vision field project explore apply methods images discuss important issues present results implementation application specifically study images represented vector space model underlying model learnt large number images model applied interesting inferences simple terms clustering means group similar items clustering organize large collections library collection images web image search results large photo collections collection clustering assist browsing browsing tools complement search tools recently clustering applied identifying object categories form clusters images similar similar semantics similar visual appearance clustering infer characteristics collection traditionally called exploratory data analysis major difficulty applying techniques lies building representations images preparing compact description images hand laborious image collections huge accuracy consistency offset subjectivity chance descriptions changed order trends bulding image representations automatically determining representation depends application input collection color histograms work large collection variety images categorized image collection faces single person image representation care pose illumination luminance data collection large task infer general categories topics vector space model project represent image bag words word segment lda model learn inter-segment inter-image relationships learned model cluster images success rest paper structured section discusses issues image representation great detail description popular generative probabilistic models section section explain lda underlying model cluster images section present results section describes works related areas conclude section image representation apply techniques text domain images important issue address define analogue words image domain defining analogy define words documents respect image fixing partially restricts choice choosing image-word design choices image word pixel window pixels segment image image choice analogue word decides vocabulary analogue document instance image-word pixel image-document segment image case feature vector image document simply histrogram segment preclude figure word leftmost part shows sample segment middle part shows position segment relation image remaining part show feature vector defining relationships images images level abstraction higher image-document modeled chose entire image document feature vector document image histogram capture relationships parts image keeping mind issues discussed purposes define word segment image segment images n-cuts algorithm over-segment image slightly segments homogeneous figures show examples words words leftmost part image shows segment center part image shows position segment respect original image part figure shows feature vector histogram defining vocabulary defined word define vocabulary respect text simple define vocabulary vocabulary simply set figure word leftmost part shows sample segment middle part shows position segment relation image remaining part show feature vector words language image word defined pixel vocabulary set intesity values segment word define vocabulary set segments images intractably large number segments exponentially large values feature vectors real numbers infinitely reduce size vocabulary cluster entire set image segments segments clustered segments cluster considered equivalent comparing text domain similar grouping synonyms language choosing representative represent entire cluster synonyms words shown figures clustered group words considered equivalent selecting feature set cluster segments define set features segment compared importance choosing feature set over-stressed set features computed segment highly significant defines elements cluster vocabulary influences discovery topics probabilistic model segment compute properties color histogram gradient histogram texture properties energy correlation homogeneity contrast color histogram measure components red green blue segment gradient histogram idea uniformity segment properties energy correlation computed gray-level co-occurrence matrix give measure relative positions pixels segment set features choosing features application difficult problem evaluating cluster quality feature vector discussed previous sub-section perform clustering entire set image segments k-means algorithm k-means difficulties arise choice number clusters choosing perform clustering values evaluate quality clusters produced measures cluster compactness cluster separation cluster compactness csummationdisplay number clusters set data elements ith cluster entire data set computes variance radicalbig summationtextn cluster separation csummationdisplay csummationdisplay jnegationslash exp parenleftbigg xcj parenrightbigg xci centroid cluster distance metric clustering system cluster compactness notion close elements cluster cluster separation idea cluster centers evaluating clusters produced number clusters choose desired values compactness separation choice distance function comparing feature vectors feature vectors compared cosine distance measurement manhattan distance euclidean distance segments clustered image input data set represented vector word frequencies times segment belonging cluster occurs image input lda system generative models built representations images build mechanism learn underlying properties data draw generalizations current approaches broadly classified generative discriminative generative modeling learn model source generated data discriminative approaches directly optimizes training set desired output project recent generative model called latent dirichlet allocation explore apply images generative probabilistic models random sources generate infinite sequences samples probability distribution goal construct probabilistic model effectively generalize gaussian mixture models representing images popular model model images considered generated mixture topics topic represented gaussian distribution variance parameters distribution estimated algorithm language models model words occur document interested probability sequence words terminology word region uniform properties word -byblock uniform texture bluish appearance simplest model unigram model probability word independent words occurred document model consists single probability distribution entire vocabulary words vector probabilities word vocabulary basic generative process consists randomly pulling word bag observing putting back bag probability observing sequence puni nproductdisplay drawback unigram model model homogeneous collections considers documents consisting single topic essentially reperesented probability distribution problem images typically images consist foreground background markedly set distributions images multiple objects distinctive distribution order care heterogeneity collections mixture model generative process pick topic probability distribution topic chosen choose words topic distribution zth topic probability observing sequence model pmix ksummationdisplay nproductdisplay problems mixture model estimate number topics empirically models heterogeneity collections considers image homogeneous untrue images model probabilistic 
latent semantic indexing approach improves model model word generate pick topic distribution depends document distribution determines mixture topics document topic turn probability distribution based words generated probability observing sequence model pplsi nproductdisplay parenleftbigg ksummationdisplay parenrightbigg mixing ratios topics document depends document plsi suffers over-fitting inappropriate generative semantics improve latent dirichlet allocation model introduces distribution mixing distribution mixing distribution underlying distribution expressing uncertainty defined set -simplexes model dirichlet distribution models uncertainty generative process model pick mixing distribution probability word pick topic probability pick word topic probability probability observing sequence model plda integraldisplay braceleftbigg nproductdisplay ksummationdisplay bracerightbigg dpi parenleftbigg ksummationdisplay parenrightbigg kproductdisplay dirichlet distribution parameters number parameters estimate model parameters dirichlet distribution parameters topic models estimation paramaters variational inference algorithms lda text domain lda input documents form word frequency vector analogy represent image vector segment cluster frequencies images lda discovers topics represents topic simplex image segment-clusters lda describes image simplex discovered topics lda levels information relationship clusters segments images depending number topics highly concise representation image variety applications image clustering image retrieval relevance ranking topic-simplex representation image perform image clustering methodology entire process summarized image segment segments segment compute set features images cluster set segments feature vector reduce size vocabulary image compute frequecy representation times member cluster segments occurs image feed information input lda topic-simplex representation image cluster image data set figure sample input data set results present results initial clustering experiment images n-cuts phase segments cluster quality analysis fixed vocabulary size lda topics obtain topic-simplex representation image clustered images categories clustering phases cosine similarity measure similarity metric figure shows sample set input images images pictures roses ducks figure shows final results clustering features predominantly color-based cluster top-left figure clustered ouput sample data set rose ducks similar color proportions similarly cluster bottom roses ducks similar texture properties similar color proportions clusters show system works lighting conditions similar repeated experiment larger data set images images obtained cires image database images spread categories airplanes bridges coastline ducks roses segments n-cuts phase fixed vocabulary size based cluster quality analysis lda topics obtain topic-simplex representation image clustered images categories manhattan distance metric figures show sample clusters evaluated results manually found clustering performs correctly images evaluation tricky clusters predominant category misclassification occurs images categories share lot common characteristics images plane category images coastline category sky clouds defining accuracy clustering straight-forward considered images highly similar visual appearance belonging group related work forsyth ponce discuss idea clustering images enumerate advantages vector-space model well-known approach text information retrieval bag-of-words approach simplicity effectiveness key reasons popularity success bag words model vogue time people defined word context images ways word object part assumes image segmented parts accurately authors explore options choosing rectangular region word segmented regions words choose small fixed rectangular blocks blocks pixels uniform properties rectangular region chosen word choosing rectangle fixed size authors employ sampling determine block size propose blocks salient point saliency detector explore dog detector alternative constructing rectangular blocks elliptical regions constructed interest points detected sift operator words scale affine invariant operator detect features words constructed feature selection depends largely problem papers proposed features varying results choosing good feature depends data set application authors provide primer feature selection figure cluster roses figure shows sample cluster clusters image coast appears cluster highly similar background rose images features computed color histograms primary features work task differentiate set indoor outdoor images edge direction histograms figure cluster airplane pictures figure shows cluster predominantly planes coastal images occur airplanes presence sky clouds differentiate mountain images city images color histograms spatial relations color correlograms spatiality account blei real-valued features computed visual properties size color position texture shape represents objects luv color space project color histograms texture histograms features figure cluster coastline pictures figure shows cluster coastline pictures predominantly sky water trees land generative models owe popularity elegance generality applications learned model applied good discussion generative models images introduces statistical models explaining sophisticated model offers blei introduces latent dirichlet allocation lda model applies model matching words images lda model applied images extends lda model support hierarchical modeling applies images generative model enhanced hmm model auto-innotate images clustering popular choice reduce size vocabulary vector space model k-means clustering dimensionality reduction clustering means segment images order determine number clusters stopping criterion divisive clustering bayesian information criterion metric determine number clusters project linear combination cluster compactness cluster separation metric determine number clusters conclusions paper applied bag-of-words model images explored ways defining word context image segment produced n-cuts algorithm found smaller segments improved results considerably smaller segments uniform properties represented segment based color histograms reduce dimensionality vocabulary k-means algorithm order determine number clusters evaluated cluster quality cluster compactness cluster separation metrics experimented cosine similarity measure manhattan distance clustering found manhattan distance yielded results generative probabilistic model latent dirichlet allocation lda model learn inter-segment relationships inter-image relationships unsupervised manner found lda model works larger data sizes image representation lda model cluster large data set found images clustered correctly acknowledgements prof charles dyer encouragement support project prof jerry zhu introducing lda model numerous discussions vailaya figueiredo jain zhang image classification content-based indexing ieee transactions image processing volume pages barnard duygulu forsyth freitas blei jordan matching words pictures mach learn res blei jordan modeling annotated data sigir proceedings annual international acm sigir conference research development informaion retrieval pages york usa acm press chen wang image categorization learning reasoning regions mach learn res deselaers keysers ney features image retrieval quantitative comparison lecture notes computer science volume pages springer jan fergus fei-fei perona zisserman learning object categories google image search iccv proceedings tenth ieee international conference computer vision iccv volume pages washington usa ieee computer society forsyth ponce computer vision modern approach prentice hall ptr csurka bray dance fan visual categorization bags keypoints workshop statistical learning computer vision pages perona bayesian hierarchical model learning natural scene categories cvpr proceedings ieee computer society conference computer vision pattern recognition cvpr volume pages washington usa ieee computer society wang automatic linguistic indexing pictures statistical modeling approach ieee trans pattern anal mach intell fei-fei rob fergus recognizing learning object categories http people csail mit fergus iccv bagwords html 
szummer picard indoor-outdoor image classification ieee int workshop contentbased access image video databases pages salton mcgill introduction modern information retrieval mcgraw-hill york usa schaffalitzky zisserman multi-view matching unordered image sets organize holiday snaps proceedings european conference computer vision copenhagen denmark volume pages sivic russell efros zisserman freeman discovering object categories image collections aim- massachusetts institute technology february srikanth varner bowden moldovan exploiting ontologies automatic image annotation sigir proceedings annual international acm sigir conference research development information retrieval pages york usa acm press sudderth torralba freeman willsky learning hierarchical models scenes objects parts iccv proceedings tenth ieee international conference computer vision iccv volume pages washington usa ieee computer society lavrenko generative theory relevance phd thesis umass westerveld generative probabilistic models multimedia retrieval sigir forum 

texture synthesis non-fronto-parallel textures related applications project report saurabh goyal saurabh wisc advisor prof chuck dyer introduction previous work texture synthesis addressed fronto-parallel textures camera parallel planar texture report describe perspective deformations texture image dealt texture synthesis synthesized image retains perspective ects visible original texture image rst sections preliminary discussion texture synthesis recti cation texture images term refer pattern intensities pattern image interaction lighting surface normals surface ectance pattern stochastic regular natural textures stochastic image wood grass foliage water hair examples regular textures include images brick wall patterned garments regular textures images man-made objects result repetitive process figure left image regular texture stochastic common representing texture apply lters image gather statistics responses choosing scale orientation lters trivial vision algorithms textures require user identify texel size standard problems explored texture texture synthesis shape texture work presented report develops techniques problem domains sections describe problems detail texture synthesis goal construct large regions texture small nite sample assumption nite sample large capture properties texture crude approach tile small sample produces visual artifacts edges images joined considerable literature techniques texture synthesis essentially build probability models texture synthesized based image draw models obtain texture randomness introduced allowing tolerance level error forcing random noise image variety techniques gibbs sampling multi-resolution ltering properties joint wavelet coe cients proposed texture synthesis efros leung presented simple technique regular stochastic textures idea model texture markov random field assumed intensity pixel neighbors independent rest image order synthesize pixel square window compared windows image center pixels matching windows form probability model pixel synthesized center pixel randomly chosen matching windows randomness matches perfect amount error allowed matching process efros freeman noticed lot extra work synthesizing pixel time proposed faster algorithm called image quilting image quilting algorithm synthesizes entire patch time algorithm requires user choose patch size overlap size synthesize patch patches image checked random patch satis overlap constraints chosen location patch synthesized order match boundaries overlapping patches minimum error boundary cut found finding minimum error boundary cut dynamic programming complete quilting algorithm image synthesized raster-scan order steps block minus overlap location search input texture set blocks satisfy overlap constraints left error tolerance randomly pick block compute error surface newly chosen block blocks overlap region find minimum cost path surface make boundary block paste block texture repeat modify image quilting algorithm texture synthesis technique helpful details image quilting algorithm shape texture problem researchers looked recover shape textured object projected texture foreshortening ects ected distribution texture elements work recovering general surface report examine case planar textures non-planar textures small deviation planarity compared viewing distance assumed planar problem slant tilt textured plane respect camera thought nding homography fronto parallel view textured plane actual image assumptions required solve problem typical camera assumptions include orthographic projection camera calibration assumption uniformity required texture assumption isotropy isotropic texture distribution texture elements independent orientation assumption metric recti cation texture image impossible recover scale rotation forcing additional constraints major problem assumption isotropic textures rare methods based isotropy assumption handle general class general assumption homogeneity homogeneous texture repetitive texture elements local windows drawn image property homogeneous textures transformation texture remains homogeneous forcing homogeneity recover distortion texture image recover perspective distortion common optimization methods transformation makes texture homogeneous methods slow large space transforms searched criminisi zisserman presented step process recovering perspective distortion computed vanishing line estimating direction vanishing line distance center image vanishing line easy form transformation matrix correct perspective distortion important result nding direction vanishing line points line parallel vanishing line perspective distortion direction points undergo distortion measure variance normalized auto correlation nac values direction seek maximize algorithm stated repeat select random image patch random center location compute related nac surface search direction maximum variance nac values inside strip xed width centered direction required direction corresponds median set computed angles crude implementation algorithm nement techniques implementation algorithm work images figure shows result applying implementation perspective image checkerboard pattern top image input texture image graph bottom shows variance nac values orientation respect chosen patch maximum obtained approximately degrees true vanishing line angle degrees positive axis faces figure results computing direction vanishing line advantage algorithm quick fast techniques computing auto-correlation scan image required add contribution pixel variance nac values estimating degree freedom vanishing line distance image center similar optimization process criminisi zisserman ned similarity function called projective normalized auto correlation pnac searched distance variance entire pnac surface maximized step time consuming reasons range distances searched unlimited search space angle degrees distance pnac surface computed entire image direction orientation nac surface computed pixels orientation compute pnac square window warped pixel fast techniques problem resolved rectifying image computing pnac introduces sampling problems computing direction vanishing line helpful non-fronto-parallel texture synthesis texture synthesis non-fronto-parallel textures section describe homogeneous texture viewed general perspective camera synthesize larger regions texture goal extend texture perspective nature texture remains unchanged ways attack problem step approach apply texture recti cation algorithm generate fronto-parallel view texture apply previous texture synthesis algorithms synthesized texture warped back inverse rectifying transformation pointed previous section obtain metric recti cation homogeneous texture turns perform recti cation yield homogeneous texture homogeneous texture extended algorithms image quilting projective invariant texture synthesis algorithm algorithm texture synthesis invariant projective transformations advantage algorithm avoids sampling errors recti cation problem rst approach recti cation texture time consuming projective invariant synthesis algorithm require estimation transformation performance texture synthesis nding algorithm algorithm extending texture vanishing line texture reached texture extended estimate vanishing line texture image texture synthesis algorithm projective invariant algorithm time consuming estimating transformation whichever approach algorithm texture synthesis non-fronto-parallel textures time consuming direction vanishing line estimated quickly limited texture synthesis directional quilting describe image-based texture synthesis algorithm requires estimation direction vanishing line key observation leads algorithm perspective image plane points line parallel vanishing line perspective distortion criminisi zisserman presented proof observation image quilting patch synthesized searching patches size image perspective transformation patches lie line parallel vanishing line location patch form probability model patch patches undergone perspective distortion patch steps describe complete directional quilting algorithm estimate direction vanishing line image synthesized raster-scan order steps block minus overlap location search blocks input image lie line passing location parallel 
vanishing line select random block blocks satisfy overlap constraints input texture image output directional quilting output image quilting figure texture synthesis results compute minimum error boundary cut chosen block overlapping blocks synthesized image make boundary chosen block paste chosen block texture algorithm image quilting algorithm fact blocks lying line overlap constraints techniques minimum error boundary cut image quilting error overlap computed ssd block synthesized image overlapping region blocks fall threshold emin assumed satisfy overlap constraints minimum error boundary cut search paths assuming boundary continuous formulated dynamic programming problem eij eij min expression minimum error vertical cut similar expression horizontal cut figure shows results obtained applying directional quilting algorithm image vanishing line image makes angle degrees axis direction computed manually entered perspective ects preserved image texture extended direction perpendicular vanishing line image obtained original image quilting algorithm preserve perspective ects original image advantage algorithm fast direction vanishing line estimated blocks line searched synthesizing block algorithm image based sampling errors introduced due recti cation main limitation algorithm synthesizing texture direction vanishing line extend texture direction perpendicular vanishing line computing distance vanishing line related applications real scene synthesis rst application explored synthesis real scenes perspective textures figure shows image sunrise water sky planes vanishing line segmentation required synthesizing larger image image shows result applying directional quilting image perspective ects water visible applying standard texture synthesis algorithms image produce comparable results images multiple planes erent vanishing lines non-planar objects segmentation plane needed plane extended separately combining extended planes complicated foreground removal texture synthesis algorithms foreground removal area directional quilting applied directional quilting possibly handle larger range textures foreground object removed foreground removal typically require extending texture current image boundary directional quilting addition foreground removal realistic scenes figure shows foreground removal real scene rectangular area car selected directional quilting performed rectangular area blocks lie rectangular area artifacts visible bottom edges removed area original algorithm modi overlap bottom edges account extension easy produce results explore lling orders linear structures account criminisi provided foreground removal sophisticated order conclusions future work report presented summary previous work texture synthesis planar texture recti cation approach image sunrise synthesized image figure results real scene synthesis input image foreground object image car removed figure results foreground removal texture synthesis non-fronto-parallel textures algorithm image based introduce sampling errors require estimation direction vanishing line rst step applications algorithm major limitation directional quilting algorithm extension texture direction faster methods compute perspective transformation found fast algorithm restricted direction assuming general transforms locally extrapolation direction perpendicular vanishing line problem similar generating number series previous numbers depending previous values required generate accurate simplest case assume previous values related scale factor scale factor generate repeatedly introduce artifacts original perspective ects retained assuming locally-a models helpful perspective textures transform domains give insights developing faster algorithms computing degree freedom vanishing line applications texture recti cation texture synthesis texture recti cation algorithms single view metrology texture estimating vanishing points wide baseline stereo matching application wide baseline stereo correlation-based approaches work signi perspective distortion cases textures patches matched order match transformation computed texture synthesis applications texture transfer extended non-frontoparallel textures criminisi perez toyama object removal exemplarbased inpainting cvpr pages criminisi zisserman shape texture homogeneity revisited proceedings british machine vision conference bristol pages september bonet multiresolution sampling procedure analysis synthesis texture images whitted editor proc siggraph pages addison wesley efros freeman image quilting texture synthesis transfer proc siggraph pages efros leung texture synthesis non-parametric sampling proc int conf computer vision pages forsyth ponce computer vision modern approach chapter texture prentice hall upper saddle river portilla simoncelli texture modeling synthesis joint statistics complex wavelet coe cients proc workshop statistical computational theories vision witkin recovering surface shape orientation texture arti cial intelligence s-c zhu mumford frame filters random eld maximum entropy uni theory texture modeling int computer vision 
segmentation human brain cortical surface mesh watersheds kathleen marty final project abstract cortical surface mesh convoluted structure purpose segmenting mesh impose higher level structure represents underlying structure mesh segmentation reduce mesh meaningful connected pieces paper segmentation watershed algorithm implemented brain cortical surface meshes height function curvature measure inherent geometry mesh curvature measures compared gaussian absolute root square introduction motivation cortical surface mesh exists simply collection connected polygons purpose segmenting mesh impose higher level structure represents underlying structure mesh segmentation reduce mesh meaningful connected pieces meaningful implies partitioned areas relevant application hand segmented sulci brain mesh serve landmarks register mesh brain meshes make comparisons comparisons serve measure brain growth identify diseases addition segmented surface serve visualization tool division individual sulci gyri labeling gyri separate labelings sulci region problem statement purpose paper segment brain mesh watershed algorithm watershed algorithm implemented segment brain cortical surface mesh curvatures height function watershed algorithm region-merging step implemented addition curvature estimates applied results related work related work involving segmentation sulci waterheds rettmann work focuses segmenting actual cortical regions surrounding sulci referred sulcal regions paper geodesic depth mesh points sulci regions height function watershed algorithm work segmenting sulci involved methods fitting surface extracting volumetric regions sulcal spaces finding set points extracting curve representations sulci relevant methods listed segmentation human brain cortical surface mesh watershedsdecember common segmentation cortical mesh sulal gyral regions gyri brain defined top surfaces brain folds ridges sulci brain defined area brain folds basins segmentation cortical surface terms sulci gyri occur ways general division separation sulci gyri labelings methods vary data segment directly images segment surface mesh classic work watershed algorithm image segmentation serra method extended arbitrary meshes mangan whitaker discrete curvatures efficient watershed method based immersions created vincent soille theory watersheds concept field topology idea straightforward simulate rain falling surface drop descend gradient reaches local minima catchment basin ridges separate catchment basins defined watersheds applying watersheds surface mesh occurs independent steps sorting step based vertex heights flooding step step region merging added eliminate insignificant basin labelling steps detail sorting step define height function step define height function vertex mesh sort vertices based calculated heights height function determine order vertices flooded step interesting note watersheds extended dimensions height function dimensional element image mesh defines element height determining height function -dimensional mesh difficult problem general methods intuitive structure mesh geodesic distances curvature measures geodesic distances heights geodesic distances determined brain mesh concepts detail gyral regions geodesic depth definition gyral shrink-wrap wrapped surface define maximum height geodesic depth gyral shrinkwrap vertices sulcal regions calculated fast marching method extended triangulated domains kimmel sethian curvatures heights curvatures height measure idea ridges basins opposite signed curvatures cortical surface naturally divided ridges gyri basins sulci major complication curvature directly evaluated triangle meshes mathematically defined smooth surfaces discrete differential-geometry operators developed estimate curvatures triangulated manifolds derivations scope paper explored obtain curvatures surface locally parameterized satisfy smoothness constraint parameterization fundamental forms estimated directly fundamental forms calculate curvature measures gaussian rootmean-squared absolute curvatures briefly parametric surface form real values functions single valued continuous assumed continuous partial derivatives fundamental form fundamental form xuv yuv zuv fuv muv segmentation human brain cortical surface mesh watershedsdecember surface normal point normal curvature surface point direction tangent normal curvature based direction attains maximum minimum values called principal curvatures gaussian curvature curvature root square curvature rms absolute curvature discrete curvature estimates directly general give accurate estimate actual curvatures brain discrete mesh inherently noisy taking derivatives obtain curvatures mesh exacerbates noise noise result image acquisition mesh creation surface parameterization filter smooth noise expense distorting features gaussian smoothing preferred method image analysis smoothing method paper diffusion smoothing diffusion smoothing generalization gaussian kernel smoothing reformulated solution diffusion equation riemannian manifold application smoothing curved surfaces laplace-beltrami operator details operator triangular meshes found flooding step vertices sorted heights step progressive flooding catchment basins order sorting step step succinctly vincent soille analogy figure pierced holes regional minimum picture regarded topographic surface slowly immerse surface lake starting minima lowest altitude water progressively fill catchment basins pixel water coming minima merge build dam end immersion procedure minimum completely surrounded dams delimit catchment basin set dams built tessellation catchment basins dams correspond watersheds major problem step local minima produces catchment basin labeling cortical mesh inherently noisy local minima result watershed algorithm bound oversegmented ---k --------------------h -------------------- rms -----------------h abs segmentation human brain cortical surface mesh watershedsdecember region merging step strategy reducing oversegmentation merge regions based saliency measure structure catchment basins variety metrics define insignificant regions shallow regions relative constant curvature tend caused noise define minimum depth required catchment basin merge surrounding catchment basins measures merge regions features scale-space identify important features basins merge approach gauch implemented paper region merging strategy paper based height ridge separating catchment basins relative depth catchment basins threshold merged strategy introduced rettmann algorithm starts deepest basins merged method detailed description method data tools paper mesh description brain meshes obtained courtesy moo chung statistics dept format meshes montreal neurological institute mni triangular mesh file format meshes created -weighted mri images anatomic segmentation proximities asp method mesh vertices triangle faces average internodal distance curvatures smoothing matlab code chung calculate gaussian curvatures smooth curvatures diffusion smoothing parameters set smoothing process fwhm full-width half maximum size gaussian kernel boolean parameter set diffusion smoothing calculated local quadratic parameterization finite element method typical fwhm parameter equal size brain folds fem analytically accurate local quadratic parameterization method matlab code extended calculate rms root-mean-squared absolute curvatures comparison purposes watershed algorithm sorting step achieved standard sorting routine flooding step implemented watershed algorithm vincent soille segment sulci leave gyri region flooding threshold threshold curvatures curvature sign region-merging extension region-merging step added heuristic found heuristic defined section page typical region-merging threshold visualization software freely software caret visualization software code written convert files form mni file format common vtk file format caret matlab offers numerous advantages caret software colors vertex assigned color interpolates colsegmentation human brain cortical surface mesh watershedsdecember ors differing vertices matlab colors faces interpolation making difficult vertices labeled matlab interpolate faces create smooth-looking surface feature works simple surfaces work cortical mesh caret smooth cortical mesh 
ectance function approximation material classi cation edward wild final project report abstract ectance functions approximated data kernel regression classify materials classi cation algorithms proposed deal unseen materials experimental results show ectance functions approximated accurately kernel regression accurate approximations classify materials kernel regression techniques convex optimization techniques simpler nonlinear techniques sophisticated ectance models data preliminary results suggest extend classi cation work unseen materials important implications scalability method introduction report summarizes results project approximate ectance functions classify materials based approximations report motivates importance studying ectance function approximation material classi cation states speci conditions considered methods summarized experimental results presented finally future directions research proposed brie discussed figure scene analyzed ectance function information motivation ability recognize materials based ectance potential applications ability recognize materials cotton denim skin gure make easier segmentation feature tracking object recognition segmentation easier illumination shirt appears make edge shirt ectance information segmentation algorithm realize edge ect illumination edge erent regions feature tracking improved enforce constraint features material frames object recognition improved combination materials denim cotton skin con guration extremely picture person algorithms make ectance information deal illumination pose problem statement ectance functions studied bidirectional ectance distribution functions work measurements ectance functions considered exact meaning scene geometry illumination figure illustration ectance wallace price online http dai cvonline local copies marble medium shading ect htm ectance functions real valued functions variables variables angles view illumination directions make surface normal situation illustrated gure angle view direction surface normal angle illumination direction surface normal ectance function function variables curet database ectance functions measurements bidirectional ectance distribution function materials material measured erent values database http columbia cave curet related work ectance functions classi cation explored dror distinguish materials based ectance properties motivation appears work fleming humans make ectance properties identify materials curet database ectance functions dana oren-nayar ectance model koenderink representation curet data dana great deal research ectance models work uential project work lafortune mccool work lensch papers ectance functions approximated combination basis functions ectance functions approximated complicated nonlinear optimization techniques method multiple steps required recognize materials ectance properties accurate approximation measured ectance functions materials made accurate approximations classify materials kernel approximation ectance functions curet database dana brdf measurements erent materials measurements form project requires accurate approximations functions approach kernel regression techniques approximate functions accurately kernel regression implemented solving optimization problem min row matrix coordinate measured brdf commonly gaussian kernel exp vector vector dimension parameters problem controls width gaussian functions determines weight error measured data approximation large amount error approximation measured data reduced measurements believed accurate solution problem vector scalar property optimization problem turns convex xed erentiable minimum found taking derivative setting equal result linear system equations procedure selecting algorithm algorithm ten fold cross validation select parameters sets ten fold cross validation choose parameters good performance unseen data algorithm describes cross validation procedure detail algorithm kernel regression tfcve fapply algorithm end end end kr-solve fapply algorithm classi cation ectance functions approximations ectance functions classify materials set ectance function approximations nearest-neighbor algorithm classify set measurements classi cation performed nding function closest measured values measured points procedure classifying substance detail algorithm limitation algorithm works materials ectance functions measured approximated experimental results discussed section identify materials fewer measurements needed make accurate ectance function approximation unseen material material ectance function approximated determine measurements unseen material materials ectance function approximated procedure detail algorithm algorithm tfcve shu partition folds approximately data mutually disjoint atrain ytrain kr-solve atrain ytrain fapply algorithm train alpha yij jyij fadd average error foldg end algorithm kr-solve solve equation obtain algorithm classify set ectance functions approximate measured points fid identi material end end algorithm classify recognize unseen materials return material material unseen classify fapply algorithm end practical terms algorithm slightly algorithm improvement utility small algorithm recognizes materials ectance functions measured improvement longer incorrectly classify unseen material material closest ectance function algorithm measure similar unseen materials proposed improvement algorithm algorithm recognize unseen materials classify algorithm recognize unseen materials classi erent times material improvement step algorithm approximates ectance function unseen materials ectance functions closest materials neighboring ectance functions basis ectance function approximation inspired work lensch algorithm classify unseen materials augment ectance functions materials classify fapply algorithm approximate ectance function linear combination nearest neighbors unique material ffg end experimental results experiments investigate performance techniques previous section ectance function approximation material classi cation sample number fold cross validation error figure approximation error materials curet database ectance function approximation data experiment demonstrates performance kernel regression reectance function approximation materials curet database approximated measured data results shown gure error reported fold cross validation error material data material broken training testing sets algorithm run training set obtain approximation evaluated testing set error reported average error testing sets note cross validation procedure performed addition procedure algorithm selects parameters figure shows materials approximated accurately kernel regression note approximations percent average error parameters obtaining results results obtained larger accurate approximation sample plaster average error percent accurate approximation sample brick average error percent fraction data training average test set classification error figure classi cation error curet database classi cation materials ectance functions test classi cation materials ectance functions approximations made curet data data create approximations evaluate accuracy classi cation system figure shows results experiment evaluates classi cation accuracy experiment performed tting approximations fraction data substance attempting classify substance remaining data algorithm process repeated times fraction data random fraction data selected tting approximation time gure note trend classi cation accuracy improve fraction data make approximation increases approximations made algorithm gand performance improve larger fraction data training average test set classification error figure classi cation error reduced database results reduced database order deal unseen materials accurate approximations ectance functions needed achieve accuracy reduced database materials approximation error percent substances pebbles kinds plaster ribbed paper salt crystals stones concrete make claim results achieved reduced database extend full database smaller database algorithms developed tested quickly hope improving accuracy ectance function approximations results achieved database apply full database hand algorithms fail database discarded reduced database serves convenient lter algorithm development figure shows results classifying materials based reectance functions gure created method gure section samples reduced database considered natural average classi cation error 
visually appealing experimental results results iterations iteration curvature measure height watershed algorithm curvatures gaussian absolute root square rms parameters parameters algorithm displayed tables page include smoothing kernel size fwhm flooding threshold merging threshold kernel size set typical size feature detected threshold values determined empirically thresholds chosen produced visually appealing results visually appealing results labeled vertices inside sulcal basins gyri good amount labeled vertices inside sulcal basins idea fill basin curvature distributions curvature distribution results shown tables figure pages curvature distributions depicted graphically figure ranges values tables labeling results labels resulting watershed segmentation algorithm depicted graphically figures pages label corresponds color tables describe vertices labeled labels resulted flooding step labels resulted merging step general merging step reduced number labels results absolute rms curvature measures show vertices labeled curvatures suspected reason absolute curvatures rms curvatures easily affected noisy areas produced labeled vertices part brain brain stem connects shown pictorially absolute rms give good results curvature height function preferred labeled vertices sulcal basins absolute rms curvatures follow closely favoribility flaw tendency area labelings spread lot area labelings results interpretation inherent difficultly interpretation results definition correct papers expert opinions neurologists sulci gyri exist visual results interpreted idea gyri surfaces top brain folds ridges sulci surfaces brain folds basins idea section visually appealing results concluding remarks work results shown segmentation cortical surface watershed algorithm future work include implementation height functions line inquiry graph optimization techniques segment cortical mesh segmentation human brain cortical surface mesh watershedsdecember chung statistical morphometry computational neuronatomy thesis mcgill universtiy montreal canada gauch image segmentation analysis multiscale gradient watershed hierarchies ieee transactions image processing vol jan kimmel sethian computing geodesic paths manifolds proc national academy sciences lohmann von cramon automatic labelling human cortical surface sulcal basins medical image analysis macdonald kabani avis evans automated extraction adn outer surfaces cerebral cortex mri neuroimage mangan whitaker partitioning surface meshes watershed segmentation ieee transactions visualization computer graphics vol oct -dec mangin frouin block regis lopez-krahe magnetic resonance images structural representations cortex topography topology preserving deformations math imaging vision meyer desbrun schroder barr discrete differential geometry operators triangulated -manifolds caltech pulla razdan farin improved curvature estimation watershed segmentation -dimensional meshes arizona state rettmann han prince automated sulcal segmentation watersheds cortical surface neuroimage serra image analysis mathematical morphology academic press tao han rettmann prince davatzikos statistical study cortical sulci human brains proc xviith international conference information processing medical imaging vincent soille watersheds digital spaces effiencet algorithm based immersion simulations ieee transactions pattern analysis machine intellignece vol june zhou thompson toga extracting representing cortical sulci computer graphics applications caret software david essen washington http stp wustl resources caretnew html appendix matlab code attached segmentation human brain cortical surface mesh watershedsdecember table curvature segmentation fwhm curvature distribution range distribution flooding threshold merging threshold total vertices vertices labeled labels flooding labels merging table gaussian curvature segmentation fwhm curvature distribution range distribution flooding threshold merging threshold total vertices vertices labeled labels flooding labels merging table absolute curvature segmentation fwhm curvature distribution range distribution flooding threshold merging threshold total vertices vertices labeled labels flooding labels merging table rms curvature segmentation fwhm curvature distribution range distribution flooding threshold merging threshold total vertices vertices labeled labels flooding labels merging figure distribution curvatures vertices figure distribution gaussian curvatures vertices figure distribution absolute curvatures vertices figure distribution root square rms curvatures vertices figure top view segmentation curvatures figure top view segmentation gaussian curvatures figure top view segmentation root square curvatures figure top view segmentation absolute curvatures figure lateral view segmentation curvatures figure lateral view segmentation gaussian curvatures figure lateral view segmentation absolute curvatures figure lateral view segmentation root square curvatures figure top view segmentation curvatures projected sphere figure top view segmentation gaussian curvatures projected sphere figure top view segmentation absolute curvatures projected sphere figure top view segmentation root square curvatures projected sphere 
reduced gure reduction implies classi cation error decreasing approximation error full database improved classi cation accuracy reduced database reduced database test procedures classifying unseen materials preliminary experiments identify unseen materials correctly algorithm error algorithm successful result sophisticated method ectance function approximation unseen materials ramamoorthi hanrahan method test performance algorithm procedure simulates arrival measurements unseen material erent times goal system recognize separate sets measurements material percent measurements material randomly selected classi cation data referred classi cation data remaining data obtain function approximations algorithm resulting set ectance functions materials turn unseen manner half classi cation data material attempt classify material ectance functions ffjid result material unseen linear squares set weights nearest materials function row vector functions nearest neighbors remaining half classi cation data attempt classify material time result considered correct closest material function threshold accept reject materials average error materials reported threshold percent error percent obtained result means percent time algorithm correctly recognized rst classi cation measurements unseen material classi cation measurements unseen material control algorithm run threshold achieving error performance algorithm improved method tune parameters conclusion future work project applied kernel regression problem ectance function approximation presented mechanism resulting approximations material classi cation process extended unseen materials preliminary results reported results dealing unseen materials high hoped potential improve sophisticated techniques future testing needed evaluate performance algorithms dealing unseen data complete dataset obvious extensions project include larger numbers parameters exploring ectance function models improvements improve accuracy approximation improve classi cation accuracy classi cation algorithms support vector machines arti cial neural networks investigated make algorithms ective substances similar ectance functions grouped possibly unsupervised clustering algorithms grouping process make approach scale larger numbers materials remove parameter procedure approximating ectance functions unseen materials algorithm parameter longer needed unseen material approximated functions group extensions project involve making classi cation process work geometry illumination unknown techniques mentioned class approximate geometry methods ramamoorthi hanrahan recover illumination conditions fact methods result approximation ectance function priori materials scene ectance functions approximated material closest ectance function approximation improve estimate geometry illumination cherkassky mulier learning data concepts theory methods john wiley sons york kristin dana bram van ginneken shree nayar jan koenderink ectance texture real-world surfaces ieee conference cvpr page http citeseer nec article dana ectance html kristin dana bram van ginneken shree nayar jan koenderink ectance texture real-world surfaces acm transactions graphics http citeseer nec article dana ectance html dror adelson willsky surface ectance estimation natural illumination statistics proceedings ieee workshop statistical computational theories vision http citeseer nec dror surface html ron dror edward adelson alan willsky estimating surface ectance properties images unknown illumination proceedings spie human vision electronic imaging san jose california january drucker burges kaufman smola vapnik support vector regression machines mozer jordan petsche editors advances neural information processing systems pages cambridge mit press evgeniou pontil poggio regularization networks support vector machines smola bartlett sch olkopf schuurmans editors advances large margin classi ers pages cambridge mit press fleming dror adelson humans determine ectance properties unknown illumination proceedings cvpr workshop identifying objects variations lighting psychophysics computation colocated cvpr kauai hawaii december http citeseer nec eming html koenderink van doorn stavridi bidirectional reection distribution function expressed terms surface scattering modes eccv european conference computer vision proceedings volume pages eric lafortune sing-choong foo kenneth torrance donald greenberg non-linear approximation ectance functions computer graphics annual conference series http citeseer nec lafortune nonlinear html hendrik lensch michael goesele jan kautz wolfgang heidrich hans-peter seidel image-based reconstruction spatially varying materials steven gortler karol myszkowski editors proceedings eurographics workshop rendering pages london great britain springer http citeseer nec lensch imagebased html mangasarian generalized support vector machines smola bartlett sch olkopf schuurmans editors advances large margin classi ers pages cambridge mit press ftp ftp wisc math-prog tech-reports mangasarian musicant large scale kernel regression linear programming machine learning ftp ftp wisc pub dmi tech-reports michael mccool jason ang anis ahmad homomorphic factorization brdfs high-performance rendering eugene fiume editor siggraph computer graphics proceedings pages acm press acm siggraph http citeseer nec mccool homomorphic html oren nayar generalization lambertian model implications machine vision ijcv april http citeseer nec oren generalization html ravi ramamoorthi pat hanrahan signal-processing framework inverse rendering eugene fiume editor siggraph computer graphics proceedings pages acm press acm siggraph smola sch olkopf kernel-based method pattern recognition regression approximation operator inversion algorithmica vapnik nature statistical learning theory springer york edition yizhou paul debevec jitendra malik tim hawkins inverse global illumination recovering ectance models real scenes photographs alyn rockwood editor siggraph annual conference series pages los angeles addison wesley longman http citeseer nec article inverse html 
steve jackson sjackso november methods implementation broken steps step implemented matlab program source code program handin directory breakdown tracker cpp program accepts images klt feature point tracker determine motion consecutive pairs images output binary feature table files pixel locations tracked feature points images homography cpp program accepts output tracker program determines points image pair compute homographies homography program ransac algorithm randomly choose sets tracked points computes quality resulting planar transformation based points correctly mapped transformation output text file pair image text file set point mappings determined ransac algorithm leastsq transform matlab program accepts output homography program generates projective matrix maps image coordinate frame homography program outputs point correspondences found good computation projective matrix overconstrained problem projection computed squares homography convert image-to-image projections computed leastsq transform function matlab function generates projection matrices directly map coordinates images coordinate images create single matrix image map image coordinates image middle image sequence make mosaic final step program accepts images homographies computed homography convert program creates mosaic images image sequences made mosaics video image sets monona terrace set provided public directory home video pans slowly long line aluminum cans image set optical center camera moving motion approximately line chose set experiment algorithm stand one-dimensional camera motion monona terrace images sequence size parameters number klt features tracked image pair modifications klt default parameters klt trackingcontext structures modified code tcsmoothbeforeselecting true tcwindow width tcwindow height kltupdatetcborder number ransac trials image pair distance tolerance point mapping considered good ransac algorithm parameters chosen based experimentation fewer features fewer ransac trials tended produce poorer results figure monona terrace sequence frame figure monona terrace sequence nineteenth frame figure monona terrace sequence final mosaic pixels soda cans images sequence size parameters number klt features tracked image pair modifications klt default parameters klt trackingcontext structures modified code tcsmoothbeforeselecting true number ransac trials image pair distance tolerance point mapping considered good ransac algorithm final step mosaic made data image sequence parameters chosen based experimentation note resulting mosaic image fairly poor reasons discussed continue experimenting parameters algorithm produce output manage create good send date figure soda sequence tenth frame results cans sequence poor significant motion parallax image sequence expected regions beneath tops cans blurred tops cans line crisply part problem unsteadiness camera image sequence floating point error issue images sequence figure soda sequence frame figure soda sequence frame figure soda sequence final mosaic pixels 
perspective object sheet glass surface marked things glass leonardo renaissance filippo brunelleschi discovered perspective italian art late middle ages discovery perspective giovanni fei presentation virgin bartolo nativity virgin perspective image masaccio fresco trinity perspective art giotto perspective campin perspective devices drawing perspective camera obscura camera lucida perspectograph jan vermeer music lesson perspective art optical center scene image plane pinhole camera pinhole camera image coordinates alberti grid pinhole camera suggesting moving camera multiperspective image incorporates perspectives single locally-coherent image moving window slides panorama selecting frames creating animation disney film pinocchio multiperspective image extracted frames multiperspective image van eyck ghent alterpiece hockney pearblossum highway fisheye lens image single optical center omnidirectional image 
perspective object sheet glass surface marked things glass leonardo renaissance filippo brunelleschi discovered perspective italian art late middle ages discovery perspective giovanni fei presentation virgin bartolo nativity virgin perspective image masaccio fresco trinity perspective art giotto perspective campin perspective devices drawing perspective camera obscura camera lucida perspectograph jan vermeer music lesson perspective art optical center scene image plane pinhole camera pinhole camera image coordinates alberti grid pinhole camera suggesting moving camera multiperspective image incorporates perspectives single locally-coherent image moving window slides panorama selecting frames creating animation disney film pinocchio multiperspective image extracted frames multiperspective image van eyck ghent alterpiece hockney pearblossum highway fisheye lens image single optical center omnidirectional image 

lensless imaging systems pinhole optics pinhole optics focuses images lens infinite depth field smaller pinhole focus light energy single point diffraction pinhole optics diffraction disadvantages pinhole systems light collecting power diffraction diffraction light passes small aperture travel straight line scattered directions process called diffraction quantum effect human vision high light levels pupil aperture small blurring due diffraction low light levels pupil open blurring due lens imperfections human eye limitations human vision image upsidedown high resolution vision fovea small fovea man animals birds cheetas foveal organizations blind spot color cameras types color cameras built filters images collected red green blue filters cameras slower comparable black white cameras ccd arrays packed sensitive wavelengths light similar human vision 
normalized cut method image segmentation shi malik ieee trans pattern analysis machine intelligence divisive aka splitting partitioning method graph-theoretic criterion measuring goodness image partition hierarchical partitioning dendrogram type representation regions criterion measuring candidate partitioning affinity measure elements region high affinity elements regions low affinity element element examples components affinity function spatial position intensity color texture motion defines similarity pair data elements affinity similarity measures intensity distance color texture motion aff yxyx aff iiie yxyx problem formulation undirected graph set nodes data element pixel set edges weights representing affinity connected nodes find image partition maximizes association region minimizes disassociation regions finding optimal partition np-complete partition affinity similarity defined cut total weight edges removed optimal bi-partition minimizes cut cut biased small regions bjai ijw define normalized similarity called normalized-cut assoc total connection weight nodes nodes ncut measures disimilarity regions disassociation measure ncut removes bias based region size vkai ikw vbassoc abcut vaassoc bacutbancut similarly define normalized association nassoc measures similar average nodes groups goal find bi-partition minimizes ncut maximizes nassoc proved ncut nassoc minimize ncut arg min ncut vbassoc bbassoc vaassoc aaassocbanassoc dimensional vector define affinity node nodes diagonal matrix node aiy ijwid degree matrix symmetric matrix shown arg minx ncut relaxing constraint real values means approximate solution solving equation form subject minarg ydyy yadyy affinity matrix solution eigenvector eigenvector characteristic vector matrix specifies segmentation based values components similar points similar eigenvector components theorem real symmetric matrix orthogonal smallest eigenvectors xjthen xtmx xtx minimized smallest eigenvector minimum eigenvalue smallest eigenvector means ncut smallest eigenvector real-valued minimizes ncut smallest eigenvector real-valued optimally sub-partitions regions note converting real-valued binaryvalued introduces errors propagate sub-partition ncut segmentation algorithm set problem define affinity matrix degree matrix solve eigenvectors smallest eigenvalues eigenvector smallest eigenvalue threshold obtain binary-valued vector ncut ncut thresholds regions ncut threshold recurse region comments algorithm recursively bi-partitions graph eigenvectors robustness reasons due errors caused binarization real-valued eigenvectors solving standard eigenvalue problems takes time speed algorithm exploiting locality affinity measures implies sparse nonzero values diagonal sparse leads time algorithm point set eigenvalues eigenvectors grayscale image eigenvalues eigenvectors discretizing eigenvector partitioning stops histogram bimodal results 
normalized cut method image segmentation shi malik ieee trans pattern analysis machine intelligence divisive aka splitting partitioning method graph-theoretic criterion measuring goodness image partition hierarchical partitioning dendrogram type representation regions criterion measuring candidate partitioning affinity measure elements region high affinity elements regions low affinity element element examples components affinity function spatial position intensity color texture motion defines similarity pair data elements affinity similarity measures intensity distance color texture motion aff aff problem formulation undirected graph set nodes data element pixel set edges weights representing affinity connected nodes find image partition maximizes association region minimizes disassociation regions finding optimal partition np-complete partition affinity similarity defined cut total weight edges removed optimal bi-partition minimizes cut cut biased small regions bjai define normalized similarity called normalized-cut assoc total connection weight nodes nodes ncut measures disimilarity regions disassociation measure ncut removes bias based region size vkai vbassoc abcut vaassoc bacut bancut similarly define normalized association nassoc measures similar average nodes groups goal find bi-partition minimizes ncut maximizes nassoc proved ncut nassoc minimize ncut arg min ncut vbassoc bbassoc vaassoc aaassoc banassoc dimensional vector define affinity node nodes diagonal matrix node wid degree matrix symmetric matrix shown arg min ncut relaxing constraint real values means approximate solution solving equation form subject minarg dyy yady affinity matrix solution eigenvector eigenvector characteristic vector matrix specifies segmentation based values components similar points similar eigenvector components theorem real symmetric matrix orthogonal smallest eigenvectors minimized smallest eigenvector minimum eigenvalue smallest eigenvector means ncut smallest eigenvector real-valued minimizes ncut smallest eigenvector real-valued optimally sub-partitions regions note converting real-valued binaryvalued introduces errors propagate sub-partition ncut segmentation algorithm set problem define affinity matrix degree matrix solve eigenvectors smallest eigenvalues eigenvector smallest eigenvalue threshold obtain binary-valued vector ncut ncut thresholds regions ncut threshold recurse region comments algorithm recursively bi-partitions graph eigenvectors robustness reasons due errors caused binarization real-valued eigenvectors solving standard eigenvalue problems takes time speed algorithm exploiting locality affinity measures implies sparse nonzero values diagonal sparse leads time algorithm point set eigenvalues eigenvectors grayscale image eigenvalues eigenvectors discretizing eigenvector partitioning stops histogram bimodal results 
homogeneous coordinates jules bloomenthal jon rokne department computer science calgary introduction homogeneous coordinates natural application computer graphics form basis projective geometry extensively project three-dimensional scene twodimensional image plane unify treatment common graphical transformations operations graphical homogeneous coordinates due roberts early review presented ahuja today homogeneous coordinates presented numerous computer graphics texts foley newman rogers qiulin davies newman appendix homogeneous techniques riesenfeld excellent introduction homogeneous coordinates algebraic geometric topological significance computer graphics bez discusses algebraic topological properties blinn blinn develop additional applications computer graphics homogeneous coordinates related areas cad cam zeid robotics mckerrow surface modeling farin computational projective geometry kanatani extend number range fixed point arithmetic rogers aim provide intuitive theoretically based discussion assembles key features homogeneous coordinates applications computer graphics applications include affine transformations perspective projection line intersections clipping rational curves surfaces sake clarity accompanying illustrations confine development dimensions intuition gained present application homogeneous coordinates dimensions material presented collect place diverse related methods kline history homogeneous coordinates crediting bius introduction bius fixed triangle plane bius defined set homogeneous coordinates point weights required triangle vertices center gravity triangle figure left point computed condition unknowns called barycentric coordinates respect snyder algorithm computing farin relates area similarly figure middle cker defined set homogeneous coordinates signed distances point edges fixed triangle figure balance point figure barycentric cker coordinates barycentric cker coordinates examples coordinate systems values represent n-dimensional point attribute systems invariance point scaled scaling bius weights size cker triangle change position note higher dimensional cker coordinates applied ray-tracing pellegrini exposition n-dimensional cker coordinates grassmann coordinates stolfi homogeneous coordinates projective plane cker realized homogeneous coordinates provided scale invariant representation points euclidean plane regarded homogeneous points points ordinary plane infinitely points infinity arose century work kepler desargues realized parabola foci finite infinite coxeter ordinary plane augmented points infinity projective plane aleksandrov describes projective plane lines planes passing point intersected plane pass point line line plane shown figure left imply one-to-one mapping lines planes points lines lines planes parallel intersect convention parallel lines intersect ideal infinitely distant points parallel plane intersect ideal line projective plane call considered ideal points ideal line projective plane represented finite euclidean coordinate system represented homogeneous coordinates fundamental reason projective geometry piercing piercing lines center projection figure projective plane projective geometry sense geometry imaging understood albrecht rer mechanical device draw objects perspective penna natural tool computer graphics discussed herman penna general projective geometry discussed texts ayres coxeter ryan veblen excellent development homogeneous coordinates projective metric geometry beginning elementary set assumptions mathematically mapping planes lines lines points projective plane transformation usual euclidean space projective space statements define two-dimensional projective space ryan set equivalence classes ordered triples non-zero vectors equivalence mutual proportionality vectors set lines passing origin set pairs antipodal points unit sphere denote usual two-dimensional euclidean space physical ordinary proper space point represented two-component vector finite values orthogonal coordinate system relationships unit sphere projective plane illustrated figure points lines origin definition means equivalence classes coordinates represent points practice homogeneous coordinates represent mapping euclidean point member equivalence class points mapping achieved equivalences enclose euclidean coordinates parentheses homogeneous coordinates brackets equivalence signified vector space manner scalar multiplication simply forms representative equivalence class representatives chosen intersection plane vector addition points computes representative midpoint vectors ordinary vectors addition homogeneous equivalents division means conversion homogeneous point euclidean equivalent inherently projection homogenous point plane figure illustrates projection two-dimensional case three-dimensional homogeneous points sphere projected plane riesenfeld illustration fourdimensional homogeneous points projected three-dimensional hyper-plane homogeneous points represent projection represent points infinity homogeneous point approaches figure shown approaches projected euclidean points move origin direction point infinitely treated positionless vector plane projection plane homogeneous point line figure projection plane close section reflection term homogeneous oxford defines kind commensurable degree dimension consisting terms dimension mind general conic homogeneous form conic found replacing multiplying yields cxy dxw eyw terms total variable degree definition passing note polynomial function form equivalent transformed change homogeneous coordinates polynomial function constant total degree term holds polynomial function finitely dimensioned space homogeneous coordinates dimensions important practical aspect homogeneous coordinate system unification translation scaling rotation geometric objects euclidean space general affine mapping points matrix representing scaling rotation point represents translation formulation translation treated differently rotation scaling represented homogeneous point matrix employed translation treated rotation scaling consistent ultimately simpler result obtained introducing column matrix homogeneous coordinate result unchanged result three-dimensional matrix square resulting homogeneous vector dimension argument homogeneous vector matrix invertible assuming non-zero determinant transformations concatenated transformation represented compactly bordering matrix column vector row vector replaced compact forms components conform size sub-matrices formulation affine transformations matrix multiplications computer graphic transformations encoded matrices representational simplicity computational efficiency summarize homogeneous coordinates affine transformations affine transformations translation euclidean coordinate system translation identity matrix homogeneous coordinate system compactly expressed rotation euclidean coordinate system rotation defined cos sin -sin cos rotation radians counter-clockwise origin expressed homogeneous coordinates cos sin -sin cos compactly scaling non-uniform scaling defined homogeneous coordinate system compactly sequences sequence concatenation affine transformations expressed single matrix translation rotation scaling equivalent crs reducing sequence transformations single matrix improves computational performance numerous points transformed transformation homogeneous lines line defined constant intersection lines found solving obtaining lines intersect provided parallel special provision eliminated representing line homogeneously newman general representing intersection homogeneous point dividing yields finite point point infinity lines parallel simply cross product intersection lines cross product coefficients intersection parallel lines point infinity direction line slope note line infinity represented dot product line point infinity points infinity lie line infinity note duality line point cross product homogeneous points yields coordinates connecting line duality point line dimensions dimensions duality point plane blinn homogeneous coordinates represent lines conics introduction briefly touched general degree implicit curve showing converted homogeneous form represented points curve null conic section single point intersecting lines coincident lines blinn brieskorn shown conic sections equivalent perspective transformation transformation circle ellipse conic sections cone defined plane intersect cone form ellipse intersect cone plane normal cone axis distance cone vertex circle intersection desired radius ellipse plane simply projection circle plane axis cone direction projection figure conic section projection define degree curves set points satisfy general homogeneous equation degree cxy dxw eyw 
written matrix form symmetric matrix matrix degree curve eigenvalues signs represents conic section eigenvalues real symmetric blinn letting scaling transformation tqt quadratic form transformed curve represent unit circle matrix scaled unit circle homogeneous degree curve reformulated homogeneous form ellipse patterson rational curves applications implicit formulation curve declined favor parametric formulation expresses curve terms easily manipulated control points specifically parametric curve defined set control points set basis functions degree parameter evaluated parametric curves limited subset implicitly defined curves degree polynomial basis functions yield parabolas choice yield portion circle ellipse hyperbola patterson conic sections equivalent projection motivates projection produce extended family parametric curves curves rational curves defined weights applied control vertices increasing weight draws curve closer control point resulting curve undefined asymptotes patterson basis functions form partition unity meaning implies shape curve unaffected translation control points barsky degree rational parametric curve represented matrix form evaluation curve facilitated representing control points homogeneous form represents degree non-rational parametric curve applications dimensions apply homogeneous coordinates three-dimensional euclidean points early development computer graphics roberts noted homogeneous coordinates stating homogeneous coordinates extremely important order maintain simplicity results original purpose perspective transformations roberts words additional homogeneous coordinate produces polynomials fixed degree method consistent manipulation euclidean space matrix represent three-dimensional scaling rotation translation two-dimensional case translation addition row column matrix represent compact form identity matrix translation three-dimensional applications individual components transformation matrix discussed detail perspective projection fundamental three-dimensional computer graphics projection three-dimensional objects two-dimensional image plane projection perspective projection center projection point view eyepoint central projector perpendicularly intersecting projective image plane creating shaded images perspective projection strictly ray tracing computes pixel values directly perspective transformation object line drawings polygon rendering perspective transformation essential carlbom review planar projections shown figure identify screen output device rectangular domain rendering objects naturally performed projection screen object eye figure perspective projection raster-screen referring side view figure image point computed object point similar triangles image window figure perspective projection division perspective divide non-linear relationship dimensions formulated linear relationship dimensions homogeneous coordinates foundation formulation provided bez homogeneous coordinate accommodate larger matrix required perform affine transformations transformation fourth coordinate remained resulting homogeneous coordinate proportional distance eye point perspective projection point image plane effected assume eye located origin directed positive z-axis x-axis y-axis left-handed coordinate system alternatively discussed blinn image plane origin project points plane matrix transformation approaches infinity approaches transformed points infinitely position parallel plane unaffected effectively orthographic transformation results perspective projection perspective projection perspective projection yields constant loss depth information due linear dependence fourth columns matrix introducing non-zero term column affect d-d purpose additional term compress euclidean space d-d perspective transformation multiplied pure projection yields perspective-projection transformation perspective projection perspective-projection perspective space homogeneous perspective transformation transforms euclidean points represented homogeneous points homogeneous points converted euclidean space transformed points exist perspective space examine properties perspective transformation terms relation perspective space untransformed object space affine transformation matrix column multiplication direction vector yields direction vector perspective transform column multiplication direction vector yields homogeneous point direction vanishing point direction set three-dimensional parallel lines intersect vanishing point exception parallel lines plane remain parallel graphics systems points object space transformed matrix concatenation rotation scaling translation perspective transformations projection transformation incorporated concatenation reasons perspective matrix invertible perspective-projection matrix singular projection incremental scanline depth sorting intensity variation line drawings importantly simplify threedimensional clipping euclidean lines line segments viewing frustum clipping homogeneously parallelepiped clipping points simply projected image plane displayed viewing frustum consists planes defined terms eye position visible portion image plane allowable depths three-dimensional objects viewing frustum shown figure visible image sized clipping planes arbitrarily set top image plane euclidean space perspective space figure viewing frustum effect image size simply scale columns perspective matrix assuming square window derived field view fov tan fov simplify clipping clipping plane transform clipping plane transform transformations points perspective matrix d-d clipping planes transformed scaling z-terms resulting desired f-d perspective transformations familiarize perspective matrix list homogeneous points transformations point clipping plane transforms plane plane transforms vanishing point line parallel z-axis vanishing point arbitrary line scale point image plane unchanged point infinity plane unchanged parallel lines plane remain parallel point infinity plane lies perspective horizon frustum corners image window corners eye transforms point infinity negative perspective z-axis vertex transformations efficient shading polygon vertices transformed display screen accomplished incremental techniques literature newman similar techniques applied vertex parameters color texture parameter interpolated polygon follow transformation polygon vertices transformation includes perspective homogeneous division required pixel screen space polygon practice linear interpolation screen space objectionable parameters color apparent applied texture coordinates specifically perspective transformations interpolated parameter form screen space coordinates heckbert refers rational linear interpolation detailed discussion texture coordinate transformations blinn intuitive review graphics transformations homogeneous coordinates refers hyperbolic interpolation case polygon parallel projection plane equation reduces linear interpolation homogeneous clipping three-dimensional line segments polygon edges clipped viewing frustum performed perspective space vertex colors computed clipping modifying vertex location modify color clipping perspective space integrity polygon maintained longer homogeneous screen space equations clipping planes form complex object space blinn blinn develop material greater detail section represent homogeneous coordinates conversion euclidean space shown figure viewing frustum transformed perspective matrix parallelepiped perspective space clipped note negative values result negative values points eye clipped homogeneous division summary test positive negative left bottom top represent line segment clipped perspective-space endpoints intersection line segment clipping plane terms left bottom top perspective space line segment point point implying intersection left clipping plane compute left intersection left clipping plane projected x-coordinate left boundary viewing frustum conclusion paper offered unified view homogeneous coordinates computer graphics context historical review revealed understanding perspective projections increased coordinate systems developed represent underlying spaces systems homogeneous coordinate system possess properties computer graphics formally introduced homogeneous coordinate system application twodimensional euclidean space discussed detail shown affine transformations effected consistently matrix multiplication simplifying sequences transformations intersection two-dimensional lines performed special cases homogeneous coordinates dimensions discussed greater detail attention devoted perspective transformations finally method clip lines respect viewing frustum provided acknowledgements gratefully acknowledge jim blinn charlie gunn paul heckbert ken shoemake numerous suggestions improved paper referees reviews valuable suggestions incorporated paper aleksandrov kolmogorov lavient mathematics content methods meaning mit press 
ahuja coons geometry construction display ibm systems journal ayres projective geometry schaum publishing york barsky rational beta-splines representing curves surfaces ieee computer graphics applications bez homogeneous coordinates computer graphics computer-aided design nov blinn trip graphics pipeline homogeneous perspective transform ieee computer graphics applications blinn homogeneous formulation lines space proceedings siggraph computer graphics blinn trip graphics pipeline line clipping ieee computer graphics applications blinn algebraic properties homogeneous order surfaces siggraph notes mathematics computer graphics blinn hyberbolic interpolation ieee computer graphics applications blinn newell clipping homogeneous coordinates proceedings siggraph computer graphics brieskorn rrer plane algebraic curves birkh user basel carlbom paciorek geometric projections viewing transformations acm computing surveys coxeter projective geometry edition springer-verlag york farin curves surfaces computer aided geometric design edition academic press york foley van dam feiner hughes computer graphics principles practice edition addison wesley reading massachusetts heckbert fundamentals texture mapping image warping masters thesis computer science division california berkeley herman projective geometry computer graphics lecture notes computer science springer verlag kantani computational projective geometry computer vision graphics image processing kline mathematical thought ancient modern times oxford press york bius gesammelte werke vol die barycentrische calcul saendig ohg wiesbaden germany newman sproull principles interactive computer graphics mcgraw-hill york oxford press compact edition oxford english dictionary oxford press york patterson projective transformations parameter bernstein-bezier curve acm transactions graphics pellegrini ray-shooting isotopy classes lines -dimensional space lecture notes computer science springer verlag penna patterson projective geometry application computer graphics prentice hall englewood cliffs cker uber ein neues coordinatensystem journal die reine und angewandte mathematick vol qiulin davies surface geometry computer-aided design manufacture ellis horwood chichester riesenfeld homogeneous coordinates projective planes computer graphics ieee computer graphics applications jan roberts homogeneous matrix representation manipulation n-dimensional constructs mslincoln laboratory mit rogers adams mathematical elements computer graphics edition mcgraw hill york ryan euclidean non-euclidean geometry cambridge press cambridge snyder barr ray tracing complex models surface tessellations proceedings siggraph computer graphics stolfi oriented projective geometry academic press veblen young mathematical science world mathematics newman simon schuster vol 
lecture basic signal processing copyright pat hanrahan motivation aspects computer graphics computer imagery differ aspects conventional graphics imagery computer representations digital discrete natural representations continuous previous lecture discussed implications quantizing continuous high precision intensity values discrete lower precision values sequence lectures discuss implications sampling continuous image discrete set locations regular lattice implications sampling process subtle understand fully requires basic understanding signal processing notes meant serve concise summary signal processing computer graphics reconstruction recall framebuffer holds array numbers representing intensities display creates continuous light image discrete digital values discrete image reconstructed form continuous image convenient pixel square abuts neighbors fill image plane view reconstruction general pixel point sample imagine image surface height point equal intensity image point single sample spike spike located position sample height equal intensity sample discrete image set spikes continuous image smooth surface fitting spikes obvious method forming continuous surface interpolate samples sampling make digital image analog image taking samples simply sample records image intensity point ccd camera ccd camera records image values turning light energy electrical energy light sensitive area consist array small cells cell produces single samples image notice sample result light falling single cell corresponds integral light small solid angle figure eye similar sample results action single photoreceptor ccd cells photoreceptor cells packed figure ccd camera cell ccd array receives light small solid angle field view camera sample light averaged small area retina integrate small area fact individual cell ccd camera retina samples area ideal fact intensities averaged turn important feature sampling process vidicon camera samples image slightly eye ccd camera recall television signal produced raster scan process beam moves continuously left discretely top bottom television image continuous horizontal direction sampled vertical direction discussion reconstruction sampling leads interesting question sample image reconstruct distortion jaggies aliasing similarly create digital images directly geometric representations lines polygons convert polygon samples testing point inside polygon rendering methods involve sampling ray tracing samples generated casting light rays scene sampling process perfect obvious problem illustrated polygon checkerboard sampled displayed shown figure notice edge polygon perfectly straight approximated staircased pattern pixels resulting image jaggies interesting experiment sample zone plate shown figure zone plates commonly optics consist series concentric rings rings move outward radially center thinner closely spaced mathematically describe ideal image zone plate simple formula sin sin sample zone plate sample image forfigure ray traced image scene image shown full resolution left magnified note jagged edges edges checkered pattern mula point easy simply plug coordinates point functionf single set concentric rings superimposed sets rings superimposed sets rings beat form striking moire pattern examples lead questions annoying artifacts jaggies moire patterns prevented digital signal processing theory signal processing answers questions posed describes sample reconstruct images ways avoid artifacts dues sampling signal processing tool computer graphics image processing applications signal processing ideas images filtered improve appearance image blurred acquired camera moving sharpened blurry multiple signals images cleverly combined single signal components extracted single signal important television color images combined form single signal broadcast figure sampling equation sin single set rings centered origin notice sets superimposed rings beating form pronounced moire pattern frequency domain spatial domain key understanding signal processing learn frequency domain begin mathematical fact periodic function monstrosities concern written sum sine cosine waves periodic function function defined intervalt repeats interval sine function sinx simplest periodic function interval equal easy sine function periodic sin sinx sines frequencies sine function sin repeats times interval frequency sine function measured cycles hertz represent periodic function sum sine waves periods harmonics period original function resulting sum periodic sines periodic mathematical fact sum found reason represent periodic functions free choose coefficients sine frequency infinite number higher higher frequency sine waves periodic train square pulses function nasty discontinuousin derivative beginning ending points pulse square pulse train limit cos cos cos cos angular frequency radians plot formula values shown figure notice increases sum cosines closely approximates ideal square pulse generally non-periodic function represented sum sin cos frequencies multiples period means sum replaced integral cos isin coefficients sine cosine called spectrum function spectrum computed signal fourier transform time derive formulas reader accept true interested derivation refer bracewell figure approximations square pulse notice approximation involves higher frequency terms resulting sum closely approximates pulse high frequencies added sum converges square pulse note oscillation edge pulse referred gibbs phenomen ringing illustrate mathematics fourier transform calculate fourier transform single square pulse prevously considered fourier series periodic train square pulses square pulse mathematically square jxj jxj fourier transform function straightforward compute square sin sincf introduce sinc function defined sincx sin note sin equals integer values equals situation complicated numerator denominator careful analysis shows sinc sinc plot sinc function shown notice amplitude oscillation decreases moves origin important build intuition functions spectra figure shows functions fourier transforms fourier transform cos spikes intuitively true fourier transform function expansion function terms sines cosines expanding single sine single cosine terms sines cosines yields original sine cosine note fourier transform cosine positive spikes fourier transform sine negative positive spike property cosine function cos cos sine odd function sin sin fourier transform constant function single spike origin intuitivelytrue constant function vary time space sines cosines non-zero frequencies comparing formula fourier transform formula inverse fourier transform differ sign argument exponential normalization constant implies fourier transform inverse fourier transform qualitatively transform space domain frequency domain transform frequency domain space domain fourier transform single spike origin consists sines cosines frequencies equally weighted discussionwe term spike times withoutproperly defining delta function property origin delta function defined integral imagines delta function square pulse unit area limit base pulse narrower narrower higher higher fourier transform pairs illustrate functions fourier transform sequence spikes consist sequence spikes sequence spikes space frequency figure fourier transform pairs top bottom cos sin shah figure image fourier transform referred shah function discussing sampling turns fourier transform gaussian equal gaussian spectrum function tells relative amounts high low frequencies function rapid imply high frequencies gradual imply low frequencies frequency component term average function ideas apply equally images figure shows ray traced picture fourier transform image high frequency components contribute fine detail sharp edges low frequency components represent large 
objects regions important concept bandlimited function function bandlimited spectrum frequencies maximum frequency spectrum bandlimited function occupies finite interval frequencies entire frequency range summarize key point section function easily converted space domain function frequency domain function albeit function vice versa function interpreted domains space frequency domain fourier transform inverse fourier transform interconvert domains properties operations functions easier space domain easier frequency domain patchar patchar patchar patchar patchar patchar figure perfect low-pass top high-pass middle band-pass bottom filters convolution filtering spectrum function modified attenuate enhance frequencies modifying signal image called filtering mathematically properties filters easiest describe frequency domain spectrum filtered function spectrum original function spectrum filter symbol simple multiplication frequency component input function multiplied frequency component filter function compute output function frequency component effects filters shown figure filters characterized change frequency components low-pass filter attenuates high frequencies relative low frequencies high-pass filter attenuates low frequencies relative high frequencies band-pass filter preserves range frequencies relative range perfect low-pass filter leaves frequencies cut-off frequency removes frequencies cut-off frequency frequency domain low-pass filter square pulse figure similarly perfect high-pass filter completely removes frequencies cut-off frequency perfect band-pass filter removes frequencies band image filtered effect noticeable removing high frequencies leaves blurry image figure removing low frequencies enhances high frequencies creates sharper image edges rapidly changing textures figure cutoff frequency high pass low pass filter examples shown figure figure sum low high pass filters sum filtered pictures equal original picture pictures figure application low-pass filter image notice resulting image blurry filter removes high frequencies represent fine detail figure application high-pass filter image notice resulting image low frequencies removed places image changing edges remain hand column added original picture left hand column returned properties filters easiest frequency domain important apply filters frequency domain space domain frequency domain filtering achieved simply multplying spectra space domain filtering achieved complicated operation called convolution binary operator represents convolution illustrate convolution suppose input function consists single spike origin forward view convolution center filter function point input function multiply filter function input single spike origin input function filter multiplied origin multipled result convolving filter delta function filter mathematically immediately definition delta function physical processes filters process driven delta function impulse output characteristic filtering function system reason filters referred impulse response functions convolution important idea convolution square pulses shown figure figure shows convolution backward mapping square pulse input signal shown stationary centered origin square pulse representing filter moves output axis left output integral product filter input case pulses equals area overlap square pulses area starts pulses disjoint begins increase linearly touch reaches maximum superimposed begins decrease touching returns result triangle tent function convolving function image square pulse interesting operation notice interpreted setting output average input function area pulse non-zero make convinced recall fourier transform square pulse sinc function referring figure notice sinc function higher frequencies sinc function lowpass filter property intuitively true averaging input image region blur remove high frequencies spectrum function resulting convolving square pulses convolvingtwo functions corresponds multiplyingtheir spectra convolvinga square figure convolution square pulses square sinc triangle square square sinc cubic sinc space frequency figure results convolving square pulse multiple times pulse square pulse corresponds multiplication sinc functions similarly convolution pulses corresponds sinc raised power function produced convolving pulse times called b-spline encounter b-splines discussing methods representing curves surface interesting fact limit infinity convolution pulses approaches gauusian convolution theorem states multiplying spectra frequency domain corresponds convolving functions space domain fourier transform inverse fourier transform similar symmetric interpretation true multiplying functions space domain corresponds convolving functions frequency domain sampling reconstruction background frequency space convolution analyze processes sampling reconstruction space domain sampling viewed simply multiplying signal sequence spikes unit area spikes integer values result throwing information sample points sample points result function point view sampling space domain illustrated top half figure additional insight sampling process gained sampling frequency domain recall convolution theorem theorem states multiplying signals domain case space domain corresponds convolving signals domain frequency domain multiplying function sequence spikes space domain corresponds convolving spectrum original function spectrum sequence spikes recall fourier transform sequence spikes sequence spikes frequency domain sampling corresponds convolving spectrum function sequence spikes convolving sequence spikes original function replicated copy spectrum centered spike view sampling frequency domain illustrated bottom half figure reconstruction process process recovering original signal sampled signal easiest analyze frequency domain remember sampling process resulted replication spectrum original function replicas overlap original recovered application perfect low-pass filter multiplying replicated spectrum square pulse centered sampling space domain sampling frequency domain figure sampling reconstruction frequency domain reconstruction space domain figure reconstruction figure undersampling function results aliasing original signal spectrum remove extra copies spectrum illustrated figure process domain create dual process domain case multiplying replicated spectrum square pulse frequency domain corresponds convolving samples sinc function fourier transform square pulse spatial domain sinc function interpolates samples reconstructs continuous image set samples illustrated figure note miraculous thing happened result sampling reconstruction process original function information lost sampling process result sampling theorem due claude shannon discovered signal reconstructed samples loss information original signal frequencies sampling frequency bandlimited function rate sampled called nyquist frequency aliasing preand postthere reasons sampling reconstruction process work function sampled replicas function spectrum overlap fact occur function bandlimited function sampled nyquist frequency overlap occurs hope recovering original function copies spectra overlap frequencies frequencies high frequencies foldover low frequencies sudden appearance frequencies frequencies referred aliasing result figure sampling sine wave sampling function sin yields values sampling function sin higher frequency nyquist frequency distinguished lower frequency figure poor reconstruction results aliasing foldover reconstruction process differentiate original spectrum aliased spectrum function perfectly reconstructed effect shown figure illustrate aliasing thought experiment sine wave frequency cycles sample sample sine wave sampling rate frequency function expect aliasing result figure figure shows sampling sin yields values sampling sin implicit sampling theorem function perfectly reconstructed practice perfect low-pass filter sinc function convolving samples sinc function impractical sinc function infinite extent general reconstruction property hardware media displays employ step process step digital converted analog convertor convertors sample input hold constant input corresponds convolving sampled signal square pulse step analog voltage converted light phosphors monitor phosphors emit small gaussian spot light centered 
location electron beam effect convolving signal gaussian combination steps low-pass filter filtering perfect illustrated figure suppose function reconstructed square pulse correspond multiplying spectra times transform pulse sinc sinc perfectly remove replicas spectra produced sampling process aliasing artifacts visible cases frequencies masquerade frequencies due undersampling called pre-aliasing due bad reconstruction -is called post-aliasing 
level set methods contour evolution method due sethian osher math berkeley sethian level set html difficulties snake-type methods hard track contour self-intersects evolution hard deal topology level set approach define problem higher dimension define level set function plane contour signed euclidean distance transform negative means inside closed contour positive means contour move contour move level set function rises falls expands contour cross section level set surface level set blue point time slice level set surface red level set surface time level set surface red moved level set blue defines contour level set surface move level set surface define velocity field specifies contour points move time based application-specific physics time position normal curvature image gradient magnitude build initial level set function based initial contour position adjust time contour time defined hamilton-jacobi equation level set formulation constraint level set point contour motion chain rule supplies speed outward normal direction evolution equation speed function fff ykf yigi yig shape simplification curvature contour point segmentation digital subtraction angiogram based image gradient contour curvature cont initial contour manually examples examples examples fast marching method sethian special case assumes velocity field sign contour expanding shrinking convert problem stationary formulation discrete grid contour guaranteed cross grid point fast marching method compute time contour crosses grid point height surface set points reached time fast marching algorithm compute fact distance rate time contour time fast marching algorithm construct arrival time surface incrementally build initial contour incrementally add existing surface part corresponds contour moving speed words repeatedly pick point fringe minimum iterate builds level set surface scaffolding surface patches farther farther initial contour fast marching update downwind unvisited neighbors compute values fast marching expand point fringe minimum update neighbors downwind fast marching expand point fringe minimum update neighbors downwind fast marching visualization fast marching level set shape recovery fast marching algorithm obtain rough contour level set algorithm fine tune iterations results fast marching yiga efft yigp yig kkt results segmentation fast marching level set tuning results vein segmentation level set tuning level set tuning results vein segmentation continued original fast marching level set level set tuning results segmentation fast marching level set tuning results brain image segmentation iterations iterations fast marching level set tuning results brain segmentation continued level set tuning level set tuning results segmentation fast marching level set tuning 
level set methods contour evolution method due sethian osher math berkeley sethian level set html difficulties snake-type methods hard track contour self-intersects evolution hard deal topology level set approach define problem higher dimension define level set function plane contour signed euclidean distance transform negative means inside closed contour positive means contour move contour move level set function rises falls expands contour cross section level set surface level set blue point time slice level set surface red level set surface time level set surface red moved level set blue defines contour level set surface move level set surface define velocity field specifies contour points move time based application-specific physics time position normal curvature image gradient magnitude build initial level set function based initial contour position adjust time contour time defined hamilton-jacobi equation level set formulation constraint level set point contour motion chain rule supplies speed outward normal direction evolution equation speed function fff ykf yigi yig shape simplification curvature contour point segmentation digital subtraction angiogram based image gradient contour curvature cont initial contour manually examples examples examples fast marching method sethian special case assumes velocity field sign contour expanding shrinking convert problem stationary formulation discrete grid contour guaranteed cross grid point fast marching method compute time contour crosses grid point height surface set points reached time fast marching algorithm compute fact distance rate time contour time fast marching algorithm construct arrival time surface incrementally build initial contour incrementally add existing surface part corresponds contour moving speed words repeatedly pick point fringe minimum iterate builds level set surface scaffolding surface patches farther farther initial contour fast marching update downwind unvisited neighbors compute values fast marching expand point fringe minimum update neighbors downwind fast marching expand point fringe minimum update neighbors downwind fast marching visualization fast marching level set shape recovery fast marching algorithm obtain rough contour level set algorithm fine tune iterations results fast marching yiga efft yigp yig results segmentation fast marching level set tuning results vein segmentation level set tuning level set tuning results vein segmentation continued original fast marching level set level set tuning results segmentation fast marching level set tuning results brain image segmentation iterations iterations fast marching level set tuning results brain segmentation continued level set tuning level set tuning results segmentation fast marching level set tuning 

care color accurate color reproduction commercially valuable kodak yellow painting house color reproduction problems increased prevalence digital imaging digital libraries art color information aspects computer vision segmentation deciding pieces image represent things recognition deciding image synthesis texture synthesis light color distribution frequencies light determines color distribution called spectrum light frequency wavelength energy related white light spectrum sunlight spectrum spectra tungsten-filament lamp daylight fluorescent lamp absorption spectra real pigments cyan magenta yellow brown color eye rods cones rods work low light levels color cones types experimentally genetically proven responds spectrum color receptors output cone obtained summing wavelengths experimentally determined variety ways color perception colors perceived differently affected nearby colors affected adaptation previous views affected state mind experiment subject views colored surface hole sheet color film space investigator controls nearby colors state mind color deficiency people missing type receptor common red-green color blindness men red green receptor genes carried chromosome red-green color blind men red genes green genes missing red green receptor colors distinguish color deficiencies anomalous trichromacy achromatopsia macular degeneration deficiency caused central nervous system optical problems eye absent receptors trichromacy experiment show target color user controlled color user knobs add primary sources color user match colors experience match colors primary sources principle trichromacy add light target numbers color completely aspect computer monitors tvs flat panel-displays color digital cameras explain math trichromacy write primaries colors represented mixture additive matching color description system people agree supply describe color colors matched write subtractive matching interpret problem reproducing colors color matching common primaries computer science red green blue spectrum determine match step light unit intensity wavelength people match primaries result functions rgb color matching functions rgb color matching functions computing matching spectrum function match amount energy wavelength rgb color matching functions primary needed match wavelength color due match debdegder amount red amount green amount blue color spaces taking linear combinations defines rgb color space range perceptible colors generated adding part correspond monitor phosphors monitor rgb space range colors displayable monitor note color matching functions rgb spectrum power provide negative light rgb color space problems rgb small range potential perceivable colors represented monitor rgb perceptually non-linear points distance part space perceptually point distance part space perceptually words distance metric space impossible broader question measure difference colors red green blue cie xyz color space defined describe full space perceptible colors revisions color professionals color matching functions positive produce primaries negative light describe color matching weights component intended correspond intensity frequently set coordinates constant brightness slice cie note representation projector limited range colors displayed cie matching functions qualitative features cie linearity implies colors obtainable mixing lights colors lie line segment endpoints monochromatic colors spectral colors run spectral locus dominant wavelength spectral color mixed white match purity distance spectral locus distance white spectral locus wavelength purity color complementary colors colors mixed white hsv color space alvy ray smith hue color family red yellow blue saturation purity color white totally unsaturated intensity color white intense black isn space cone parts cone mapped rgb space idea hsv coordinates directly capture relevant properties color hsv color space uniform color spaces color spaces distance space corresponds perceptual distance works local distances red green red blue macadams ellipses define perceptual distance macadam ellipses scaled factor cie cie non-linear color space color differences uniform violet zyxv 
image segmentation rhombus groups pixels digital image correspond objects analyzed rhombus objects uniformly darker brighter background rhombus black characters imaged white background page rhombus bright dense potatoes imaged background transparent x-rays image segmentation definitions rhombus segmentation process partitioning image semantically interpretable regions barrow tennenbaum rhombus image segmentation partition image set nonoverlapping regions union entire image purpose segmentation decompose image parts meaningful respect application haralick shapiro image segmentation definitions rhombus neurophysiologists psychologists belief figure ground constituted fundamental problems vision reflected attempts workers computer vision implement process called segmentation purpose process idea separating figure ground marr image segmentation definitions rhombus partitioning problem delineate regions degree coherent attributes image refer problem image partitioning problem important problem objects coherent physical processes scene project regions coherent image attributes image partitioning problem viewed approximation scene partitioning problem leclerc formal definition rhombus region uniformity criterion define predicate true rhombus partition image subsets rhombus complete image rhombus disjoint subsets rhombus uniform regions true rhombus maximal regions false image segmentation rhombus ideally object pixels black intensity background pixels white maximum intensity rhombus rarely rhombus pixels overlap regions object background yielding intensities pure black white edge blur rhombus cameras introduce noise imaging measurement noise rhombus potatoes non-uniform thickness giving variations brightness x-ray model noise image segmentation thresholding rhombus objects background occupy ranges gray levels mark object pixels process called thresholding rhombus original gray level image rhombus binary image pixels created thresholding rhombus rhombus rhombus assume object pixels background pixels thresholding rhombus choose threshold rhombus histogram gray level frequency distribution gray level image rhombus number pixels gray level rhombus number pixels gray level intensity peak peak valley thresholding rhombus p-tile method rhombus applications approximately percentage pixels image objects rhombus potato image character rhombus find gray level pixels intensity rhombus examine neighborhood find good threshold low valley point rhombus examine binary images alternative thresholds choose straightest edges easily recognized objects thresholding rhombus mode peak valley method rhombus find prominent peaks rhombus peak rhombus highest peaks rhombus find deepest valley rhombus valley rhombus threshold rhombus image normally-distributed classes prove probability misclassification minimized minimum point thresholding rhombus hand selection rhombus select threshold hand beginning day rhombus threshold day long rhombus threshold selection methods literature rhombus probabilistic methods rhombus make parametric assumptions object background intensity distributions derive optimal thresholds rhombus structural methods rhombus evaluate range thresholds respect properties resulting binary images rhombus local thresholding rhombus apply thresholding methods image windows advanced threshold selection method minimizing kullback information distance rhombus observed histogram mixture gray levels pixels object pixels background rhombus ideal world histogram spikes rhombus measurement noise model noise edge blur spread spikes hills rhombus make parametric model shapes component histograms objects background kullback information distance rhombus parametric model component histograms assumed gaussian rhombus proportions image comprise objects background rhombus gray levels objects background rhombus standard deviations kullback information distance rhombus choose threshold unknown parameters determined rhombus observed normalized histogram rhombus percentage pixels image gray level max kullback information distance rhombus chosen predict total normalized image histogram model mixture gaussians correct rhombus pofo pbfb rhombus total normalized image histogram rhombus question reduces rhombus determine suitable measure similarity rhombus find highest similarity kullback information distance rhombus suitable similarity measure kullback directed divergence defined rhombus matches term sum takes minimal rhombus gray levels disagree penalized log term weighted importance gray level max log threshold selection method minimize probability error rhombus mixture model find minimizes predicted probability error thresholding rhombus types errors rhombus background points marked object points points background darker threshold rhombus object points marked background points points object brighter threshold minimize probability error rhombus threshold rhombus compute parameters gaussians proportions rhombus compute probability errors rhombus find threshold rhombus minimal error rhombus equal errors max object extraction binary images connected components rhombus definition pixel -neighbors points i-i j-j rhombus -neighbors rhombus definition pixel -neighbors points max i-i j-j rhombus neighbors adjacency rhombus definition disjoint sets pixels adjacent pixel neighbor pixel connected components rhombus definition path pixel sequence pixels neighbor -path -path connected components rhombus definition binary image set called foreground denoted rhombus definition pixel connected path consisting points rhombus relation is-connected-to equivalence relation rhombus reflexive connected path length rhombus symmetric connected connected reverse path rhombus transitive connected connected connected concatenation paths connected components rhombus is-connected-to relation equivalence relation partitions set set equivalence classes components rhombus called connected components rhombus definition complement set pixels rhombus partitioned set connected components rhombus regard image surrounded frame rhombus component adjacent frame called background rhombus components called holes examples blue green components background holes jordan curve theorem closed curve defines connected regions background foreground connectivity rhombus opposite connectivity foreground background rhombus -foreground -background single pixel objects holes rhombus -background -foreground pixel object pixel hole boundaries rhombus boundary set pixels -neighbors boundary set denoted rhombus interior set pixels boundary s-s rhombus definition region surrounds region inside -path point background intersects rhombus theorem adjacent components surrounds surrounds examples levels components background level odd levels components component labeling rhombus binary image rhombus produce image pixels connected component unique label rhombus solution recursive depth-first labeling rhombus scan binary image top bottom left encountering rhombus change pixel unused component label rhombus recursively visit neighbors pixel mark label disadvantages recursive algorithm rhombus speed rhombus requires number iterations proportional largest diameter connected component image rhombus topology rhombus clear determine components holes components solution row scanning rhombus start top row image rhombus partition row runs rhombus run part background special background label rhombus run unique component label rhombus subsequent rows rhombus partition runs rhombus run run directly potentially component label rhombus run overlaps runs previous row give minimum label runs rhombus minimal label labels adjacent runs previous row relabel runs previous row labels local relabeling rhombus point step rhombus invariant condition hold row image processed downward scan label assigned runs row processed connected component minimum label run belonging component previous rows rhombus note applies connectivity pixels part processed subsequent merging components rows bbbb bbbb bbbb bbbb bbbb change rightmost labeled invariant condition fail upward scan rhombus bottom-to-top scan assign unique label component rhombus compute simple properties components scan rhombus start bottom 
row rhombus create table entry unique component label entry background background runs row rhombus mark component inside background upward scan rhombus subsequent rows rhombus run adjacent run subsequent row label table rhombus create table entry label rhombus mark inside run adjacent subsequent row rhombus property values area perimeter updated run processed rhombus run adjacent run subsequent row marked common label runs table properties updated bbbb bbbb bbbb process row process row bbbb process row properties rhombus goal recognize connected component set objects rhombus letters alphabet rhombus good potatoes versus bad potatoes rhombus associate measurements properties connected component compare expected properties object types properties rhombus area rhombus perimeter rhombus compactness rhombus smallest circle pir rhombus higher elongated objects rhombus properties holes rhombus number holes rhombus sizes compactness thinning rhombus neighborhood binary image center pixel rhombus center point simple point changing change number connected components neighborhood rhombus -simple -simple rhombus simple rhombus removal simple point change number connected components binary image rhombus end point -neighbor thinning rhombus -pixel binary image north border point pixel rhombus similarly define east west south border points rhombus simple thinning algorithm rhombus eliminate border points simple points end points rhombus directions sequence erase component rhombus result depends order directions considered -simple points 
signal differentiated signal signal sigma kernel convolution differentiation signal sigma kernel convolution signal sigma kernel convolution signal kernel convolution signal sigma kernel convolution signal sigma pixel filter kernel corneredge list edgels position orientation inefficient representation smooth compact representation fragmented image edge snake sample forces applied control points points 
ake imag fferent viewpoin libr dentif points ima erive nes world int lies ersect lic sco illip stereo ple tion ive truc tio tion equi libra rre dept fro disparity baseline image zel multi-vie etry fferent ews rel tion ist twe cam tion giv ima imag stri sitio ima image epipola etry ali ept onst rres isp ndi cor spo ndi poi tio lly ive pol hel duc sear epipola etry jav ple ttp wwwsop obot onnel bougnou dvi pol vai bou gnoux nri sop pol cene poin ojects imag point left poin pipo lar plane contai lle co-p con trai ive int poin imag defined intersection epipolar ane defined imag lle epi olar words defi lie oje tion thi epi olar cour epip ola lin etr olar nstrai correct point constrai search epipolar epip olar planes defi poin cont ipo rsect poi lle ole eft rig epipoles defined inte tion respect epip ola etry lle cour epipola etry rectification ucco vat sim lif search rresp poi scan nes pol sim lif lin hnique lle irs lline paral stereo age rectif ication ect epr anes ont ane par bet een opt cal cent hom ansf appl bot nput hor ont ans oop zhan aphi ereo put ecog onf rectification lle cour rectification exa ple bef aft ect cati ocedure ram cam tate left epip ole oes fin ity lle lin rig tra sfo tio rig sfo tion cam era fram ect cam era cal bot ent war ons ilin rpo tion conj ugate olar pair epipolar nes defined con gate correspond pair match imag points projectio scene point finitions basic stereo gorith ipo lin par xel sam epi pol ght age min ent win ereo left ight dis ari cor espo nce disp ort str stereo hing eatures act eat pri andom eogr dif ies ereo corresp tex lef imag imag local proach age tim pen ccu glo pproa age lar rat dif corresp loc ugh dis hig ext ure glob edi text opa text ure ons ext sali regi text opa ent big ous nam ous appr oac evine lef imag ght common ich ssd fixe window siz oble true ari fix fix lar left ffer ndow shapes ndow lle ndow bett ndow kanade gor adapt dow theor ent onf obot aut schar ski nonl usi put wind vek true ari fix rror fix lar error nus dow grap cuts lie grap cuts oot algorithm result erro constr nts xel ould simi lar disp dis ari onti exc dis ari dis ont spon ding xel shou clo lor ric cor pond ence dering poin ont ous ord bot ages forb den zone bje lge gen era ord rin acr hol age lia ble eat ure con trai neig ors thin hbo rho global approach orn pog encode desirable properti igh bor matc xel sim ilar lor mos ear pixel apm -ha eed oxi stereo ene mini zation chi cost formul energ dat nal bad hes nei hbor atial oot ari sim ila adj acent cost ghbor tion cont inuo gradi descent cal discrete ling eman geman forev uck cal stereo gra probl pix lab dis par wei wei gra finition nitia sta ach hbor spa ity stereo hin graph cuts ele ges xel iti vely onn ect exa ghts din min lent ndin globa mini uncti aph cuts ved pol nomial n-cut -flow kov kolmog rov orithm uns nds dge ght edg rob results boyko raph algor ith sults kov onf put oun cal mpact ndo glo expansi sec sec rror sec high ure sec medi xture sec diffic ultie aram sel unn ing seconds opti opti uting mult i-way cut ith bels cla ssi cut oblem ble sta nda gor ithm pol tim theor nea lin tice tha bels lha ppr oxim tion gor ith ist ithin optim pute loc nim str ong nse ver oves ill ksle bih ppr oxim ene minim tion proc onf mpute vision idea duc obl ove pixe ith nge xpa nsion ove state art late ate ece stat erro erro eval uatio ster algorit http mid dle bury schar stereo web results tax nomy evaluation dense twoframe stereo correspondence alg rithms int puter visi thm uba ooth lay aph cut aph cut ssd ooper och enet scan opt shao mmh sur dat har rrors ect baseline pth estim tion wid wid xel tch real-ti stereo obot tion othe sks -tim tech een lope ost sim disc obot sear ches eor ant eor ndex era cal rat solu ons ons tions ontr ons stereo tru tion pipeli rat cam eras ect ages dis ity ill active ste wit struct ght lig tte plif cam cam proj ector cam proj ector hang hot laser nin tic tria tio acr ace ect nni direction tra object ccd ccd image plane laser cylindrical lens laser sheet chel ange ect http anf porta las scann 
binocular stereo images viewpoints calibrate identify points images derive lines world point lies intersect lines public library stereoscopic room chicago phillips stereo basic principle triangulation reconstruction intersection rays requires calibration point correspondence depth disparity baseline input image szeliski kang depth map rendering multi-view geometry views scene unrelated relationships exist cameras question image point image restrict position image point image epipolar geometry formalism depth reconstructed based points disparity finding points hard computationally expensive epipolar geometry helps significantly reduce search line epipolar geometry demo java applet http wwwsop inria robotvis personnel sbougnou meta dviewer epipolargeo html sylvain bougnoux inria sophia antipolis scene point projects image point left image point image epipolar plane called co-planarity constraint point left image point image line defined intersection epipolar plane defined image called epipolar line words define ray lie projection ray epipolar line marc pollefeys leuven belgium siggraph epipolar line geometry epipolar constraint correct match point constrained search epipolar line epipolar planes defined points line epipolar lines intersect point called epipole left epipoles defined intersection line left images epipolar geometry marc pollefeys leuven belgium siggraph epipolar geometry rectification trucco motivation simplify search points scan lines avoids interpolation simplify sampling technique image planes parallel pairs conjugate epipolar lines collinear parallel image axis stereo image rectification image reprojection reproject image planes common plane parallel line optical centers homography transform applied input images pixel motion horizontal transformation loop zhang computing rectifying homographies stereo vision computer vision pattern recognition conf rectification marc pollefeys leuven belgium siggraph rectification rectification procedure intrinsic extrinsic parameters cameras rotate left camera epipole infinity horizontal axis left image parallel baseline rotate camera transformation rotate camera transformation camera frame respect left camera adjust scale cameras implement backward transformations resample bilinear interpolation conjugate epipolar line pair epipolar lines defined conjugate pair pair matching image points projections single scene point definitions basic stereo algorithm epipolar line pixel left image compare pixel epipolar line image pick pixel minimum match cost improvement match windows stereo left image image disparities stereo correspondence disparity inversely proportional depth scene structure recovery stereo matching features pixels extract features prior matching julesz-style random dot stereogram difficulties stereo correspondence low texture perfect case left image image image noise local approach image patch time solve small problems independently faster accurate global approach image solve large problem slower accurate difficult correspondence local works high texture texture patch disambiguate high texture global works medium texture propagates estimates textured untextured regions medium texture low texture salient regions work low texture propagation fails regions inherently ambiguous match unambiguous regions local approach levine left image image common ssd fixed window size problems true disparities fixed small window fixed large window left image rent ndo shapes window size smaller window larger window results adaptive window kanade okutomi stereo matching algorithm adaptive window theory experiment proc int conf robotics automation scharstein szeliski stereo matching nonlinear diffusion int computer vision effect window size sample compact windows veksler comparison fixed window veksler compact windows errors true disparities fixed small window errors fixed large window errors venus veksler var windows multiw cut graph cuts occl belief prop graph cuts layered results errors constraints nearby pixels similar disparity disparity continuous places places disparity discontinuity pixels close color additional geometric constraints correspondence ordering points continuous surface order images true forbidden zone forbidden zone practical applications object bulges general ordering image reliable feature ordering constraints neighbors small neighborhood global approach horn poggio encode desirable properties eighborsq qpp dpdmdeminarg match pixels similar color nearby pixels similar disparity map-mrf np-hard problem approximations stereo energy minimization matching cost formulated energy data term penalizing bad matches neighborhood term encouraging spatial smoothness continuity disparity gradient ydxyxdyxd similar labels pixelsadjacentofcost ddv yxyxneighbors yxyx ddvdyxde minimization methods continuous gradient descent stuck local minimum discrete simulated annealing geman geman pami takes forever stuck local minimum stereo graph problem boykov pixels labels disparities edge weight edge weight dyxd ddv graph definition initial state pixel connected neighbors disparity label connected pixels stereo matching graph cuts graph cut delete edges pixel transitively connected label node cost cut sum deleted edge weights finding min cost cut equivalent finding global minimum energy function graph cuts solved polynomial time min-cut max-flow boykov kolmogorov algorithm runs seconds edges graph edge weight cost edge problem find min cost cut results boykov graph cut algorithm results boykov fast approximate energy minimization graph cuts proc int conf computer vision ground truth local compact window global expansion sec error sec error sec error sec error high texture sec error medium texture sec error difficulties parameter selection running time seconds qpp dddmde smaller discontinuities optimal optimal computing multi-way cut labels classical min-cut problem solvable standard network flow algorithms polynomial time theory linear practice labels np-hard dahlhaus stoc efficient approximation algorithms exist factor optimal computes local minimum strong sense large moves improve energy boykov veksler zabih fast approximate energy minimization graph cuts proc int conf computer vision basic idea reduce series -way-cut sub-problems swap move pixels label change viceversa expansion move pixel change label state art late state art recent state art left image true disparities errors errors evaluation stereo algorithms http middlebury schar stereo web results php taxonomy evaluation dense twoframe stereo correspondence algorithms int computer vision algorithm tsukuba sawtooth venus map layered belief prop graph cuts occl graph cuts multiw cut comp win realtime bay diff ssd cooperative stoch diff genetic pix-to-pix max flow scanl opt dyn prog shao mmhm max surf database scharstein szeliski errors effect baseline depth estimation width pixel width pixel pixel matching score real-time stereo robot navigation tasks software-based real-time stereo techniques developed based simple discrete search nomad robot searches meteorites antartica http frc cmu projects meteorobot index html camera calibration errors poor image resolution occlusions violations brightness constancy specular reflections large motions low-contrast image regions stereo reconstruction pipeline steps calibrate cameras rectify images compute disparity estimate depth errors active stereo structured light project structured light patterns object simplifies correspondence problem camera camera projector camera projector zhang one-shot stereo laser scanning optical triangulation project single stripe laser light scan surface object precise version structured light scanning direction 
travel object ccd ccd image plane laser cylindrical lens laser sheet digital michelangelo project http graphics stanford projects mich portable laser scanners minolta vivid scan points sec 
image segmentation rhombus groups pixels digital image correspond objects analyzed rhombus objects uniformly darker brighter background rhombus black characters imaged white background page rhombus bright dense potatoes imaged background transparent x-rays image segmentation definitions rhombus segmentation process partitioning image semantically interpretable regions barrow tennenbaum rhombus image segmentation partition image set nonoverlapping regions union entire image purpose segmentation decompose image parts meaningful respect application haralick shapiro image segmentation definitions rhombus neurophysiologists psychologists belief figure ground constituted fundamental problems vision reflected attempts workers computer vision implement process called segmentation purpose process idea separating figure ground marr image segmentation definitions rhombus partitioning problem delineate regions degree coherent attributes image refer problem image partitioning problem important problem objects coherent physical processes scene project regions coherent image attributes image partitioning problem viewed approximation scene partitioning problem leclerc formal definition rhombus region uniformity criterion define predicate true rhombus partition image subsets rhombus complete image rhombus disjoint subsets rhombus uniform regions true rhombus maximal regions false image segmentation rhombus ideally object pixels black intensity background pixels white maximum intensity rhombus rarely rhombus pixels overlap regions object background yielding intensities pure black white edge blur rhombus cameras introduce noise imaging measurement noise rhombus potatoes non-uniform thickness giving variations brightness x-ray model noise image segmentation thresholding rhombus objects background occupy ranges gray levels mark object pixels process called thresholding rhombus original gray level image rhombus binary image pixels created thresholding rhombus rhombus rhombus assume object pixels background pixels thresholding rhombus choose threshold rhombus histogram gray level frequency distribution gray level image rhombus number pixels gray level rhombus number pixels gray level intensity peak peak valley thresholding rhombus p-tile method rhombus applications approximately percentage pixels image objects rhombus potato image character rhombus find gray level pixels intensity rhombus examine neighborhood find good threshold low valley point rhombus examine binary images alternative thresholds choose straightest edges easily recognized objects thresholding rhombus mode peak valley method rhombus find prominent peaks rhombus peak rhombus highest peaks rhombus find deepest valley rhombus valley rhombus threshold rhombus image normally-distributed classes prove probability misclassification minimized minimum point thresholding rhombus hand selection rhombus select threshold hand beginning day rhombus threshold day long rhombus threshold selection methods literature rhombus probabilistic methods rhombus make parametric assumptions object background intensity distributions derive optimal thresholds rhombus structural methods rhombus evaluate range thresholds respect properties resulting binary images rhombus local thresholding rhombus apply thresholding methods image windows advanced threshold selection method minimizing kullback information distance rhombus observed histogram mixture gray levels pixels object pixels background rhombus ideal world histogram spikes rhombus measurement noise model noise edge blur spread spikes hills rhombus make parametric model shapes component histograms objects background kullback information distance rhombus parametric model component histograms assumed gaussian rhombus proportions image comprise objects background rhombus gray levels objects background rhombus standard deviations kullback information distance rhombus choose threshold unknown parameters determined rhombus observed normalized histogram rhombus percentage pixels image gray level max kullback information distance rhombus chosen predict total normalized image histogram model mixture gaussians correct rhombus pofo pbfb rhombus total normalized image histogram rhombus question reduces rhombus determine suitable measure similarity rhombus find highest similarity kullback information distance rhombus suitable similarity measure kullback directed divergence defined rhombus matches term sum takes minimal rhombus gray levels disagree penalized log term weighted importance gray level max log threshold selection method minimize probability error rhombus mixture model find minimizes predicted probability error thresholding rhombus types errors rhombus background points marked object points points background darker threshold rhombus object points marked background points points object brighter threshold minimize probability error rhombus threshold rhombus compute parameters gaussians proportions rhombus compute probability errors rhombus find threshold rhombus minimal error rhombus equal errors max object extraction binary images connected components rhombus definition pixel -neighbors points i-i j-j rhombus -neighbors rhombus definition pixel -neighbors points max i-i j-j rhombus neighbors adjacency rhombus definition disjoint sets pixels adjacent pixel neighbor pixel connected components rhombus definition path pixel sequence pixels neighbor -path -path connected components rhombus definition binary image set called foreground denoted rhombus definition pixel connected path consisting points rhombus relation is-connected-to equivalence relation rhombus reflexive connected path length rhombus symmetric connected connected reverse path rhombus transitive connected connected connected concatenation paths connected components rhombus is-connected-to relation equivalence relation partitions set set equivalence classes components rhombus called connected components rhombus definition complement set pixels rhombus partitioned set connected components rhombus regard image surrounded frame rhombus component adjacent frame called background rhombus components called holes examples blue green components background holes jordan curve theorem closed curve defines connected regions background foreground connectivity rhombus opposite connectivity foreground background rhombus -foreground -background single pixel objects holes rhombus -background -foreground pixel object pixel hole boundaries rhombus boundary set pixels -neighbors boundary set denoted rhombus interior set pixels boundary s-s rhombus definition region surrounds region inside -path point background intersects rhombus theorem adjacent components surrounds surrounds examples levels components background level odd levels components component labeling rhombus binary image rhombus produce image pixels connected component unique label rhombus solution recursive depth-first labeling rhombus scan binary image top bottom left encountering rhombus change pixel unused component label rhombus recursively visit neighbors pixel mark label disadvantages recursive algorithm rhombus speed rhombus requires number iterations proportional largest diameter connected component image rhombus topology rhombus clear determine components holes components solution row scanning rhombus start top row image rhombus partition row runs rhombus run part background special background label rhombus run unique component label rhombus subsequent rows rhombus partition runs rhombus run run directly potentially component label rhombus run overlaps runs previous row give minimum label runs rhombus minimal label labels adjacent runs previous row relabel runs previous row labels local relabeling rhombus point step rhombus invariant condition hold row image processed downward scan label assigned runs row processed connected component minimum label run belonging component previous rows rhombus note applies connectivity pixels part processed subsequent merging components rows bbbb bbbb bbbb bbbb bbbb change rightmost labeled invariant condition fail upward scan rhombus bottom-to-top scan assign unique label component rhombus compute simple properties components scan rhombus start bottom 
row rhombus create table entry unique component label entry background background runs row rhombus mark component inside background upward scan rhombus subsequent rows rhombus run adjacent run subsequent row label table rhombus create table entry label rhombus mark inside run adjacent subsequent row rhombus property values area perimeter updated run processed rhombus run adjacent run subsequent row marked common label runs table properties updated bbbb bbbb bbbb process row process row bbbb process row properties rhombus goal recognize connected component set objects rhombus letters alphabet rhombus good potatoes versus bad potatoes rhombus associate measurements properties connected component compare expected properties object types properties rhombus area rhombus perimeter rhombus compactness rhombus smallest circle pir rhombus higher elongated objects rhombus properties holes rhombus number holes rhombus sizes compactness thinning rhombus neighborhood binary image center pixel rhombus center point simple point changing change number connected components neighborhood rhombus -simple -simple rhombus simple rhombus removal simple point change number connected components binary image rhombus end point -neighbor thinning rhombus -pixel binary image north border point pixel rhombus similarly define east west south border points rhombus simple thinning algorithm rhombus eliminate border points simple points end points rhombus directions sequence erase component rhombus result depends order directions considered -simple points 
ion goal tha ssi ccl eat eci tte ity lue inv ria sit orie nta ity hing edg correl oug plic det ect act ppl tions age cen obj ect gni age ample ild panora eco ild panorama lig matching eatures matching eatures cor pai matching eatures cor pai irs lig matching eatures det ect nde tly tch repeat abl det ect matching eatures espo reliable stinct ive descriptor rri cor detector phe ine edge basic easil shif ire lar ang ons rri detector dir ons alon rect dir ons rri detector math ati ity ift shi fted win functi ndo unc ussia ndo rri detector math ati shif bil tio ere trix riv tiv rri detector math ati ity iftin win igen lues dir ion owe change dir ion change min ellip selecting good eatures selecting good eatures larg selecting good eatures rri detector math ati incr ses dir ection onsta dir ections reg tio poi nts rri detector math ati easur cor spo tra erm rri detector math ati ith itude reg rri detector rge res thr int cal liz harris detector exam ple harris detector exam ple spon harris detector exam ple rge res harris detector exam ple harris detector exam ple harris detector exam ple int int tract rri poi rri detector inte nsity descr genval ons ood rge ity dir rge val euv rri detector erti rota ria ell pse ins resp ria rota rri detector rotati par uat poi schm bauckhage rri detector rotati ect rri detector inte nsity ges tia ria riv tiv ria nsity shif ity ima oor dina thr shold ima oor dina har tect erti ersp cti par uat poi schm bauckhage harris detector oper ties scale ges scal fine ill assi ges arse scal rri detector erti harri ect eren sca ges lity cor spondence possi cor spondences ect kan corn detector ide nsity surf tio sig inte nsi disc tie age grad tion dir ere nei hbor hood poi corn detecti cont onal conv ues easur edg ude ong est endi cul edg ect ons peci ect nei hbor hood appr oxi const nsi ngl edg nei hbor hood shol poi nei hbor hood eat corner poi tom gor age grad age age tri nei hbor hood put abo som shol sav coor nat lis sor list ghbo hoo resu lts resu lts resu lts moravec erest erator cti var ver cal agon -di gon rect ndow nim ria loc ghbo hoo tha herwi local invari local atures detect terest reg ard ess tra sla tio sca geometry tion sim rit tio ifo ent ect lid tho loc lly obj photometry affin ity models age chang scale varia detectio ide ons dif region correspo ndin sizes ill ook ages scale varia detectio esp inde tly age scale varia detectio solution sign unc gion tha inv spondi gions amp era ion ven dif size ill point ima onsid unc tion gion siz dius gion siz gion siz scale varia detectio gion siz gion siz loc tio rva gion ach ved shou age scal porta scal ant reg ndep ent scale varia detectio ood tio arp loc nsity bad bad good scale varia nce req res rep eata sel ect cati scal reaso scal e-sp ace ssi eff ect aks aci exam scal ren ce-o ssi rat scal pro scal e-no zed pla blursubtract blursubtract cal nvari ant det ing ker inv ale rotation cal nvari ant det ect ullm odu tion put huma vision cal nvari ant det ors harri pla cal maxi mum rri corner det ect space coor nat aci sca ndexi sed cal ant nct eat cal ant poi scal rris ift nts cal ext rem gau ssi ace scal scal erato ess tav lin tim sif int local ation xim f-g qua tic sur ounding lue subpix subsc inte pola tion blur subtract cal nvari ant det ect ors rri s-la pla cal maxi mum rri corner det ect space coor nat aci sca ndexi sed cal ant nct eat cal ant poi scal rris cal gau ssi ace scal scal exam ple sif oint detection hol age dog trem left afte sho aft test rat curvat ures cal nvari ant det ect ors ndexi sed cal ant expe nta tion rep ilit cor spondence possi cor spondences cal nvari ant det summ ages sam scen eren een rest tly solu tio ear ita ble ons sca thods pla iko pla ove sponse ove f-g ale nva tio pre ons ide sim ila rity tra orm rota orm nonuni nva tio loca intens extr initial point ong sta ting point stop unc tion aar ool sel mat sed cal ant ons poi ong ill prox pon gion tion nva tio gions und spond ppr oxim ith ell tric mom nts ine unc king stic unc tio gion inside nts llow ppr oxima gion ellips ill nts nva tio trix tiv cen ter pond ons rre nva tio algor ith ary fin ant gio loc ity rect tre ecti oun rep ace lli aar ool sel mat sed cal ant ons nva tio lly sta tre resh inte ext act ext regi lly sta tiv prox ith mat shed ons deb asel ilit mat eat nge age scal orie nta ith nois fin bor ure stin cti ess atures eat age measu ear est nva tio sum tra orm tio gion ric var rob ond gio ond thods ear ext lly sta tre ature point descriptors kno points tion tch int hou inv ria tiv descriptors nvariant rotat sponse nds onl phe ine edge descriptors nvariant rotat rip tion tive tion ndexi sed cal ant nct eat ures cal ant poi ccept ijc sif eat cal sel ect sca ssi ram ssi cal oot key eci abl scal orie nta keyp atu rep resen tati ript put adi nei hbor hoods poi usi shol ded adi ussi scal ant ons feat ure ect descri ant nsi 
chang nct eat cal ant descri cal ance adv ant age obust ness ange def ons ant det ant des ons ons anc scr low cal tran pir ound show good inv image rotation ale inte nsity hange oder affine tions nct eat cal ant poi ance uat cal scr cal uat cal det repe ata ity nge nvari ance ang facto rri s-la pla quant uat scr eval eat ilt rrel measu ess recei operat charact eri det ect spect posi det ect hes possi hes posi hes abase poi quer poi ance uat cal descr eature detection descriptio abl repeat abl feat poi det reg rdl cal sear ect scal lli ffi nvariant dist inctiv descriptors put inv ria liz scal tra orm tio ing ion eat ass ass schm ponce cvpr pam mode xtur ition schm ponce cvpr pam mode xtur ition ion eat ing gna ass ass supp chi ssi ier nel put ion ing eat ing schm ponce cvpr pam mode xtur ition ion supp chi ssi ier gna nel put ion ing ass ass ass bel age correlation ven ima obj ect cal ima possi cont obj ect sual ndo goal devel ages easu sim red fferen zed ssc rrel ssd ared iff eren ect itiv ill ina scal norm liz cross-correl ati ure nom onl som cons uni dar cor ssd sensi ese nces ness denom nds onl nored const denom rst liz ust xel act cal som scal hav unk draw cross-correl ati ose tha cross-correl ati scal tota ese ages ors easu ilia pro vect recal een vect equal ect ect zed ent cal ese vect cross-correl ati cross-correl ati cross-correl ati exam ple cont ear sses reduci atio nal correl ati tch act ead hing age hav cor nst ndo hav nst face recog face ery face easi housands charact recog cha act ori ilt head pho aph hav cor ons nst reduci atio nal correl ati tch act ead hing scal unk ima ance cam era obj onl appr oxi hav cor ons nst gen age con cal tra orm tio anar pat pag approxi face eat ance ansf ansf deg ees eedom ass cal face det ocess lle cal cal cat cal faces event anni ove sition scal faces req res illio ndo eval uat faces face det ect key eas cascad eat ear nod hte eat tes nonf nonf rea det mputer eak ass ers eak assi eat lie ssif ing thr shold nds training data depe pon ght definiti eatures ngula angle ature hor izonta ver tica thre angle ature fourr angle ature pixe tion ndo ith possibl ina tions hor loc tions tiv tion hin ngu oppose xpr ssi ste ble lte due puta tiona cat xel abo usi fol recurrences ere ima cat cal represent ima rapid aluati rectang lar eatures ing rep esent val rect gul tim exam gral rec resu reea -rect gul eat pute tiv peri dat aset trai tiv exam cked zed scal res gat exam pic ages aces ime ucture det ect scade tota eau cti cti tota num num ssin tim pix tiona bout onds ssing tim siz ssin pixe bout onds correl ati tch cal tra sfo tio tion ling find highe liz oss tion lle reduci atio nal correl ati tch ech tio soc rre tio duc num pixe multir solution ese tions pone tur tio duc tions subse subte nst subse ndom subse bounda subse reso corr ati ltire duce sol bot eat ssian ima ent cat ons ong hes expand sol ima sol issu choose det ect reshol ead cost mis coarse-to-f erarch arch tiv ons eat scal erat ref ria uti bor pla ffi mul solu ocessi age rre req ires ari ect scal tem sulting ope tions ecr sultin ope tions ram ocessing xam ple tio cam era ames put nce put energychang feat ures put aci decom pose bandpass ponent quar enhance put ussi cal eat poo ener han nei hbor hoods creasi easures ocal energy shol det posi ons zes det obj ect ate match echn b-te choose subse ima nder pos ons add eces erat approach key ssu ece choose eces rar perform cor nonm cat ons ent qui ckl choose eces obj ect choose det ect reshol matc met hod correl ati nary cont ere present sew ere associ edg associ imp lic edg det ect oce col nsi edg bot edg age tem late match case nar edg sew posi obt ned aci posi count num ber xel coi dent correl ati vat ity ons ons nst scal chang scal rsi ons age ver oot xpandi ima reduces speci tra orm detection ide ing nar llin ima col ear subset eat reshol llin pre ope rcept obl unbounded esent cal rametric representation nes nbo und ram ter pre nde nite ram nde rametri rep esen tati nes enc ode oor inte ons ith nda age tha max e-f rce detecti bru e-f rce erat set inp nerat count num ber hose xel probl rem ers unt asso par eat qui shol obl sat shol qui enum erat ent enu xel e-f rce tio eas bor der corner poi bor der con uch har act cal oul const quant zat nerating xels sta rsect age nda rse put nda ope speci cases cal ope coor nat chan eps oug coor nat put coor nat dependi ope obt nst chang coor nat ope chang oug coor nat put coor nat drawback e-f algorithm thm consi pos cat ons ere ssi cati chosen ner lin har put brut force act cal nar ner feat ure cal xel edg ner nes ina lic line nts llid par ect oug nam phy hod bru e-f rce possi nerat count oug possi coordi nat nerat passi oug tra orm array accu coun lly det quant zat par chosen represent esent ent referen cont num ber poi equat cos scan coun xel oor llow 
cos oat ndi ces tra orm alg rithm ant ram ace creat ccu rray ini tia cedu cal tra orm exa ple ord ing ope nte tio tra orm operties houg ter ace ity qua dom ram zed ect poi ace soi rve ram ter ace poi nds col ear rks age ect tiv ins ect tra orm ity tra orm canni encount xed cent ill nont xel nerat pass oug xel rst case pract cal ansform onl hose xel fas bru force xel ough ansf gor cast vot hen gor nat hat hav scor equal num ber xel sol igi oblem put oug ansf array resol arbi ari scanni consum rnat eep ack cat havi procedes ving sco put oug array qui scanni dat abov ent add ent dat ruc ure enev sends ent poi quadt sol igi oblem ind great res put oug ansf est hal cast poi ner enum poi lin subt rac cas ent ensur poi con scor onl nes ext bac scann ite actical oble rithm bia rds line num ber xel ect ner det ect pes shapes oduced bor der ppi shapes acem ent shapes ima solu precom put num ber xel lin cos ace ese norm zat array exact sam accum array ent cor spondi ent obt cen xel dev oped scan asym ptotic lex rst case e-f rce ide ing lte proa ner pai xel hav ese def set segm ent count unni con ent onal ansf pai put param pai poi necessa quant par ner set xel count num ber set num ber ner dat sor count zed count easi sol obl asym ptotic lex ity thm lin ese poi hav exam tha joi ing irs sam onl squar oot num ber nerat nes pai poi set edi show ility ndom sam cont poi ong hod duces asy usin age form ation act cal app ect grayscal age eans coul associ gradi recti easu edg poi limit consi ered exam onl ner nes adi ect xel duce put onal cos ach edg gradi agni ude coul ude oug ansfo cat peak ndi ner ood cont edg ead unw ant peak rcl detecti circle ram terized oug age rcl cen kno ace rcu con neralized ans orm mos dur ing hing imi lin ner cont liz oids ing oug ansf oop put ons onl encount rra ene encount ent det acem ent oul ned poi ese acem ent nerat ces crem ent rep resen tation neralized ans orm pre rra ill lis oor abc abc ace cat cat posi ace xel cat cat posi asic gorit pos iti era roug ent acem ent oul broug ori aced posi ent ent num tha pla pos eneral izatio ori ease nsi onal ddi nsi encount duri scan consi possi ons spect sul ent count ane poi quant zed acem ent ont ent scale ould dim ano oop con ers ssi scal liz ear rvi ear eat agai erarc cal eces eces nds possi hes eces ons eces sfy spa const exam quar det ect tra orm match obs def llow ubs ere tio zes exam ple nslat crem ent ent hig nsiona ays pro ith hig rra ini zat searchi aft erarchi cal represent ons usi coar ser esol sel ect expand par havi hes ect ons ead hav nsi ona ect ons coor nat consi peak ese nsi onal gen erate-and rra tia cal est qual peak expl nst peak chi cal cont par ima const oug pea poi oug space pas shol succeeds poi rth tes poi oug space crem ent tchi nary edg cal feat ure cat ons nar shape ith earest ance ans acem zes xel val exa cat edg spl aced eal cat ons ood usi ance ansf echni puti sta trans orm bru rce exact scan est ean ime ppr tio dis ass val xel rat ean ces hor ont cal nei hbor separ ance onal hbor separ ance puti sta trans orm lle rit set set era fol unt ere fur chang puti sta trans orm o-pa tia thm ini tia backw dor ist tra orm tio ere norm ean norm lle dor dis rank poi based ance nearest poi ched poi easur easur ance poi poi poi ance ner easy put usdorff ance ance ans orm put tra tra ere dis cetr ansf ance min tem late matchi sim lin scal ndom ndom posi ndom bat ons hose udes duced subsequent ons obt match posi bet posi search space rse som ilit anyw lle ilit rse cat ons ilit cal cool schedu oce mimic ect ect anar 
feature detection matching goal develop matching procedures detect possibly partially-occluded objects features patterns intensity values invariant position orientation scale intensity change template matching gray level correlation edge correlation hough transform chamfer matching applications feature detectors line detectors corner detectors spot detectors shapes character fonts faces applications image alignment stereo scene reconstruction motion tracking object recognition image indexing content-based retrieval build panorama brown lowe recognising panoramas iccv build panorama match align images matching features detect feature points images matching features detect feature points images find pairs matching features detect feature points images find pairs pairs align images matching features problem detect point independently images chance match repeatable detector matching features problem point correctly recognize reliable distinctive descriptor harris corner detector harris stephens combined corner edge detector basic idea easily recognize point small window shifting window direction give large change response harris detector basic idea flat region change directions edge change edge direction corner significant change directions harris detector mathematics euv wxy ixy change intensity shift intensity shifted intensity window function window function gaussian window harris detector mathematics euv expanding order taylor series small shifts bilinear approximation xxy iii mwxy matrix computed image derivatives harris detector mathematics euv intensity change shifting window eigenvalue analysis eigenvalues direction slowest change direction fastest change max min ellipse const selecting good features large selecting good features large small selecting good features small small harris detector mathematics corner large increases directions small constant directions edge edge flat region classification image points eigenvalues harris detector mathematics measure corner response det tracermk det trace empirically-determined constant harris detector mathematics corner edge edge flat depends eigenvalues large corner negative large magnitude edge small flat region small harris detector algorithm find points large corner response function threshold points local maxima localization harris detector harris detector compute corner response harris detector find points large corner response threshold harris detector points local maxima harris detector harris detector interest points extracted harris points harris detector summary average intensity change direction expressed bilinear form describe point terms eigenvalues measure corner response good corner point large intensity change directions large positive euv harris detector properties rotation invariance ellipse rotates shape eigenvalues remains corner response invariant image rotation harris detector properties rotation invariance comparing evaluating interest points schmid mohr bauckhage iccv harris detector properties rotation invariance schmid evaluation interest point detectors ijcv harris detector properties intensity partial invariance affine intensity change derivatives invariance intensity shift intensity scale image coordinate threshold image coordinate harris detector properties perspective comparing evaluating interest points schmid mohr bauckhage iccv harris detector properties scale invariant image scale fine scale points classified edges coarse scale corner harris detector properties quality harris detector scale repeatability rate correspondences correspondences schmid evaluation interest point detectors ijcv tomasi kanade corner detector idea intensity surface directions significant intensity discontinuities image gradient information direction magnitude direction compute matrix neighborhood point iii iii corner detection cont diagonalize converting form eigenvalues give measure edge strength magnitude strongest perpendicular edge directions eigenvectors neighborhood approximately constant intensity single step edge neighborhood threshold point neighborhood greater mark corner point tomasi kanade corner algorithm compute image gradient entire image image point form matrix neighborhood compute smallest eigenvalue eigenvalue threshold save coordinates list sort decreasing order eigenvalues scanning sorted list top bottom current point delete points list belong neighborhood results results results moravec interest operator compute directional variances horizontal vertical diagonal anti-diagonal directions window minimum directional variances local maximum overlapping neighborhood window point interesting jyixpjyixpv jyixpjyixpv jyixpjyixpv jyixpjyixpv max local min yxv yxi yxvyxvyxvyxvyxv advh invariant local features goal detect interest points image due translation rotation scale geometry rotation similarity rotation uniform scale affine scale dependent direction valid orthographic camera locally planar object photometry affine intensity change models image change scale invariant detection regions circles sizes point regions sizes images scale invariant detection problem choose circles independently image scale invariant detection solution design function region circle scale invariant regions scales average intensity regions sizes scale point image function region size circle radius region size image region size image scale invariant detection common approach scale region size image region size image local maximum function observation region size maximum achieved invariant image scale important scale invariant region size found image independently scale invariant detection good function scale detection stable sharp peak images good function responds contrast sharp local intensity change region size bad region size bad region size good scale invariance requires method repeatably select points location scale reasonable scale-space kernel gaussian koenderink lindeberg efficient choice detect peaks laplacian dog pyramid burt adelson crowley parker examining scales difference-of-gaussian constant ratio scales close approximation lindeberg scale-normalized laplacian shown heat diffusion equation blur subtrac scale invariant detection functions determining scale gxy lgxygxy dog gxyk gxy kernel imagef kernels gaussian note kernels invariant scale rotation laplacian difference gaussians scale invariant detection compare human vision eye response shimon ullman introduction computer human vision fall scale invariant detectors harris-laplacian find local maximum harris corner detector space image coordinates laplacian scale mikolajczyk schmid indexing based scale invariant interest points iccv lowe distinctive image features scale-invariant keypoints ijcv scale harris aci sift keypoints find local extrema difference gaussians space scale scale dog dog sift operator scale space processed octave doubling time sift key point localization detect maxima minima difference-of-gaussian scale space fit quadratic surrounding values sub-pixel sub-scale interpolation brown lowe blur subtrac scale invariant detectors harris-laplacian find local maximum harris corner detector space image coordinates laplacian scale mikolajczyk schmid indexing based scale invariant interest points iccv lowe distinctive image features scale-invariant keypoints ijcv scale harris aci sift lowe find local maximum difference gaussians space scale scale dog dog sift keypoint detection threshold dog peak ratio principle curvatures harris approach image dog extrema left peak threshold left testing ratio principle curvatures scale invariant detectors mikolajczyk schmid indexing based scale invariant interest points iccv experimental evaluation detectors scale change repeatability rate correspondences correspondences scale invariant detection summary images scene large scale difference goal find interest points independently image solution search maxima suitable functions scale space image methods harris-laplacian mikolajczyk schmid maximize laplacian scale harris measure corner response image 
sift lowe maximize difference-of-gaussians scale space affine invariant detection previously considered similarity transform rotation uniform scale affine transform rotation non-uniform scale affine invariant detection local intensity extremum initial point ray starting point stop extremum function reached tuytelaars gool wide baseline stereo matching based local affinely invariant regions bmvc tidt points ray obtain approximately regions remark search scale direction affine invariant detection regions found correspond approximate ellipses geometric moments dxdy fact moments uniquely determine function taking characteristic function region inside moments orders approximate region ellipse ellipse moments orders original region affine invariant detection qap region covariance matrix region points defines ellipse region relative center mass ellipses computed regions correspond affine invariant detection algorithm summary detection affine invariant regions start local intensity extremum point direction point extremum function curve connecting points region boundary compute geometric moments orders region replace region ellipse tuytelaars gool wide baseline stereo matching based local affinely invariant regions bmvc affine invariant detection maximally stable extremal regions threshold image intensities extract connected components extremal regions find threshold extremal region maximally stable local minimum relative growth square approximate region ellipse matas distinguished regions wide-baseline stereo feature stability affine change match features random change image scale orientation image noise affine distortion find nearest neighbor database features distinctiveness features vary size database features degree affine change image noise measure correct single nearest-neighbor match affine invariant detection summary affine transformation advance shapes regions ellipse geometric covariance matrix region robustly approximates region regions ellipses correspond methods search extremum rays tuytelaars van gool maximally stable extremal regions matas feature point descriptors detect points question match point descriptor invariant distinctive descriptors invariant rotation harris corner response measure depends eigenvalues matrix xxy iii mwxy harris stephens combined corner edge detector descriptors invariant rotation find local orientation dominant direction gradient compute description relative orientation mikolajczyk schmid indexing based scale invariant interest points iccv lowe distinctive image features scale-invariant keypoints accepted ijcv sift select canonical orientation create histogram local gradient directions computed selected scale gaussian pyramid neighborhood keypoint assign canonical orientation peak smoothed histogram key specifies stable coordinates scale orientation sift keypoint feature representation descriptor overview compute gradient orientation histograms neighborhoods relative keypoint orientation thresholded image gradients gaussian pyramid level keypoint scale quantize orientations values array histograms sift feature vector length values keypoint normalize descriptor make invariant intensity change lowe distinctive image features scale-invariant keypoints ijcv describing local appearance advantage robustness wide range deformations covariant detection invariant description extract affine regions normalize regions compute appearance descriptors sift lowe sift scale invariant feature transform empirically found show good performance invariant image rotation scale intensity change moderate affine transformations lowe distinctive image features scale-invariant keypoints ijcv mikolajczyk schmid performance evaluation local descriptors cvpr scale rotation evaluation scale invariant detectors repeatability scale invariance scale change factor harris-laplacian dog quantitative evaluation descriptors evaluation local features sift steerable filters differential invariants moment invariants crosscorrelation measure distinctiveness receiver operating characteristics detection rate respect false positives detection rate correct matches matches false positives false matches database points query points performance evaluation local descriptors mikolajczyk schmid cvpr feature detection description summary stable repeatable feature points detected image scale search correct scale maximum function affine approximate regions ellipses operation affine invariant invariant distinctive descriptors computed invariant moments normalizing respect scale affine transformation training set feature extraction bag features class class lazebnik schmid ponce cvpr pami local models texture recognition lazebnik schmid ponce cvpr pami local models texture recognition feature extraction bag features training set quantization signature class class support vector machine classifier kernel computation learning bag features training set lazebnik schmid ponce cvpr pami local models texture recognition feature extraction quantization support vector machine classifier signature kernel computation learning test image class class class decision class label testing image correlation image object interest called template image possibly object window larger image goal develop functions compare images measure similarity ssd normalized cross-correlation jinjim jinljkim lkcc ssd i-k j-l ssd perfect match ssd ssd sensitive constant illumination change image fix grayscale normalization ssd cross-correlation measure takes values range term denominator removed constant uniformly brighter darker template correlation high ssd sensitive differences brightness term denominator depends template constant term denominator eliminated normalize gray levels total scale pixel practically step scaled average gray level big image unknown images drawn cross-correlation suppose jinjinc jinc jinjinc jinjicn jinjim jinjim cross-correlation alternatively rescale unit total intensity view images unit vectors length correlation measure familiar dot product vectors recall dot product cosine angle vectors equal vectors vector normalized images identical big vectors cross-correlation template image note misses cross-correlation template image cross-correlation template image cont lots misses reducing computational cost correlation matching number factors lead large costs correlation matching image larger template perform correlation matching window templates compare image face recognition face template face easily tens thousands character recognition template character orientation template image template rotated image tilts head photograph perform correlation rotated versions reducing computational cost correlation matching number factors lead large costs correlation matching scale size template unknown image distance camera object approximately perform correlation scaled versions generally image mathematical transformation template image image planar pattern printed page approximately face viewed great distance transformation affine transformation degrees freedom classical face detection process smallest scale larger scale locations scales slide courtesy paul viola faces rare events scanning positions scales faces requires million window evaluations faces viola-jones face detector key ideas cascade architecture over-complete simple features box sums learning algorithm based adaboost form nodes weighted ensemble features ijj test non-face non-face non-face face paul viola michael jones robust real-time face detection intl computer vision weak classifiers weak classifiers formed simple box sum features applied input classifier trained setting threshold depends training data efficient computation kkk bxxh depends weights definition simple features rectangular features types two-rectangle feature type horizontal vertical three-rectangle feature type four-rectangle feature type pixel detection window combinations horizontal vertical locations scales feature types full set features features motivation rectangular features opposed expressive steerable filters due computational efficiency integral image def integral image location sum pixel values left inclusive recurrences pixel original image location cumulative column sum calculate integral image representation image single pass rapid evaluation 
rectangular features integral image representation compute rectangular sum constant time integral sum inside rectangle compute result twothree- four-rectangular features computed array experiments dataset training positive training hand picked aligned normalized scaled base resolution negative examples selected randomly picking sub-windows images faces experiments structure detector cascade final detector layers features total layer number number feautures detection rate rejection rate speed detector total number features evaluated mit-cmu test set average number features evaluated processing time pixel image conventional seconds processing time linearly scale image size processing megapixel images seconds correlation matching class mathematical transformations interest rotation scaling general goal find values highest normalized cross-correlation smallest ssd reducing computational cost correlation matching basic techniques reducing number operations correlation reduce number pixels multi-resolution image representations principal component feature selection reductions match subset sub-template subset random subsets boundary subsets multi-resolution correlation multi-resolution template matching reduce resolution template image creating gaussian pyramid match small template small image identify locations strong matches expand image template match higher resolution template selectively higher resolution image iterate higher higher resolution images issue choose detection thresholds level low lead cost high miss match coarse-to-fine hierarchical search selectively process relevant regions interest foveation scales iterative refinement variable resolution analysis based fine-to-coarse operators computing complex features large neighborhoods terms simpler features small neighborhoods gaussian pyramid laplacian pyramid texture pyramid motion pyramid efficiency multi-resolution processing image template correlation requires arithmetic operations detect finer scale increase scale template resulting operations decrease scale image resulting operations approaches differ cost pyramid processing goal detect moving objects stationary video camera pair consecutive image frames compute difference image compute energychange features compute laplacian pyramid decompose bandpass components square values enhance features compute gaussian pyramid level local integration feature values pools energy-change neighborhoods increasing size measures local energy threshold values determine positions sizes detected moving objects subset sub-template matching techniques sub-template template matching choose subset template match image compare remainder template positions high match add pieces template iteratively multi-stage approach key issues piece choose pieces rare images perform correlation matching non-match locations identified quickly choose pieces define geometry object choose detection thresholds stage subset matching methods edge correlation reduce edge maps binary images edges present edge map associate location implicitly orientation edge detection process color inside edge model sides edge image image template edge template matching simple case binary images edge points match position obtained placing position counting number pixels coincident binary correlation observations complexity matching template image rotations match rotated versions scale match scaled versions small distortions image give rise bad matches overcome binary smoothing expanding template image reduces specificity match hough transform line detection simple problem binary image find largest collinear subset binary image collinear subsets size greater threshold set disjoint collinear subsets size greater threshold representation lines slope y-intercept problems unbounded represent vertical lines parametric representation lines cos sin unbounded parameter representation bounded finite image slope parameter bounded interval parametric representation lines encode line coordinates intersections boundary image parameters bounded image size parameters max max brute-force solution line detection brute-force algorithm enumerates set lines passing binary input image line generates image pixels lie line counts number pixels problem remembers maximal count line parameters greater required threshold problem remembers satisfy threshold requirement enumerate element enumerate pixels lie brute-force solution enumeration easy lies side image border corner point border harder sin practically constant quantization generating pixels line standard problem computer graphics compute intersections line image boundaries intersection compute standard slope line special cases vertical line slope coordinate slowly algorithm steps coordinates computing coordinates depending slope obtain run constant changing coordinates slope slowly algorithm step coordinates computing coordinates drawbacks brute-force algorithm complexity algorithm sum lengths lines algorithm locations locations chosen avoids generating lines lines hard compute average length line brute-force algorithm lines pass practically binary image generated edge feature detector typical images pixels lie edges work generating lines waste time hough transform original application detecting lines time lapse photographs bubble chamber experiments elementary particles move straight lines collide create particles move straight trajectories hough physicist invented method turn algorithm loop image coordinates line parameters brute-force algorithm line generate line count hough transform pixel coordinates generate set lines passing hough transform algorithm array accumulators counters tally number line size array determined quantization parameters chosen line representation representation specific element referenced algorithm completed number points satisfy equation lie line cos sin algorithm scans encounters pixel coordinates performs loop step cos sin norm norm norm norm norm turns floats valid array indices hough transform algorithm quantize parameter space create accumulator array initialize apply voting procedure find local maxima hough transform input image coordinates slope-intercept parameterization hough transform properties hough space aka parameter space dimensionality equal number degrees freedom parameterized object point input image maps line parameter space sinusoidal curve parameter space point corresponds line image points collinear line works image points disconnected insensitive occlusion effective simple shapes hough transform computational complexity hough transform scanning image encounter fixed percentage nontrivially process pixels pixel generate lines pass pixel worst case practically hough transform work pixels makes faster bruteforce algorithm pixel bold line hough transform algorithm cast vote line algorithm terminates bin score equal number pixels line solving original problems problem find line maximal score compute hough transform scan array maximal resolve ties arbitrarily problem scanning time consuming alternatively track location maximal tally algorithm procedes problem find lines score compute hough array scan array values problem requires scanning array maintain data structure threshold elements add elements data structure algorithm sends entry k-d tree point quadtree solving original problems problem find set disjoint lines size greater threshold compute hough transform scan highest halt add set remove votes cast points line line generation algorithm enumerate image points line subtract votes cast elements line ensures point image contribute score line lines extracted back difficult avoid scanning iteration practical problems algorithm biased long lines number pixels intersection line image varies generalize algorithm detect types shapes bias introduced border image clipping shapes placements shapes image solution precompute number pixels line cos sin place normalization array size accumulator array completed divide entry entry obtain percentage pixels line similar tricks developed avoid scanning 
asymptotic complexity worst case hough transform algorithm algorithm brute-force algorithm alternative approach generate pairs pixels define set line segments counts running conventional hough transform algorithm pair compute parameters line joining pair points quantize parameters version algorithm generate set pixels line count number set number fall line generate data structure lines sorted count normalized count easily solve problems asymptotic complexity complexity algorithm generate lines points examined algorithm suppose sample compute lines joining pairs sample sample small square root number generating lines pair points set size incredibly shown high probability random sample size points long line method reduces asymptotic complexity image information practically computed applying edge detector grayscale image means associate gradient direction measured edge point direction limit range considered generate lines range gradient direction pixel reduce computational cost algorithm edge gradient magnitude magnitude differentially weight votes hough transform algorithm complicates peak finding generally good idea isolated high contrast edges lead unwanted peaks circle detection circle parameterized hough space image point coordinates votes circle points radius centered unknown hough space image point coordinates votes circular cone points generalized hough transform ght comparisons performed edge template matching match image points similar situation brute-force line finder generates lines generalized hough transform avoids comparing image edge template similar hough transform outermost loop algorithm perform computations encountering array counters encounter efficiently determine placements aligned point placement generate indices incremented template representation generalized hough transform represent binary array represent list coordinates place pixel location location template position place pixel location location template position ght basic algorithm scan encountered position iterate element placement brought origin position increment move element move algorithm completes counts number template points overlay template position ght generalizations suppose detect instances vary orientation image increase dimensionality adding dimension orientation time encounter scan rotations respect result incrementing counter plane point quantized determine placement rotated template bring increment scale add dimension loop considers scales generalizations match patterns linear curvilinear features images features detected impose hierarchical structure match pieces compositions pieces lowest level finds matches small pieces ght algorithm find combinations pieces satisfy spatial constraints square detection hough transform line matching set line segments define set observed line segments define subsegment length set transformations maps lines lines find maximizes llll lflfv translation translations incremented incremented incremented representing high-dimensional hough arrays problems high-dimensional arrays storage initialization searching high values algorithm solutions hierarchical representations match coarse-resolution hough array selectively expand parts array high matches projections high-dimensional array store projections common coordinates store find consistent peaks lower dimensional arrays ght generate-and-test peaks hough array reflect spatial distribution points underlying match typical test quality peak explicitly matching template image peak hierarchical ght provide control parts template match image controlling generate-and-test framework construct complete hough array find peaks test test point hough space passes threshold match succeeds points matched eliminated testing test point hough space incremented chamfer matching binary image edge local feature locations binary template image shape match image registration distance nearest distance transform goal find placement minimizes sum distance transform multiplied pixel values exact match location edges slightly displaced ideal locations good match distance transform technique computing distance transform brute force exact algorithm scan find closest euclidean distance expensive time approximations euclidean distance made efficient compute goal find simple method assign distance values pixels approximates ratios euclidean distances horizontal vertical neighbors image separated distance diagonal neighbors separated distance ratio computing distance transform parallel algorithm initially set set iterate min computing distance transform two-pass sequential algorithm initial conditions forward pass min backward pass min hausdorff distance matching transformation template image max norm euclidean norm called directed hausdorff distance ranks point based distance nearest point mis-matched point measure match measures distance point farthest point points distance generally easy compute hausdorff distances distance transform max min computing hausdorff distance translation maximum translated copies log time max maxmax minmax minmaxmax max bdad baba abhbahbah bbaa aabbbbaa ansformdistancetrmin bbxxd ansform distancetrmin xaxd fast template matching simulated annealing approach rotated scaled version random random match position randomly perturb perturbations magnitudes reduced subsequent iterations algorithm obtain match position match move position search space match worse move probability position iterate smaller perturbations smaller probabilities moving worse locations rate probability taking bad moves decreases called cooling schedule process demonstrated deformation parameters mimic projection effects planar patterns 
layered image representation chuck dyer based paper representing moving images layers wang adelson ieee trans image processing motivation standard flow assumes optical flow smooth bad things occlusion boundaries decompose image sequence set overlapping layers layer smooth motion problem definition input video algorithm motion vectors motions hypothesis number motion hypotheses theory hypothesis corresponds distinct motion video pixel assigned motion hypothesis closely approximates motion vector segments frame distinct regions motion hypothesis motion hypothesis generation region motion hypothesis represents pixel motions region squares fit find affine motion parameter region iteration initialized small blocks motion hypothesis refinement k-means cluster motion hypotheses unknown empty clusters removed large clusters split maintain minimum region segmentation pixel compare hypotheses dense motion vectors find closest hypothesis group pixels represented motion hypothesis region pixels large error unassigned hypotheses membership removed region adjustment region splitter assumes areas motion connected disconnected areas region split separate regions increases number hypotheses k-means region filter small regions give poor motion estimates remove regions area threshold disconnected objects motion merged segmentation step algorithm summary dense motion estimation region segmentation motion estimation performed pairs consecutive frames pair segmentation initialized blocks k-means initialized lattice affine space subsequent frame pairs initialized final segmentation motion hypotheses previous frame pair layer synthesis motion estimates relate frame previous frame frames projected video frame cumulative projection transformation matrix layers necessarily ordered similarly frames assume largest layer background median values projected pixel final image affine motion segmentation video mosaic layer flower bed regions images aligned motion compensation aligned regions flower bedtree house major layers application video synthesis layered decomposition captures spatial coherence object motion temporal coherence object shape texture semantically-meaningful layers synthesize sequences layers 
layered image representation chuck dyer based paper representing moving images layers wang adelson ieee trans image processing motivation standard flow assumes optical flow smooth bad things occlusion boundaries decompose image sequence set overlapping layers layer smooth motion problem definition input video algorithm motion vectors motions hypothesis number motion hypotheses theory hypothesis corresponds distinct motion video pixel assigned motion hypothesis closely approximates motion vector segments frame distinct regions motion hypothesis motion hypothesis generation region motion hypothesis represents pixel motions region squares fit find affine motion parameter region iteration initialized small blocks motion hypothesis refinement k-means cluster motion hypotheses unknown empty clusters removed large clusters split maintain minimum region segmentation pixel compare hypotheses dense motion vectors find closest hypothesis group pixels represented motion hypothesis region pixels large error unassigned hypotheses membership removed region adjustment region splitter assumes areas motion connected disconnected areas region split separate regions increases number hypotheses k-means region filter small regions give poor motion estimates remove regions area threshold disconnected objects motion merged segmentation step algorithm summary dense motion estimation region segmentation motion estimation performed pairs consecutive frames pair segmentation initialized blocks k-means initialized lattice affine space subsequent frame pairs initialized final segmentation motion hypotheses previous frame pair layer synthesis motion estimates relate frame previous frame frames projected video frame cumulative projection transformation matrix layers necessarily ordered similarly frames assume largest layer background median values projected pixel final image affine motion segmentation video mosaic layer flower bed regions images aligned motion compensation aligned regions flower bedtree house major layers application video synthesis layered decomposition captures spatial coherence object motion temporal coherence object shape texture semantically-meaningful layers synthesize sequences layers 
tracking condensation conditional density propagation isard blake condensation conditional density propagation visual tracking int computer vision goal model-based visual tracking dense clutter video frame rates condensation algorithm approach probabilistic framework tracking objects curves clutter iterative sampling algorithm model motion shape target top-down approach simulation analytic solution probabilistic framework object dynamics form temporal markov chain observations independent mutually process bayes rule tttt xxpxp ittttt xzpxxpxxzp notation state vector curve position orientation measurement vector image edge locations prior probability state vector summarizes prior domain knowledge independent measurements probability measuring fixed image probability measuring state compares image expectation based state probability measurement occurred called state posterior tracking estimation compute state posterior select state maximizes maximum posteriori map estimate measurements complex noisy posterior evaluated closed form particle filter iterative sampling idea stochastically approximate state posterior set weighted particles sample state weight bayes rule compute factored sampling generate set samples approximates posterior sample set generated sample weight probability xzpxp factored sampling condensation image estimating target state xxz knowing state priori predict evaluate bayes rule constant image condensation algorithm select randomly select particles based weights particle picked multiple times factored sampling predict move particles deterministic dynamics drift perturb individually diffuse measure likelihood sample comparing image local appearance based update weight obtain posterior time predicted state time posterior time observation density drift diffuse measure notes updating enforcing plausibility particles represent impossible configurations discarded diffusion modeled gaussian likelihood function convert goodness prediction score pseudo-probability markings closer predicted markings higher likelihood state posterior state posterior animation object motion model video tracking propagate probability densities motion model noise term state transition matrices learned training sequences state object b-spline curve represented point state space affine transformations object zxifzx mmmm evaluating pxzpclutterzqpxzp true measurement probability target visible dancing hand pointing hand glasses state space affine transformations spline curve edge detector applied normals spline autoregressive motion model model-based state space image position angle polyhedral model object minerva museum tour guide robot condensation track position museum desired location exhibit advantages particle filtering nonlinear dynamics measurement model easily incorporated copes lots false positives multi-modal posterior unlike kalman filter multiple samples multiple hypotheses fast simple implement 
tracking condensation conditional density propagation isard blake condensation conditional density propagation visual tracking int computer vision goal model-based visual tracking dense clutter video frame rates condensation algorithm approach probabilistic framework tracking objects curves clutter iterative sampling algorithm model motion shape target top-down approach simulation analytic solution probabilistic framework object dynamics form temporal markov chain observations independent mutually process bayes rule tttt xxpxp iitittttt xzpxxpxxzp notation state vector curve position orientation measurement vector image edge locations prior probability state vector summarizes prior domain knowledge independent measurements probability measuring fixed image probability measuring state compares image expectation based state probability measurement occurred called state posterior tracking estimation compute state posterior select state maximizes maximum posteriori map estimate measurements complex noisy posterior evaluated closed form particle filter iterative sampling idea stochastically approximate state posterior set weighted particles sample state weight bayes rule compute factored sampling generate set samples approximates posterior sample set generated sample weight probability nss xzpxpz factored sampling condensation image estimating target state xxzzx ppp knowing state priori predictthis canevaluate bayes rule constant image condensation algorithm select randomly select particles stn based weights pitn particle picked multiple times factored sampling predict move particles deterministic dynamics drift perturb individually diffuse measure likelihood sample comparing image local appearance based update weight obtain pit posterior time predicted state time posterior time observation density drift diffuse measure notes updating enforcing plausibility particles represent impossible configurations discarded diffusion modeled gaussian likelihood function convert goodness prediction score pseudo-probability markings closer predicted markings higher likelihood state posterior state posterior animation object motion model video tracking propagate probability densities motion model noise term state transition matrices learned training sequences state object b-spline curve represented point state space affine transformations object zxifzx mmmm evaluating pxzpclutterzqpxzp true measurement probability target visible dancing hand pointing hand glasses state space affine transformations spline curve edge detector applied normals spline autoregressive motion model model-based state space image position angle polyhedral model object minerva museum tour guide robot condensation track position museum desired location exhibit advantages particle filtering nonlinear dynamics measurement model easily incorporated copes lots false positives multi-modal posterior unlike kalman filter multiple samples multiple hypotheses fast simple implement 
volumetric scene reconstruction multiple views chuck dyer wisconsin dyer wisc wisc dyer image-based scene reconstruction goal automatic construction photo-realistic models scene multiple images set arbitrary viewpoints image-based modeling photography applications interactive visualization remote environments objects virtual video camera flybys mission rehearsal planning site analysis treaty monitoring virtual modification real scene augmented reality tasks general approaches world representation world centered recover complete geometric possibly photometric model scene operations feature correspondence tracking calibration structure motion model fitting plenoptic function representation camera centered integration images sample scene geometry panoramas light fields ldis operations image segmentation registration warping compositing interpolation light fields range viewpoints represented set images levoy hanrahan standard approach multiple view stereo fitzgibbon zisserman weaknesses standard approach views close order obtain point correspondences point correspondences tracked consecutive frames partial models fused fit parameterized surface model point features explicit handling occlusion differences views approach volumetric scene modeling goal determine transparency radiance points scene reconstruction multiple views input images reconstruction camera calibration discrete formulation voxel space goal assign rgba values voxels photo-consistent input images space colorings space photo-consistent colorings computable true scene computable complexity computability shape silhouettes volume intersection martin aggarwal shape photo-consistency voxel coloring seitz dyer space carving kutulakos seitz voxel-based scene reconstruction methods reconstruction silhouettes approach backproject silhouette intersect backprojected generalized-cone volumes volume intersection reconstruction true scene case infinite views visual hull complement lines don intersect convex hull convex hull hyperbolic regions shape silhouettes reconstruction object concavities points visible voxel algorithm volume intersection color voxel black silhouette image time images voxels don search scenes image-based visual hulls matusik cmu virtualized reality system shape silhouettes surface model constructed marching cubes algorithm virtual camera fly-by texture mapped sound synthesized sources properties volume intersection pros easy implement accelerated octrees cons concavities reconstructed reconstruction photometric properties image requires image segmentation extract silhouettes shape silhouettes volume intersection martin aggarwal shape photo-consistency voxel coloring seitz dyer space carving kutulakos seitz voxel-based scene reconstruction methods voxel coloring approach visibility problem images voxel visible global visibility problem inverse visibility images points visible images forward visibility scene depth ordering visit occluders condition depth order view-independent view-independent depth order function scene camera space distance separating plane plane sweep order collins occludes scene line cameras arrange cameras simplify occlusion relationships depth-order traversal voxels determines visibility panoramic depth ordering cameras oriented directions planar depth ordering apply panoramic depth ordering layers radiate outwards cameras panoramic layering layers radiate outwards cameras panoramic layering layers radiate outwards cameras compatible camera configurations depth-order constraint scene convex hull camera centers outward-looking cameras inside scene inward-looking cameras scene calibrated image acquisition calibrated turntable rotation images selected dinosaur images selected flower images layered scene traversal results dinosaur voxels voxels voxels input images spanning rotation results rose input images synthesized views results scaling voxel coloring time complexity voxels images voxels large high-resolution scenes enhancements texture mapping hardware project images layer voxels variable voxel resolution octrees coarse-tofine processing volumetric warping warp voxel space extend infinite domain coarse-to-fine voxel coloring octrees determine colored voxels current level spatial coherence add neighboring voxels decompose colored voxels octants repeat volumetric warping slabaugh malzbender culbertson results voxel coloring dynamic scenes goal interactive real-time fly-by dynamic scene video sequences multiple cameras dynamic voxel coloring input views reconstruction time instant sequence reconstructions voxel coloring dynamic scenes coarse-to-fine recursive decomposition focuses regions interest exploit temporal coherence coloring time initialize lowest resolution voxels time trace rays changed pixels limitations depth ordering view-independent depth order exist general algorithm unconstrained camera positions unconstrained scene geometry topology shape silhouettes volume intersection martin aggarwal shape photo-consistency voxel coloring seitz dyer space carving kutulakos seitz voxel-based scene reconstruction methods space carving algorithm step initialize volume true scene voxels marked opaque step voxel surface test photo-consistency voxel cameras front voxel inconsistent carve mark transparent step repeat step voxels consistent visibility property consistent consistent inconsistent inconsistent property ensures carving converges space carving convergence guaranteed convergence photo hull union photo-consistent scenes worst case consistency checks cameras voxels true scene reconstruction space carving algorithm optimal algorithm unwieldy complex visibility update procedure alternative multi-pass plane sweep algorithm efficient texture-mapping hardware converges quickly practice easy implement multi-pass plane sweep sweep plane principle directions cameras side plane repeat convergence true scene reconstruction multi-pass plane sweep sweep plane principle directions cameras side plane repeat convergence multi-pass plane sweep sweep plane principle directions cameras side plane repeat convergence multi-pass plane sweep sweep plane principle directions cameras side plane repeat convergence multi-pass plane sweep sweep plane principle directions cameras side plane repeat convergence multi-pass plane sweep sweep plane principle directions cameras side plane repeat convergence multi-pass plane sweep sweep plane principle directions cameras side plane repeat convergence multi-pass plane sweep sweep plane principle directions cameras side plane repeat convergence multi-pass plane sweep sweep plane principle directions cameras side plane repeat convergence multi-pass plane sweep sweep plane principle directions cameras side plane repeat convergence multi-pass plane sweep sweep plane principle directions cameras side plane repeat convergence multi-pass plane sweep sweep plane principle directions cameras side plane repeat convergence multi-pass plane sweep sweep plane principle directions cameras side plane repeat convergence multi-pass plane sweep sweep plane principle directions cameras side plane repeat convergence multi-pass plane sweep sweep plane principle directions cameras side plane repeat convergence multi-pass plane sweep sweep plane principle directions cameras side plane repeat convergence multi-pass plane sweep sweep plane principle directions cameras side plane repeat convergence multi-pass plane sweep sweep plane principle directions cameras side plane repeat convergence multi-pass plane sweep sweep plane principle directions cameras side plane repeat convergence multi-pass plane sweep sweep plane principle directions cameras side plane repeat convergence multi-pass plane sweep sweep plane principle directions cameras side plane repeat convergence multi-pass plane sweep sweep plane principle directions cameras side plane repeat convergence results african violet results hand texture effects voxel coloring effects noise effects voxel resolution voxel size voxel size voxel size voxel size voxel size voxel size voxel size extensions dealing calibration errors kutulakos construct approximate photo hull defined weakening definition photo-consistency requires exists photo-consistent pixel distance ideal position partly transparent scenes bonet viola compute voxel probability visible degree opacity optimization 
algorithm finds linear combination colors opacities voxels visual ray minimize error input image colors marble wastes statue grows michelangelo pros non-parametric model arbitrary geometry topology camera positions unconstrained guaranteed convergence cons expensive process high resolution voxel grids carving stops consistent voxel assumes simple surface reflectance model lambertian collaborators steve seitz andrew prock kyros kutulakos voxel coloring space carving summary current work brdf estimation multiple views modeling geometry simultaneously recover surface reflectance models wide-baseline feature point correspondence calibration multiple moving objects metric self-calibration static scenes 
volumetric scene reconstruction volumetric scene reconstruction multiple views multiple views chuck dyer chuck dyer wisconsin wisconsin dyer wisc dyer wisc wisc wisc dyer dyer image image-based scene reconstruction based scene reconstruction goal goal automatic construction photo automatic construction photo-realistic models realistic models scene multiple images set arbitrary scene multiple images set arbitrary viewpoints viewpoints image image-based modeling photography based modeling photography applications applications interactive visualization remote environments objects interactive visualization remote environments objects virtual video camera flybys mission rehearsal virtual video camera flybys mission rehearsal planning site analysis treaty monitoring planning site analysis treaty monitoring virtual modification real scene augmented reality virtual modification real scene augmented reality tasks tasks general approaches general approaches world representation world representation world centered world centered recover complete geometric recover complete geometric possibly photometric model scene possibly photometric model scene operations operations feature correspondence tracking feature correspondence tracking calibration structure motion model fitting calibration structure motion model fitting plenoptic plenopticfunction representation function representation camera centered camera centered integration images integration images sample scene geometry sample scene geometry panoramas light fields panoramas light fields ldis ldis operations operations image segmentation registration image segmentation registration warping compositing interpolation warping compositing interpolation light fields light fields range viewpoints represented set range viewpoints represented set images images levoyand hanrahan standard approach multiple view stereo standard approach multiple view stereo fitzgibbon zisserman weaknesses standard approach weaknesses standard approach views close order obtain point views close order obtain point correspondences correspondences point correspondences tracked point correspondences tracked consecutive frames consecutive frames partial models fused partial models fused fit parameterized surface model point features fit parameterized surface model point features explicit handling occlusion differences explicit handling occlusion differences views views approach volumetric scene modeling approach volumetric scene modeling goal goal determine transparency radiance points determine transparency radiance points scene reconstruction multiple views scene reconstruction multiple views input images input images reconstruction reconstruction camera camera calibration calibration discrete formulation discrete formulation voxel voxelspace space goal goal assign rgba values voxels assign rgba values voxels photo photo-consistent consistentwith input images input images space colorings space colorings space photo space photo-consistent colorings computable consistent colorings computable true scene computable true scene computable complexity computability complexity computability shape silhouettes shape silhouettes volume intersection volume intersection martin aggarwal shape photo shape photo-consistency consistency voxel voxelcoloring coloring seitz dyer space carving space carving kutulakos seitz voxel voxel-based scene reconstruction methods based scene reconstruction methodsreconstruction silhouettes reconstruction silhouettes approach approach backproject backprojecteach silhouette silhouette intersect backprojected generalized intersect backprojected generalized-cone volumes cone volumes volume intersection volume intersection reconstruction true scene reconstruction true scene case infinite views case infinite views visual hull visual hull complement lines don intersect complement lines don intersect convex hull convex hull convex hull convex hull hyperbolic regions hyperbolic regions shape silhouettes shape silhouettes reconstruction object concavities points reconstruction object concavities points visible visible voxel voxelalgorithm volume intersection algorithm volume intersection color color voxel voxelblack silhouette image black silhouette image time images time images voxels voxels don search don search scenes scenes image image-based visual hulls based visual hulls matusiket cmu virtualized reality system cmu virtualized reality systemshape silhouettes shape silhouettes surface model constructed marching cubes algorithm virtual camera fly virtual camera fly-by texture mapped sound synthesized sources properties volume intersection properties volume intersection pros pros easy implement easy implement accelerated accelerated octrees octrees cons cons concavities reconstructed concavities reconstructed reconstruction photometric properties reconstruction photometric properties image image requires image segmentation extract silhouettes requires image segmentation extract silhouettes shape silhouettes shape silhouettes volume intersection volume intersection martin aggarwal shape photo shape photo-consistency consistency voxel voxelcoloring coloring seitz dyer space carving space carving kutulakos seitz voxel voxel-based scene reconstruction methods based scene reconstruction methods voxel coloring approach voxel coloring approach visibility problem visibility problem images voxel visible images voxel visible global visibility problem global visibility problem inverse visibility inverse visibility images images points visible images points visible images forward visibility forward visibility scene scene depth ordering visit depth ordering visit occluders occludersfirst condition condition depth order depth order view view-independent independent view view-independent independentdepth order depth order function function fover scene camera space scene camera space distance separating plane distance separating plane plane sweep plane sweeporder order collins pand qin vin poccludes occludes qfrom vonly iff scene line cameras scene line cameras arrange cameras simplify occlusion relationships arrange cameras simplify occlusion relationships depth depth-order traversal order traversal voxels voxelsdetermines visibility determines visibility panoramic depth ordering panoramic depth ordering cameras oriented directions cameras oriented directions planar depth ordering apply planar depth ordering apply panoramic depth ordering panoramic depth ordering layers radiate outwards cameras layers radiate outwards cameras panoramic layering panoramic layering layers radiate outwards cameras layers radiate outwards cameras panoramic layering panoramic layering layers radiate outwards cameras layers radiate outwards cameras compatible camera configurations compatible camera configurations depth depth-order constraint order constraint scene convex hull camera centers scene convex hull camera centers outward outward-looking cameras inside scene cameras inside scene inward-looking cameras scene cameras scene calibrated image acquisition calibrated image acquisition calibrated turntable calibrated turntable rotation images rotation images selected dinosaur images selected dinosaur images selected flower images selected flower images layered scene traversal layered scene traversalresults dinosaur results dinosaur voxels voxels voxels input images spanning rotation results rose results rose input images synthesized views results results scaling scaling voxel voxelcoloring coloring time complexity time complexity voxels voxels images images voxels voxelsin large high large high-resolution scenes resolution scenes enhancements enhancements texture mapping texture mapping hardware project images hardware project images layer layer voxels voxels variable variable voxel voxelresolution resolution octrees octreesand coarse coarse-to to- fine processing fine processing volumetric warping volumetric warping warp warp voxel voxelspace extend space extend infinite domain infinite domain coarse coarse-to to-fine fine voxel voxelcoloring coloring octrees octrees determine colored determine colored voxels voxelsat current level current level spatial coherence spatial coherence add neighboring add neighboring voxels voxels decompose colored decompose colored voxels voxelsinto octants repeat octants repeat volumetric warping volumetric warping slabaugh slabaugh malzbender malzbender culbertson culbertson results results voxel voxelcoloring dynamic scenes coloring dynamic scenes goal interactive real-time fly-by dynamic scene 
video sequences multiple cameras dynamic dynamic voxel voxelcoloring input views coloring input views reconstruction time instant reconstruction time instantsequence reconstructions sequence reconstructions voxel voxelcoloring dynamic scenes coloring dynamic scenes coarse coarse-to to-fine recursive decomposition focuses fine recursive decomposition focuses regions interest regions interest exploit temporal coherence exploit temporal coherence coloring time coloring time initialize lowest resolution initialize lowest resolution voxels voxelsat time time trace rays changed pixels trace rays changed pixels limitations depth ordering limitations depth ordering view view-independent depth order exist independent depth order exist general algorithm general algorithm unconstrained camera positions unconstrained camera positions unconstrained scene geometry topology unconstrained scene geometry topology shape silhouettes shape silhouettes volume intersection volume intersection martin aggarwal shape photo shape photo-consistency consistency voxel voxelcoloring coloring seitz dyer space carving space carving kutulakos seitz voxel voxel-based scene reconstruction methods based scene reconstruction methodsspace carving algorithm space carving algorithm step step initialize volume true scene initialize volume true scene voxels voxelsmarked marked opaque opaque step step voxel voxelon surface surface test test photo photo-consistency consistencyof voxel voxelwith cameras cameras front front voxel voxelis inconsistent inconsistent carve carveit mark mark transparent transparent step step repeat step repeat step voxels voxelsconsistent consistent visibility property visibility property consistent consistent consistent consistent inconsistent inconsistent inconsistent inconsistent property ensures carving converges property ensures carving converges space carving convergence space carving convergence guaranteed convergence guaranteed convergence photo hull photo hull union photo union photo-consistent scenes consistent scenes worst case worst case consistency checks consistency checks cameras cameras voxels voxels true scene reconstruction space carving algorithm space carving algorithm optimal algorithm unwieldy optimal algorithm unwieldy complex visibility update procedure complex visibility update procedure alternative multi alternative multi-pass plane sweep algorithm pass plane sweep algorithm efficient texture efficient texture-mapping hardware mapping hardware converges quickly practice converges quickly practice easy implement easy implement multi multi-pass plane sweep pass plane sweep sweep plane principle directions sweep plane principle directions cameras side plane cameras side plane repeat convergence repeat convergence true scenereconstruction multi multi-pass plane sweep pass plane sweep sweep plane principle directions sweep plane principle directions cameras side plane cameras side plane repeat convergence repeat convergence multi multi-pass plane sweep pass plane sweep sweep plane principle directions sweep plane principle directions cameras side plane cameras side plane repeat convergence repeat convergence multi multi-pass plane sweep pass plane sweep sweep plane principle directions sweep plane principle directions cameras side plane cameras side plane repeat convergence repeat convergence multi multi-pass plane sweep pass plane sweep sweep plane principle directions sweep plane principle directions cameras side plane cameras side plane repeat convergence repeat convergence multi multi-pass plane sweep pass plane sweep sweep plane principle directions sweep plane principle directions cameras side plane cameras side plane repeat convergence repeat convergence multi multi-pass plane sweep pass plane sweep sweep plane principle directions sweep plane principle directions cameras side plane cameras side plane repeat convergence repeat convergence multi multi-pass plane sweep pass plane sweep sweep plane principle directions sweep plane principle directions cameras side plane cameras side plane repeat convergence repeat convergence multi multi-pass plane sweep pass plane sweep sweep plane principle directions sweep plane principle directions cameras side plane cameras side plane repeat convergence repeat convergence multi multi-pass plane sweep pass plane sweep sweep plane principle directions sweep plane principle directions cameras side plane cameras side plane repeat convergence repeat convergence multi multi-pass plane sweep pass plane sweep sweep plane principle directions sweep plane principle directions cameras side plane cameras side plane repeat convergence repeat convergence multi multi-pass plane sweep pass plane sweep sweep plane principle directions sweep plane principle directions cameras side plane cameras side plane repeat convergence repeat convergence multi multi-pass plane sweep pass plane sweep sweep plane principle directions sweep plane principle directions cameras side plane cameras side plane repeat convergence repeat convergence multi multi-pass plane sweep pass plane sweep sweep plane principle directions sweep plane principle directions cameras side plane cameras side plane repeat convergence repeat convergence multi multi-pass plane sweep pass plane sweep sweep plane principle directions sweep plane principle directions cameras side plane cameras side plane repeat convergence repeat convergence multi multi-pass plane sweep pass plane sweep sweep plane principle directions sweep plane principle directions cameras side plane cameras side plane repeat convergence repeat convergence multi multi-pass plane sweep pass plane sweep sweep plane principle directions sweep plane principle directions cameras side plane cameras side plane repeat convergence repeat convergence multi multi-pass plane sweep pass plane sweep sweep plane principle directions sweep plane principle directions cameras side plane cameras side plane repeat convergence repeat convergence multi multi-pass plane sweep pass plane sweep sweep plane principle directions sweep plane principle directions cameras side plane cameras side plane repeat convergence repeat convergence multi multi-pass plane sweep pass plane sweep sweep plane principle directions sweep plane principle directions cameras side plane cameras side plane repeat convergence repeat convergence multi multi-pass plane sweep pass plane sweep sweep plane principle directions sweep plane principle directions cameras side plane cameras side plane repeat convergence repeat convergence multi multi-pass plane sweep pass plane sweep sweep plane principle directions sweep plane principle directions cameras side plane cameras side plane repeat convergence repeat convergence results african violet results african violet results hand results hand texture effects texture effects voxel voxelcoloring coloring effects noise effects noise effects effects voxel voxelresolution resolution voxelsize voxelsize voxelsize voxelsize voxelsize voxelsize voxelsize extensions extensions dealing calibration errors dealing calibration errors kutulakos kutulakos construct approximate photo hull defined weakening construct approximate photo hull defined weakening definition photo definition photo-consistency requires consistency requires exists photo exists photo-consistent pixel distance consistent pixel distance rof ideal position ideal position partly transparent scenes partly transparent scenes bonet bonetand viola viola compute compute voxel voxelthe probability visible probability visible degree opacity degree opacity optimization algorithm finds linear combination optimization algorithm finds linear combination colors opacities colors opacities voxels voxelsalong visual ray visual ray minimize error input image colors minimize error input image colors marble wastes statue grows michelangelo michelangelo pros pros non-parametric parametric model arbitrary geometry topology model arbitrary geometry topology camera positions unconstrained 
camera positions unconstrained guaranteed convergence guaranteed convergence cons cons expensive process high resolution expensive process high resolution voxel voxelgrids grids carving stops carving stops firstconsistent consistent voxel voxel assumes simple surface reflectance model assumes simple surface reflectance model lambertian lambertian collaborators collaborators steve seitz andrew steve seitz andrew prock prock kyros kyroskutulakos kutulakos voxel voxelcoloring space carving summary coloring space carving summary current work current work brdf estimation multiple views brdf estimation multiple views modeling geometry modeling geometry simultaneously recover surface reflectance simultaneously recover surface reflectance models models wide wide-baseline feature point correspondence baseline feature point correspondence calibration multiple moving objects calibration multiple moving objects metric metric self-calibration static scenes calibration static scenes 
object recognition lighting affects appearance margaret thatcher illusion peter thompson margaret thatcher illusion peter thompson recognition problems object detection recognizing identity object recognition category recognition activity recognition classification problems choose class list candidates face detection face recognition sinha poggio perception makes recognition hard intrinsic variability class pose variability illumination variability background variability segmentation problem region image object feature selection problem features describe shape appearance approximate invariants limited range viewpoint variation parallelism collinearity angle pair lines co-termination pose consistency correspondences image features model features independent small number correspondences yields camera --the consistent strategy generate hypotheses small numbers correspondences triples points calibrated perspective camera backproject verify notice main issue camera calibration groups frame groups voting pose model leads correct sets correspondences pose vote pose accumulator array hough transform issues figure evolution testing model-based object recognition system mundy heller proc int conf computer vision copyright ieee evolution testing model-based object recognition system mundy heller proc iccv figure evolution testing model-based object recognition system mundy heller proc int conf computer vision copyright ieee figure evolution testing model-based object recognition system mundy heller proc int conf computer vision copyright ieee figure evolution testing model-based object recognition system mundy heller proc int conf computer vision copyright ieee invariants geometric properties invariant camera transformations easiest case view plane object weak perspective assume base points object point object written image points obtained multiplying plane affine transformation apk invariants means base points image read values object object image --invariant suggests strategy hough transform search correspondences form vote geometric hashing vote identity correspondence invariants hypotheses large votes fill table indexed base points fourth point yield object identity recognizing human actions movement posture change run walk crawl jump hop swim skate sit stand kneel lie dance object manipulation pick carry hold lift throw catch push pull write type touch hit press stroke shake stir turn eat drink cut stab kick point drive bike insert extract juggle play musical instrument conversational gesture point sign language activities situation assessment withdrawing money atm activities constructed composing actions partial order plans good model activities involve multiple agents detecting unusual situations activity patterns facilitated video activity transform objects space actions space-time segment region-ofinterest features points curves wavelet coefficients correspondence deform alignment recover parameters generative model discriminative classifier segment volume-ofinterest features points curves wavelets motion vectors correspondence deform alignment recover parameters generative model discriminative classifier key cues action recognition morpho-kinesics action shape movement body identity object activity context image video stick figure action stick figures variety ways resolutions degrees freedom joint positions joint positions joint angles complete representation evidence effectively computable human body configurations human body configurations mathematical challenges modeling shape variation nearest neighbor search high dimensions combining statistical optimality computational efficiency reconstruction algorithms sensing modalities 
space faces image point high dimensional space image point rnm linear subspaces classification expensive search nearest neighbors store large pdf suppose data points arranged idea fit line classifier measures distance line convert coordinates coordinate measure coordinate measure distance line classification orange pts position line orange point dimensionality reduction find dimensionality reduction represent orange points coordinates coordinates essentially makes cheaper store compare points bigger deal higher dimensional problems linear subspaces variation direction orange points unit vector minimizes var unit vector maximizes var solution eigenvector largest eigenvalue eigenvector smallest eigenvalue principal component analysis suppose data point n-dimensional procedure applies eigenvectors define coordinate system eigenvector largest eigenvalue captures variation training vectors eigenvector smallest eigenvalue variation compress data top eigenvectors corresponds choosing linear subspace represent points line plane hyper-plane dimensionality reduction set faces subspace set images suppose dimensional find subspace pca fitting hyper-plane set faces spanned vectors face eigenfaces pca extracts eigenvectors set vectors vectors direction face space projecting eigenfaces eigenfaces span space faces face converted eigenface coordinates recognition eigenfaces algorithm process image database set images labels run pca compute eigenfaces calculate coefficients image image recognized calculate coefficients detect face face find closest labeled face database nearest-neighbor k-dimensional space limits pca attempts fit hyperplane data interpreted fitting gaussian covariance matrix good model data model advance don pca regression techniques fit parameters model alternatives improvements pca developed lle http toronto roweis lle isomap http isomap stanford kernel pca http ucsd classes cse kernelpca article pdf survey methods applied object recognition moghaddam principal manifolds probabilistic subspaces visual recognition ieee transactions pattern analysis machine intelligence pami june vol issue pps http merl papers 
object recognition lighting affects appearance margaret thatcher illusion peter thompson margaret thatcher illusion peter thompson recognition problems object detection recognizing identity object recognition category recognition activity recognition classification problems choose class list candidates face detection face recognition sinha poggio perception makes recognition hard intrinsic variability class pose variability illumination variability background variability segmentation problem region image object feature selection problem features describe shape appearance approximate invariants limited range viewpoint variation parallelism collinearity angle pair lines co-termination pose consistency correspondences image features model features independent small number correspondences yields camera --the consistent strategy generate hypotheses small numbers correspondences triples points calibrated perspective camera backproject verify notice main issue camera calibration groups frame groups voting pose model leads correct sets correspondences pose vote pose accumulator array hough transform issues figure evolution testing model-based object recognition system mundy heller proc int conf computer vision copyright ieee evolution testing model-based object recognition system mundy heller proc iccv figure evolution testing model-based object recognition system mundy heller proc int conf computer vision copyright ieee figure evolution testing model-based object recognition system mundy heller proc int conf computer vision copyright ieee figure evolution testing model-based object recognition system mundy heller proc int conf computer vision copyright ieee invariants geometric properties invariant camera transformations easiest case view plane object weak perspective assume base points object point object written image points obtained multiplying plane affine transformation apk invariants means base points image read values object object image --invariant suggests strategy hough transform search correspondences form vote geometric hashing vote identity correspondence invariants hypotheses large votes fill table indexed base points fourth point yield object identity recognizing human actions movement posture change run walk crawl jump hop swim skate sit stand kneel lie dance object manipulation pick carry hold lift throw catch push pull write type touch hit press stroke shake stir turn eat drink cut stab kick point drive bike insert extract juggle play musical instrument conversational gesture point sign language activities situation assessment withdrawing money atm activities constructed composing actions partial order plans good model activities involve multiple agents detecting unusual situations activity patterns facilitated video activity transform objects space actions space-time segment region-ofinterest features points curves wavelet coefficients correspondence deform alignment recover parameters generative model discriminative classifier segment volume-ofinterest features points curves wavelets motion vectors correspondence deform alignment recover parameters generative model discriminative classifier key cues action recognition morpho-kinesics action shape movement body identity object activity context image video stick figure action stick figures variety ways resolutions degrees freedom joint positions joint positions joint angles complete representation evidence effectively computable human body configurations human body configurations mathematical challenges modeling shape variation nearest neighbor search high dimensions combining statistical optimality computational efficiency reconstruction algorithms sensing modalities 
space faces image point high dimensional space image point rnm linear subspaces classification expensive search nearest neighbors store large pdf suppose data points arranged idea fit line classifier measures distance line convert coordinates coordinate measure coordinate measure distance line classification orange pts position line orange point dimensionality reduction find dimensionality reduction represent orange points coordinates coordinates essentially makes cheaper store compare points bigger deal higher dimensional problems linear subspaces variation direction orange points unit vector minimizes var unit vector maximizes var solution eigenvector largest eigenvalue eigenvector smallest eigenvalue principal component analysis suppose data point n-dimensional procedure applies eigenvectors define coordinate system eigenvector largest eigenvalue captures variation training vectors eigenvector smallest eigenvalue variation compress data top eigenvectors corresponds choosing linear subspace represent points line plane hyper-plane dimensionality reduction set faces subspace set images suppose dimensional find subspace pca fitting hyper-plane set faces spanned vectors face eigenfaces pca extracts eigenvectors set vectors vectors direction face space projecting eigenfaces eigenfaces span space faces face converted eigenface coordinates recognition eigenfaces algorithm process image database set images labels run pca compute eigenfaces calculate coefficients image image recognized calculate coefficients detect face face find closest labeled face database nearest-neighbor k-dimensional space limits pca attempts fit hyperplane data interpreted fitting gaussian covariance matrix good model data model advance don pca regression techniques fit parameters model alternatives improvements pca developed lle http toronto roweis lle isomap http isomap stanford kernel pca http ucsd classes cse kernelpca article pdf survey methods applied object recognition moghaddam principal manifolds probabilistic subspaces visual recognition ieee transactions pattern analysis machine intelligence pami june vol issue pps http merl papers 
motion estimation lots track object behavior correct camera jitter stabilization align images mosaics shape reconstruction special effects motion illusion created akiyoshi kitaoka motion illusion created akiyoshi kitaoka optical flow aperture problem aperture problem hamburg taxi video hamburg taxi video horn schunck optical flow fleet jepson optical flow tian shah optical flow solving aperture problem basic idea assume motion field smooth horn schunk add smoothness term lucas kanade assume locally constant motion pretend pixel neighbors window equations pixel works practice horn schunk lucas-kanade flow equations pixel basic idea impose additional constraints common assume flow field smooth locally method pretend pixel neighbors window equations pixel minimum squares solution solution lucas-kanade flow problem equations unknowns summations pixels window technique proposed lukas kanade solution solve squares problem conditions solvability optimal satisfies lucas-kanade equation solvable ata invertible ata small due noise eigenvalues ata small ata well-conditioned large larger eigenvalue eigenvectors ata suppose edge ata gradients edge point direction gradients edge small magnitude eigenvector eigenvalue eigenvector ata perpendicular eigenvector eigenvalue eigenvectors ata relate edge direction magnitude edge large gradients large small low texture region gradients small magnitude small small high texture region gradients large magnitudes large large observation image problem measure sensitivity images tells pixels easy track hard feature tracking errors lucas-kanade potential errors procedure suppose ata easily invertible suppose noise image assumptions violated brightness constancy satisfied motion small point move neighbors window size large ideal window size solve newton method newton-raphson method lucas-kanade method iteration newton method results obtained iterations improving accuracy recall small motion assumption exact add higher order terms back polynomial root finding problem iterative refinement iterative lucas-kanade algorithm estimate velocity pixel solving lucas-kanade equations warp estimated flow field image warping techniques repeat convergence revisiting small motion assumption motion small larger pixel order terms dominate solve problem reduce resolution image iimage gaussian pyramid image gaussian pyramid image iag pixels pixels pixels pixels coarse-to-fine optical flow estimation image iimage gaussian pyramid image gaussian pyramid image iag coarse-to-fine optical flow estimation run iterative l-k run iterative l-k warp upsample optical flow result spatiotemporal x-y-t volumes visual event detection volumetric features sukthankar hebert cmu cvpr goal detect motion events classify actions stand-up sit-down close-laptop grab-cup x-y-t features optical flow sum values cube difference sum values cube values adjacent cube volumetric features approximately million features computed optical flow features optical flow stand-up action light means positive direction classifier cascade binary classifiers vote classification volume set positive negative examples node feature optimal threshold computed iteratively add filters node target detection rate false positive rate achieved output node majority vote individual filters action detection detection rate action types sitdown stand-up close-laptop grab-cup false positives minute note lengths actions vary frames aligned standard starting position action classifier learns beginning video discriminative end variable length robust viewpoint degrees scale results structure-from-motion determining structure world motion camera extrinsic parameters sequence images moving camera equivalently world moving camera fixed stereo position camera isn natural images motion lot motion long sequence images images assume intrinsic parameters camera focal length results paper figures extensions paraperspective poelman kanade pami sequential factorization morita kanade pami factorization perspective christy horaud pami sturm triggs eccv factorization uncertainty anandan irani ijcv initialize motion compatible sequential structure motion computation initialize structure minimize reprojection error extend motion compute pose matches previous views extend structure initialize structure refine existing structure sequential structure motion recovery initialize structure motion views additional view determine pose refine extend structure determine correspondences robustly jointly estimating matches epipolar geometry pollefeys result object tracking motion object recent survey monocular model-based tracking rigid objects survey http nowpublishers 
motion estimation lots track object behavior correct camera jitter stabilization align images mosaics shape reconstruction special effects motion illusion created akiyoshi kitaoka motion illusion created akiyoshi kitaoka optical flow aperture problem aperture problem hamburg taxi video hamburg taxi video horn schunck optical flow fleet jepson optical flow tian shah optical flow solving aperture problem basic idea assume motion field smooth horn schunk add smoothness term lucas kanade assume locally constant motion pretend pixel neighbors window equations pixel works practice horn schunk lucas-kanade flow equations pixel basic idea impose additional constraints common assume flow field smooth locally method pretend pixel neighbors window equations pixel minimum squares solution solution lucas-kanade flow problem equations unknowns summations pixels window technique proposed lukas kanade solution solve squares problem conditions solvability optimal satisfies lucas-kanade equation solvable ata invertible ata small due noise eigenvalues ata small ata well-conditioned large larger eigenvalue eigenvectors ata suppose edge ata gradients edge point direction gradients edge small magnitude eigenvector eigenvalue eigenvector ata perpendicular eigenvector eigenvalue eigenvectors ata relate edge direction magnitude edge large gradients large small low texture region gradients small magnitude small small high texture region gradients large magnitudes large large observation image problem measure sensitivity images tells pixels easy track hard feature tracking errors lucas-kanade potential errors procedure suppose ata easily invertible suppose noise image assumptions violated brightness constancy satisfied motion small point move neighbors window size large ideal window size solve newton method newton-raphson method lucas-kanade method iteration newton method results obtained iterations improving accuracy recall small motion assumption exact add higher order terms back polynomial root finding problem iterative refinement iterative lucas-kanade algorithm estimate velocity pixel solving lucas-kanade equations warp estimated flow field image warping techniques repeat convergence revisiting small motion assumption motion small larger pixel order terms dominate solve problem reduce resolution image iimage gaussian pyramid image gaussian pyramid image ige pixels pixels pixels pixels coarse-to-fine optical flow estimation image iimage gaussian pyramid image gaussian pyramid image ige coarse-to-fine optical flow estimation run iterative l-k run iterative l-k warp upsample optical flow result spatiotemporal x-y-t volumes visual event detection volumetric features sukthankar hebert cmu cvpr goal detect motion events classify actions stand-up sit-down close-laptop grab-cup x-y-t features optical flow sum values cube difference sum values cube values adjacent cube volumetric features approximately million features computed optical flow features optical flow stand-up action light means positive direction classifier cascade binary classifiers vote classification volume set positive negative examples node feature optimal threshold computed iteratively add filters node target detection rate false positive rate achieved output node majority vote individual filters action detection detection rate action types sitdown stand-up close-laptop grab-cup false positives minute note lengths actions vary frames aligned standard starting position action classifier learns beginning video discriminative end variable length robust viewpoint degrees scale results structure-from-motion determining structure world motion camera extrinsic parameters sequence images moving camera equivalently world moving camera fixed stereo position camera isn natural images motion lot motion long sequence images images assume intrinsic parameters camera focal length results paper figures extensions paraperspective poelman kanade pami sequential factorization morita kanade pami factorization perspective christy horaud pami sturm triggs eccv factorization uncertainty anandan irani ijcv initialize motion compatible sequential structure motion computation initialize structure minimize reprojection error extend motion compute pose matches previous views extend structure initialize structure refine existing structure sequential structure motion recovery initialize structure motion views additional view determine pose refine extend structure determine correspondences robustly jointly estimating matches epipolar geometry pollefeys result object tracking motion object recent survey monocular model-based tracking rigid objects survey http nowpublishers 
midterm examination computer vision november problem scoremax score total midterm exam fall camera projection true false orthographic projection twoparallel lines world parallel image conditions line viewed pinhole camera vanishing point infinity scene point coordinates perspectively projected image coordinates coordinates giveninmillimeters camera coordinate frame camera principal point coordinates assuming aspect ratio pixels camera focal length camera note aspect ratio defined ratio width height pixel midterm exam fall camera calibration showhow projection point planar scene world coordinates topixel coordinates inanimage plane represented planar affine cameramodel conditions affine transformation viewing planar scene howmanydegrees freedom solvefor minimum number calibration points needed estimate calibration parameters effects planar affine transformation onparallel lines midterm exam fall edge detection compare cannyedge detector laplacian-of-gaussian log edge detector questions operators isotropic non-isotropic describe operator terms order derivativesthat computes parameters defined user operator detector produce long thin contours briefly explain midterm exam fall featuredetection description wewant method corner detection images intensity voxel describe ageneralization harris corner detector tomasi-kanade corner detector giving main steps algorithm including test decide voxel corner point sift descriptor popular method describing selected feature points based local neighborhood properties theycan matched reliably images assuming feature points previously detected sift feature detector briefly describe main steps creating sift feature descriptor givenfeature point scene image sift descriptor invariant insensitive midterm exam fall hough transform ransac running favorite stereo algorithm assume produced dense depth map pixel input image scene point coordinates camera coordinate frame assume image scene single dominant plane front wall building unknown orientation smaller numbers scene points trees poles street part plane plane equation givenby define hough transform based algorithm detecting orientation plane scene define dimensions hough space procedure mapping scene points coordinates pixel space howthe plane sorientation determined describe howthe ransacalgorithm detect orientation plane scene scene points midterm exam fall epipolar geometry stereo top viewofastereo rig image optical centerleft optical center left image drawthe front views dimages show label approximate positions epipoles epipolar lines configuration cameras givenaconjugate pair points pixel coordinates inthe left image pixel coordinates inthe image stereo pair giv equation describes relationship points intrinsic extrinsic parameters cameras howmanyconjugate pairs points needed solvefor unknowns equation disparity gradient constraint solving stereo correspondence problem scene depth recovered stereo pair images circumstances images produced weak perspective projection images single perspective projection camera rotated optical center 
midterm examination computer vision november solution problem scoremax score total midterm exam fall camera projection true false orthographic projection twoparallel lines world parallel image true conditions line viewed pinhole camera vanishing point infinity line plane parallel image plane scene point coordinates perspectively projected image coordinates coordinates giveninmillimeters camera coordinate frame camera principal point coordinates assuming aspect ratio pixels camera focal length camera note aspect ratio defined ratio width height pixel midterm exam fall camera calibration showhow projection point planar scene world coordinates topixel coordinates inanimage plane represented planar affine cameramodel equivalently scale matrix matter conditions affine transformation viewing planar scene field view scene plane points visible world plane approximately depth camera compared distance camera plane howmanydegrees freedom solvefor minimum number calibration points needed estimate calibration parameters degrees freedom scale matter points effects planar affine transformation onparallel lines planar affine transformations preserve parallelism midterm exam fall edge detection compare cannyedge detector laplacian-of-gaussian log edge detector questions operators isotropic non-isotropic log isotropic canny non-isotropic describe operator terms order derivativesthat computes log derivative canny derivative parameters defined user operator log requires defining scale gaussian blurring canny requires thresholds hysteresis detector produce long thin contours briefly explain canny non-maximum suppression thins hyteresis thresholding fill weak edge gaps midterm exam fall featuredetection description wewant method corner detection images intensity voxel describe ageneralization harris corner detector tomasi-kanade corner detector giving main steps algorithm including test decide voxel corner point similarly case estimate average change intensity shift voxel bilinear approximation matrix computed partial derivatives directions compute eigenvalues ofm ellipsoid voxel measures variation intensity orthogonal directions test tomasikanade detector mark voxel corner point smallest eigenvalue isgreater threshold test harris operator mark voxel corner point greater threshold sift descriptor popular method describing selected feature points based local neighborhood properties theycan matched reliably images assuming feature points previously detected sift feature detector briefly describe main steps creating sift feature descriptor givenfeature point scene image sift descriptor invariant insensitive point sift keypoint detected descriptor constructed computing set orientation histograms based windows pixel neighborhood centered keypoint pixel neighborhood gradient direction quantized directions computed gaussian equal times scale keypoint orientation histograms computed relative orientation keypoint values weighted gradient magnitude pixel window results vector feature values sift descriptor values vector normalized enhance invariance illumination sift descriptor based edge orientation histograms robust contrast brightness detected scales descriptor translation rotation scale illumination intensity change adding constant intensity change contrast stretching invariant invariant significant viewpoint midterm exam fall hough transform ransac running favorite stereo algorithm assume produced dense depth map pixel input image scene point coordinates camera coordinate frame assume image scene single dominant plane front wall building unknown orientation smaller numbers scene points trees poles street part plane plane equation givenby define hough transform based algorithm detecting orientation plane scene define dimensions hough space procedure mapping scene points coordinates pixel space howthe plane sorientation determined assuming plane allowed pass camera coordinate frame origin divide resulting parameters define plane hough parameter space dimensional values assuming bound range values parameters pixel coordinates increment points hough space satisfy point small region maximum number votes determines desired scene plane describe howthe ransacalgorithm detect orientation plane scene scene points step randomly pick pixels image coordinates compute plane defined points step remaining pixels image compute distance position computed plane threshold distance increment counter number points inliers agree hypothesized plane step repeat steps times select triple points largest count step triple points selected step inlier points contributed count recompute planar fit points midterm exam fall epipolar geometry stereo top viewofastereo rig image optical centerleft optical center left image drawthe front views dimages show label approximate positions epipoles epipolar lines configuration cameras givenaconjugate pair points pixel coordinates inthe left image pixel coordinates inthe image stereo pair giv equation describes relationship points intrinsic extrinsic parameters cameras howmanyconjugate pairs points needed solvefor unknowns equation fundamental matrix degrees freedom correspondence generates linear constraint elements conjugate pairs noise needed compute linear algorithm -point algorithm note adding constraints form nonlinear techniques estimate point correspondences disparity gradient constraint solving stereo correspondence problem nearby image points correspondences similar disparities scene depth recovered stereo pair images circumstances images produced weak perspective projection images single perspective projection camera rotated optical center midterm exam fall 
examination computer vision october family problem score total exam fall image projection camera matrix --- point homogeneous coordinates cartesian coordinates point cartesian image coordinates projection ideal pinhole camera focal length pixel image principal point pixel pixel coordinates start upper-left corner image camera calibration matrix camera configuration assuming world coordinate frame aligned camera coordinate frame origins axes aligned origins camera pinhole matrix represents extrinsic rigidbody transformation camera coordinate system world coordinate system iii combining results compute projection scene point image coordinates exam fall camera calibration camera rigidly mounted views planar table top projector rigidly mounted table projects narrow beam light table visible point image table top height table top precisely controllable positions camera projector table unknown table top heights point light table detected image pixel coordinates table height image coordinates beam light projective camera model specialized scenario write general formula describes relationship world coordinates height table top image coordinates pixel coordinates point light detected give answer homogeneous coordinates projection matrix variables table top position answer write explicit equations generated observation degrees freedom transformation table top positions images required solve unknown parameters projective camera model exam fall camera calibrated unknown height table image height table uniquely solved give equation describe briefly image measured pixel coordinate point light camera calibrated table top positions required describe briefly assuming projective camera assume affine camera model problem write general formula describes relationship affine camera model projective camera model give advantage disadvantage affine camera projective camera problem exam fall edge detection properties edge detectors canny edge detector marr-hildreth laplacian-of-gaussian detector respect property explain briefly fewer number parameters set closed chains edges detected computes edge orientation localization true edge position implemented efficiently faster execution time requires non-maximum suppression thin edges isotropic operator round corners boundary curvature high sensitive noise exam fall distance transform image points pixel coordinates row column coordinates compute set points equidistant euclidean metric set points line defining perpendicular bisector alternative metrics compute distance transform image circle pixels equidistant defined metric square show number distance closest points city-block metric chessboard metric exam fall image segmentation normalized-cut segmentation algorithm computes eigenvalues eigenvectors normalized affinity matrix describe meaning eigenvectors smallest eigenvalues define affinity measure measures similarity pixels depends similarity intensities inversely distance briefly explain rationale definition minimize computational burden ncut requires computing large affinity matrix suppose divide input image small sub-images size sub-images describe main steps procedure ncut two-stage fashion sub-images results stage segment image exam fall image empty sets points set points distributed roughly uniformly circle radius centered point center image set points distributed circle radius centered point located inside circle assume points set distributed densely distances points circle smaller distances points circles describe segmentation k-means clustering algorithm produce briefly explain describe segmentation normalized-cut algorithm produce briefly explain 
reconstruction motion estimation apparent contours circular motion k-y wong mendon cipolla department engineering cambridge proc british machine vision conference introduction problem modeling objects turntable motion recovery reconstructioncontour tracking motivation files rich source information apparent contours epipolar parameterisation reconstruction volume intersection reconstruction error sec radius motion recovery method capture images calibration grid multiple positions turntable image capture replace grid object capture views calibration camera position solve camera projection matrix calibration track corner points grid fit circles points solve axis rotation track apparent contours b-spline snake track object contour epipolar parameterization find correspondences apparent contours epipolar parameterization experiment correspondences found intersections b-splines epipolar lines profiles tracked b-spline snakes wire frame triangulation points computed triangulation pairs point correspondences shaded model results boyer cipolla triangulation experimental results reconstruction vase demo experimental results reconstruction head model motion recovery method epipolar geometry general motion epipolar tangencies affine approximation epipolar tangencies circular motion epipolar tangencies symmetry properties surface revolution symmetry properties image surface revolution symmetric image screw axis harmonic homology pointing screw axis bilateral symmetry harmonic homology epipolar geometry circular motion fixed entities image screw axis horizon epipoles epipolar lines related wef epipolar geometry correspondent epipolar tangents related intersect image screw axis epipolar tangents image intersect epipole preliminary results conclusions simple triangulation computationally simple cope planar surfaces motion estimation requires epipolar tangencies divide conquer trivial initializations optimizations low-dimension search space 
fall page examination handed december due december take-home exam individually free resources books papers web pages source material helping develop answers work cite answers printed neatly type written write concisely longwinded answers point discuss extraneous issues marks figures mathematics aid giving concise answers questions intended open-ended aspects answered giving clear description key theoretical algorithmic issues involved giving description computational approach solution turn answers dyer office mailbox floor length restriction expect typed pages plenty explain portrait eyes follow room give answer terms homography relationship viewer picture human visual system photoreceptors called rods cones vary spatial density distance direction gaze fovea central region spatial density highest covers visual angle approximately degrees width thumb viewed arm length image central foveal region cones color vision receptors avoid world tunnel vision human eye performs saccades small eye movements fovea view parts scene high spatial acuity detail illustration sequence saccades center person looked picture face left exam fall result saccadic eye movements visual processing perception seemingly high-resolution view world people integrate multiple overlapping spatially-varying resolution images understood information http eyelab msu visualcognition http psychology uiowa faculty hollingworth problem concern digital cameras increasingly higher spatial resolution number pixels feasible build cameras large fields view high pixel density problem assume digital cameras small focal length wide field view wfov coarse pixel sampling visual field large focal length narrow field view nfov fine sampling visual field call cameras wfov nfov cameras assume rigidly attached camera rig mounted tripod rotate images cameras orientation set pairs grayscale images describe framework combining images single variable-resolution image representation assume relative orientation images words describe theoretical algorithmic aspects constructing mosaic image pairs images describe active vision approach rig actively controlling rig orientation order recognize moving object assume rig capture image pairs rig controlled moving object camera time nfov camera obtain detail recognize object nfov image view small part object recognized library objects recognized nfov images regions object analyzed recognition achieved 
examination computer vision october family solution problem score total exam fall image projection camera matrix --- point homogeneous coordinates cartesian coordinates point cartesian image coordinates projection ideal pinhole camera focal length pixel image principal point pixel pixel coordinates start upper-left corner image camera calibration matrix camera configuration vfk ufk assuming world coordinate frame aligned camera coordinate frame origins axes aligned origins camera pinhole matrix represents extrinsic rigidbody transformation camera coordinate system world coordinate system trrr trrr trrr iii combining results compute projection scene point image coordinates scene point projects pixel exam fall camera calibration camera rigidly mounted views planar table top projector rigidly mounted table projects narrow beam light table visible point image table top height table top precisely controllable positions camera projector table unknown table top heights point light table detected image pixel coordinates table height image coordinates beam light projective camera model specialized scenario write general formula describes relationship world coordinates height table top image coordinates pixel coordinates point light detected give answer homogeneous coordinates projection matrix variables beam light line world projects line points table top turn projects line images configuration corresponds projective transformation form table top position answer write explicit equations generated observation pps pps pps degrees freedom transformation solution defined scale factor projection matrix table top positions images required solve unknown parameters projective camera model table height yields equations positions sufficient exam fall camera calibrated unknown height table image height table uniquely solved give equation describe briefly uniquely determined pup note coordinate practice good idea coordinates solve squares solution minimize measurement errors image measured pixel coordinate point light camera calibrated table top positions required describe briefly problem involves line-to-line transformation points line light project line image points beam intersects table top distance measured image line origin represented single image parameter image coordinate compute line image parallel axis camera calibrated set pairs assuming projective camera assume affine camera model problem write general formula describes relationship affine camera model projective camera model give advantage disadvantage affine camera projective camera problem affine camera model scene depth variation relative viewing distance major advantage computational affine camera linear major disadvantage weaker model true camera situations parallel lines converge image exam fall edge detection properties edge detectors canny edge detector marr-hildreth laplacian-of-gaussian detector respect property explain briefly fewer number parameters set marr-hildreth requires parameter closed chains edges detected marr-hildreth zero-crossings computes edge orientation canny directional derivative localization true edge position canny non-isotropic smoothing non-maxima suppression implemented efficiently faster execution time marr-hildreth isotropic operator implemented convolutions requires non-maximum suppression thin edges canny isotropic operator marr-hildreth round corners boundary curvature high canny non-istropic smoothing sensitive noise canny smooths non-isotropically based edge normal direction exam fall distance transform image points pixel coordinates row column coordinates compute set points equidistant euclidean metric set points line defining perpendicular bisector alternative metrics compute distance transform image circle pixels equidistant defined metric square show number distance closest points city-block metric chessboard metric exam fall image segmentation normalized-cut segmentation algorithm computes eigenvalues eigenvectors normalized affinity matrix describe meaning eigenvectors smallest eigenvalues smallest eigenvalue eigenvector pixels image smallest eigenvalue eigenvector divides pixels sets bi-partition image regions define affinity measure measures similarity pixels depends similarity intensities inversely distance briefly explain rationale definition jide ejia jid jfif definition combines measures scaling standard deviation order make comparable pixels distance combined affinity distant pixels image minimize computational burden ncut requires computing large affinity matrix suppose divide input image small sub-images size sub-images describe main steps procedure ncut two-stage fashion sub-images results stage segment image step sub-image affinity function defined apply ncut compute bi-partition step compute connected components binary image constructed merging results step step define graph node connected component step arc pair adjacent connected components define affinity function pairs regions based size length common boundary average brightness regions adjacent make affinity make depend similarity brightness values regions sizes apply ncut graph compute bi-partition original image two-stage approach benefits saving space reducing tendency ncut oversegment images exam fall image empty sets points set points distributed roughly uniformly circle radius centered point center image set points distributed circle radius centered point located inside circle assume points set distributed densely distances points circle smaller distances points circles describe segmentation k-means clustering algorithm produce briefly explain assuming initial cluster centers k-means algorithm find correct circular clusters attempts reassign points based distance class centers class separation boundary perpendicular bisector estimated class centers initially points side line assigned points side line assigned iterations updated class centers move farther farther center image resulting final partitioning corresponds half-circles half points circles grouped describe segmentation normalized-cut algorithm produce briefly explain affinity measure based distance pairs points distance points circle distance points circles normalized-cut algorithm compute bi-partition correctly segments image sets circular points 
examination computer vision october family problem score total exam fall camera calibration relationship point world coordinates pixel image coordinates defined projective transformation camera projection matrix matrix incorporate lens distortions camera briefly explain give lists intrinsic camera parameters giving extrinsic camera parameters show decomposed product matrices elements expressed terms intrinsic extrinsic camera parameters give main steps algorithm computing matrix single image calibration object exam fall planar transformations planar ade building captured image camera assume plane corresponds world coordinate frame plane scene point building projects image pixel coordinates planar projective transformation describes relationship give answer homogeneous coordinates degrees freedom transformation point correspondences required determine transformation correspondences answer helpful briefly explain explain give invariant planar projective transformation give invariant planar affine transformation invariant planar projective transformation building sets lines running parallel axes lines image determine building plane parallel image plane exam fall edge detection show approximation derivative image obtained convolving image kernel image defined ignore computing image pixels words result values addition showing result convolution edges detected property coefficients kernel ensures output obtained regions constant intensity image kernel approximating derivative kernel approximating derivative iii kernel approximating gaussian describe major advantage disadvantage isotropic operator non-isotropic operator respect issues computational efficiency noise image purpose non-maxima suppression hysteresis canny edge detector exam fall corner detection detecting corners detecting edges initial step application computer vision harris corner detection algorithm computes matrix pixel based derivatives point computes eigenvalues matrix values label pixel locally smooth region edge point corner point give answer label pixel label pixel label pixel eigenvalues explain english rationale difference detecting corner points criterion tomasi kanade algorithm versus criterion harris algorithm thresholds exam fall active contours energy functional active contours snakes terms econtinuity esmoothness eimage terms combined define term called eint terms explain briefly measures defined term omitted effect giving negative weight econtinuity energy functional definition contour expand exam fall segmentation normalized graph cut define cut explain intuitively measures find regions object boundaries grouping connected chains strong edge points adjacent gradients imply smooth contour define affinity measure purpose magnitude mag direction direc gradient pixel image compute affedge pair adjacent pixels include additional computational steps computing affinity make sense obtaining good results briefly explain definition segment images regions uniform texture measure texture pixel computing function neighborhood centered pixel briefly explain function define texture affinity pixels afftexture biased depending close pixels region boundary 
examination computer vision october family solutions problem score total exam fall camera calibration relationship point world coordinates pixel image coordinates defined projective transformation camera projection matrix matrix incorporate lens distortions camera briefly explain lens distortions highly nonlinear represented give lists intrinsic camera parameters giving extrinsic camera parameters intrinsic parameters focal length principal point coordinates pixel size scaling parameters extrinsic parameters translational rotational parameters define rigid body motion world coordinate frame camera coordinate frame show decomposed product matrices elements expressed terms intrinsic extrinsic camera parameters trrr trrr trrr vfk ufk trkp give main steps algorithm computing matrix single image calibration object matrix unknowns scale matter observing scene points non-degenerate configuration sufficient point pair equations form rewrite equations form vector unknowns matrix coefficients squares solve computing eigenvector smallest eigenvalue ata note approximate solution starting point nonlinear optimization exam fall planar transformations planar ade building captured image camera assume plane corresponds world coordinate frame plane scene point building projects image pixel coordinates planar projective transformation describes relationship give answer homogeneous coordinates ppp ppp ppp degrees freedom transformation point correspondences required determine transformation correspondences answer helpful briefly explain explain points calibration accuracy improved linear squares give invariant planar projective transformation invariants include concurrency collinearity order contact tangent discontinuities cusps cross-ratio collinear points measurements canonical frame give invariant planar affine transformation invariant planar projective transformation invariants include parallelism ratio areas ratio lengths collinear parallel lines midpoints building sets lines running parallel axes lines image determine building plane parallel image plane sets vanishing point infinity building fronto-parallel exam fall edge detection show approximation derivative image obtained convolving image kernel image defined ignore computing image pixels words result values addition showing result convolution edges detected intensity discontinuities occur maxima derivative approximates maximum corresponds position edge detected position pixels intensities pixels property coefficients kernel ensures output obtained regions constant intensity image kernel approximating derivative kernel values sum kernel approximating derivative kernel values sum iii kernel approximating gaussian kernel values sum normalization describe major advantage disadvantage isotropic operator non-isotropic operator respect issues computational efficiency isotropic operators laplacian gaussian generally computationally efficient non-isotropic operators implemented single convolution multiplication frequency domain zerocrossing detection directional operators canny operator require search local maxima exam fall noise image directional operators generally robust noise smoothing pixels side edge operator higher order derivatives sensitive noise purpose non-maxima suppression hysteresis canny edge detector non-maxima suppression thins responses single pixel gradient direction detected produces one-pixel wide sequence edge points hysteresis thresholding simultaneously attempts eliminate weak edge points caused noise filling gaps strong edge points weak edge response detected exam fall corner detection detecting corners detecting edges initial step application computer vision detecting corners sparse set points needed facilitating detection points multiple images stereopsis motion tracking harris corner detection algorithm computes matrix pixel based derivatives point computes eigenvalues matrix values label pixel locally smooth region edge point corner point give answer label pixel label pixel label pixel harris corner detector computes labels pixel alternatively labels pixel alternatively direction edge large normal direction edge labels pixel alternatively large eigenvalues explain english rationale difference detecting corner points criterion tomasi kanade algorithm versus criterion harris algorithm thresholds corresponds direction maximum change intensity corresponds direction minimum change intensity criterion test direction strong edge present criterion hold small compared criterion ensures eigenvalues large defined ideally ensure eigenvalues large similar size exam fall active contours energy functional active contours snakes terms econtinuity esmoothness eimage terms combined define term called eint terms explain briefly measures defined term omitted econtinuity measures degree rigidity elasticity contour omitted discontinuities contour removing snaxels bunch esmoothness measures degree bending stiffness contour omitting tangent discontinuities contour snake jagged overfit noisy data eimage measures features image act attraction repulsion forces contour edge magnitude term makes contour attracted edges image omitting term means evolution snake influenced image data usual definitions total energy functional contour shrink point line effect giving negative weight econtinuity snaxels bunch tend contour expand energy functional definition contour expand approach modify eimage includes balloon force normal direction contour snaxel point approach online reading run snake algorithm segment resulting contour eliminate high energy segments grow end segment direction tangents run snake algorithm segment finally merge final segments exam fall segmentation normalized graph cut define cut explain intuitively measures bjai jiaffbacut measures similarity groups pixels defined disjoint sets find regions object boundaries grouping connected chains strong edge points adjacent gradients imply smooth contour define affinity measure purpose magnitude mag direction direc gradient pixel image compute affedge pair adjacent pixels include additional computational steps computing affinity make sense obtaining good results briefly explain definition intuitively edge pixels opposite sides edge dissimilarity high meaning affinity low hand edge directions contour affinity high affinity defined measuring angle gradient directions pixels weighted gradient magnitude angle degrees affinity low degrees affinity high compute dot product gradient vectors computes cosine angle vectors non-maxima suppression thick contours created segment images regions uniform texture measure texture pixel computing function neighborhood centered pixel briefly explain function define texture affinity pixels afftexture biased depending close pixels region boundary fixed window compute texture pixel polluted pixel texture boundary pixels window region pixels region texture characteristics 
texture texture easy recognize hard define deterministic textures thing-like stochastic textures stuff-like tasks discrimination segmentation classification texture synthesis shape texture texture transfer video textures texture discrimination shape texture modeling texture texture image obeying statistical properties similar structures repeated degree randomness steerable oriented pyramids texture synthesis efros leung iccv synthesizing pixel find windows image match neighborhood pixels neighborhood filled synthesize pick matching window random assign center pixel window sample image generated image sample markov random field markov random field mrf generalization markov chains dimensions first-order mrf probability pixel takes values neighbors higher order mrf larger neighborhoods markov chain markov chain sequence random variables state model time markov assumption state dependent previous dependency conditional probability first-order markov chain th-order markov chain synthesizing pixel sample image exact neighborhood match present find matches ssd error randomly choose preferring matches higher probability sample generated image growing texture starting initial image grow texture pixel time window size controls regularity synthesis results increasing window size results aluminum wirereptile skin failure cases growing garbage verbatim copying image-based text synthesis efros leung extended observation neighbor pixels highly correlated input image non-parametric sampling idea unit synthesis block faster synthesize pixels block synthesizing block input texture random placement blocks block neighboring blocks constrained overlap minimal error boundary cut min error boundary minimal error boundary overlapping blocks vertical boundary overlap error philosophy corrupt professor algorithm plagiarize source image cover evidence rationale texture blocks definition correct samples texture problem connecting texture transfer constraint texture sample texture transfer texture object paint object requires separating texture shape hard cheat assume capture shape boundary rough shading add constraint sampling similarity luminance underlying image spot parmesan rice 
texture texture easy recognize hard define deterministic textures thing-like stochastic textures stuff-like tasks discrimination segmentation classification texture synthesis shape texture texture transfer video textures texture discrimination shape texture modeling texture texture image obeying statistical properties similar structures repeated degree randomness steerable oriented pyramids texture synthesis efros leung iccv synthesizing pixel find windows image match neighborhood pixels neighborhood filled synthesize pick matching window random assign center pixel window sample image generated image sample markov random field markov random field mrf generalization markov chains dimensions first-order mrf probability pixel takes values neighbors higher order mrf larger neighborhoods markov chain markov chain sequence random variables state model time markov assumption state dependent previous dependency conditional probability first-order markov chain th-order markov chain synthesizing pixel sample image exact neighborhood match present find matches ssd error randomly choose preferring matches higher probability sample generated image growing texture starting initial image grow texture pixel time window size controls regularity synthesis results increasing window size results aluminum wirereptile skin failure cases growing garbage verbatim copying image-based text synthesis efros leung extended observation neighbor pixels highly correlated input image non-parametric sampling idea unit synthesis block faster synthesize pixels block synthesizing block input texture random placement blocks block neighboring blocks constrained overlap minimal error boundary cut min error boundary minimal error boundary overlapping blocks vertical boundary overlap error philosophy corrupt professor algorithm plagiarize source image cover evidence rationale texture blocks definition correct samples texture problem connecting texture transfer constraint texture sample texture transfer texture object paint object requires separating texture shape hard cheat assume capture shape boundary rough shading add constraint sampling similarity luminance underlying image spot parmesan rice 
photometry radiometry tour guide computer graphics enthusiasts ian ashdown eng fies president byheart consultants limited tutorial adapted book radiosity programmer perspective ian ashdown october byheart consultants limited originally published john wiley sons visit http helios order book cd-rom introduction light read introductory book computer graphics learn light intensity brightness interested creating physically realistic images light aristotle believed light consists corpuscles emanated eye illuminate world today favor theory quantum mechanics hecht zajac possibility light vibrations dimension ten-dimensional hyperspace kaku true nature light remains mystery preeminent dictionary english language describes light light natural agent stimulates sense sight medium condition space sight concise oxford english dictionary edition interest light parochial simply understand light measured units measurements expressed understand concepts idea model virtual worlds light light electromagnetic radiation visible light tiny fraction electromagnetic spectrum extending very-low-frequency radio waves microwaves infrared visible ultraviolet light x-rays ultraenergetic gamma rays eyes respond visible light detecting rest spectrum requires arsenal scientific instruments ranging radio receivers scintillation counters rigorous exact description electromagnetic radiation behavior requires knowledge quantum electrodynamics maxwell electromagnetic field equations similarly complete understanding perceive light eyes delves deeply physiology psychology human visual system enormous body literature related physical aspects light electromagnetic radiation hecht zajac equally enormous amount devoted perceive cornsweet fortunately interests extremely modest simply measure perceive radiometry radiometry science measuring light portion electromagnetic spectrum practice term limited measurement infrared visible ultraviolet light optical instruments aspects radiometry theory practice practice involves scientific instruments materials measuring light including radiation thermocouples bolometers photodiodes photosensitive dyes emulsions vacuum phototubes charge-coupled devices plethora interested theory radiometric theory simple topic texts physics optics discuss paragraphs rarely discuss topic detail shorn convoluted mathematics obtuse definitions radiometric theory simple easily understood radiant energy light radiant energy electromagnetic radiation considered wave particle depending measure transports energy space light absorbed physical object energy converted form microwave oven heats glass water microwave radiation absorbed water molecules radiant energy microwaves converted thermal energy heat similarly visible light electric current flow photographic light meter radiant energy transferred electrons kinetic energy radiant energy denoted measured joules spectral radiant energy broadband source sun emits electromagnetic radiation electromagnetic spectrum radio waves gamma rays radiant energy concentrated visible portion spectrum single-wavelength laser hand monochromatic source radiant energy emitted specific wavelength define spectral radiant energy amount radiant energy unit wavelength interval wavelength defined qdqd spectral radiant energy measured joules nanometer radiant flux radiant power energy unit time power measure joules watts laser beam milliwatts watts radiant power light flows space radiant power commonly referred time rate flow radiant energy radiant flux defined radiant energy time terms photographic light meter measuring visible light instantaneous magnitude electric current directly proportional radiant flux total amount current measured period time directly proportional radiant energy absorbed light meter time photographic flash meter works measures total amount radiant energy received camera flash flow light space represented geometrical rays light computer graphics ray tracing thought infinitesimally thin lines drawn space direction flow radiant energy light mathematical abstractions thinnest laser beam finite cross section provide aid understanding radiometric theory radiant flux measured watts spectral radiant flux spectral radiant power spectral radiant flux radiant flux unit wavelength interval wavelength defined measured watts nanometer radiant flux density irradiance radiant exitance radiant flux density radiant flux unit area point surface surface real imaginary mathematical plane conditions flux arriving surface fig case radiant flux density referred irradiance flux arrive direction surface rays irradiance defined edda radiant flux arriving point differential area surrounding point flux leaving surface due emission reflection fig radiant flux density referred radiant exitance irradiance flux leave direction surface definition radiant exitance mdda radiant flux leaving point differential area surrounding point figure irradiance figure radiant exitance importance real imaginary surface overstated means radiant flux density measured three-dimensional space includes surface physical objects space air vacuum inside transparent media water glass radiant flux density measured watts square meter spectral radiant flux density spectral radiant flux density radiant flux unit wavelength interval wavelength radiant flux arriving surface called spectral irradiance defined eded radiant flux leaving surface called spectral radiant exitance defined mdmd spectral radiant flux density measured watts square meter nanometer radiance radiance understood visualizing imagine ray light arriving leaving point surface direction radiance simply infinitesimal amount radiant flux contained ray period formal definition radiance requires ray infinitesimally narrow elemental cone apex point real imaginary surface cone differential solid angle measured steradians note ray intersecting surface angle area intersection surface differential cross-sectional area cross-sectional area ray cos angle ray surface normal shown figure ray cross-sectional area cos called projected area ray-surface intersection area term referring finite areas preliminaries mind imagine elemental cone ray light arriving leaving surface figs definition radiance dad cos cos projected area figure ray light intersecting surface radiant flux differential area surrounding point differential solid angle elemental cone angle ray surface normal point unlike radiant flux density definition radiance distinguish flux arriving leaving surface fact formal definition radiance ansi ies states leaving passing arriving surface figure radiance arriving figure radiance leaving radiance note radiant flux density point surface due single ray light arriving leaving angle surface normal dda cos radiance point angle ddad cos radiant flux density unit solid angle radiance measured watts square meter steradian spectral radiance spectral radiance radiance unit wavelength interval wavelength defined dad cos measured watts square meter steradian nanometer radiant intensity imagine infinitesimally small point source light emits radiant flux direction amount radiant flux emitted direction represented ray light contained elemental cone definition radiant intensity idd differential solid angle elemental cone direction definition differential solid angle ddar eddadrd differential surface area surface sphere centered distance source irradiance surface generally radiant flux intercept angle fig inverse square law point sources cos intensity source direction distance source surface element figure inverse square law point sources imagine real imaginary surface continuum point sources source occupies differential area fig viewed angle surface normal source projected area cos combining definitions radiance eqn radiant intensity eqn alternative definition radiance ldida cos differential intensity point source direction radiant intensity measured watts steradian figure radiance point source spectral radiant intensity spectral radiant intensity radiant intensity unit 
wavelength interval wavelength defined idid measured watts steradian nanometer illumination versus thermal engineering definitions commonly illumination engineering accordance american national standard institute nomenclature definitions illuminating engineering ansi ies definitions differ thermal engineering siegel howell radiative heattransfer theory infrared light point source concept common illumination engineering texts thermal engineers term radiant intensity describe radiance watts unit area unit solid angle terminology consequence computer graphics community adapted concepts radiative heat transfer create radiosity theory process adopted thermal engineering terminology unfortunate situation computer graphics relies point source concept ray tracing tutorial defines radiant intensity watts unit solid angle radiance watts unit area unit solid angle maintain consistency radiosity ray-tracing theory note papers texts radiosity theory computer graphics texts define radiant intensity watts unit area unit solid angle photometry photometry science measuring visible light units weighted sensitivity human eye quantitative science based statistical model human visual response light perception light carefully controlled conditions human visual system marvelously complex highly nonlinear detector electromagnetic radiation wavelengths ranging nanometers light wavelengths continuum colors ranging visible spectrum red green blue sensitivity human eye light varies wavelength light source radiance watt -steradian green light appears brighter source radiance watt -steradian red blue light photometry measure watts radiant energy attempt measure subjective impression produced stimulating human eye-brain visual system radiant energy task complicated immensely eye nonlinear response light varies wavelength amount radiant flux light constant flickering spatial complexity scene perceived adaptation iris retina psychological physiological state observer host variables subjective impression quantified normal viewing conditions commission internationale eclairage international commission illumination cie asked hundred observers visually match brightness monochromatic light sources wavelengths controlled conditions statistical result so-called cie photometric curve shown figure shows photopic luminous efficiency human visual system function wavelength weighting function convert radiometric photometric measurements wavelength photopic luminous efficiency figure cie photometric curve photometric theory address perceive colors light measured monochromatic combination continuum wavelengths eye response determined cie weighting function underlines crucial point difference radiometric photometric theory units measurement thought firmly mind quickly review fundamental concepts photometry luminous intensity foundations photometry laid pierre bouguer essai optique bouguer discussed photometric principles terms convenient light source time wax candle basis point source concept photometric theory wax candles national light source standards centuries england spermaceti wax derived sperm whale oil replaced international standard based group carbon filament vacuum lamps crucible liquid platinum freezing point today international standard theoretical point source luminous intensity candela latin word candle emits monochromatic radiation frequency hertz approximately wavelength maximum photopic luminous efficiency radiant intensity direction measurement watts steradian cie photometric curve candela weighting factor needed convert radiometric photometric measurements monochromatic point source wavelength radiant intensity watts steradian photopic luminous efficiency source luminous intensity candela luminous flux luminous power luminous flux photometrically weighted radiant flux power unit measurement lumen defined watts radiant power frequency hertz luminous intensity luminous flux light wavelengths calculated cie photometric curve point source uniform isotropic luminous intensity candela directions uniform intensity distribution emits lumen luminous flux unit solid angle steradian luminous energy luminous energy photometrically weighted radiant energy measured lumen seconds luminous flux density illuminance luminous exitance luminous flux density photometrically weighted radiant flux density illuminance photometric equivalent irradiance luminous exitance photometric equivalent radiant exitance luminous flux density measured lumens square meter footcandle lumen square foot luminance luminance photometrically weighted radiance terms visual perception perceive luminance approximate measure bright surface appears view direction luminance called photometric brightness term longer illumination engineering subjective sensation visual brightness influenced physical physiological psychological factors luminance measured lumens square meter steradian lambertian surfaces lambertian surface surface constant radiance luminance independent viewing direction accordance definition radiance luminance radiant luminous flux emitted transmitted reflected surface lambertian surface referred ideal diffuse emitter reflector practice true lambertian surfaces matte surfaces approximate ideal diffuse reflector typically exhibit semispecular reflection characteristics oblique viewing angles lambertian surface concept computer graphics lambertian surfaces unique reflect incident flux completely diffuse manner fig matter angle incidence incoming geometrical ray distribution light leaving surface remains unchanged imagine differential area lambertian surface infinitesimally small equivalent point source flux leaving surface modeled geometrical rays intensity ray leaving surface angle surface normal lambert cosine law cos intensity ray leaving direction perpendicular surface figure reflection lambertian surface derivation equation clear remember viewing angle differential area constant radiance luminance intensity vary accordance projected area cos ldida dida cos lambertian surface simple relation radiant luminous exitance radiance luminance flux leaving lambertian surface factor source endless confusion students radiometry photometry fortunately intuitive explanation suppose place differential lambertian emitter inside surface imaginary sphere fig inverse square law eqn irradiance point inside surface sphere cos diameter sphere cos cos cos sphere figure lambertian emitter illuminating interior sphere lambert cosine law eqn cos cos simply irradiance radiant flux density point inside surface constant interesting definition irradiance eqn constant flux density finite surface area area surface sphere radius ard definition radiant exitance eqn radiance lambertian surface eqn explains resorting integral calculus factor radiosity ansi ies define mention term radiosity unusual photometric radiometric terms longer encouraged illuminance called illumination changed illuminance avoid confusion act illuminating state illuminated ansi ies moon wrote scientific basis illumination engineering luminous exitance called luminosity curiously equivalent term radiant exitance coined term radiosity describe density radiant flux leaving surface illumination engineering community moon proposal luminosity changed luminous emittance luminous exitance radiant exitance consequent thermal engineering community adopted radiosity siegel howell confusing fortunately remember radiosity radiant exitance tutorial takes exception unwisely computer graphics community term radiosity describe radiant exitance accepted term thermal engineering community acceptable illumination engineers variety historical reasons computer graphics illumination engineering communities common interests communicate effectively common lexicon definitions lexicon ansi ies conclusions covered reflectance transmittance absorption scattering diffraction polarization interaction human visual system light including scoptic mesopic luminous efficiency temporal effects flicker important color perception study light perceive fills volumes research papers textbooks begins understanding measure light intensity tutorial radiometric photometric theory conceptually simple easily understood ansi ies nomenclature definitions illuminating engineering ansi ies rp- york illuminating engineering society north america bouguer essai optique paris cornsweet visual perception cambridge academic press hecht zajac optics reading addison-wesley kaku hyperspace oxford oxford press moon scientific basis 
illumination engineering york mcgraw-hill siegel howell thermal radiation heat transfer washington hemisphere publishing 
image descriptions browsing retrieval carlo tomasi leonidas guibas computer science department stanford stanford abstract arpa image understanding workshop monterey november stanford started bort develop techniques image data base browsing retrieval based picture content queries pictorialdescriptions ofthe desired images formulatedfroma point-and-clickgraphical query editor lets user navigate space description parameters retriever extracts set indices query searches data base ecient approximate nearest neighbor algorithms computational geometry navigator query editor enables user view possibly large set retrieved images browse data base introduction bandwidth today communication systems capacity informationstorage devices makes exchange store large amounts pictures time low cost libraries images movies catalogs maps aerial surveys pictures books journals widely electronic form current retrieval systems make ine bective wealth pictorial information fact moving images by-and-large left uninterpreted growing data bases usefulness information function howwell accessed image data bases useless size stanford started bort develop techniques browsing retrieval based picture content discussed instance gupta jain faloutsos task requires investigation fundamental issues image representation paper outline kind system plan build conceptual challenges lie ahead query imagedata base manyforms user speci idea image leading focussed retrieval problem generic exploratory interaction browsing system case user system formulate query systemthen searches data base matches returns image set empty small large design browsing retrieval system address issues query language primitives constructs query query editor tools formulate query edit image indexing arrange images data base generate indices fast retrieval search algorithms indices respond query output presentation displaythe results ofthe query large number images retrieved design query language image indexing scheme closely related retrieval system match queries indices propose unify aspects cning language description images queries query pictorial description looked queries cimage-like far-reaching consequence decision image retrieval occurs syntactic level attempt made extract semantics images therebyavoid imagerecognition worthy pursuit shown elusiveover decades computer vision research price wepay choice provide pictorial language rich dexible user describe potentially large complexsets images small number constructs time enable user build description intuitiveway successive cnements design graphical user interface retrieval system paramount importance queries images language browsing set images similar navigating queries query editor system presentation retrieved images data base browser based uni ced notion navigating space descriptions fact query formulated starting tentative description modifying parameters satisfaction controls parameter-space navigation tool output retrieval displayed query-sensitive manner emphasizing parts image relevant query letting user navigate images perceptually meaningful data base browsing design image indexing scheme entails cning part image description pre-stored provide reliable retrieval cues general language combines primitives words constructs sentences toavoid combinatorial complexity indices retrieval language primitives constructs similar text retrieval based words sentences salton finally search algorithms break descriptions indices images recombine retrieved sets images query result conclusion identi ccation image query descriptions lowers level processing syntactic matching leads concept description language unifyingtheme ofour project design ofprimitivesis computer vision problem entails identifying imagefeatures describe image perceptually meaningful cning composition constructs strong section outline criteria design indices primitives image description language section discuss structure query including language compositionconstructs issues design search algorithms problem displaying query results indices success enterprise depend extent whichwe discover eciently compute indices image correlate perceptual characteristics image partition kinds objects sizes colors textures mutual positions indices capture user remembers image describe image hope image query drawn user yield similarindices lead portion index space original image hashes evidence caelli notions object size relative position color texture primitives index selection computational representation indices require research exploration desirable indices compute remainrelatively unchanged transformations image induced localized environment small lighting conditions viewpoint scene observed part research area exploring ways make textures canonical small projective ene deformations experimenting techniques drawn leu lee malikand rosenholtz binford andlevitt shi tomasi sato cipolla primary class index functions wehave exploring coe ecients basis functions wavelet representations image multiresolution analysis active area research lastfour cveyears yielded goodresults anumber applications image compression mallat daubechies cohen amultiresolution representation natural image query application variety reasons user maywantto search adata base images query muchlower resolution image suchas obtained video camera setting user draws imagequery tools natural parts desired image berent levels detail search outdoor scene grassy celd lower part image blue sky low detail type house speci area image high detail setting treat imageindices signi ccant waveletcoe ecients bsaythose valueis abovesome threshold mightdowell matching videoimageto forthe general image retrieval application drawbacks existing wavelet technology wavelet coe ecients computed sensitive exact positioning image data image plane area exploring canchoring wavelet basis elements image independent image translation possibility simply compute set centered wavelet coe ecients pixel convolving image copy centered pixel wavelet function translation class problem wavelet basis makes tradeo spatiallocalizationand frequency localization daubechies describing image hierarchically spatial localization important upper levels hierarchy coarse segmentation image objects frequency localization importantinthe lower levels describing texture objects workingon classes ofwavelet functions mix match functions good spatial localization level good frequency localization cnal possibly problem remark application important store coe ecients reconstruct image wewant store wavelet basis indices functions coe ecients large convey signi ccant perceptual spatial frequency aspect image wemay fact choose record indices number berent redundantwavelet functions goal image compression reconstruction test similarity images wavelet coe ecients image indices standard wavelet bases respect sharp color intensity boundaries image bectively averaging capples oranges essential search object query image object berent background nal image end exploring ways build multiresolution image representations edge information berent scales averaging implied anymultiscale representation image edges alternate approach problem consists crst coarse segmentation image regions treat region separate image build multiresolution structure standard wavelet basis region pixels treated ctransparent bsowe build twomultiresolution structures region representing usual color fintensity ffrequency data representing transparency alpha computer graphics lingo separates foreground background searching composite structures individual regions image display reduced version berman queries previous section primitives imagedescription shown traditional features patterns queries expressed terms primitives pictorially subject query crst phase research restricting classifying types images speci objects instance wewant distinguish natural landscape picture city portrait end texture plays major role intend textures complex queries capture essence type image pictures manhattan expect accept retriever return images printed circuit boards similar city pictures regularity type textures response reduces large data base substantially smaller set images city pictures good progress made indices richvocabulary 
textures colors contour elements contour junctions illustrate query works textural descriptors menus user select texture categories deterministic statistical color edges intensity category texture varies set parameters vector parameter values texture pointinavector space user interface space sparsely sampled provide user examples textures displayed small window screen clicking windows crst coarse-level navigation texture space set cursors multi-dimensional equivalentofajoystick lets user navigate locally continuously adjusting parameter values texture descriptor navigation samples current texture small neighborhood displayed updated orientation similar interaction user select colors contour junctions patterns retrieval patterns interconnected suitable constructs sophisticated visual languages investigated authors instance rabittiand savino discussion relatedissues willuse onlysimplelogical topological next-to operators stronger linguistic component introduced stage basic perceptual computationalissues appropriately addressed search data base images hashed possibly large number indices wehave search problemof retrieving images indices match query image assumption image data base static advantageous spend time organizing make queries ecient cost query output-sensitive depend number images match query overhead term accessing data base wewant make smallas cnitely sublinear number images stored wenowhave geometric problem space determined indices wehave selected complicating factor standard data base queries expect cnd exact matches simplest case near-neighbor searches images indices tolerance query image weintend techniques computational geometry arya mount provide ecient algorithms approximate nearest neighbor problems data base returns images matching query conveys informationabout image returned selected typically matchedimageswillbe returned numberof canonical collections images collection share csame reason matching query weintend exploit additionalstructure displaying results user allowing navigate potential matches returned discussed section display suppose query returns images user maychoose browse order picka order determine query cned modi ced displayof pictures organized appropriatelyfor easy browsing display query-sensitive sense part image caused retrieved emphasized achieved instance displaying uninteresting part image lower resolution brightness rest blowing interesting regions providing ccaricature imagethat dects interest user expressed query pictures arranged space dimensions correspond signi ccant perceptual parameters user enabled navigate space navigating space textures section occur navigating entire data base browsing query provide main dimensions interest navigation navigator query editor conclusion work demonstrate image retrieval syntactic level solve hard problems image interpretation semantic image segmentation image compression time wedo plan drawasheavily previous work areas instance semantic segmentation possibilities good syntactic segmentation algorithms developed early mid-seventies instance horowitz pavlidis view main issues lie cnition good set retrieval indices area whichwehavechosen start research develop crst demonstrations understanding issues solid foundation construction ofe bective retrieval systems provide hints pursuit loftier goal interpreting semantics images acklowledgement leonidas guibas wishes davidsalesin forsuggesting himthe idea ofmultiresolution image representations insightful discussions adamfinkelstein danhuttenlocher davidsalesin yoav shoham gratefully acknowledged arya mount arya mount approximate nearest neighbor queries cxed dimensions proceedings siam symposium discrete algorithms soda pages berman berman bartell salesin multiresolution painting compositing acm siggraph proceedings pages binford levitt binford levitt quasi-invariants theory exploitation arpa image understanding workshop pages caelli caelli bischof liu filter-based models pattern classi ccation pattern recognition cohen cohen daubechies vial wavelets interval fast wavelet transforms applied computational harmonic analysis daubechies daubechies ten lectures wavelets siam philadelphia faloutsos faloutsos flickner niblack petkovic equitz barber ecient bective querying image content technical report ibm almadenresearch center san jose gupta gupta weymouth jain semanticqueries pictures vimsys model proceedings international conferenceonvery large data bases barcelona spain horowitz pavlidis horowitz pavlidis picture segmentation tree traversal algorithm journal acm jain jain editor nsf workshop visual information management systems redwood lee lee mitra krile analysis sequential complex images feature extraction two-dimensional cepstrum techniques journal optical society america leu leu shape normalization compacting pattern recognition letters malik rosenholtz malik rosenholtz computing local surface orientation shape texture curved surfaces technical report ucb fcsd eecs division california berkeley mallat mallat scale change versus scale representation proceedings international conference computer vision pages london england rabitti savino rabitti savino query processing imagedatabases working conference visual database systems budapest hungary salton salton automatic text processing transformation analysis retrieval information addison-wesley pub reading sato cipolla sato cipolla extracting ene transformation texture moments technical report cued ff-infeng ftr department engineering universityofcambridge shi tomasi shi tomasi good features track proceedings ieee conference computer vision pattern recognition cvpr 
quicktime image-based approach virtual environment navigation shenchang eric chen amount storage space movies rendered real-time special purpose rendering engines provide interactive walkthrough experience method solves problems mentioned approach movie approach require modeling rendering existing scenes photographs movies computer synthesized scenes movie-based approach decouples rendering interactive playback movie-based approach rendering performed highest quality greatest complexity affecting playback performance inexpensive common video devices playback apple computer abstract traditionally virtual reality systems computer graphics model render virtual environments real-time approach requires laborious modeling expensive special purpose rendering hardware rendering quality scene complexity limited real-time constraint paper presents approach -degree cylindrical panoramic images compose virtual environment panoramic image digitally warped on-the-fly simulate camera panning zooming panoramic images created computer rendering specialized panoramic cameras stitching overlapping photographs regular camera walking space accomplished hopping panoramic points image-based approach commercial product quicktime virtual reality extension apple computer quicktime digital multimedia framework paper describes architecture file format authoring process interactive players system addition panoramic viewing system includes viewing object directions hit-testing orientation-independent hot spots categories subject descriptors computer graphics picture image generation viewing algorithms image processing enhancement geometric correction registration additional keywords image warping image registration virtual reality real-time display view interpolation environment maps panoramic images introduction key component virtual reality systems ability perform walkthrough virtual environment viewing positions orientations walkthrough requires synthesis virtual environment simulation virtual camera moving environment degrees freedom synthesis navigation accomplished methods modeling rendering traditionally virtual environment synthesized collection geometrical entities geometrical entities modeling rendering approach main problems creating geometrical entities laborious manual process walkthrough performed real-time rendering engine places limit scene complexity rendering quality special purpose rendering engine limited availability virtual reality people hardware widely rapid advance computer graphics software hardware past virtual reality systems face problems modeling process continue human-intensive operation future realtime rendering problem remain upper bound rendering quality scene complexity specialpurpose rendering accelerators ubiquitous means standard equipment personal computer users branching movies approach synthesize navigate virtual environments extensively video game industry branching movies multiple movie segments depicting spatial navigation paths connected selected branch points user allowed move path branching points approach photography computer rendering create movies computer-driven analog digital video player interactive playback early approach movie-map streets city aspen filmed -foot intervals playback time videodisc players retrieve views simulate effects walking streets digital videos exploration introduced digital video interactive technology dvi demonstration allowed user wander mayan ruins palenque digital video playback optical disk virtual museum based computer rendered images cd-rom selected points museum -degree panning movie rendered user walking points simulated bi-directional transition movie contained frame step directions path connecting points obvious problem branching movie approach limited navigability interaction requires large effect rotating object panning objectives inadequacy existing methods decided explore approach creation navigation virtual environments specifically wanted develop system met objectives system playback interactive speed personal computers today hardware acceleration system rely special input output devices data gloves head-mount displays preclude system accommodate real synthetic scenes real-world scenes enormously rich details difficult model render computer wanted system real-world scenery directly computer modeling rendering system display high quality images independent scene complexity virtual reality systems compromise displaying low quality images simplified environments order meet real-time display constraint wanted system display speed independent rendering quality scene complexity overview paper presents image-based system virtual environment navigation based objectives system real-time image processing generate perspective viewing effects approach presented similar movie-based approach shares advantages differs movies replaced orientationindependent images movie player replaced real-time image processor images cylindrical panoramas panoramas orientationindependent images information needed degrees number images connected form walkthrough sequence orientation-independent images greater degree freedom interactive viewing navigation images concise easier create movies discuss work related approach section section presents simulation camera motions image-based approach section describe quicktime commercial product image-based method section briefly outlines applications image-based approach conclusions future directions related work movie-based approach requires displayable view created stored authoring stage moviemap cameras shoot views point giving user ability pan left point virtual museum stores views -degree pan movie results smooth panning motion cost storage space frame creation time navigable movie moviebased approach unlike movie-map virtual museum panning motion direction navigable movie offers two-dimensional rotation object photographed camera pointing object center orbiting longitude latitude directions roughly -degree increments process results hundreds frames viewing directions frames stored two-dimensional array indexed rotational parameters interactive playback displaying object static background scene accomplished frames case represent views scene view orientations view direction changing viewpoint stationary case pivoting camera nodal point optical center projection frames pan motion mapped canonical projection projection termed environment map regarded orientation-independent view scene environment map generated arbitrary view scene long viewpoint move computed reprojection environment map view plane environment map initially computer graphics simplify computations specular reflections shiny object distant scene scene projected environment map centered object map indexed specular reflection directions compute reflection object scene location difference object center surface reflection point types environment maps interactive visualization virtual environments moviemap anamorphic images optically electronically processed obtain -degree viewing project called navigation grid panoramas sailing simulation real-time reprojection environment maps visualize surrounding scenes create interactive walkthrough hardware method environment map look-up implemented virtual reality system rendering environment map trivial computer creating photographic images requires extra work greene heckbert technique compositing multiple image streams camera positions fish-eye view automatic registration composite multiple source images image enhanced field view viewpoint starts moving objects nearby case orbiting camera object frames longer mapped canonical projection movement viewpoint disparity views object disparity result depth change image space viewpoint moves pivoting camera nodal point depth change disparity single environment map insufficient accommodate views movie-based approach simply stores frames view interpolation method presented chen williams stores key frames synthesizes missing frames on-the-fly interpolation method requires additional information depth buffer camera parameters key frames automatic semi-automatic methods developed registering interpolating images unknown depth camera information image-based rendering image-based approach presented paper addresses simulation virtual camera motions photographic computer synthesized spaces camera motions degrees freedom degrees freedom grouped classes rotational degrees freedom termed camera rotation refer rotating camera view direction keeping viewpoint stationary class motions accomplished reprojection environment map image rotation orbiting camera key views object views interpolated on-object keeping view 
direction centered object termed object rotation equivalent rotating object type motion requires movement viewpoint achieved environment map free motion camera space termed camera movement requires change viewpoint viewing direction degrees freedom addition motions changing camera field-of-view termed camera zooming accomplished multiple resolution image zooming loss generality environment assumed static discussions generalize method include motions timevarying environment maps environment map movies -degree movies camera rotation camera rotational degrees freedom pitch pivoting horizontal axis yaw pivoting vertical axis roll rotating axis normal view plane camera rolling achieved trivially image rotation pitch yaw accomplished reprojection environment map environment map projection scene simple shape typically shape cube sphere reprojecting environment map create view dependent type environment map cubic environment map reprojection displaying visible regions texture mapped squares view plane spherical environment map non-linear image warping performed figure shows reprojection environment maps complete degree panning required types environment maps cylindrical fish-eye wide-angled planar maps cylindrical map -degree panning horizontally -degree panning vertically fish-eye hemi-spherical map -degree panning directions planar map -degree panning directions figure reprojecting cubic spherical environment map object rotation mentioned earlier orbiting camera object equivalent rotating object center accomplished simply environment map solving problem navigable movie approach movie frames correspond allowable orientations object object full -degree rotation direction degrees direction degree increments movie requires frames store frames pixel resolution frame bytes compression entire movie consumes roughly storage space amount space large impractical current capacity approximately cd-rom view interpolation approach store the-fly key views means rotation angle arbitrary camera movement camera moving freely scene involves change viewpoint view direction view direction change accomplished environment map viewpoint change difficult achieve simple solution viewpoint change constrain camera movement locations environment maps linear camera movement walking hallway environment maps created points path small intervals cost storing environment maps roughly times cost storing normal walkthrough movie cubic map resulting effects window moving train movement path fixed passenger free environment map movies similar special format movies omnimax degree fish-eye circlevision -degree cylindrical movies wider normal field-of-view recorded observer control viewing direction playback time traversing space environment maps arranged form lattice viewpoints space simply quantized nearest grid point approximate motion figure approach requires larger number environment maps stored order obtain smooth motion desirable approach view interpolation method approximate visibility method generates views coarse grid environment maps constraining movement grid points nearby environment maps interpolated generate smooth path figure unconstrained camera path approximated path grid lines camera zooming changing camera field view equivalent zooming image space image magnification zoom provide detail zooming image reduction create aliasing artifacts sampling rate falls nyquist limit solution multiple resolution image zooming pyramidal quadtree-like structure created image provide levels resolution proper level resolution selected on-the-fly based zooming factor achieve quality continuous zooming levels bound current zooming factor interpolated similar mip-maps anti-aliasing texture mapping order avoid loading entire high resolution image memory zooming image segmented memory requirement independent zoom factor spatially-oriented movies panoramic movie permits user tothe zoom factor increases smaller percentage larger image visible conversely larger percentage lower resolution image displayed number pixels required source image roughly constant related number pixels displayed segmenting image dividing multiple levels image tiles size higher resolution images yield tiles vice versa zooming factor fixed number tiles visited levels resolution image detailed image image achieve effects infinite zoom quicktime image-based approach implemented commercial product called quicktime built top apple computer quicktime digital multimedia framework current implementation includes continuous camera panning zooming jumping selected points object rotation frame indexing quicktime cylindrical environment maps panoramic images accomplish camera rotation choice cylindrical map types based number factors easier capture cylindrical panorama types environment maps commercially panoramic cameras rotating vertical slit developed tool automatically stitches set overlapping photographs create seamless panorama cylindrical map curves direction makes efficient perform image warping quicktime includes interactive environment software-based real-time image processing engine navigating space authoring environment creating movies interactive environment implemented operating system component accessed quicktime compliant application program interactive environment comprises types players panoramic movie player user pan zoom navigate scene includes hot spot picking capability hot spots regions image user interaction object movie player user rotate object view object viewing directions players run macintosh windows platforms panoramic authoring environment consists suite tools perform panoramic image stitching hot spot marking linking dicing compression object movies created motion-controllable camera sections briefly describe movie format players process making movies movie format quicktime includes types movies panoramic object panoramic movie conventional quicktime movies one-dimensional compressed sequences indexed time quicktime movie multiple tracks track store type linear media audio video text track type player decode information track tracks run parallel time played synchronously common time scale quicktime types tracks players added extend capabilities refer detailed description quicktime architecture panoramic movies multi-dimensional event-driven pan zoom move space interactively order retrofit panoramic movies existing linear movie framework panoramic track type added panoramic track stores linking additional information panoramic movie actual panoramic images stored regular quicktime video track advantage existing video processing capabilities panoramic movie file shown figure panoramic track divided nodes node corresponds point space node information links nodes linking nodes form directed graph shown figure node connected node node link external event external event custom actions attached node hot spots node node panoramic images node panoramic nodes tracks external event node graph node node node external event figure panoramic movie layout node graph nodes stored tracks panoramic track video tracks panoramic track holds graph information pointers tracks video track holds panoramic images nodes video track holds hot spot images optional hot spots identify regions panoramic image activating links tracks length time scale player starting time node find node panoramic hot spot images tracks hot spot track similar hit test track virtual museum hot spots activate events navigation hot spots image encodes hot spot numbers colors unlike virtual museum hot spot exist view object hot spot image stored panoramic form orientation-independent hot spot image image warping process panoramic image hot spots stay objects attach matter camera pans zooms panoramic hot spot images typically diced smaller frames stored video tracks efficient memory usage detail frames compressed inter-frame compression frame differencing unlike linear video panoramic 
movie priori order accessing frames image hot spot video tracks disabled regular quicktime movie attempt display linear stored hard disk cd-rom compressed imagevideos panoramic track enabled panoramic player called traverse contents movie playback time track layout physical layout data storage medium typically tracks interleaved written slow medium cd-rom minimize seek time object movie object movie typically two-dimensional array frames frame corresponds viewing direction movie dimensions multiple frames stored direction additional frames object time-varying behavior direction assumed number frames object frames stored regular video track additional information number frames direction numbers rows columns stored movie header frames organized minimize seek time rotating object horizontally panoramic movies inter-frame compression frames order rotation advance inter-frame compression multiple frames viewing direction interactive environment interactive environment consists types players panoramic player object player panoramic player panoramic player user perform continuous panning vertical horizontal directions panoramic image degrees vertical field-ofview player permit rotating viewing direction supported player performs continuous zooming image magnification reduction mentioned previously multiple levels resolution player choose level based current memory usage cpu performance disk speed factors multiple level zooming implemented quicktime decompress warp compressed tiles offscreen buffer viewing control display window visible tiles visible region compressed tiles cache main memory hard disk cd-rom figure panoramic display process panoramic player user control view orientation displays perspectively correct view warping panoramic image figure shows panoramic display process panoramic images compressed decompressed offscreen buffer offscreen buffer generally smaller full panorama fraction panorama visible time mentioned previously panoramic image diced tiles tiles overlapping current view orientation decompressed offscreen buffer visible region offscreen buffer warped display correct perspective view long region moves inside offscreen buffer additional decompression minimize disk access recent tiles cached main memory read player performs pre-paging read adjacent tiles idle minimize delay interactive panning image warp reprojects sections cylindrical image planar view computed real-time software-based two-pass algorithm warp shown figure region enclosed yellow box panoramic image warped create perspective view performance player varies depending factors platform color mode panning mode window sizes player optimized display -bit color mode performance figures processors figures number updates -pixel window -bit color mode warping performed two-pass algorithm panning faster full panning note windows version implementation writing display affect performance processor panning panning powerpc pentium player perform image warping levels quality lower quality settings perform filtering images jagged faster achieve balance quality performance player automatically adjusts quality level maintain constant update rate user panning player switches lower quality user user stops player updates image higher quality moving space accomplished jumping points panoramic images attached order preserve continuity motion view direction maintained jumping adjacent location panoramas linked matching orientation manually authoring stage figure shows sequence images generated panoramas spaced feet default user interface navigation combination mouse keyboard cursor moves window shape reflect permissible action current cursor location permissible actions include continuous panning continuous zooming controlled keyboard moving node activating hot spot clicking mouse initiates actions holding dragging mouse performs continuous panning panning speed controlled distance relative mouse click position addition interactive control navigation control script hypercard external command windows dll written drive player application compatible external command dll control playback script run-time library interface direct control program object player panoramic player designed space inside object player view object object player based navigable movie approach two-dimensional array frames accommodate object rotation object frames created constant color background facilitate compositing backgrounds object player user grab object mouse rotate virtual sphere-like interface object rotated directions orbiting camera longitude latitude directions frame stored direction multiple frames looped continuously object rotated looping enables object cyclic time varying behavior flickering candle streaming waterfall authoring environment authoring environment includes tools make panoramic movies object movies quicktime movies camera renderer panoramic camera node selection stitch mark hot sopts link dice compress figure panoramic movie authoring process panoramic movie making panoramic movie created steps nodes selected space generate panoramas panoramas created computer rendering panoramic photography stitching mosaic overlapping photographs hot spots panorama hot spot image constructed marking regions panorama pseudo colors hot spot identifiers alternatively hot spots generated computer rendering fourth panoramic node needed panoramas linked manually registering viewing directions finally panoramic images hot spot images diced compressed create panoramic movie authoring process illustrated figure node selection nodes selected maintain visual consistency moving distance adjacent nodes related size virtual environment distance nearby objects empirically found foot spacing adequate interior spaces spacing significantly increased exterior scenes stitching purpose stitching create seamless panoramic image set overlapping pictures pictures camera rotates vertical axis direction camera pans roughly equal exact increments camera mounted tripod centered nodal point minimal tilting rolling camera mounted sideways obtain maximum vertical fieldof-view setup camera illustrated figure scene assumed static distant object motion acceptable nodal point leveling rotation camera mounted sideways figure camera setup taking overlapping pictures stitcher correlation-based image registration algorithm match blend adjacent pictures adjacent pictures overlap stitcher work properly amount overlap vary depending image features overlapping regions practice overlap work adjacent pictures brightness levels large overlap stitcher easily smooth intensity variation success rate automatic stitching depends input pictures typical stitching session panoramas stitched automatically assuming panorama made pictures remaining panoramas requires manual intervention factors contribute automatic stitching failure include limited missing pictures extreme intensity change insufficient image features improper camera mounting significant object motion film scanning errors addition regular camera ability multiple pictures exposure settings compose panorama advantage enables capture scene wide intensity range sunset normal panoramic camera captures entire degrees constant exposure setting film narrower dynamic range real world resultant panorama areas exposed stitcher exposure setting specifically tailored direction create balanced panorama extreme lighting conditions devices video digital cameras capturing film results high resolution images displayed full screen monitor film digitized stored kodak photocd photocd pictures resolutions typical panorama stitched middle resolution pictures pixels resulting panorama pixels pictures lens resolution full screen display moderate zoom angle stitcher takes minutes automatically stitch -picture panorama powerpc mhz processor including reading pictures photocd post processing panoramic image stitched automatically shown figure hot spot marking hot spots identify regions panoramic image interactions navigation activating actions hot spots stored -bit images limit number unique hot spots image creating hot spot 
image painting pseudo colors top panoramic image computer renderers generate hot spot image directly hot spot image resolution panoramic image resolution hot spot image related precision picking low resolution hot spot image high accuracy picking required linking linking process connects registers view orientation adjacent panoramic nodes links directional node number links link attached hot spot user activate link clicking hot spot linking performed manually registering source destination view orientations graphical linker main goal registration maintain visual consistency moving node dicing compression panoramic hot spot images diced compressed stored movie tile size optimized data loading offscreen buffer size large number tiles increases overhead loading decompressing tiles small number tiles requires large offscreen buffer reduces title paging efficiency found dicing panoramic image pixels vertical stripes optimal balance data loading tile paging dicing panorama vertical stripes minimizes seek time involved loading tiles cd-rom panning panorama resolution compressed modest compression ratio cinepak compressor based vector quantization good quality speed balance compressors quality speed tradeoffs small disk footprint panorama means cd-rom capacity hold panoramas capacity increase higher density cd-roms compression methods hot spot image compressed lossless -bit compressor lossless compression ensure correctness hot spot numbers hot spots occupy large contiguous regions compressed size typically kilo-bytes image object movie making making object movie requires photographing object viewing directions provide smooth object rotation camera point object center orbiting constant increments requirement easily met computer generated objects photographing physical object challenging special device built device called object maker accomplish task object maker computer control stepper motors computer-controlled motors orbit video camera directions fixing view direction center object video camera connected frame digitizer inside computer synchronizes frame grabbing camera rotation object supported invisible base surrounded black curtain provide uniform background camera rotate close degrees vertically degrees horizontally camera typically moves -degree increments direction entire process run automatically takes hour capture object completely multiple frames needed direction object captured passes pass capturing full rotation object fixed state multi-pass capture requires camera rotation repeatable object motion controllable case candle light flickering multiple frames captured successively camera moves direction applications panoramic viewing technology applied applications require exploration real imaginary scenes applications include virtual travel real estate property inspection architecture visualizations virtual museums virtual shopping virtual reality games panoramic movie application commercial cd-rom title star trek generation interactive technical manual title lets user navigate starship enterprise panoramic movies thousand photographs shot create hundred panoramic images cover areas starship addition object movies created props set object movie applied visualize scientific engineering simulation simulations require lengthy computations sophisticated computers simulation results computed view orientations stored object movie inspected personal computer time-varying environment maps include motions scene time-varying environment maps generated time-lapse photography camera fixed location panoramic picture minutes day resulting movie shows time passage user freely orientation-independent movie interactive movie broadcast -degree format multiple channels viewer freely control camera angle locally watching movie similar idea called electronic panning camera demonstrated video conferencing applications applications generated image-based approach cd-rom based future cd-rom large storage capacity variableresolution files make approach practical network transmission low-resolution panoramic movie takes node -degree panning rendered objects composited map-generated -pixel window reasonable quality network speeds improve compression technologies on-line navigation panoramic spaces common future spatial navigation metaphor browse informational space ability attach information spatial representations make easier familiar intricate information space conclusions future directions image-based method makes environment maps cylindrical panoramic images compose scene environment maps orientation-independent images user arbitrary view directions real-time image processing multiple environment maps linked define scene user move scene jumping maps method extended include motions time-varying environment maps addition method makes two-dimensional array frames view object directions image-based method solution levels detail problem virtual reality display systems ideally object displayed detail farther detail close observer automatically changing level detail difficult polygon based objects practice object modeled detail levels chosen display based viewing criteria system performance approach costly multiple versions objects created stored predict object displayed advance difficult store levels include viewing conditions image-based method automatically level detail images views scene range locations viewpoint moves location range image location retrieved scene displayed level detail method underlying technology quicktime system creating interacting virtual environments system meets objectives introduction playback environment supports computers require special hardware images common representation accommodate real imaginary scenes display speed independent scene complexity rendering quality making star trek title short time frame months generating panoramic movies enterprise demonstrated system relative ease creating complex environment method chief limitations requirements scene static movement confined points limitation eased time-varying environment maps environment maps motions local regions opening door motion triggered event continuously looping motions confined local regions motion frames compressed efficiently inter-frame compression solution static environment constraint combination image warping rendering backgrounds static generated efficiently environment maps objects time-varying event driven rendered on-the-fly rendering background real-time layering alpha masking buffering number interactive objects rendered real-time small software based renderer task move freely photographic scene difficult computer rendered scenes view interpolation method solution method requires depth camera information automatic image registration information easily obtainable photographic scenes constraint current panoramic player limitation straight due cylindrical panoramic images limitation removed types environment maps cubic spherical maps capturing cubic spherical map photographically difficult cylindrical current player require additional input output devices commonly personal computers input devices degrees freedom navigation two-dimensional similarly immersive stereo displays combined sounds enhance experience navigation ultimate goals virtual reality achieved discern real virtual ability photographs real scenes virtual navigation step closer acknowledgments author grateful entire quicktime team tremendous efforts paper based specifically author acknowledge individuals eric zarakov managerial support making quicktime reality ian small contributions engineering quicktime product ken doyle quicktime integration work michael chen work user interface object maker object player ken turkowski code optimization powerpc porting richard mander user interface design study ted casey content production support assistance quicktime team jim nitchal code optimization appreciated dan sullivan mitch yawitz early work navigable movies contributed development object movie work reported paper began computer graphics program advanced technology group apple computer panoramic player inspired work gavin miller ned greene lance williams contributed ideas related environment mapping view interpolation frank crow encouragement support critical keeping research author interns lili 
cheng chase garfinkle patrick teo helped shaping project current state images figure extracted apple company store quicktime great wall photographs figure assistance helen tahn zen jing professor en-hua vicki mey proofreading paper lippman movie maps application optical videodisc computer graphics computer graphics proc siggraph ripley dvi digital multimedia technology communications acm multimedia proceedings ieee computer conference miller hoffert chen patterson blackketter rubin applin yim hanan virtual museum interactive navigation multimedia database journal visualization computer animation mohl cognitive ace interactive movie map investigation spatial learning virtual environments mit doctoral thesis apple computer quicktime version developers blinn newell texture reflection computer generated images communications acm october hall hybrid techniques rapid image synthesis whitted cook eds image rendering tricks notes siggraph august greene environment mapping applications world projections computer graphics applications november yelick anamorphic image processing thesis department electrical engineering computer science hodges sasnett multimedia computing case studies mit project athena addison-wesley miller chen real-time display surroundings environment maps technical report apple computer greene kass approximating visibility environment maps technical report apple computer regan pose priority rendering virtual reality address recalculation pipeline computer graphics proc siggraph greene creating raster ominmax images multiple perspective views elliptical weighted average filter ieee computer graphics applications june irani peleg improving resolution image registration graphical models image processing szeliski image mosaicing tele-reality applications dec cambridge research lab technical report crl mann picard virtual bellows constructing high quality stills video proceedings icip- november chen williams view interpolation image synthesis computer graphics proc siggraph cheng view reconstruction form uncalibrated cameras three-dimensional scenes master thesis department electrical engineering computer sciences berkeley laveau faugeras scene representation collection images fundamental matrices inria technical report february williams pyramidal parametrics computer graphics proc siggraph berman bartell salesin multiresolution painting compositing computer graphics proc siggraph perlin fox pad alternative approach computer interface computer graphics proc siggraph hoffert mighdoll kreuger mills cohen quicktime extensible standard digital compcon february apple computer inside macintosh quicktime addison-wesley chen miller cylindrical planar image mapping scanline coherence united states patent number mar chen study interactive rotation control devices computer graphics proc siggraph weghorst hooper greenberg improved computational methods ray tracing acm transactions graphics electronic panning device opens viewing range digital media seybold report august clark hierarchical geometric models visible surface algorithms communications acm october funkhouser quin adaptive display algorithm interactive frame rates visualization complex virtual environments computer graphics proc siggraph figure walkthrough sequence created set panoramas spaced feet figure perspective view created warping region enclosed yellow box panoramic image figure stitched panoramic image photographs image stitched 
proceedings siggraph los angeles california august abstract image-based rendering powerful approach generating real-time photorealistic computer graphics provide convincing animations explicit geometric representation plenoptic function adelson bergen provide concise problem statement image-based rendering paradigms morphing view interpolation plenoptic function parameterized function describing visible point space present image-based rendering system based sampling reconstructing resampling plenoptic function addition introduce visible surface algorithm geometric invariant cylindrical projections equivalent epipolar constraint defined planar projections descriptors computer graphics picture image generation display algorithms viewing algorithms computer graphics three-dimensional graphics realism hidden line surface removal image processing enhancement registration image processing feature measurement projections image processing scene analysis introduction recent years increased interest computer graphics community image-based rendering systems systems fundamentally traditional geometry-based rendering systems image-based systems underlying data representation model composed set photometric observations geometry-based systems mathematical descriptions boundary regions separating scene elements b-rep discretely sampled space functions volumetric evolution image-based rendering systems traced research fields photogrammetry initial problems camera calibration two-dimensional image registration photometrics progressed determination three-dimensional models likewise computer vision problems robot navigation image discrimination image understanding naturally led direction computer graphics progression image-based rendering systems initially motivated desire increase visual realism approximate geometric descriptions mapping images surface texture mapping images approximate global illumination effects environment mapping recently systems images constitute significant aspects scene description reason image-based rendering systems computer graphics acquisition realistic surface models difficult problem geometry-based rendering technology made significant strides achieving photorealism creating accurate models difficult ten years ago technological advances three-dimensional scanning provide promise model building verify worst suspicions geometry real-world exceedingly complex ironically primary subjective measure image quality proponents geometric rendering systems degree resulting images indistinguishable photographs liability image-based rendering systems lack consistent framework judge validity results fundamentally arises absence clear problem definition geometry-based rendering hand solid foundation analytic projective geometry describe world shape physics describe world surface properties light interaction surfaces paper presents consistent framework evaluation image-based rendering systems concise problem definition evaluate previous image-based rendering methods framework finally present image-based rendering methodology results prototype implementation plenoptic function adelson bergen assigned plenoptic function latin root plenus meaning complete full optic pertaining vision pencil rays visible point space time range wavelengths function develop taxonomy evaluating models low-level vision plenoptic function describes radiant energy perceived point view observer point view source postulate basic visual measurements considered characterize local change dimensions single function describes structure information light impinging observer adelson bergen formalized functional description providing parameter space plenoptic function valid shown figure imagine idealized eye free place point space select viewable rays choosing azimuth elevation angle plenoptic modeling image-based rendering system leonard mcmillan gary bishop department computer science north carolina chapel hill sitterson hall chapel hill mcmillan unc http unc mcmillan unc http unc proceedings siggraph los angeles california august band wavelengths figure plenoptic function describes image information visible viewing position case dynamic scene additionally choose time evaluate function results form plenoptic function computer graphics terminology plenoptic function describes set environment maps scene purposes visualization plenoptic function scene representation order generate view point direction plug values select range constant define complete sample plenoptic function full spherical map viewpoint time incomplete sample solid angle subset spherical map framework state problem definition image-based rendering set discrete samples complete incomplete plenoptic function goal image-based rendering generate continuous representation function problem statement avenues exploration optimally select sample points reconstruct continuous function samples previous work movie-maps movie-map system lippman earliest attempts constructing image-based rendering system moviemaps incomplete plenoptic samples stored interactive video laser disks accessed randomly primarily change viewpoint system accommodate panning tilting zooming fixed viewing position characterize lippman plenoptic reconstruction technique nearest-neighbor interpolation set input parameters movie-map system select nearest partial sample movie-map form image-based rendering interpreted table-based evaluation plenoptic function interpretation reflects database structure common imagebased systems image morphing image morphing popular image-based rendering technique generally morphing considered occur images images endpoints path time space interpretation morphing method reconstructing partial samples continuous plenoptic function path addition photometric data morphing additional information describing image flow field information hand crafted animator glance type augmentation place plenoptic function domain authors field computer vision shown type image flow information equivalent local intensity due infinitesimal perturbations plenoptic function independent variables local derivative behavior related intensity gradient applications chain rule fact morphing makes stronger assumption flow information constant entire path amounting locally linear approximation blending function combine images partially flowed initial configurations point path blending function linear combination images based percentage path length traversed morphing plenoptic reconstruction method interpolates samples local derivative information construct approximations view interpolation chen williams view interpolation employs incomplete plenoptic samples image flow fields reconstruct arbitrary viewpoints constraints gaze angle reconstruction process information local neighborhood sample chen williams point suggest solution key problems image-based rendering determining visible surfaces chen williams chose presort quadtree compressed flow-field back-to-front order geometric approach works partial sample images share common gaze direction synthesized viewpoints restricted stay degrees gaze angle image flow field ambiguous visibility solutions restrict flow fields fold rubber-sheet local spline warps thin-plate global spline warps problem considered general-purpose image-based rendering system ideally transporting image geometric-rendering domain establishing flow fields view interpolation system problematic chen williams pre-rendered synthetic images determine flow fields z-values general accurate flow field information samples established points mutually visible samples points shortcoming partial samples images seldom overlap morphing view interpolation photometric information local derivative information reconstruction process locally linear approximation nicely exploited approximate perspective depth effects chen williams show correct lateral motions relative gaze direction view interpolation adds nonlinearity allowing visibility process determine blending function frames closest-take-all winner-take-all fashion laveau faugeras laveau faugeras advantage fact epipolar geometries images restrict image flow field parameterized single disparity fundamental matrix represents epipolar relationship provide two-dimensional raytracing-like solution visibility problem require underlying geometric description method require establishing correspondences image point ray path laveau faugeras system partial plenoptic samples results shown overlapping regions views laveau faugeras discuss combination information views primarily terms resolving visibility relating views desired views homogenous transformations projections laveau faugeras compute exact perspective depth solutions reconproceedings siggraph los angeles california august struction process takes advantage image data local derivative information reconstruct plenoptic function regan pose regan pose describe 
hybrid system plenoptic samples generated fly geometry-based rendering system rendering rates interactive rendering provided image-based subsystem instant user interacts single plenoptic sample user make unconstrained gaze angle sample point regan pose discuss local reconstruction approximations due viewing position approximations amount treating objects scene infinity resulting loss kinetic depth effect partial updates combined approximation values plenoptic modeling claim image-based rendering approaches cast attempts reconstruct plenoptic function sample set function significant insights gleaned characterization section propose prototype system light plenoptic function framework call image-based rendering approach plenoptic modeling image-based rendering systems scene description series images images subsequently warped combined form representations scene arbitrary viewpoints warping function defined image flow field information supplied input derived images discussion plenoptic modeling image-based rendering system broken sections discuss representation plenoptic samples discuss acquisition section covers determination image flow fields required finally describe reconstruct plenoptic function sample images plenoptic sample representation natural surface projecting complete plenoptic sample unit sphere centered viewing position difficulty spherical projections lack representation suitable storage computer difficult uniform equal area discrete sampling required difficulty reflected distortions arise planar projections world maps cartography uniform mappings exist generally ill-suited systematic access data structure map plane consistent neighborhood relationships generally distorted non-uniform set planar projections form cube suggested greene efficient representation environment maps representation easily stored accessed computer significant problems relating acquisition alignment registration real non-computer-generated images orthogonal orientation cube faces requires precise camera positioning wide degree field-of-view face requires expensive lens systems avoid optical distortion planar mapping represent uniform sampling considerably oversampled edges corners greatest difficulty cube-oriented planar projection set describing behavior image flow fields boundaries faces corners issue planar projections solely environment map adds considerable overhead image analysis chosen cylindrical projection plenoptic sample representation advantage cylinder easily unrolled simple planar map surface boundaries azimuth direction simplifies correspondence searches required establish image flow fields shortcoming projection finite cylindrical surface boundary conditions introduced top bottom chosen employ end caps projections problem limiting vertical field view environment acquiring cylindrical projections significant advantage cylindrical projection simplicity acquisition acquisition equipment required video camera tripod capable continuous panning ideally camera panning motion exact optical center camera practice scene objects tripod rotational center slight misalignment offset tolerated planar perspective projections scene share common viewpoint related two-dimensional homogenous transform represent pixel coordinates image coordinates image result reported authors images resulting typical camera motions pan tilt roll zoom related fashion creating cylindrical projection panning camera motions convenience define camera local coordinate system panning takes place plane order reproject individual image cylindrical projection determine model camera projection equivalently homogenous transforms techniques developed inferring homogenous transformation images sharing common centers projection common technique involves establishing points image pair resulting transforms provide mapping pixels planar projection image planar projection images composited fashion determining transform maps nth image image transforms catenated form mapping image plane approach effect avoids direct determination entire camera model performing mappings instances camera techniques deriving homogeneous transformations specific point correspondences set homogenous transforms decomposed parts arbitrary reprojections manner similar parts include intrinsic transform determined camera properties extrinsic transform determined rotation camera center projection decomposition decouples projection rotational components homogeneous transform choice coordinate systems limiting camera motion panning extrinsic transform component constrained function single parameter rotation matrix describing pan ---y ---u cos sin sin cos proceedings siggraph los angeles california august intrinsic component properties invariant images decomposition problem broken parts determination extrinsic rotation component determination intrinsic projection component step method determines estimates extrinsic panning angle image pair panning sequence accomplished linear approximation infinitesimal rotation angle linear approximation results substituting cosine terms sine terms rotation matrix infinitesimal perturbation shown reduce approximate equations apparent focal length camera measured pixels pixel coordinate intersection optical axis image plane initially estimated center pixel image plane estimate found intrinsic matrix solution equations show small panning rotations approximated translations pixels image center require part image sequence visible successive image part final image visible image sequence stage cylindrical registration process attempts register image set computing optimal translation maximizes normalized correlation region center screen computed pixel resolution refined subpixel grid catmull-rom interpolation spline compute subpixel intensities translations computed newton method convert estimates rotation angles focal length equation number images comprising sequence converges iterations depending original estimate phase determines estimate relative rotational angles images extrinsic parameters initial focal length estimate measured pixels intrinsic parameters stage registration process determines structural matrix describes camera properties tilt roll angles assumed remain constant group images model projection matrix estimated center viewplane previously skew parameter representing deviation sampling grid rectilinear grid determines sampling grid aspect ratio focal length pixels determined alignment stage remaining terms describe combined effects camera orientation deviations viewplane orientation perpendicular optical axis ideally viewplane normal optical axis manufacturing tolerances numbers vary slightly --atan addition term indistinguishable camera roll angle represents image sensor camera rotation likewise combined implicit parameter represents relative tilt camera optical axis panning plane images tangent cylinder nonzero projections tangent cone unknown parameters determined stage registration process notice combined parameters determined stage total parameters image consistent number free parameters general homogeneous matrix structural matrix determined minimizing error function represent center pixels images powell multivariable minimization method initial values parameters solution typically converges iterations point estimate fed back stage entire process repeated registration process results single camera model set relative rotations sampled images parameters compose mapping functions image sequence image reproject images arbitrary surfaces modifying image pixel determines equation ray center-of-projection reprojection process involves intersecting rays projection manifold determining image flow fields cylindrical projections positions static scene determine relative positions centers-of-projection establish geometric constraints potential reprojections positions computed scale factor intuitive argument set images determine observer model full-sized scene implies measurement required establish scale factor measurement features mutually visible images distance acquired image camera positions techniques difference results establish relative relationships pair cylindrical projections user specifies set points visible views points treated rays space form cos sin sin cos cos sin sin cos error correlation image width image height proceedings siggraph los angeles california august unknown position cylinder center projection rotational offset aligns angular orientation cylinders common frame scale factor determines vertical field-of-view scanline center projection project scene line elevation equator spherical map pair tiepoints 
image establishes pair rays ideally intersect point space identified tiepoint general rays skewed point simultaneously closest rays estimate point position determined derivation tiepoint coordinates cylinders points pose problem finding cylinder position minimization problem pair cylinders sets unknowns general good estimates terms values found registration phase position cylinders determined minimizing distance skewed rays choose assign penalty shrinking vertical height cylinder order bring points closer penalty eliminated accepting values registration tested approach tiepoints found converges solution ten iterations powell method correlation step required process considerably faster minimization step required determine structural matrix cylindrical projection introduces significant geometric constraints point viewed projection capitalize restrictions automatically identify points cylinders initial set tiepoints established hand process tedious establish mapping entire cylinder present geometric constraint cylindrical projections determines positions point position cylinder constraint plays role epipolar geometries computer vision community depth-from-stereo computations play planar projections present intuitive argument existence invariant center cylindrical projection point cylinder corresponds ray space cylindrical epipolar geometry equation rays observed cylinder path projects curve appears begin point origin cylinder constrained pass cos sin ---------------a det det point image cylinder argument made planar projection points identified virtual image camera projection point planar projection preserve lines unique called epipolar line defined basis epipolar geometry identifies pairs lines planar projections point falls line image constrained fall line image existence invariant reduces search points problem cylindrical projections preserve lines general lines map quadratic parametric curves surface cylinder surprisingly completely form curve information needed planar case paths curves uniquely determined sinusoids cylindrical epipolar geometry established equation formula concise expression curve formed projection ray surface cylinder ray position cylinder cylindrical epipolar relationship establish image flow fields standard computer vision methods correlation methods simulated annealing-like relaxation method method differences compute stereo disparities cylinder pairs method strengths weaknesses refer reader details plenoptic function reconstruction image-based rendering system takes input cylindrically projected panoramic images scalar disparity images relating cylinder pair information automatically generate image warps map images arbitrary cylindrical planar views capable describing occlusion perspective effects figure diagram showing transfer disparity values cylinders viewing position begin description mappings angular disparity disparity images readily converted image flow vector field epipolar relation equation position cylinder transfer disparity values cylindrical pair cylindrical projection cos sin proceedings siggraph los angeles california august arbitrary position figure equations precomputing column cylindrical image storing place disparity image transfer operation computed interactive speeds typically disparity images transferred target cylindrical projection reprojected planar image viewing reprojection combined disparity transfer give single image warp performs operations accomplish intermediate quantity called generalized angular disparity defined scalar function cylindrical equivalent classical stereo disparity finally composite image warp image arbitrary planar projection defined vectors defined desired view shown figure figure center-of-projection vector origin spanning vectors uniquely determine planar projection case image warp defined equation reduces simple reprojection cylindrical image desired planar view perturbation introduced allowing vary image arbitrary shape occlusions represented potentially cylinder transfer image warping approaches many-to-one mappings reason visibility simple algorithm determine enumeration cylindrical mesh guarantees proper back-to-front ordering appendix project desired viewing position cylinder warped partition cylinder toroidal sheets sheet boundaries defined coordinates points shown figure point defined intersection cylinder cos sin cos sin cos sin cot cot cos sin cot cos sin cot rvo sou pou constant vector origin eye position intersection vector eye origin figure back-to-front ordering image flow field established projecting eye position cylinder surface dividing toroidal sheets enumerate sheet projected image desired viewpoint point drawn simple partitioning enumeration back-to-front ordering painter style rendering algorithm hidden-surface algorithm generalization anderson visible line algorithm arbitrary projected grid surfaces additional details found point plenoptic samples warped position image flow field general pixel positions lie irregular grid requiring sort reconstruction resampling forward-mapping reconstruction approach spirit prototype involves computing projected kernel size based current disparity derivatives epipolar curves visibility method properly handles mesh folds tears excessive stretching produced exposure previously occluded image regions view interpolation simple distinguished color heuristic based screen space projection neighboring pixel scanline approach approximates stretching small regions occlusion occluder abuts occluded region large exposed occluded regions interpolate boundaries occluded region exposure events handled robustly combining pixel-by-pixel basis results multiple image warps smallest-sized reconstruction kernel results collected series images video camcorder leveled tripod front yard author home accurate leveling strictly method work data collected attempt made pan camera uniform angular velocity autofocus autoiris features camera disabled order maintain constant focal length collection process frames digitized rate approximately frames resolution pixels sequential frames shown immediately collection data set process repeated point approximately inches image sequences separately registered methods section images reprojected surface cylinder resolution pixels results shown figures operating room scene figure constructed methods epipolar geometry computed tiepoints front house additional tiepoints gradually added establish initial disparity image simulated sheet sheet sheet sheet projection eye position proceedings siggraph los angeles california august annealing method differences stereo-correspondence routines tiepoints added refined epipolar geometry cylinder position estimates change cylinder position slight figure show cylindrical image epipolar curves superimposed notice curves intersect alternate camera virtual image vanishing point disparity images computed interactively warped viewing positions images show reconstructions interactively warped images provide convincing kinetic depth effect conclusions plenoptic function consistent framework imagebased rendering systems image-based methods morphing view interpolation characterized ways implement key steps sampling reconstructing resampling plenoptic function approach steps method sampling plenoptic function equipment commonly results cylindrical samples point parameters automatically estimated sequence images resulting panning video camera full circle reconstructing function samples requires estimating optic flow points view point translated problem difficult evidenced thirty years computer vision photogrammetry research greatly simplified samples close change image samples makes estimation easier viewer sample makes accurate estimation important resampling plenoptic function reconstructing planar projection key steps display images arbitrary viewpoints methods efficient determination visibility real-time display visually rich environments conventional workstations special purpose graphics acceleration plenoptic approach modeling display provide robust high-fidelity models environments based set projections degree realism determined resolution images number primitives describing scene finally difficulty producing realistic models real environments greatly reduced replacing geometry images acknowledgments indebted individuals contributions suggestions work henry fuchs andrei state kevin arthur donna mcmillan members unc upenn collaborative telepresence-research group research supported part advanced research projects 
agency contract dabt -cnsf cooperative agreement ascadvanced research projects agency order national science foundation grant mipapproved arpa public release distribution unlimited adelson bergen plenoptic function elements early vision computational models visual processing chapter edited michael landy anthony movshon mit press cambridge mass anderson hidden line elimination projected grid surfaces acm transactions graphics october barnard stochastic approach stereo vision sri international technical note april beier neely feature-based image metamorphosis computer graphics siggraph proceedings vol july blinn newell texture reflection computer generated images communications acm vol october bolles baker marimont epipolar-plane image analysis approach determining structure motion international journal computer vision vol catmull subdivision algorithm computer display curved surfaces thesis department computer scifigure cylindrical images panoramic views separated approximately inches image panoramic view operating room image epipolar curves superimposed cylindrical image proceedings siggraph los angeles california august ence utah tech report utec-csc- december chen williams view interpolation image synthesis computer graphics siggraph proceedings july faugeras three-dimensional computer vision geometric viewpoint mit press cambridge massachusetts greene environment mapping applications world projections ieee computer graphics applications november hartley self-calibration multiple views rotating camera proceedings european conference computer vision heckbert fundamentals texture mapping image warping masters thesis dept eecs ucb technical report ucb csd june horn schunck determining optical flow artificial intelligence vol kanatani transformation optical flow camera rotation ieee transactions pattern analysis machine intelligence vol march laveau faugeras scene representation collection images fundamental matrices inria technical report february lenz tsai techniques calibration scale factor image center high accuracy machine vision metrology proceedings ieee international conference robotics automation march april lippman movie-maps application optical videodisc computer graphics siggraph proceedings longuet-higgins computer algorithm reconstructing scene projections nature vol september longuet-higgins reconstruction scene projections configurations defeat -point algorithm proceedings ieee conference artificial intelligence applications dec lucas kanade iterative image registration technique application stereo vision proceedings seventh international joint conference artificial intelligence vancouver mcmillan leonard list-priority rendering algorithm redisplaying projected surfaces department computer science unc technical report mann picard virtual bellows constructing high quality stills video proceedings ieee international conference image processing november press flannery teukolsky vetterling numerical recipes cambridge press cambridge massachusetts regan pose priority rendering virtual reality address recalculation pipeline siggraph proceedings szeliski image mosaicing tele-reality applications dec cambridge research lab technical report crl tomasi kanade shape motion image streams factorization method full report orthographic case technical report cmu-cs- carnegie mellon march tsai versatile camera calibration technique highaccuracy machine vision metrology off-the-shelf cameras lenses ieee journal robotics automation vol rano august westover footprint evaluation volume rendering siggraph proceedings august wolberg digital image warping ieee computer society press los alamitos appendix show occlusion compatible mappings determined local spherical frames embedded global cartesian frame projected visibility algorithm cylindrical surfaces paper derived reducing spherical case isolated topological multiplicity projective mapping shown theorem generic case points topological multiplicity induced mapping frame origins coplanar proof points topological multiplicity colinear origin share angular coordinates line segment connects local frame origins general lines distinct define plane space single affine transformation accomplish results translate origin rotate lie x-axis rotate line multiplicity xy-plane scale system coordinate transformation multiplicity xy-plane shown figure theorem proof length sides computed terms angles law sines occlusion compatible mapping determined enumerating topological mesh defined order increasing allowing mesh facets overwrite previous mapping occlusion compatible theorem greater range values proceed lesser values multiplicities notice mapping procedure considers local frame world coordinates makes range information cos cos sin ------------sin sin ------------sin cotsin cos cotsin cos cos cot cot cos cos 
image metamorphosis snakes free-form deformations seung-yong lee kyung-yong chwa sung yong shin department computer science korea advanced institute science technology taejon korea george wolberg department computer science city college york cuny york abstract paper presents solutions problems image morphing feature specification warp generation transition control reduce burden feature specification adopt computer vision technique called snakes propose multilevel free-form deformations mffd achieve -continuous one-to-one warps feature point pairs resulting technique based b-spline approximation simpler faster previous warp generation methods finally simplify mffd method constructa -continuous surfaces deriving transition functionsto control geometry color blending keywords image metamorphosis morphing snakes multilevel free-form deformation multilevel b-spline interpolation introduction image metamorphosis deals fluid transformation digital image technique commonly referred morphing found widespread entertainment industry achieve stunning visual effects smooth transformations realized coupling image warping color interpolation image warping applies geometric transformations images retain geometric alignment features color interpolation blends color images correspondence established animator pairs points line segments point line segment specifies image feature landmark feature correspondence compute warps interpolate positions features morph sequence source destination images warped alignment intermediate feature positions ordinary color interpolation crossdissolve performed generate inbetween image color interpolation straightforward research image morphing concentrated warp generation feature correspondence mesh-based techniques mesh warping method nishita nonuniform meshes image features spline interpolation ezier clipping current address dept computer science city college york convent ave york cssyl wolberga cs-mail engr ccny cuny kychwa syshina jupiter kaist computes warps correspondence mesh points fast intuitive mesh-based techniques drawback features control mesh required features image arbitrary structure field morphing set line segments effectively features image pair line segments images determines warp local coordinate systems pairs line segments influences line segments blended weighted average technique suffers unexpected distortions referred ghosts prevent animator realizing precise warp complex metamorphosis features image set points -components warp derived constructing surfaces interpolate scattered points warp generation approach extensively surveyed recently similar methods independently proposed thin plate surface model techniques generate smooth warps reflect feature correspondence warp applied image one-to-one property warp guarantees distorted image fold back energy minimization method proposed derives -continuous one-to-one warp set feature point pairs performance method hampered high computational cost paper presents multilevel freeform deformation mffd technique derive -continuous one-to-one warp satisfies feature correspondence proposed technique based b-spline approximation simpler faster energy minimization method interesting problem image morphing transition control transition rates differ part part inbetween images interesting animations mesh warping transition curve assigned point mesh control transition behavior complicated meshes features tedious assign proper transition curve mesh point nishita mentioned transition behavior controlled ezier function defined mesh details method provided effective method transition control proposed transition rates inbetween image derived transition curves constructing smooth surface surface represents propagation transition rates defined user sparse positions image paper mffd technique warp generation simplified applied efficiently generate -continuous surface tedious aspect image morphing feature specification usefulness computer vision techniques remain marginally utilized task paper adopt snakes active contour model made popular computer vision reduce burden feature specification animators preliminaries authors proposed general framework generating inbetween image images including transition behavior control framework image morphing technique paper metamorphosis framework sets features animator source destination imagesa anda feature ina exists featurea warp functions point point applied generates distorted image features coincide features requirement map features distorts inverse features necessarily true positions image serve retain geometric alignment features morph transition functions transition rate point images time leta transition function defined source image time real-valued function determines fast point moves point destination image determines color contribution point point inbetween imagea transition function destination image point defined transition rate asa ifa corresponds derived froma warp function simplicity treat transition functions geometry color identical practice leta denote application warp functiona image procedure generating inbetween image note transition rates imply source destination images complete procedure solution needed problems feature sets anda derive warp functionsa derive transition functions anda energy minimization method energy minimization method proposed deriving warp functions method extensive feature specification primitives points polylines curves feature correspondence established converting non-point features feature points point sampling warp interpreted deformation rectangular plate feature correspondence assigns position feature point derive warp deformation technique provided derivea -continuousand oneto-one warps positional constraints requirements warp represented energy terms satisfied minimizing sum technique generates natural warps based physically meaningful energy terms bit involved implement transition functions obtained selecting set points image transition curve point transition curves determine transition behavior selected points time time transition functions values assigned transition curves selected points transition rate vertical distance plane transition functions reduced smooth surfaces interpolate set scattered points thin plate surface model employed obtaina -continuous surfaces transition functions overview metamorphosis framework section present effective technique previous energy minimization method animator image features snakes technique popularized computer vision snakes make capture exact position feature easily precisely derive warps positional constraints propose mffd extension free-form deformation ffd bivariate cubic b-spline tensor product deformation function ffd direct manipulation technique ffd based b-spline approximation developed paper apply hierarchy control lattices satisfy positional constraints guarantee one-to-one property warp present sufficient condition cubic b-spline surface one-to-one mffd generatesa -continuous one-to-one warps yield fluid image distortions simpler faster energy minimization method present hybrid approach combines methods obtain smooth surfaces transition functions simplify mffd obtain multilevel b-spline interpolation interpolation algorithm efficiently generates -continuous surface set scattered points feature specification features consist image landmarks profile eyes noise mouth facial image position feature identified boundary curve edges color values change abruptly adopt snakes assist precise positioning features snakes snakes energy-minimizing splines influence image constraint forces spline energy serves impose piecewise smoothness constraint snake image forces push snake salient image features lines edges subjective contours constraint forces pulling snake desired image feature nearby snakes proven interactive specification image features representing position snake parametric form energy functional written represents spline energy due bending energy defined intensity distribution image removed term related constraint forces paper simplify spline energy makes snake act thin plate gray-scale image gradient measures local image values computed difference operator sobel operator image energy functional defined makes snake precisely localize feature boundary large image gradients minimizing energy functional snake slithers initial position nearby feature feature allowed attract distant 
snake image gradients convolved smoothing filter convolution results image energy functional wherea gaussian standard deviationa image energy functionals details energy minimization procedure found feature specification primitives paper feature specification primitives include points polylines curves positions features derived effectively generating snakes polylines curves feature large image gradients snake initialized positioning polyline curve feature uniformly sample sequence points polyline curve points segment snake minimizes energy slithers finally locks feature image force tailor response snake user clamp sampled points place internally achieved assigning large parametera selected points tedious select sampled points provide option fixing lie control points user-specified primitive feature specification primitivea imagea primitive deposited image movea repeatedly generate snake froma identify feature moved designate feature snake initiated ifa anda polylines curves correspondence established vertices control points correspondence snakes derived polylines curves provide initial positions feature correspondence images internally translated set point pairs sampled feature primitives fig shows fig input image convert gray-scale image apply sobel operator compute image gradients fig shows image gradients convolved gaussian filter bright intensities denote large gradients fig place polyline profile image snake starting polyline captures profile fig fig illustrates feature primitives overlaid image cyan points fig represent internally sampled feature points primitives typically uniform sampling rate points primitive segment points segment shown figure warp generation free-form deformation ffd proposed sederberg parry powerful modeling tool deformable objects basic idea ffd deform object manipulating parallelepiped lattice object manipulated lattice determines deformation function specifies position point object coquillart extended ffd method handle non-parallelepiped lattices proposed technique animating objects modeled ffd hsu employed ffd method directly control shape object complex deformations trivariate cubic b-spline tensor product deformation function bernstein polynomials sederberg parry paper ffd generate -continuous one-to-one warp positional constraints rectangular plate thea -plane deformed manipulating parallelepiped lattice overlaid bivariate cubic b-spline tensor product deformation function ffd b-spline local control property makes locally manipulate lattice point plate moved position lattice producing movement efficiently computed large number control points free-form deformation -toproperty rectangular plate thea -plane assume pointsa plate deformed thea -plane shape represented vector-valued function lattice control points overlaid plate initial configuration -th control point lies initial position ffd method desired deformationa plate derived displacing control points lattice initial positions fig figure initial arrangement plate control lattice position -th control point lattice functiona defined terms ofa wherea anda uniform cubic b-spline basis functions evaluated anda b-spline curve collinear control points linear initial configuration lattice generates undeformed shape plate deformed positiona pointa plate relates sixteen control points neighborhood one-to-one property function defined function regarded uniform cubic b-spline surface plate parameter space one-to-one property b-spline surface studied b-spline surfaces considered dimensions model free-form surfaces recently goodman unsworth presented sufficient condition ezier surface one-to-one commented condition applied b-spline surface ana lattice control points condition linear inequalities number control points large time check condition prohibitive condition hold simple manipulating control lattice satisfy condition paper present sufficient condition function one-to-one terms displacements control points theorem uniform cubic b-spline surface made one-to-one limiting displacements control points theorem function equation one-to-one alla proof appendix theorem tight sufficient condition examples b-spline surface one-to-one control points displaced amounts means b-spline surface violate one-to-one property control lattice gridlines intersect manipulation free-form deformation suppose plate deformed place pointa positiona loss generality assume displacements thea -th control points lattice determine deformed positiona pointa fig movement pointa original position displacement -th control point initial position eqs displacements satisfy wherea anda values solutions choose least-squared sense solutions hsu showed minimizes squared sum control point displacements solution control points pointa larger displacements depends distance thea -th control point pointa generates deformationa effect movement ofa tapers smoothly suppose plate deformed place set pointsa set positions point ina positiona ina pointa ina moved position surrounding control points displaced amount displacements single constraint multiple constraints figure examples positional constraints mislead point position ina leta set points ina thata anda -th control point lattice initial position fig displacement control point influences movement points evaluate deformation function pointa ina displacement control pointa required movinga position displacement point point displacement control pointa chosen minimize error error defined squared sum differences anda pointa ina error movement pointa due displacement control pointa represents contribution control point determined movinga position differentiating error respect equating derived formula displacements control points lattice computed resulting deformation function guaranteed one-to-one make function one-toone truncate displacement control point condition theorem holds derived functiona one-to-one hsu presented technique manipulating control points points object modeled ffd moved positions technique calculates pseudoinverse matrix derive displacements control points minimize squared sum distances actual positions matrix values b-spline basis functions size depends number positional constraints large number points moved computation calculating pseudoinverse prohibitive hand technique proposed section runs fast number moved points large deformation plate nicely reflects movements points displacement control point minimizes reasonable error fig shows examples figures black spots represent positions selected points undeformed deformed shapes thick curves show control lattice overlaid plate control lattice rectangular grid initial configuration transformed plate deformed single positional constraint multiple positional constraints figure examples ffd manipulation multilevel free-form deformation leta set points plate anda set positions application ffd manipulation presented section deform plate place point ina position reason displacement control point lattice weighted average displacements required moving neighboring points reason limit maximum displacement control point approximately half spacing control points order make deformation function one-to-one circumvent problem make control lattice finer point moved surrounding control points interfering points overcome repeatedly apply ffd manipulation plate accumulated movement point sufficiently large obvious method deriving one-to-one deformation function positional constraints overlay sufficiently fine control lattice plate iterate ffd manipulation case resulting shape plate show sharp local deformations points large number ffd manipulations required satisfy positional constraints point move short distance ffd manipulation fine control lattice section present multilevel free-form deformation mffd technique overcomes drawbacks simple method mffd hierarchy control lattices derive sequence deformation functions ffd manipulation spacing control points initial configuration lattice assume plate deformed coarse control lattice positional constraints merge result smooth deformation satisfied remaining deviations deformed positions handled subsequent deformations finer control lattices sequence deformation functions derived mffd deformation plate defined composite functiona anda denote resulting shapes deformation 
functionsa applied plate deformed plate set points deformed plate lie deformed positions points deformation functiona computed move points positions ina deformation function applied plate define error maxa wherea position ina pointa ina deform plate control lattice point move surroundingcontrol points displaced bya note maximum movement theorem displacementsof control points truncated one-toone property deformation function point ina moves error decreases case ffd manipulations control lattice helpful moving points ina positions mffd ffd manipulation starts coarsest control lattice control lattice ffd manipulation iterates changein error falls belowa finer control lattice successive ffd manipulation long finest control lattice process continues error exceeds user-specified threshold parameter real small generates smooth deformation plate ffd manipulations performed coarser control lattices ofa ffd manipulation generates -continuous one-toone deformation function mffd deformation function composition functions derived ffd manipulations resulting deformation plate -continuous one-to-one result guaranteed remain oneto-one positional constraints prone foldovers achieved relaxing requirement satisfy positional constraints order retain one-to-one property fig mffd applied generate deformation plate positional constraints fig shows selected points undeformed shape plate figs show sequence deformations deformed positions selected points gradually approach positions fig shows resulting deformation positions ffd manipulations performed level control lattice computation mffd consumed evaluating deformation function plate function evaluated grid takes seconds sgi crimson generate deformation fig size grid computation time seconds hybrid approach energy minimization method proposed derive continuous one-to-one warps positional constraints generates natural warps requires computation warps evaluated large grids mffd combined method derive warps effectively suppose warps evaluated ana grid energy minimization method obtain warp coarse grid positional constraints derived figure mffd original grid weighted averaging warp derived grid constructing uniform cubic b-spline surface interpolates values function function -continuous one-to-one satisfy positional constraints finally mffd applied handle remainder positional constraints size coarsest control lattice hybrid approach energy minimization method determines global shape generated warp coarse grid short time mffd original grid makes avoid excessive computation required energy minimization fine grid hybrid approach generates nice warp similar energy minimization method computation time comparable mffd fig fig shows selected points undeformed shape plate figs show deformations plate derived energy minimization mffd hybrid method figures warps evaluated grid hybrid approach energy minimization method applied grid computation times figs sgi crimson seconds undeformed shape energy minimization mffd hybrid method figure comparison deformed shapes plate transition control b-spline surfaces widely model free-form surfaces offer nice properties continuity local control section uniform cubic b-splines generate surface interpolates scattered set height field points purpose deriving surface propagate transition control information sparse positions information user transition curves primitives note primitives necessarily relate feature primitives set points polylines curves defined transition behavior manipulation b-spline surfaces rectangular region thea -plane points lattice control points overlaid region initial configuration -th control point lies initial position -plane control points lattice displaced direction perpendicular -plane resulting b-spline surface represented real-valued function function point implies point position surface generated leta height thea -th control point thea -plane functiona wherea anda uniform cubic b-spline basis functions evaluated ata anda formula fora form deformation functiona section suppose b-spline surface required interpolate set scattered points point region point set surface approximately satisfies positional constraints obtained approach ffd manipulation section required heights control points -plane derived eqs replacing witha computed heights control points truncated case one-to-one property multilevel b-spline interpolation set points space point region case warp spline surface derived eqs necessarily interpolate points straightforward solution sufficiently fine control lattice point interpolated interfering points resulting surface show sharp local deformations points introduce multilevel b-spline interpolation overcome drawback multilevel b-spline interpolation hierarchy control lattices overlaid region derive sequence functions spacing control points initial configuration lattice assume thata anda thata final functiona defined sum functionsa pointa coarsest spacinga determines area resulting surface interpolated point effect finest spacinga controls precision resulting surface interpolates points manipulation b-spline surface starts coarsest control lattice heights control points lattice derived generate surface interpolates points surface passes points leaving deviation point finer control lattice obtain b-spline surface interpolates set points general manipulate control points lattice derive b-spline surfacea interpolates set points process continues finest control lattice maximum difference points final surface falls threshold unlike mffd case b-spline surface manipulation applied control lattice heights control points truncated figure multilevel b-spline interpolation surface generated multilevel b-spline interpolation isa continuous sum -continuous b-spline surfaces fig shows black spots figure represent interpolated points computation time spent evaluating function region grid takes seconds sgi crimson generate surface fig grid surface generated seconds metamorphosis examples fig metamorphosis examples figs show selected frames morph sequence seung-yong george authors linda images fig generated transition rate transition rates allowed vary generate images fig fig shows features overlaid input images bottom inbetween images column demonstrate effect procedural transition function fig shows frames morph sequence linda seung-yong note transition control applied overcome considerable differences hairlines set transition curves source image sufficient relate transition behavior morph sequence figs show primitives transition curves defined inbetween images figs primitive transition curve points primitive sharing transition rate figs depict transition curves respective outer primitives figs inbetween images shown fig linear functions ina applied vary transformation source destination images inbetween image seung-yong changed george top bottom similarly george transformed seung-yong image fig illustrates warp function generated transforming seung-yong george fig dark lines represent positions feature points internally sampled source image fig shows surface interpolating transition rates evaluated transition curves primitives fig images shown fig generated sun sparcsystem hybrid method derive warp functions multilevel b-spline interpolation compute surfaces transition control seconds generate warp function surface fig conclusions paper presented solutions problems image morphing feature specification warp generation surface generation transition control features image snakes popular computer vision technique snakes animator easily precisely capture exact position feature reduce work animator establishing feature correspondence image sequences introduced deformation technique mffd derives -continuous one-to-one warps feature point pairs technique fast number features large resulting warps provide visually pleasing image distortions presented multilevel b-spline interpolation construct smooth surfaces control geometry color blending method efficiently generates -continuous surface interpolates set scattered points warp surface generation techniques paper applied areas computer graphics mffd readily extended directly manipulate shape deformable objects multilevel b-spline interpolation rapidly generate 
free-form surfaces positional constraints acknowledgements work supported part korean ministry science technology contract -s-a- step nsf pyi award iriand psc-cuny grant rfreferences ballard dana christopher brown computer vision prentice-hall beier thaddeus shawn neely feature-based image metamorphosis computer graphics benson philip morph transformation facial image image vision computing coquillart sabine extended free-form deformation sculpturing tool geometric modeling computer graphics coquillart sabine pierre jancene animated free-form deformation interactive animation technique computer graphics goodman tim keith unsworth injective bivariate maps tech rep dundee hsu william john hughes henry kaufman direct manipulation free-form deformations computer graphics kass michael andrew witkin demetri terzopoulos snakes active contour models international journal computer vision lee seung-yong image morphing scattered feature interpolations phd thesis kaist taejon korea february lee seung-yong kyung-yong chwa james hahn sung yong shin image morphing deformable surfaces proceedings computer animation geneva switzerland ieee computer society press lee seung-yong kyung-yong chwa james hahn sung yong shin image morphing deformation techniques journal visualization computer animation litwinowicz peter lance williams animating images drawings siggraph conference proceedings acm press meisters olech locally one-to-one mappings classical theorem schlicht functions duke mathematical journal nishita tomoyuki toshihisa fujii eihachiro nakamae metamorphosis ezier clipping proceedings pacific conference computer graphics applications seoul korea world scientific publishing nishita tomoyuki thomas sederberg masanori kakimoto ray tracing trimmed rational surface patches computer graphics ruprecht detlef heinrich uller image warping scattered data interpolation ieee computer graphics applications sederberg thomas scott parry free-form deformation solid geometric models computer graphics terzopoulos demetri multilevel computational processes visual surface reconstruction computer vision graphics image processing wolberg george digital image warping ieee computer society press los alamitos appendix proof theorem anda suppose point domain alla jacobian greater points including boundary implies function one-to-one show symmetrical argument applied case similarly prove remaining case eqs formulae b-spline basis functions holds thata fora immediately leta thena anda implies similarly proved anda fact thata anda manipulating formula implies global minimum similarly shown anda ifa summary case whena function defined condition properties values ofa holds derive lower boundof partition domain grid internode distance whena evaluated grid point bits double-precision arithmetic minimum grid point consists termsa wherea simplify formula assigna anda terms ina positive negative coefficients holds thata point domain anda domain implies case treated similarly figure feature specification shown left-to-right top-to-bottom transition rate time transition rate time figure primitives transition curves figure warp function surface figure metamorphosis examples 
object recognition pictorial structures daniel huttenlocher computer science department joint work pedro felzenszwalb mit lab talk object recognition computer vision definition overview part-based models objects pictorial structures modeling bayesian framework formalize learning recognition problems efficient algorithms pictorial structures learning models labeled examples recognizing objects images object recognition kind model object shape geometric relations twoor three-dimensional appearance reflectance color texture generic object class versus specific object recognition involves detection determining object visible image localization determining object image recognition goal detect localize multi-part objects arbitrary locations scene generic object models person car articulated objects combine geometry appearance provide efficient practical algorithms pictorial structures local models appearance non-local geometric spatial constraints image patches describing color texture spatial relations pairs patches simultaneous appearance spatial information simple part models non-distinctive history recognition pictorial structures date early practical recognition algorithms proved difficult purely geometric models widely combinatorial matching image features dominant approach early don capture appearance color texture appearance based models tasks templates patches image lose geometry generally learned examples face recognition common application part-based approaches geometric part decompositions solid modeling biederman dickinson person models detect local features apply geometric constraints body structure forsyth fleck local image patches geometric constraints gaussian model spatial distribution parts burl perona pictorial structure style models lipson formal definition model set parts configuration random field locations parts appearance parameters edge neighboring parts explicit dependency connection parameters quick review probabilistic models random variable characterizes events sum dice distribution maps probabilities joint distribution multiple events rolling events independent conditional distribution sum die random field set dependent problems address recognizing model image find location parts multiple highly locations measure model present learning model labeled images form model parameters constant color rectangle learn average color variation relative translation parts learn average position variation standard bayesian approach estimate posterior distribution probabilities configurations image model find maximum map high values sampling proportional bayes rule likelihood image configuration model fixed depends appearance prior obtaining configuration model image depends constraints class models computational difficulty depends form posterior distribution structure graph important represents markov random field mrf depends explicitly neighbors require tree prior relative location natural models animate objects skeleton reasonable objects central part star graph prior computed efficiently class models likelihood product individual likelihoods parts good approximation parts don overlap form connection important space deformation distance normal distribution transformed space capture ideal relative locations parts measures deformation mahalanobis distance transformed space weighted squared euclidean distance bayesian formulation learning images configurations supervised labeled learning problem obtain estimates model maximum likelihood estimate argmax argmax independent examples rewrite joint probability product appearance dependencies separate argmax efficiently learning models estimating appearance estimation type part constant color patch gaussian model computing color covariance estimating dependencies estimate pairwise locations translation compute offset parts variation offset tree minimum spanning tree mst algorithm pairs smallest relative spatial variation generic face model part local image patch represented response oriented filters vector part pairs parts constrained terms relative position image models parts parts parts eyes tip nose corners mouth parts eye split pupil left side side learned part face model appearance structure parameters learned labeled frontal views structure captures pairs predictable relative location uncertainty gaussian covariance model captures direction spatial variations differs part part represented rectangle fixed width varying length learn average variation connections approximate revolute joints joint location relative position orientation foreshortening estimate average variation learned part model parameters learned including joint locations shown ideal configuration generic person model bayesian formulation recognition model image seek good configuration maximum posteriori map estimate highest probability configuration argmax sampling posterior distribution values high measure testing hypotheses brute force solutions intractable parts discrete locations part efficiently recognizing objects map estimation algorithm tree structure viterbi style dynamic programming locations parts slow practice millions dynamic programming method finding pair-wise locations linear time resulting method requires distance arbitrary cost similar techniques sampling posterior distribution time minimization problem recall location argmax argmax graph structure mrf pairwise dependencies argmax standard approach negative log argmin -log part matches image -log locations agree model minimizing tree structures dynamic programming minimize express function pairs cost location location recursive formulas terms children min leaf node children term empty root node parent term omitted running time compute minimum equations start leaf nodes build sub-trees running time parts locations part part pair defining equation time pair pairs distance don location pairs define kind distance transform location minimum location classical distance transforms defined set points min location distance nearest cones rooted point commonly computed grid min computing distance transforms pass algorithm norm time locations d-dim grid pass min sum mask distance array place simple method approximate norms involved exact method reports point closest generalized distance transforms replace indicator function arbitrary min intuitively grid location find distance small distance cost location change bounded change small dominates nearby large values generalized distance transform gdt computed classic algorithm map estimate express recursive minimization formulas gdt cost function gdt maps locations space difference squared distance distance ideal relative locations recursive equations computed time number dimensions parameter space fixed case recognizing faces generic model frontal view learned -part models local oriented filters parts small spatial variation part locations similar size orientation face map estimation find match posterior estimate configuration accurate parts overlap locations image runs frames desktop workstation recognizing faces recognizing people frontal view models generic model binary rectangles parts match difference image specific model color rectangles parts match original image sampling posterior find good matches posterior estimate high configurations due overlap parts samples measured correlation chamfer matching search locations runs minute sampling posterior generate good matches hypotheses locations large validate compare technique correlation-like measure chamfer computation similar map estimation recursive equations part ability solve equation linear time convolution gaussian linear time dynamic programming approximation box filters due wells recognizing people variety poses variety poses samples posterior model specific person summary pictorial structures combine local part appearance global spatial constraints don localize parts exploit context suitable generic models object classes bayesian framework natural learning problem estimation requires placing part models images structure parameters learned practical algorithms searching locations image match good matches high posterior occluded parts make part likelihood 
robust measure apply tracking people video incorporate location previous time frame prior efficient methods start generic models learn person specific models discriminate people person face methods 
crcxctd cpd crcwcxd cxcrd cxcpd cbd crd ctd ctcsd bybabyctd dectd dedbcpd bwcpd cxctd bac ctd crcwctd btd cxaccrcxcpd ctd cxcvctd crctc cpcqd cpd bvd ctd cbcrcxctd crctbwctd cpd ctd bvd ctd cdd cxdactd cxd bvcpd cqd cxcscvctb bcbebdbfbl cwcpcrcpb bdbgbkbhbf abbscpcxbad cxd bactcsd csd cwbscrd bacrd ctd bactcsd btcqd cpcrd cxcrd cxcpd crd ctcxd cpcrd ctcrd cxd cpd cpd cpd cvctcscxd csctcud cpcqd crd accvd cpd cxd bxcpcrcw cpd cxd ctd ctd ctd ctcs cxd cxd cpd ctcpd cpd crct csctd cpd cwct csctcud cpcqd crd accvd cpd cxd cxd ctd ctd ctd ctcs cqdd cxd cvb cxczct crd ctcrd cxd cqctd dbctctd cpcxd cpd cfcwcxd cxcrd cxcpd crd ctd dbctd cxd csd crctcs cqctd ddctcpd cpcvd cwctdd cwcpdact cqctctd cqd cpcsd cpd cxctcs cpd crcwcxd cpd ctcrd cvd cxd cxd cqd ctd cccwcxd cwcpd cqctctd csd cxd cpd cwct crd cpd cxd cpd cscx crd cpd crcwcxd cxcrd cxcpd crd ctd cxd cpcvctd cwcxd cpb ctd dbct ctd ctd cpd crcxctd cpd cvd cxd cwd cud acd cscxd cwct cqctd cvd cqcpd cpd crcw cxcrd cxcpd crd ctd cpd cxd cpcvctba cccwct cxd cxd cwct cpd cvd cxd cwd cxd cxd cpd cpd cxd cxd cpczctd cuctdb ctcrd csd cpd crcw csctd dbcxd acdact ctd cpd cfcxd cwcxd cxd dactcs cpd cvd cxd cwd cxcrd cxcpd crd ctd dacxcsct cpcrd cxcrcpd cpd dbctd cud cud cpd ctdbd cud cpd cxd cpd cxdact csctd crd cxd cxd cqcyctcrd cpd crctd ctd cpd cpd cxd cpcqd cud cpd cvctd ctd cxcr cxd cpcvct ctcrd cvd cxd cxd cqb ctd cfct cxd cpd cwct cpd cpcrcw cxd cxd csctd ctd cpd crcpd bdba csd crd cxd cwcxd cpd ctd dbct crd cxcsctd cwct cqd ctd cpd crcwcxd cxcrd cxcpd crd ctd cxd cpcvctd cpd cxd csd crctcs cqdd bycxd crcwd ctd cpd bxd crcwd cpcvctd cjbkcl ctcpd bfbc ddctcpd cpcvd cxcrb cxcpd crd cxd crd ctcrd cxd cpd cpd cpd cvctcs cxd csctcud cpcqd crd accvd cpd cxd cccwct csctcud cpcqd crd accvd cpb cxd cxd ctd ctd ctd ctcscqddd cxd cvb cxczctcrd ctcrd cxd cqctd dbctctd cwct cpd cccwct cpd crcwcxd cqd ctd cxd cwcpd acd cscxd cwctcqctd cpcrctd ctd cud cwctd cpd cxd cpd cxd cpcvctb dbcwctd ctd cwct cpd cxd ddd cucpd cpcrctd ctd csctd ctd csd cqd cwd cwd dbdbctd ctcpcrcw cpd cpd crcwctd cwctcxd cpcvctcpd csd cwd dbdbctd cwctd cpcrctd ctd cpcvd ctctdbcxd cwd cwctcsctcud cpcqd ctcrd accvd cpd cxd cccwct cpcxd crd cxcqd cxd dbd czcxd cwct csctdactd ctd cpd crcxctd cpd crcwcxd cpd cvd cxd cwd cud cpd cpd crd cpd cud cxcrd cxcpd crd ctd btd ctcrd cscpd ddcrd cxcqd cxd cfd ctcs cxd cpd cqddbwbtcac btcrd cpcrd bwbtbtc bcbdb blbjb bcbdbcbg cxd dacxcscxd cvcpbucpddctd cxcpd cxd ctd ctd cpd cxd cud cwctd cqd ctd cxd ctd cuc btc ctd cxd cpd cxd cccwctd cxd cvd cxd ctd cud cpd cvd cxd cwd cxd cxd cpd cxd cwctd ctd ctd cwcpd cxd cpd cxcrczd cpd cxd cpd crcwcxd ctcpcrcw cpd ctd cpd cpd ctd ddb dbcxd cwd cpcrb crd cxd cvcud cwctd ctd cpd cxd cwcxd cqctd dbctctd cpd cpcrb cxcrctd cwctcpd cvd cxd cwd cxd cpd cucpd acd cscxd cvd cwctcvd cqcpd ddcqctd cpd crcwd cucpd cxcrd cxcpd crd ctd cpd cxd cpcvctcxd cyd cpcuctdb ctcrd csd cxcrd cxcpd crd ctd dacxcsct dbctd cud cud cpd ctdbd cud cpd cxd cpd cxdactcsctd crd cxd cxd cud cqcyctcrd cpd csd crctd ctd cpczb cxd cwctd cxd cpcqd cud cpd ddcvctd ctd cxcrcxd cpcvct ctcrd cvd cxd cxd cqd ctd cjbkcl cpd cxd cjbjclb cxcrd cxcpd crd ctd dbctd ctcsd cud cvctd ctd cxcrd csctd cpcwd cpd cucpcrctba cbcxd cvctd ctd cxcr cpd ctcpd cpd crct csctd dbctd ctcs cud cpd crcw cpd cwctctddctd cwb ctd crbab cpd csd cwctcrd ctcrd cxd cqctd dbctctd cpd ctd ctcs cwcpd cwct cvctd ctd cxcr cpd cpd cvctd ctd cwct cpd dbcpd cucpcrctb cxczctba cjbdbiclb cxcrd cxcpd crd ctd dbctd ctcsd csctd cvctd ctd cxcrd crctd ctcrd crctd crcwcpd cpdbcpd ctd cucpd dbdd cpcxd ctd byd ctdccpd ctb dbcpd ctd cucpd dbcpd csctd ctcscpd cpcqd cxcvcwd dbcwcxd ctd ctcvcxd dbcpd ctd cxd cwct cxcscsd cscpd czctd ctcvcxd crczd cccwct ctd cwd cwcpd dbctd ctd ctd cxd cwcxd cpd ctd crcpd cqctd ctcsd crctd dact cqd cpcs cpd cvct cvctd ctd cxcr ctcrd cvd cxd cxd cqd ctd cxd crd cscxd cvd cwd ctcxd dactd cxcvcpd ctcscxd cjbkb bjb bdbiclb cpd dbctd cpd cwct ctcrd cvd cxd cxd cucpd cxcrd cpd ctcsd cqcyctcrd byd dbcxd cjbkclb csctcud cpcqd crd accvd cpd cxd cxd ctd ctb ctd ctcscqddd cpcxd dbcxd ctd ctd cpd cxd cwcxd cqctd dbctctd cwctd crcpd cxd cwct cpd bvctd cpcxd cpcxd cpd cpd crd ctcrd ctcs cqdd dacxd cpd ckd cxd cvd cwcpd cpd cqct cxd cvcxdactd ctd cpd cxdact crcpd cxd dbcxd ctd ctcrd cwct cwctd cccwctd ckd cxd cvd crcpd ctd cud crct cscxabctd ctd czcxd csd ctd cpd cxd cwcxd cqctd dbctctd cwctd crcpd cxd cud cwctd cpd byd ctdccpd ctb cxd cwct ctd csctd cxd cbctcrd cxd bibabdb cwctcqd csddd cpd cucpd ctd cpd ctcrd ctcrd ctcsd cvctd cwctd cqddadctdccxcqd ctd ctdad ctcyd cxd cccwcxd cpd dbd cwct cxd cqd dact dbcwcxd ctd cpcxd cxd crd ctcrd ctcsba cwctcrcpd csctd cxd cbctcrd cxd bibabeb cwctdbcwctctd cucpcrcpd cpd crd ctcrd ctcsd cwctcqd csddd cxd cvcpadctdccxcqd ctd cxd cpd cxcrcyd cxd cccwcxd cpd dbd cwctdbcwctctd dactcpd cvd cwctcqd cud cwct crcpd cqd cxd cpd ddd cwctd cscxd ctcrd cxd cccwctd cpd crcwcxd cvd cqd ctd cpd ctcscxd cjbkclcxd dad dactd cxd cxd cxdecxd cvcpcrctd cpcxd ctd ctd cvddcud crd cxd dbcwcxcrcwd cpczctd cxd cpcrb crd cqd cwd cwctckd cxd cvaycud crctd cqctd dbctctd cpd cpd csd cwct cpd crcwd cpd cxd ddcud ctcpcrcwd cpd cxd cxd cxdecxd cvd cwcxd ctd ctd cvddcxd cpcwcpd csd cqd ctd cxd cvctd ctd cpd cfctcsctdactd cpd ctdbd cxd cwcxd cxd cxd cxdecpd cxd cqd ctd cud cpd cpd cpd crd cpd cud cxcrb cxcpd crd ctd cccwcxd ctd cwd csd ctd cxd ctd cwcpd cwctd ctd ctd 
cpd cxd cwcxd cqctd dbctctd cpd cud cpd ctctd crd ctb cpd cwcpd cwctd ctd cpd cxd cwcxd cqctd dbctctd ctcpcrcwd cpcxd cud cpd cqctd cpd cxcrd cpd cud cccwct ctd cxcrd cxd ctct crd cpd dbd ctd cpd cscpd cscsddd cpd cxcrd cvd cpd cxd cvd ctcrcwb cxd ctd cpd csd cwctd ctd cxcrd cxd cxd cwctcud cud cwctd cpcxd dbcxd ctd cpd cxd cwcxd cqctd dbctctd cpd cpd dbd ctcpd dactd cvctd ctd cpd cxdecpd cxd cucscxd cpd crctd cpd cud bvd cqcxd cxd cvd cwctd dbd ctcrcwd cxd ctd dbctd cqd cpcxd cpd cpd cvd cxd cwd cwcpd cpd cucpd cpd cxd ddd cpd crcwcxd cvctcpcrcwd cpd ctd cpd cpd ctd ddb dbcxd cwd crd cxcsb ctd cxd cvd cwctd ctd cpd cxd cwcxd cqctd dbctctd cwctd cpd cactd cxcrd cxd cvd cwctd ctd cpd cxd cwcxd cqctd dbctctd cpd cpd ctct crd cxd cpd cpd cqctcrcpd cwct crd ctcrd cxd cqctd dbctctd cpd cud cpd ddcpd cxd cpd ctd cqcyctcrd cud cpd ctctcrd ctd csb cxd cvd cwctd czctd ctd cpd crd ctba cpd ddd cwctd czcxd csd cud cqb cyctcrd crcpd cqctd ctd ctd ctd ctcscpd cpd cpd cvd cpd cwb dbcwctd ctd cwctd ctcxd ctcrctd cpd cpd cwcpd cpd cwctd cwctd cpd cpd ctcrd ctcrd ctcs byd cxd cpd crctb cxd csctd cxd cvcpcrcpd cwctdbcwctctd cpd csdbcxd csd dbd crcpd cpd cqct cxd cxd ctcs ctd cpd cxdactd cwct cqd csddba cccwct ctd cxcrd cxd cwcpd dbctcxd ctd cwctcud cud cwctd cpcxd dbcxd ctd cpd cxd cwcxd cqctd dbctctd cpd cxd cxd cpd cpd dbd cqd cpcs cpd cvctd cud cqcyctcrd cqctd csctd ctcsb crcwcpd cwd ctdbcxd cwadctdcb cxcqd ctd ctdad ctcyd cxd cpd dbctd ctcxd csctd cxd cvcpd ctd cpd adctdccxcqd ctd cxd cpd cxcrcyd cxd cpd dbctd ctcxd csctd cxd cvcpcrcpd cfctd ctd ctd ctdccpd ctd cxd cpd cxd cvd cwcpd cwctcpd cvd cxd cwd ctd cpcqd ctd crcxctd ctcpd crcwd cucpd cxd cpcvctcud cwctcvd cqcpd ddcqctd cpd crcw ctd cpd cxdactd cvctd ctd cxcr cqcyctcrd crcw cpd ckcscpd czb cwcpcxd ctcs cucpcxd czcxd ctcs ctd dbctcpd cxd cqd cwcxd cpd cqd cpcrczd cpd ayd cpckd ctcscrcpd ayba beba cactd cpd ctcs cfd btd ctcscxd cwctcxd csd crd cxd dbctd ctd cwct cpd ctcud cpd ctb dbd czcpd bycxd crcwd ctd cpd csbxd crcwd cpcvctd cjbkclb cxd cvd cwctd cpd crcwb cxd cqd ctd cpd ctd ctd cvdd cxd cxd cxdecpd cxd cccwctdd cpd ctcscpcsddd cpd cxcrd cvd cpd cxd cvcpd cpcrcwcpd dbctcsd cwctd ctba cccwctd ctcpd ctd dbd czctddcscxabctd ctd crctd cxd dbd czba bycxd dbctcud crd ctcrcxaccrcpd ddd cwct crcpd cud ctctb crd ctcsd cqcyctcrd cqctcrcpd ctd cwctdd cpd ctcpd cxd ctd ctd cxd crd cpd cwcpd crcpd cqct crcxctd ddd ctcrd cvd cxdectcsba cbctcrd csb dbctcsctdactd cpd ctd cwd csd cwcpd cxd cxd ctcpd cpd cwctd cwcpd cpcsd cpd cxcrcxd cwctd cqctd cud cxb cqd ctd cpcrctd ctd cud ctcpcrcwd cpd cccwcxd cscxabctd ctd crctcxd cxd cpd cqctcrcpd ctd cwctd cpcsd cpd cxcrd cxd ctd ctd cwd cscxd cxd ddd cud cpcrd cxcrcpd ctcud crcpd ctd cwctcxd csd crd cxd dbctcscxd crd ctcsd cwctdbd czd cucjbdbiclcpd cjbjclb cqd cwd cudbcwd ctd cxcrd cxcpd crd ctd cjbdbiclb crd cpd cxcrd cxcpd crd ctd cpd ctcs cpd cpd cvd cxd cwd cxd ctd ctd ctcsba cccwct dbd cxd cjbjcl ctd cxd cxd cpd ctd ctd cvdd cud crd cxd cwct ctd ctd ctcs cwctd ctba cwctcxd dbd cxd ctcpcsd cucwcpdacxd cvcrd ctcrd cxd cqctd dbctctd cpcxd cud cpd cpd cpd cpd ctcrd cpcxd ctcsdbcxd cwd ctd ctcrd cpcrctd cpd crd cscxb cpd ctd ddd ctd cwcxd cpczctd cxd cxd cxcqd ctd ctd ctd ctd cqb cyctcrd dbcxd cwd ctd cwcpd ctcpd cxcrd cpd cxd cxd ctd dactd cwctddd ddcvcxdactcwctd cxd cxcrcpd cvd cxd cwd cwcpd csd ctcrctd cpd cxd ddacd csd cwctcvd cqcpd cxd cpd cxd cpd cpcrcwcrcpd acd csd cwctcvd cqcpd ddd cxd cpd cpd crcwcud cwcxd czcxd csd cud csctd cqddd crcpd cxd cvctcpcrcwd cpd ctd cpd cxdactd cpdacxd cpd cpd cwcpd cpcrd cpd cwctcrctd cpd crd cscxd cpd ctd ddd ctd cccwctd cpd cpd cpd cpcrcwctd ctcrd cvd cxdecxd csctd ctd ctd ctd ctcs cqdd cpd cpd crd ctcrd cxd crd cpcxd cqctd dbctctd cwct cpd crcw cpd cjbdbdclb cjbeclb cjbdbeclb cjbicl cpd cjbdbhclba cfcwcxd cwctd ctcrcwd cxd ctd cpcscsd ctd cxd cxd cpd cqd ctd cwctd cpd crcwcxd cvd cud cxcrd cxcpd crd ctd ctczctddcscxabctd ctd crct cxd cwcpd cwctdd cpd cpczctcwcpd csb ddctd csctcrcxd cxd cpd dbcwctd cwctd cvcxdactd crcpd cxd cxd cwct cxd cpcvct crcpd crd cpcxd cvcxdactd cpd cccwctd ctd ctd cwd csd cwctd ctctczcpd ctd cud crcwcsctb ctcrd ctcsd cpd cwcpd cpd ctcpd cpd cvctcscxd cpdacpd cxcscrd accvd cpd cxd ctd dactd cpd crcw dacpd cxcs crd accvd cpd cxd cpd ctcpd ctcs cpd cqctcxd cvctd cpd ddcvd csba cccwctd ctd cucqcxd cpd ddcsctcrcxd cxd cxd dbctd cxd ctcsd cxd cpd cxd cpd cxdactd cpd csctd crcwcpd cwct ctd ctcs cxd cwcxd cpd ctd cpd cxd cwctd cpd cxcrcpd cxd cpd crcwcxd cxcrd cxcpd crd ctd cjbkb bdbib bjclba cfcxd cxd ctcvctd ctd cxcrd cpd csctd cxd cxd cqctd ctd csctd ctd cxd ctcwd dbctd ctcpcrcw cpd cpd crcwctd cpd ctcpcrcw crcpd cxd cpd cwctd cwcpd acd cscxd cpcrcrctd cpcqd crcpd cxd cud cwct cpd cccwct dbd czcxd cjbdbjclcxd cxd cxd cpd cxd cwcpd cxd ctd ctd ctd cpd cxcrd cpd ctcsd cqcyctcrd cxd cvcpd ctctd cucsctd ctd csctd crcxctd cqctd dbctctd cpd btcvcpcxd cwd dbctdactd cpd dacpd cxcs crd accvd cpd cxd cwct cpd cpd ctcpd ctcs cpd ctd cpd cvd csba byd cwctd ctb cwct cpd cvd cxd cwd ctd ctd ctcs cxd cjbdbjcl cxd cud crcpd cxd cxd cxdecpd cxd ddb cpd ctcsd cpcvd cqcpd cpd crcwd cwcpd ctcpd crcwctd dactd cpd cxcqd ctd cpcrctd ctd cud cwctd csctd cpd cxd csd ctcwctd ctba bfba cccwct cactcrd cvd cxd cxd byd cpd ctdbd cfctcpd ctcrd crctd ctcsdbcxd cwd ctd ctd ctd cxd cvd cxcrd cxcpd crd ctd cxd cvd cwctd crcwctd ctacd ctcscxd cjbkclba btd cxcrd cpd crb ctcxd ctd 
ctd ctd ctcscpd cpcrd ctcrd cxd cud cpd dbcxd cwcrd ctcrb cxd cqctd dbctctd crctd cpcxd cpcxd btd cpd cpd dbcpddd ctdcd ctd crcwcpd csctd cxd cxd ctd cucpcvd cpd cwbzbpb cebnbxb dbcwctd cwct dactd cxcrctd cuda bnbmbmbmbnda crd ctd csd cwct cpd cpd csd cwctd ctcxd cpd ctcscvctb bnda bebx cud ctcpcrcwd cpcxd cucrd ctcrd ctcsd cpd cpd csda btd cxd cpd crctd cpd cpd cxd cpd cxd cpcvctcxd ctcrcxacctcscqddcp crcpd cxd byd cwct ctdccpd ctd cxd cwcxd cpd ctd ctcrcxacctd cxd cxd cpd cxd cpd csd crcpd ctd cpd cpd ctd ctd cud cxd ctd dbd cscxd ctd cxd cpd cpd byd ctcpcrcwd cpd cpd cpd crcwcrd cud crb cxd bnd ctcpd ctd cwd dbdbctd cwct cpd cpd crcwctd cwct cxd cpcvct dbcwctd cpcrctcs cpd crcpd cxd cccwct ctdccpd ctd cxd cwcxd cpd ctd ctcucpcxd ddd cxd ctd ctd cpd ctd cpd crcwcxd cvcud cwcxd crd cud crd cxd cwctd cxcqcxd cxd cxctd dbd cscqctd ctd crd ctdc cpd ctd cpd crct csctd ctbacvbab cjbdbkclb ctcscvct cqcpd ctcs ctcrcwd cxd ctd ctbacvbab cjbdbfclb cccwct crd ctcrd cxd cqctd dbctctd cpd cxd cscxcrcpd ctd cpd cxd cwcxd cqctd dbctctd cwctcxd crcpd cxd byd ctcpcrcw crd ctcrd cxd bnda cwctd cxd csctcud cpd cxd crd cud crd cxd cxcy bnd ctcpd cxd cvcwd dbdbctd cwct crcpd cxd cuda cpd csd cuda cpcvd ctctdbcxd cwd cwctd cqcyctcrd csctd byd cxd cpd crctb cxd cwctd ctd csctd cxd cbctcrd cxd bibabdd cwctcrd ctcrd cxd ctd cud crctd cwcpd cwctcqd csddd cpd cucpd ctd cqctcpd cpd cvctcscxd cpcwd cpd cxczct crd accvd cpd cxd btcrd accvd cpd cxd bpb bnbmbmbmbnd ctcrcxacctd cpd crcpd cxd cud ctcpcrcwd cud cwctd cpd bece dbcxd cwd ctd ctcrd cwctcxd cpcvctba cccwctcvd cpd cxd acd csd cwctcqctd crcwcrd accvd cpd cxd cpd ctcpb ctcs cqdd cwct cpd crcw crd cud cwct cxd cscxdacxcsd cpd cpd cpd cqdd cwct cpcxd dbcxd crd cud cwct crd ctcrd ctcs cpcxd cpd byd dbcxd cvcjbkclb dbctctdcd ctd cwcxd cqctd cpd crcwcpd bpcpd cvd cxd bnda bebx cxcy bnd bece bnd bdb cccwctcud cud cwcxd cxd cxd cxdecpd cxd cqd ctd cxd cxd ctcvctd ctd cpd cpd cxd cpd ctcpd cxd cqctd cqd ctd cxd crd ctd dacxd cxd crcw cpd btc ctd cxd cpd cxd cpd czd cacpd csd bycxctd csd cabyd cpd cxd cxdecpd cxd csddd cpd cxcr crd csctd cpczctd cfcwcxd cwct cud cwct cxd cxd cxdecpd cxd cqd ctd cxd cwcpd ctcsdbcxd cwd cwctd ctd cwctd cqd ctd cwctd crb ctd cud cwctcvd cpd cwcpd csd cpcrctd cud cxcqd ctcrd accvd cpd cxd cscxabctd cqd cpd cxcpd ddba cccwcxd crcwcpd cvctd cwct crd cpd cxd cpd cpd ctd cud cwctd cqd ctd cxd cvctd ctd cpd cud cwct cxd cxd cxdecpd cxd cxd bdb cpczctd ctdcd ctd cxcpd cxd ctb dbcwctd cxd cwct cqctd cscxd crd ctd dacpd ctd cud ctcpcrcw cpd cxd cwct cqctd cudactd cxcrctd cxd cwctcvd cpd cwba dbctdactd dbcwctd cwctcvd cpd bzbpb cebnbxb cwcpd cpd ctd cxcrd ctcscud cwctd cqd ctd crcpd cqct dactcs crcxctd ddba byd cxd cpd crctb dbcxd acd csctd cpczctd cwctcvd cpd cwcxd cxd ddcpcrcwcpcxd dbcwcxcrcwctd cpcqd ctd cpcsddb cpd cxcrd cvd cpd cxd cvd cxd cwcpd cpczctd cxd cjbdclb ctd dactd dbcxd cwd cpczctd cwctd cxd cxd cxdecpd cxd cxd csd dactd cpd cpd cqctd cud crcpd cxd cud ctcpcrcwdactd ctdcb ctbacvbab cwct crd ctd crcpd cxd cwct ctcxcvcwcqd cwct cxd cpcvctcvd cxcsb cccwcxd cxd cxd cxdecpd cxd cxd cwctd cxd ctd cpd ctcsd cxd cwct crcwcpd cvctcxd ctd ctd cvddcxd cpd cccwct czctdd cpd crcxctd cxd cxd cwcpd cwctd cqctd cud crcpd cxd cqctd cpd cpd cwctcsddd cpd cxcrd cvd cpd cxd cvd cxd cxd cpcsd cpd cxcrcxd btd cwctd crctd crcxctd cpd cvd cxd cwd cwcpd cqctctd cxd ctb cxcrd cxd cvcs cxcy cpd cxcrd cpd cud cccwcxd cpd cpcrcw cwcpd cqctctd cpd cxcrd cpd ddcud cxd cud cxd ctd ctcrctd dbd czd cabyd cjbhb bdbgclb cpd cvd cxd cwd dbctd ctcrd cpcxd cqd cwctd crd ctd cud cwctcvd cpd cwcpd csd cwctcud cucs cxcy byd cwctd cpd crcwcxd cvd cqd ctd cwcpd dbctcrd cxcsctd cwctd ctb cwct cvd cpd crd crcpd cxd cxd crcxd cqct cpd cqcxd cpd ddba dbb ctdactd cpd cscxd crd ctcs cxd cwct cxd csd crd cxd cpd cqcyctcrd crcpd cpd cpd ddcqctd ctd ctd ctd ctcsd cxd cvd ctctd crd ctd budd ctd cxcrd cxd cwct cvd cpd cwd ctctd cxd cxd cpd czcxd csddb cpd cxcrd cvd cpd cxd cvcrcpd cqctcpd cxctcsd ctctd cpd cxd csd cud crcwcpcxd cpczcxd cwct cxd cxd cxdecpd cxd cqd ctd ddd cxcpd cpd cwctd cwcpd ctdcd ctd cxcpd cxd ctba cccwct ctcrcxd ctcrcwb cxd ctcxd csctd crd cxcqctcscxd cbctcrd cxd bgba dbctdactd cwcxd cpd cvd cxd cwd cxd cpcrd cxcrcpd cqctcrcpd ctd cwctd cqctd cud cxcqd ctd crcpd cxd cud ctcpcrcwd cpd cxd cvctd ctd cpd ddd cxd ctd cpd cvctba cfcwctd ctcpd crcwcxd cvcud cwctcqctd cxcqd ctd cpd crcwd cucpd cxcrd cxcpd crd cpd cxd cpcvctb cwctd cxd cpd cpd dbcpddd cxd cxd cwcxd crcpd cxd cpcrctba bxdactd cxcu cwctd crcpd cxd cpd cpd ctd ctd cpd crd cpd ctd cpd ctcs cpdd dbcxd bhbc dacpd ctd ctcpcrcw cud dcb cpd cpd cxd ddb cpd cpd cxd cpd cxd cpd crcpd cxd cpd ctcpcsddd dactd cxdc cxd cxd cccwd cpcxcvcwd cud dbcpd cpd cxcrcpd cxd csddd cpd cxcr cvd cpd cxd ctctd cxd cpcrd cxcrcpd cfctcxd dactd cxcvcpd ctcpd ctd cxcrd cxd cud cwctd cpcxd dbcxd ctcrd cud crb cxd cxcy cwcpd ddcxctd csd cxd cxd cxdecpd cxd cpd cvd cxd cwd dbcwcxcrcw cxd cpd cwctd cwcpd cxd ctba cccwcxd cpczctd cxd cxd ctd cpcrd cxcrcpd acd csd cwct cvd cqcpd cxd cpd cpd crcw cpd cxcrd cxcpd crd ctd cpd cxd cpcvctb cwctcscxd crd ctd cxdecpb cxd cud cwctd cxcqd ctd crcpd cxd cxd cxdactd ddd cwctd cpcxd dbcxd crd cud crd cxd ctcpd ctd cwctcsctcvd ctctd dbcwcxcrcwd cwctd csctd cxd csctcud ctcsb cxd crd ctcpd cxd cpd crd ctcrd ctcs cpd cpd dactcs cpdbcpddcud cwctcxd cxcsctcpd ctd cpd cxdactd crcpd cxd cfctd 
ctd cxcrd cxcy cwctcud dbcxd cvcud cxcy bnd bpczcc cxcy cycx beb dbcwctd cza czcxd ctcrcpd cwcpd cqctddd cwct ctd cxctd cxcsctd cxd ddb ddd ctd cpd cxcpd cvd cxd ctd cpd cxd ddb cpd cscc cxcy bncc cycx cpd ctcxd dactd cxcqd ctcud crd cxd cfctcud cwctd ctd cxd ctd cwcpd cxd cqct cxcqd ctd cscxd crd ctd cxdectcc cycx cxd cvd cxcsba cxd cxdactd ddb cwct csctcud cpd cxd crd cxd ctd cxcrd ctcs cqctcpcscxd cpd crctcqctd dbctctd ctd cpd cpd ctd ctd cxdectcsd crcpd cxd dactcrb cccwct cud crd cxd cxcy cpd cycx cvctd cwctd crcpd cwct cxcsctcpd ctd cpd cxdactcrd accvd cpd cxd cud cwctd cpd cpd csda cccwcpd cxd cxcud cpd csd ctcrcxcuddcxcsctcpd crcpd cxd cuda cpd csda dbcxd cwd ctb ctcrd ctcpd cwctd cwctd cxcy bpcc cycx cccwctd cwctd ctcpd ctd cwct csctcvd ctctd csctdacxcpd cxd cud cwcxd cxcsctcpd ctd cpd cxdactcrd accvd cpd cxd cbctcrd cxd bibabddbctd cwd dbcwd dbcs cxcy crcpd cqctcwcpdact cxczct adctdccxcqd ctdad cyd cxd cqctd dbctctd dbd cpd cpd cxd cbctcrd cxd bibabe dbct cwd cwd cxd crcpd cqctcwcpdact cxczctcpadctdccxcqd ctd cxd cpd cxcrcyd cxd bgba crcxctd cxd cxd cxdecpd cxd cwcxd ctcrd cxd dbctd cwd dbcwd dbd ctcsddd cpd cxcrd cvd cpd cxd cvd acd csd cwctcrd accvd cpd cxd bpb bnbmbmbmbnd cxd cxb cxdecxd cvctd cpd cxd bdb dbcwctd cwctcvd cpd cwbzcxd cpd ctctba cccwcxd cxd cpd cxd cpd crctd cucpczd dbd crd cpd cucsddd cpd cxcrd cvd cpd cxd ctcrcwd cxd ctd cpd cscxd cpcvctd ctd cpd cxdecpd cxd cud cwctd ctcrcwd cxd ctcud crcwcpcxd cwcpd cxd ctcs cxd dacxd cpczctd cqd ctd ctbacvbab cjbdclb cccwct crd cpd cxd cxd dad dactd cud crd cxd ctcpcrcw dbcwcxcrcw ctcrcxacctd cwct cqctd crcpd cxd cpd dbcxd ctd ctcrd cwctd cxcqd ctd crcpd cxd cucpd cwctd cpd bzcxdactd cpd ctctbzbpb cebnbxb ctd bece cqctcpd cpd cqcxd cpd cxd crcwd ctd dactd ctdcba byd cwcxd ctcpcrcwdactd ctdcda bece cwcpd csctd cwcs dbcwcxcrcw cxd cwct cqctd ctcscvctd cqctd dbctctd cxd cpd csda cpd csd cwctcsctd cwd cuda cxd bcb cccwctcrcwcxd csd ctd dactd ctdc cpd cwd ctcxcvcwcqd cxd dactd cxcrctd cxcu cpd ddb csctd cwcs bdbabxdactd dddactd ctdcda cwctd cwcpd cwctd cwcpd cxd ctd cpd ctd dbcwcxcrcwcxd cwctd ctcxcvcwcqd cxd cvdactd ctdcd cucsctd bdba bycxd dbctd ctd cwcpd cud cpd dddactd ctdcda dbcxd cwd crcwcxd csd ctd cxbactbab cpd ddd ctcpcud cud cwctd ctctb cwct cqctd crcpd cxd cud cwcpd dactd ctdc crcpd cqctcrd ctcs cpd cud crd cxd cwct crcpd cxd cyd cxd cpd ctd cccwct ctcscvct cxd crcxcsctd cxd bnda cpd cwd cwct crd cxcqd cxd cwct ctd ctd cvddcxd bdb cxd cxcy bnd bnd ctd crctd cwctd cpd cxd cud cwctcqctd crcpd cxd cuda cvcxdactd crcpd cxd cuda cxd bpd cxd cxcy bnd bnd bfb cpd cwct cqctd crcpd cxd cuda cpd cud crd cxd cud crcpd cqct cqd cpcxd ctcs cqdd ctd cpcrcxd cwct cxd cxd cwct ctd cpd cxd cpcqd dact dbcxd cwcpd cvd cxd byd cpd dddactd ctdcda cwctd cwcpd cwctd cpd ctd cwcpd cwct cud crd cxd cxd czd dbd cud ctcpcrcw crcwcxd cccwcpd cxd cwct cpd cxd ddd cud cwctcqctd crcpd cxd ctcpcrcwcrcwcxd cxd czd dbd dbcxd ctd ctcrd cwctd crcpd cxd cuda cccwctd cwct cpd cxd ddd cud cwctcqctd crcpd cxd cuda cvcxdactd cwctd crcpd cxd cxd cpd ctd cxd bpd cxd cxcy bnd bnd bebv bgb btcvcpcxd cwctcqctd crcpd cxd cuda cpd cpcud crd cxd cud crcpd cqct cqd cpcxd ctcs cqdd ctd cpcrcxd cwct cxd cxd cwct ctd cpd cxd cpcqd dact dbcxd cpd cvd cxd cwcpd cwcxd ctd cpd cxd cqd ctd bfb cqctcrcpd cud ctcpcu csct cwct dactd cxd crcwcxd csd ctd cxd cxd ddctd ddba bycxd cpd ddb cud cwctd cxcubu cxd czd dbd cud ctcpcrcw crcwcxd csda bebv cwctd cwctcqctd crcpd cxd cud cwctd cxd bpcpd cvd cxd bnd bebv cccwcpd cxd cwct cxd cxd cxdecpd cxd cxd bdb crcpd cqct ctdcd ctd ctcs ctcrd cxdactd cxd ctd cwct cud crd cxd cud ctcpcrcwdactd ctdcda bece cwctd cwcpd cwctd cccwctd ctcrd cxdact ctd cpd cxd cxd ctcrcxcudd cpd cpd cvd cxd cwd ctd cscqctd cwctd cpdccxd csctd cwd csctcxd cwctd ctctba byd ctcpcrcwd csctda dbcxd cwcsctd cwcsb crd ctbu dbcwctd cxd cwctd cpd ctd cuda cccwctd ctcpd ctcpd ctcpcud csctd crd ctcpd crcpd cqctcrd ctcscpd cxd bfb ctdcd cud ctcpcrcwd csct dbcxd cwcsctd cwcsa bdcrd ctbu dbcwctd ctcpcvcpcxd cxd cwctd cpd ctd cuda bvd ctcpd ddbu cwcpd cqctctd crd ctcscud ctdactd ddcrcwcxd csda cuda cqctcrcpd ctd cwctcrcwcxd csd ctd cpd ctd cucsctd csba cccwd crcpd cqct crd ctcs cpd cxd bgb bvd cxd cxd cwcxd cpd ctd csctcrd ctcpd cxd cvd cwctcsctd cwd cxd ctcpcrcwcxd cvd cwct cpd csctd cwdectd buctd cxcsctd crd cxd cvctcpcrcwbu dbctcpd crd ctbu dbcwcxcrcwcxd cscxcrcpd ctd cwctcqctd crcpd cxd cuda cpd cud crd cxd cxd cpd ctd cpd ctd crcpd cxd cqd cpcxd ctcs cqdd ctd cpcrcxd cwct cxd cxd dbcxd cpd cvd cxd btd cwcxd cxd dbct crd cwct cxd cpd crcpd cxd cwct cccwct cxd cpd crcpd cxd cpd cwct cpd crcpd cqct crd ctcs cqdd cpcrcxd cvcud cwct ctcpcrcw ctcpcuba cccwcpd cxd dbctczd dbd cwctd cxd cpd crcpd cxd cuda cvcxdactd cwctd crcpd cxd cucxd cpd ctd cpd cwct cxd cpd crcpd cxd ctcpcrcwd cpd ctd cxd dbczd dbd cpd cxd cvcud cwctd cccwctd dactd cpd cxd cvd cxd ctd cud cwcxd cpd cvd cxd cwd cxd dbcwctd ctc cxd cwct cxd ctd ctd cxd ctcsd crd ctcpcrcwbu cpd csbu cfct dbd cwd dbcwd dbd crd ctbu cpd csbu cxd ddcxctd cscxd cvcpd cpd cvd cxd cwd dactd cpd bhba bzctd ctd cpd cxdectcs bwcxd cpd crct ccd cpd cud ccd cpcscxd cxd cpd cscxd cpd crctd cpd cud cpd ctcsctacd ctcscud ctd cxd cpcvd cxcsba bzcxdactd cpd cxd ctd buaibzb cwctcscxd cpd crct cpd cud ctcrcxacctd cud ctcpcrcw crcpd cxd cxd cwct cvd cxcsb cwct cscxd cpd crctd cwctcrd ctd cxd cxd cwctd ctd deb bpd cxd dbbebu czdea dbcz csctd crd ctd cwctcscxd cpd crctd cpd cud cxd cxd crd ddctdcd ctd ctcscpd deb bpd cxd 
dbbebz czdea dbczb dbb bhb dbcwctd dbb cxd cpd cxd cscxcrcpd cud crd cxd cud ctd cqctd cwcxd cxd cwctd ctd bub cwcpd cwcpd cwctdacpd ctbcdbcwctd dbbebucpd cwctd dbcxd ctba cccwct cpd cvd cxd cwd ctd ctd ctcs cxd cjbfb bgcl crd bhb crcxctd ddb cxd dbd czd cxcu dbct ctd cpcrct cwct cxd cscxb crcpd cud crd cxd cqdd cpd cpd cqcxd cpd cud crd cxd cwct cvd cxcsba cccwcxd cvcvctd cvctd ctd cpd cxdecpd cxd cscxd cpd crct cpd cud cud crd cxd cpd cud dbd ctd cwct cscxd cpd crctd cpd cud cpcud crd cxd csctacd ctcsd dactd cpcvd cxcs cqct deb bpd cxd dbbebz czdea dbczb cub dbb bib cxd cxdactd ddb cud ctcpcrcwcvd cxcsd crcpd cxd deb cwcxd cud crd cxd acd csd crcpd cxd cwcpd cxd crd cpd cud dbcwcxcrcw cub dbb cxd cpd cwcpd cscxabctd ctd crctd cqctd dbctctd cwct dacpd cpd dbd crcpd cxd cpd ctcqd csctcscqddd cwctcscxd cpd crctcqctd dbctctd cwctd crcpd cxd ctcvcpd csd ctd cucwd dbd cxcrczd ddd cwctcud crd cxd crcwcpd cvctd cpd cxcrd cpd cxcud cwctd ctcxd cpd crcpd cxd dbcwctd ctcub deb cwcpd cpd dacpd ctb dbcxd cwcpdact cpd dacpd cpd cpd ctcpd cqddd crcpd cxd bzcxdactd cwct ctd cxcrd ctcs cud cxcy cxd ctd cpd cxd beb ctd cpd cxd bgb crcpd cqctd ctdbd cxd ctd cpd cpcvctd ctd cpd cxdectcscscxd cpd crct cpd cud bpbw cxcy dbcwctd cub dbb bpd bncc cycx dbb cycx dbb cpd cwct cvd cxcs ctcrcxacctd cscxd crd ctd ctd cycx cwcpd cpd crd cxcsctd ctcs csd cxd cwct cxd cxd cxdecpd cxd cwcxd cxd ctcrcxacctd cpcscxd crd ctd ctd ctd cud crcpd cxd cccwct cpd cvd cxd cwd cxd cjbfb bgcl cud crd cxd bhb cxd bwb cxd ctcud crcpd cxd cpbwb cscxd ctd cxd cpd cvd cxcsba btd cyd ctcsb cwcxd cpd cpd cvd cxd cwd dbd czd cud bib cvctd ctd cpd cwct cscxd ctd cxd cxd cpd acdcctcs cqctd cwcxd cpd ctd cwctcvd cxcscxd cwctcud cscxd ctd cxd cpd cpcrctd cub dcb cpd cpd cxd ddb cpd cpd cxd cpd cxd aib cpd crcpd ctd csctd crd ctb bib csctd cwctc cxd cwcxd cud cscxd ctd cxd cpd cpd cpd ctd ctd cpcrctb cpd cpd cpdd bwcjdcbnddbnaibnd cxd cxd cxd cxcpd cxdectcsd cwctdacpd ctd cud cwctcud crd cxd cub dbb cccwctacd cpd dactd cwcxd cpd cpddcvd ctd cud cwctd cxd cxd cjdcbnddbnaibnd crcpd cxd cxd csctd cucxd crd ctcpd cxd cvdcb cwctd ddb cwctd aib cwctd crd cxd bwcjdcbnddbnaibnd clbpd cxd bwcjdcbnddbnaibnd clbn bwcjdca bdbnddbnaibnd clb bwcjdcbndda bdbnaibnd clb bwcjdcbnddbnaia bdbnd clb bwcjdcbnddbnaibnd bdclb cccwcxd crd cpd cxd cxd csd ckcxd cpcrctayb crcwcpd cvcxd dacpd ctd cxd cwct cpd cpdd cpd cxd cvd ctd cwcpd cwct dacpd cxd cscxcrcpd ctd cwctd ctcxcvcwcqd cxd cwctdcb cscxd ctd cxd cud cwctcpd cpddb cpd csd cud cwba cccwctcrd cpd bncz bncz cpd cscz cpcrcrd cud cscxabctd ctd crcpd ctd cud cwctcpdcctd cccwctd ctcrd csd cpd dactd cwct cpd cpdd cvd ctd cud cwct cpdccxd cjdcbnddbnaibnd crcpd cxd cxd csctd cucsctcrd ctcpd cxd cvdcb cwctd ddb cwctd aib cwctd crd cxd bwcjdcbnddbnaibnd clbpd cxd bwcjdcbnddbnaibnd clbn bwcjdcb bdbnddbnaibnd clb bwcjdcbnddb bdbnaibnd clb bwcjdcbnddbnaib bdbnd clb bwcjdcbnddbnaibnd bdclb cccwcxd cpd cvd cxd cwd csd ctd crd cxcsctd cwctcucpcrd cwcpd aicxd ctb cxd cscxcrba cbd ctcrcxcpd cwcpd csd cxd cvd cud cwctcqd cscpd ddcrcpd ctd cpd csd dbd cpcscscxd cxd cpd cpd ctd crcpd cqctd ctd cud ctcsd cwcpd csd ctd cwcxd ctd cxb cscxcrcxd ddba bvd cxd cvd cwctcvctd ctd cpd cxdectcscscxd cpd crctd cpd cud csctd cpd ddc crcpd cqctcpd dccxd cpd ctcsd cxd cvd cxd cxd cpd crctcsd ctd cccwct ctd cxd cpd dccxd cpd cxd cwcpd acdcctcs ctd crctd cpcvctctd ctct cjbfb bgclb cccwcxd dactd cwct cqd ctd cucrd cxd cvbu cxd cxd ctba cccwctcpd cvd cxd cwd crcpd cqct ctcpd cxd cscxacctcs czctctd cpcrcz cwct crcpd cxd cwcpd cvctd cpcvcpd ctcsd ctcpcrcwd cxd cxd cxd cwctcvd cxcsb dbcwcxcrcwcpd dbd crd ctbu cpd dbctcrd ctbu biba cqcyctcrd csctd cccwct ctdcd ctd cxd ctd ctd ctcs cxd cwcxd cpd ctd cxd csctd ctd cpd crcpd cwd dbd cxd bycxcvd ctd cpd csbhd ctd ctcrd cxdactd ddba cccwctd cpd cud cwctd ctd csctd cpd ctcyd ctcrd cpd cvd ctd dbcxd cwacdcctcscpd ctcrd cpd cxd cpd cpdactd cpcvctcrd cpd cpcrd dacpd cxcpd crctba dbctdactd cwcxd cvcpcqd cwctd cpd crcwcxd cpd cvd cxd cwd ctd cxd ctd crcwd cxd ctd cpd csctd cccwctd cpd crcpd cqct cpd ddd cwcxd cud dbcwcxcrcw cpd crcw crd crcpd cqct crd ctcsct crcxctd ddcpd ctcpcrcwd cxcqd ctd crcpd cxd cxd cwctcxd cpcvct ctbacvbab crd cxcrcpd ctcs cpd ctcpd cpd crct csctd crd ctcscvctb cqcpd ctcsd ctd cpd ctd ctd crb cccwct crd csctd cud cwct cpd cwct ctd crd cpcrctcsctacd ctcs cxd cjbebcclba cccwct cpdactd cpcvctcrd cuctcpcrcw cpd dbcpd ctd cxd cpd ctcscud ctctdccpd ctcpd csd cwct crd dacpd cxb cpd crct cpd cxdc dbcpd crcwd ctd cqdd cwcpd crd ctd dbct cscxcpcvd cpd cpd cxdc cxd ctcpcs cud crd dacpd cxcpd crct cpd cxdcb cccwctd crcpd cxd cuctcpcrcwd cpd cxd cwctcxd cpcvctcxd csctacd ctcscqddcp bgb ctb dcbnddbnaibnd ctcrcxcuddcxd cvd cwctd cxd cxd cud cwctcrctd ctd cud cpd cwctd cxctd cpd cxd cpd cwct cwctcxcvcwd cud cwct ctcrd cpd cvd ctba cccwctd cpd crcwcrd cpd ctcrd ctcsd cxd cvcpcrd dad cxd czctd ctd crd ctcsd cucpckd cpd crcwayd ctcrd cpd cvd ctctd cqctcscsctcscxd cpd cvctd ckd cpd crcwayd ctcrd cpd cvd ctb cpd cxd cpd ctcscxd bycxcvd ctbdba ccd crd ctcpd cpd crcwcrd cud cpd cpd cpd cpd ddcvcxdactd crcpb cxd dbctacd cvctd ctd cpd ctcpd ctdbcxd cpcvctd cwcpd ctcpd ctd cwd crcwctcpcrcwd cxdcctd cxd cwctcxd cxd cpcvctd cpd crcwctd cwctcrd cud cwctd cpd cxd cvcpd crcpd ctcsd cpcsd cpd cxcrctd cud crd cxd cccwcpd cxd cvctd ctd cpd ctc cqddbm dcbnddb bpd cxd dcbnddb amb dcbnddb amb bnd dbcwctd ctc dcbnddb cxd cwctcrd cud cxdcctd dcbnddb cxd cwctcxd cxd cpcvctb amcpd csa cpd ctd cwctcpdactd cpcvctcrd cpd cscrd dacpd cxcpd crct cucpd cpd cpd csd cxd cpd ctd cqd csd cwctctd ccd crcpd cxd cwct 
ctd cud crd cxd cpd dbd cud cpd cxcpd crd cxd cpd cfct cwctd crd dad dactc dbcxd cwct ckd cpd crcwaybbckd cpd crcwayczctd ctd cpd ctcpcrcwd cxcqd ctd cxctd cpd cxd cpd csd crcpd ctd cvctd ctd cpd ctcpd cpd crcwcrd cud cwctd cpd cpd ctdactd ddd crcpd cxd cccwctcrd ctcrd cxd cqctd dbctctd cpd cqctcwcpdactcscxabctd ctd ddcud cwctd ctd cpd cscrcpd csctd cwctd ctd csctd cqd csdd cpd cpd ctcrd ctcrd ctcscqddadctdccxcqd ctd ctdad ctcyd cxd dbcwcxd ctcxd cwct crcpd csctd cwct dbcwctctd cpd crd ctcrd ctcs cwct cqd csdd cqddadctdccxcqd ctd cxd cpd cxcrcyd cxd cccwctd ctcrd ctcrd cxd cpd ctcsctb crd cxcqctcscxd csctd cpcxd cqctd dbba bibabdba ctd csctd byd cwctd ctd csctd cwctcsctcud cpd cxd crd csctd adctdcb cxcqd ctdad cyd cxd cqctd dbctctd dbd crd ctcrd ctcs cpd figure convolution kernel compute match cost rectangular part figure parts person model coordinate system ideal configuration pair cpcxd cucrd ctcrd ctcsd cpd cxd cxd cpd ctcscxd bycxcvd ctbeba cccwct crcpd cxd cud cwctcyd cxd cxd ctcrcxacctcscqddd dbd cxd cxcy bndd cxcy cpd csb cycx bndd cycx ctcxd cwctcrd cscxd cpd ctcud cpd ctd cuctcpcrcwd cpd cpd cxd cscxcrcpd ctcscqddcrcxd crd ctd cxd bycxcvd ctbecpba cpd cxcsctcpd crd accvd cpd cxd cwctd ctd cxd crd cxd crcxcsctb cpd cxd cpd ctcscxd bycxcvd ctbecqba cccwctcxcsctcpd ctd cpd cxdactd cxctd cpd cxd cxd cvcxdactd cqddai cxcy cwctcpd cvd cqctd dbctctd cwctd cpcxd cpdcctd cxd cwctckcwctcxcvcwd aycscxd ctcrd cxd cccwct cxcsctcpd ctd cpd cxdactd cxdectcxd cvcxdactd cqddd cxcy cwct cpd cxd cwct dbd cwctcxcvcwd bzcxdactd cwctd cqd ctd dactcsd crcpd cxd bpb bnd bndc bndd cpd bpb bnd bndc bndd dbd cpd cwct csctcud cpd cxd crd ctcpd ctd cwct csctdacxcpd cxd cqctd dbctctd cwct cxcsctcpd dacpd ctd cpd cwctd ctd cqd ctd dactcsdacpd ctd bxcpcrcwcyd cxd ctcrcxacctd dbctcxcvcwd cxcy cxcy cxcy cxcy cud cwctcrd cpd crcxcpd ctcsdbcxd cwcsctdacxcpd cxd cxd ctcpcrcw cwct ctd cpd cxdact cxctd cpd cxd cxdect cpd cyd cxd cpd cxcvd ctd cccwd dbct csctacd cwct cpcxd dbcxd csctcud cpd cxd crd cud cwctd ctd csctd cqctb cxcy bnd cxcy cyb cxcy cxcy cyb cvd cvd cvd cxcy cxcy cydc cxcy cycx cxcy cydd cxcy cycx dbcwctd ctd cwctacd ctd cxd cwctcscxabctd ctd crctcqctd dbctctd cwctcxcsctcpd ctd cpd cxdactcpd cvd ctcpd csd cwctd cqd ctd dactcsd ctd cpd cxdactcpd cvd ctb cwctd ctcrb csd ctd cxd cwctcscxabctd ctd crctcqctd dbctctd cwctcxcsctcpd ctd cpd cxdactd cxdect figure parts car model distance joints measured horizontal vertical directions respect orientation cpd csd cwctd cqd ctd dactcsd ctd cpd cxdactd cxdectb cxd cvd cvcud cxdectd cpd cxd cpd csd cwctd cwcxd cscpd cscud cwd ctd cpd ctd cwctcwd cxded cpd cpd dactd cxcrcpd cscxd cpd crctd cqctd dbctctd cwctd cqd ctd dactcscyd cxd cxd cxd cxd cwctcxd cpcvctb cxcy bndd cxcy cud cpd csb cycx bndd cycx cud ctdcd ctd cxd ctd dbctd ctd cxcy bndb cxcy bndb cxcy cqctd cpd cvctdacpd ctd cpd cxcy cqct cpd dacpd ctba cccwd cwct csctcud cpd cxd crd cpddd ctd cpd cxdactd cpd cpd cwct cpd cpd cpcqd cwctcyd cxd cpd cscxd cpd cvctcxcud cwctd cpd cpd ctd cpd cxcvd ctcscpd cwct cyd cxd cwcpdactcscxabctd ctd ctd cpd cxdactd cxdectd cccwctcsctcud cpd cxd crd cqctctdcd ctd ctcscxd cwctcud ctd cpd cxd beb cpd cscxd cpd crct cqctd dbctctd cxcy cpd cycx bzcxdactd cwct crcpd cxd bnd bndc bndd dbct csctb acd ctcc cxcy bpb bnd bndc bndd dbcwctd cxcy cxcy bpbeb cxcy cvd cvd cxcy bpbeb bndd cxcy bndd cxcy bndd cxcy cxcy cxd cscxcpcvd cpd dbctcxcvcwd cpd cxdc dbcxd ctd cxctd cxcy cpd cxcy cpd csca cxd cpd cpd cxdcd cwcpd ctd cud cpd cpd cxd cuai cpcscxcpd cpcqd cwctd cxcvcxd cccwctd ctdbd cxd cxd crd cscxd cpd ctd bndd cxd cscxcrcpd cwct cxd cxd cwct cyd cxd cxd cwct cxd cpcvct crcpd ctcs cpcrcrd cscxd cwct dbctcxcvcwd dbct cwcpd cwctc cscxd cpd crctcqctd dbctctd cxcy cpd cscc cycx cxd ctd cpd cwctcsctcud cpd cxd crd cxcy bnd cyd cvcxdactd cpcqd dactb ddcxctd csb cxd cvcpd ctdcd ctd cxd cpd cxd beb bibabeba bvcpd csctd byd cwctcrcpd csctd cwctcsctcud cpd cxd crd csctd adctdccxcqd cxd cpd cxcr cyd cxd cqctd dbctctd cwct crcpd dbcwctctd cpd cwct crcpd cqd csddba cccwctdbcwctctd cwcpdactcpd cxcsctcpd cxd cxd dbcxd ctd ctcrd cwctcrcpd cqd csddcpd cscrcpd dactcpd cvd cwctcqd cud cwct crcpd dbcxd cwcpcrd cxd cpd cwctcscxd cpd crctcud cwctcxd cxcsctcpd cxd cxd cxczctcxd cwct ctd csctd cwct crcpd cxd cpcyd cxd cxd ctcrcxacctcs cqddd dbd cxd cxcy bndd cxcy cpd cycx bndd cycx ctcxd cwctcrd cscxd cpd ctcud cpd ctd cuctcpcrcwd cpd bac cpd cxcsctcpd crd accvb cpd cxd cwctd cxd crd cxd crcxcsctba cccwct cxcsctcpd ctd cpd cxdact cxdect cxd cvcxdactd cqdd cxcy cwct cpd cxd cwct dbd cwctcxcvcwd cwct cyd cxd ctcscxd cwctcrcpd csctd cwctd cpd cpd dbcpddd cwcpdactd cwct cpd ctd cxctd cpd cxd bxcpcrcwcyd cxd ctcrcxacctd dbctcxcvcwd cxcy cxcy cxcy cud cwct crd cpd crcxcpd ctcs dbcxd csctdacxcpd cxd cxd cwct ctd cpd cxdactd cxdectcpd cscyd cxd cpd cxcvd ctd cfctcsctacd ctd cwctd cpcxd dbcxd csctcud cpd cxd crd cud cwctcrcpd csctd cqctb cxcy bnd cyb cxcy cyb cvd cvd cvd cxcy cxcy cydc cxcy cycx cxcy cydd cxcy cycx dbcwctd ctd cwctacd ctd cxd ctd cwcpd cwct cxctd cpd cxd cuda cpd csda cxd cwct cpd ctb cwct ctcrd ctd cxd cwct cscxabctd ctd crct cqctd dbctctd cwctcxcsctcpd ctd cpd cxdactd cxdectcpd csd cwctd cqd ctd dactcsd ctd cpd cxdact cxdectb cxd cvd cvcud cxdectd cpd cxd cpd csd cwctd cwcxd cscpd cscud ctd cpd ctd cwctcwd cxded cpd cpd csdactd cxcrcpd cscxd cpd crctd cqctd dbctctd cwctcyd cxd cxd cxd cxd cwctcxd cpcvctb ctcpd ctcsdbcxd cwd ctd ctcrd cwctd cxctd cpd cxd cud cwctd cpd ctctbycxcvd ctbfb ctdcd ctd cxd ctd dbctd ctd cxcy bpbd cwctdbcwctctd cwctcrcpd crcpd ddd cxcsctcwd cxded cpd dddbcxd cwd ctd ctcrd cwct cxctd cpd cxd cwct cqd csddba cfct ctd cxcy cqct cpd cvct dacpd ctb cpczcxd cvcpd cvcrd ctcrd cxd cqctd dbctctd cxdectd cud cwctd cpd cpd csdb cxcy cqctcpd cpd ctd dacpd ctb 
cpd dbcxd cvd cwctdbcwctctd cxcsct cpd cwct cqd cwct crcpd cqd csdd dbcxd cwd cxd crd ctcpd cxd cwctcsctcud cpd cxd crd crcwba bzcxdactd cwct crcpd cxd bnd bndc bndd dbct csctacd cxcy bpb bnd bndc bndd dbcwctd cxcy cvd cvd cxcy bpbeb bndd cxcy bndd cxcy bndd cxcy cxcy cxd cscxcpcvd cpd dbctcxcvcwd cpd cxdc dbcxd ctd cxctd cxcy cpd cxcy cpd csca cxd cpd cpd cxdcd cwcpd ctd cud cpd cpd cxd cpcscxcpd cpcqd cwctd cxcvcxd cccwct ctdbd cxd cxd crd cscxd cpd ctd bndd cxd cscxcrcpd cwct cxd cxd cwct cyd cxd cxd cwct cxd cpcvct dbcxd ctd ctcrd crd cscxd cpd cud cpd cwcpd cxd cpd ctcsd cqctcxd cwctd cpd ctd cxctd cpd cxd cpd cwctd cpd dbdbct cwcpd cwct cscxd cpd crct cqctd dbctctd cxcy cpd cycx cxd ctd cpd cwct csctcud cpd cxd crd cxcy bnd cyd cvcxdactd cpcqd dactb ddcxctd cscxd cvcpd ctdcd ctd cxd cpd cxd beb bjba ctd ctd cpd cxd cpd bxdcd ctd cxb ctd cfctcscxd crd ctd cxdectcsd cwctd cpcrctd cud cxcqd ctd cpd crcpd cxd cxd bhbccqd crczctd cud ctcpcrcwd cud cwctdccpd csddd cxd cxd bdbccqd crczctd cud cxdect cpd bebc cqd crczctd cud cxctd cpd cxd cdd cxd cwctd cpd cpd ctd ctd ddd ctd acd csd cwct cqctd crd accvd cpd cxd cpd csctd dbcxd cwacdactd ctd cpd cxd cpbfbebca bebgbcd cxdcctd cxd cpcvct cxd cpcqd bdbcd ctcrd csd cpbgbhbcc dec ctd cxd bycxcvd ctbgd cwd dbd ctcrd cvd cxd cxd ctd cxd cvd cwctd ctd csctd cwcpd dbct crcpd ctcrd cvd cxdect cwct ctd csctd cqd cpcs cpd cvct cxcvcwd cxd crd cscxd cxd cpd dacpd cxctcs ctd dbcxd cwcpd cxd ctcvctd ctd cxcrd csctd cccwcxd cxd cpd ctd cwctcpcqcxd cxd ctcrd cvd cxdect cpd cxcrd cpd ctcs cqcyctcrd bycxcvd cwd dbd ctcrd cvd cxd cxd ctd cxd cvd cwctcrcpd csctd ctd cwcpd dbct crcpd ctcrd cvd cxdectcucpcxd ddcscxabctd ctd czcxd csd cucrcpd csctd cpdbcxcsct dacpd cxctd ctd dbcxd cxd cvd csctd cccwcxd cxd cpd ctd cwctcpcqcxd cxd ddd cud ctd cwd ctcrd cvd cxdectcvctd ctd cxcrd cqcyctcrd crcwcpd cpckd ctcscrcpd ayba bkba bucpddctd cxcpd byd cpd cxd cwcxd ctcrd cxd dbctd ctd cwcpd cwctcqctd cpd crcwcpd ctdcd ctd ctcs cqddctd cpd cxd bdb crcpd cqctd ctcud cpd ctcscpd cwctd cpdccxd ctd cxd cxb btc ctd cxd cpd ctd cud cwctd csctd crd accvd cpd cxd cccwctc btc ctd cxd cpd ctcxd cwctcrd accvd cpd cxd dbcxd cpdccxb cqcpcqcxd cxd ddcvcxdactd cwctcxd cxd cpcvctbm bpcpd cvd cpdc cyc bucpddctd ctd cwctd cxd cxctd bpcpd cvd cpdc cyc bjb cccwct cxd crcpd ctd cxd cud cpd cxd cpcqd cwct cqcyctcrd cwcpd cxd czd dbd cqctcud ctd cqd ctd dacxd cvd cwctcxd cpcvctba cccwcxd cxd cxd cud cpd cxd cxd cvcxdactd cqddd cwctckd cxd cvaycrd ctcrd cxd cqctd dbctctd cpd cccwct cpd cvctd cwct csctcud cpd cxd crd cxd crd accvd cpd cxd cwct ctd cqcpcqd cwcxd crd accvd cpd cxd cwd cscqctba cfctcrcpd crcpd ctd cwcxd cxd cxd cvbm bnda bebx cxcy bnd bkb dbcwctd ctcs cxcy cxd cwctcsctcud cpd cxd crd cpd crcxcpd ctcsdbcxd cwctcscvct bnda cpd csc cxd cpd cpd cxdecpd cxd crd cpd ctd cwcpd cwcxd cxd cwct ddd cxcrcpd bzcxcqcqd cscxd cxcqd cxd ctcs cxd cpd czd cacpd csd bycxctd csctd cxd cpd cxd cqd ctd cccwctd cxczctd cxcwd cscud crd cxd cyc ctcpd ctd cwctd cqb cpcqcxd cxd ddd cud cqd ctd dacxd cvcxd cpcvctc cvcxdactd cpd cpd cxcrd cpd crd accvb cpd cxd cud cwctd csctd cxd cxdactd ddb cwctd cxczctd cxcwd csd cwd cqct cwcxcvcw dbcwctd cwct cpd ctd cpd crct cwct cpd cpcvd ctct dbcxd cwct cxd cpcvct cscpd cpd cwct cxd cxd cwctdd cpd cpcrctcsb cpd dbd cwctd dbcxd ctba bxdactd cwd cvcwd cwctd cpd cucpd csctd cpdd dactd cpd cxd cwct cxd cpcvctb dbct cpd dccxd cpd cwct cxczctd cxcwd cqddcpd cxd cvcxd cxd cxd cpd cwctd csd crd cud cpd crcw cpd cxd cxctd cud cxd cscxdacxcsd cpd cpd cyc cxbpbd bnd blb cccwct cud crd cxd bnd ctcpd ctd cwct cpd crcw cpd cxd cud cpd cpd crcpd cxd cxd cxd cpcvctc cccwcxd cud crd cxd csctd ctd csd figure recognition results person model top left image shows model revolute joints default configuration remaining images show examples globally matching configuration figure recognition results car model top left image shows model prismatic joints default configuration remaining images show globally matching configuration cwctd cpd cxcrd cpd csctd cxd cvd crcwctd ctd ctcscud cxd cscxdacxcsd cpd cpd cccwctd cpd cscpd cscpd cpcrcwd acd cscxd cvd cwctc btc ctd cxd cpd cxd bjb cxd cxd cxd cxdect cwct ctd ctd cvddcud crd cxd cqd cpcxd ctcs cqdd cpczcxd cvd cwctd ctcvcpd cxdactd cvcpd cxd cwd cbd cqd cxd cxd cvb bkb cpd csb blb cxd bjb dbctd cqd cpcxd bpcpd cvd cxd bnda bebx cxcy bnd bece bnd dbcwcxcrcw cxd ctdccpcrd cwct cpd cpd bdb cxcu dbct ctd cwct cpd crcw crd cqctd cwctd ctcvcpd cxdactd cvcpd cxd cwd cud cwctd cpd crcwd cpd cxd cxctd blba byd cfd cwcxd cpd ctd cwct cpd cxd cpd cqcyctcrd crd accvd cpd cxd cxd cqcpd ctcs ctd cwct ctd cpd cxdactd cxd cxd cxd cscxdacxcsd cpd cpd cxd cxd cxd crd cpd cxd cxd cud cpd cxd cpcqd cwctcpcqd ctd crcpd cxd cuctcpcrcwd cpd cxd cwctcud cpd ctb dbd czba cccwcxd cpd dbd cpd cxd ctcvd cpd ctcs cpd cpcrcw csctd cqcpd ctcs cpcrczcxd cpd ctcrd cvd cxd cxd cccwct ctcrd cvd cxd cxd cwct acd cxd cpcvct ctd ctd crct crcpd cqct csd cxd cxb cud cxd cpcqd crcpd cxd cqd ctd ctd cxd cpcvctd cxd cud cpd cxd cpcqd cwctd ctdacxd cpd crcwcrcpd cqctd ctcs cxd ctcpd cxcud cxd cpcqd ctd crcpd cxd cfct cpd cwcpdact ctdb ctd cwcpd cpd cwct csctcud cpb cxd crd cxcy cqctd cwctd cpd ctcscscxd cpd crctcqctd dbctctd cpd cud ctcsd crcpd cxd cccwcxd cqctd ctd csctd cwctcxcsctcpd cwcpd adctdcb cxcqd cyd cxd crcpd cqctckd ctcsay cqdd cpd cpd dbcxd cwd cvd ctcpd crd dbcwcxd cpd cvct csctcud cpd cxd cpd dactd ctdcd 
ctd cxdactba cccwctcpd cvd cxd cwd cqddc cpd decpd dacsctd crd cxcqctcscxd cjbdblclcrcpd cqctcrcwcpd cvctcsd crcxctd crd cpd cscxacctcs cvctd ctd cpd cxdectcscscxd cpd crctd cpd cud dbcxd cwd cwctd ctd cpcrctcscqddcxd cpd ctba cactcuctd ctd crctd cjbdcl btbabtd cxd cxb ccbacfctddd cwb cabac cpcxd bacdd cxd cvbwddd cpd cxcr cvd cpd cxd cvcud cbd dacxd cvcecpd cxcpd cxd cpd cqd ctd cxd cecxd cxd btc ced bdbeb blb cbctd ctd cqctd bdblblbcb cpcvctd bkbhbhb bkbibjba cjbecl btba buctcxd cvd cpd cfd cud btd cxcrd cpd ctcs cqcyctcrd cactcrd cvd cxd cxd bzctd ctd cpd cxdect cwct bzctd ctd cpd cxdectcsc cvcwccd cpd cud babvcec cab bdblblbdb cpcvctd bgbibdb bgbibiba cjbfcl bzba bud cvctcud bwcxd cpd crct ccd cpd cud cpd cxd cxd btd cqcxb cpd ddbwcxd ctd cxd babvcebzc ced babebjb babfb cbctd ctd cqctd bdblbkbgb cpcvctd bfbebdb bfbgbhba cjbgcl bzbabud cvctcud babwcxd cpd crctccd cpd cud cpd cxd cxd bwcxcvcxd cpd cpcvctd bvcebzc ced babfbgb babfb ctbdblbkbib cpcvctd bfbgbgb bfbjbdba cjbhcl chba bud ddczd dab cectczd ctd caba cicpcqcxcwba cpd czd cacpd csd bycxctd csd dbcxd cwbx crcxctd btd dccxd cpd cxd babvcec cab bdblblbkb cpcvctd bibgbkb bibhbhba cjbicl babvbabud ccbac bac ctd cvb bac ctd cpbacactcrd cvd cxd cxd cpd cpd cqcyctcrd bvd cpd ctd bvcec cab bdblblbib cpcvctd bebebfb bebfbcba cjbjcl babvba bud cfctcqctd ctd cpba cqcpcqcxd cxd cxcr btd cpcrcwd cqcyctcrd cactcrd cvd cxd cxd cdd cxd crcpd cwd ctd ddcpd csbzd cqcpd bzctd ctd ddbabxbvbvceb ced babeb bdblblbkb cpcvctd bibebkb bibgbdba cjbkcl babtbabycxd crcwd ctd cpd cscababtbabxd crcwd cpcvctd bacccwctcactd ctd ctd cpd cxd cpd csc cpd crcwcxd cvd cuc cxcrd cxcpd cbd crd ctd bac bxbxbx ccd cpd bvd ctd ced bebeb bdb cpd cpd bdblbjbfb cpcvctd bibjb blbeba cjblcl bwbabtba byd ddd cpd bac byd ctcrczba bud csdd cpd bvcec cab bdblblbjb cpcvctd bibjbkb bibkbfba cjbdbccl cbba bzctd cpd bwba bzctd cpd cbd crcwcpd cxcr cactd cpdccpd cxd bzcxcqcqd bwcxd cxcqd cxd cpd cwct bucpddctd cxcpd cactd cpb cxd cpcvctd btc ced bib bib dactd cqctd bdblbkbgb cpcvctd bjbebdb bjbgbdba cjbdbdcl cfbabxbac bzd cxd cwct cactcrd cvd cxd cxd cpd cpd ctd ctd cxdectcs bebw cqcyctcrd bvceb ced beb bgb btd cxd bdblbkblb cpcvctd bfbhbfb bfbjbeba cjbdbecl chbac ctd bacfctd cpd babvd cpcxd byd cxd cud crcpd cxdecpd cxd cpd ctd ctd cpd cxd bvd cpcxd ctcs cqb cyctcrd bvcec cab bdblblbgb cpcvctd bfblb bgbhba cjbdbfcl bwbac bac ctd crcwctd bzbabtbac cpd csctd cpd cfbac bacad crczb cxcscvctbabvd cpd cxd cvc cpcvctd cdd cxd cvd cwctc cpd csd abbwcxd cpd crctba btc ced bdbhb blb cbctd ctd cqctd bdblblbfb cpcvctd bkbhbcb bkbibfba cjbdbgcl cwcxczcpdbcp cpd bwba bzctcxcvctd cbctcvd ctd cpd cxd cqdd bzd cxd cvc crd cxd bvcec cab bdblblbkb cpcvctd bdbebhb bdbfbdba cjbdbhcl cqcyctcrd bwctd ctcrd cxd dbcxd cectcrd cpd cxdectcs bucxd cpd byctcpd ctd bvcec cab bdblblbjb cpcvctd bdbjblb bdbkbhba cjbdbicl cxd bxba bzd cxd cbcxd cwcpba bvd accvd cpd cxd bucpd ctcs cbcrctd bvd cpd cxaccrcpd cxd cpd cpcvct csctdccxd cvba bvcec cab bdblblbjb cpcvctd bdbcbcbjb bdbcbdbfba cjbdbjcl bwbabzba dbctba bycxd cxd cpd cpd ctd ctd cxdectcs cccwd ctctb bwcxd ctd cxd cpd csctd cpcvctd btc ced bdbfb babhb cpddbdblblbdb cpcvctd bgbgbdb bgbhbcba cjbdbkcl cpd ctcpd cscbbac bac cpddcpd bacecxd cpd ctcpd cxd cvbtd cactcrd cvd cxd cxd bfb cqcyctcrd byd btd ctcpd cpd crctba bvceb ced babdbgb babdb cpd cpd ddbdblblbhb cpcvctd bhb bebgba cjbdblcl cfba cad crczd cxcscvct crcxctd cecxd cpd cactcrd cvd cxd cxd cdd cxd cwct cpd csd bwcxd cpd crctba bvcb bdbdbjbfb cbd cxd cvctd cectd cpcvb bdblblbiba cjbebccl bac cbdbcpcxd cpd bwbac bucpd cpd csba bvd csctdccxd cvba bvceb ced bjb bdb dactd cqctd bdblblbdb cpcvctd bdbdb bfbeba bdbc 


impose directional sampling searching constraints intelligent scissors image composition eric mortensen brigham young barrett byu dept comp sci byu provo limits techniques boundary search degree freedom window two-dimensional boundary template boundary extraction previous graph searching techniques non-interactive template specification losing benefits human guidance expertise abstract present interactive tool called intelligent scissors image segmentation composition fully automated segmentation unsolved problem manual tracing inaccurate laboriously unacceptable intelligent scissors objects digital images extracted quickly accurately simple gesture motions mouse gestured mouse position proximity object edge live-wire boundary snaps wraps object interest live-wire boundary detection formulates discrete dynamic programming two-dimensional graph searching problem mathematically optimal boundaries greatly reducing sensitivity local noise intervening structures robustness enhanced on-the-fly training boundary adhere specific type edge simply strongest edge neighborhood boundary cooling automatically freezes unchanging segments automates input additional seed points cooling user free gesture path increasing efficiency finesse boundaries extracted extracted objects scaled rotated composited live-wire masks spatial frequency equivalencing frequency equivalencing performed applying butterworth filter matches lowest frequency spectra image components intelligent scissors creation convincing compositions existing images dramatically increasing speed precision objects extracted introduction digital image composition recently received attention special effects movies variety desktop applications movies image composition combined digital manipulation techniques realistically blend film script goal image composition combine objects regions photographs movie frames create seamless believable image image sequence appears convincing real fig shows believable composition created combining objects extracted images fig a-c objects digitally extracted combined minutes interactive tool called intelligent scissors existing images objects interest extracted segmented surrounding background unpredictable complexity manual segmentation tedious time consuming lacking precision impractical applied long image enm byu dept comp sci byu provo sequences due wide variety image types content current computer based segmentation techniques slow inaccurate require significant user input initialize control segmentation process paper describes interactive digital image segmentation tool called intelligent scissors rapid object extraction arbitrarily complex backgrounds intelligent scissors boundary detection formulates discrete dynamic programming two-dimensional graph searching problem presented part tool boundary cooling on-the-fly training reduce user input dynamically adapt tool specific types edges finally present live-wire masking spatial frequency equivalencing convincing image compositions background digital image segmentation techniques extract image components surrounding natural background computer based segmentation tools typically primitive offer advantage manual tracing region based magic wands provided desktop applications interactively selected seed point grow region adding adjacent neighboring pixels type region growing provide interactive visual feedback resulting region boundaries edited modified popular boundary definition methods active contours snakes improve manually entered rough approximation initialized rough boundary approximation snakes iteratively adjust boundary points parallel attempt minimize energy functional achieve optimal boundary energy functional combination internal forces boundary curvature external forces image gradient magnitude snakes track frame-to-frame boundary motion provided boundary hasn moved drastically active contours follow pattern initialization energy minimization result user final boundary rough approximation input resulting boundary satisfactory process repeated boundary manually edited provide detailed comparison snakes intelligent scissors section class image segmentation techniques graph searching formulation similar concepts find globally optimal boundaries techniques differ snakes boundary points generated stage-wise optimal cost fashion snakes iteratively minimize energy functional points contour parallel giving appearance wiggling snakes graph searching techniques typically require boundary template--in form manually entered rough approximation figure merit --which illiam barrett important difference previous boundary finding techniques intelligent scissors presented lies laplacian zero-crossing creates binary feature boundary defining criteria method interaction previous methods exhibit pattern boundary approximation boundary refinement intelligent scissors user interactively select suitable boundary set optimal boundaries emanating seed point addition previous approaches incorporate onthe-fly training cooling computationally efficient finally appears problem automated matching spatial frequencies digital image composition addressed previously intelligent scissors boundary definition dynamic programming formulated graph searching problem goal find optimal path start node set goal nodes applied image boundary finding graph search consists finding globally optimal path start pixel goal pixel-in pixels represent nodes edges created pixel neighbors paper optimality defined minimum cumulative cost path start pixel goal pixel cumulative cost path sum local edge link costs path local costs minimum cost path correspond image component boundary pixels accurately links neighboring pixels exhibit strong edge features low local costs vice-versa local component costs created edge features local costs computed weighted sum component functionals letting represents local cost directed link pixel neighboring pixel local cost function weight feature function empirically weights work wide range images laplacian zero-crossing binary edge feature edge localization convolution image laplacian kernel approximates partial derivative image laplacian image zero-crossing corresponds points maximal minimal gradient magnitude laplacian zero-crossings represent good edge properties low local cost laplacian image pixel application discrete laplacian kernel digital image produces zero-valued pixels zero-crossing represented neighboring pixels change positive negative pixels closest represent zero-crossing resulting feature cost single-pixel wide cost canyons boundary localization image feature formulation laplacian zero-crossing gradient magnitude gradient direction distinguish strong high gradient edges weak low gradient edges gradient magnitude direct correlation edge strength local cost represent partials image gradient magnitude approximated gradient scaled inverted high gradients produce low costs vice-versa gradient component function giving inverse linear ramp function finally gradient magnitude costs scaled euclidean distance resulting maximum gradient unity scaled diagonal neighbor horizontal vertical neighbor gradient direction adds smoothness constraint boundary associating high cost sharp boundary direction gradient direction unit vector defined letting unit vector perpendicular rotated degrees clockwise gradient direction point formulation gradient direction feature cost vector dot products bidirectional link edge vector pixels links horizontal vertical diagonal relative position neighborhood point dot product positive noted neighborhood link direction associates high cost edge link pixels similar gradient directions perpendicular perpendicular link direction feature cost low gradient direction pixels similar link two-dimensional dynamic programming mentioned dynamic programming formulated directed graph search optimal path paper utilizes optimal graph search similar presented dijkstra extended nilsson technique builds extends previous boundary tracking methods important ways imposes directional sampling searching constraints utilizes set edge features costs laplacian zero-crossing multiple gradient kernels active list sorted sort nodes pixels priori goal nodes pixels formulation boundary finding graph search eliminates directed sampling searching restrictions previous implementations allowing boundaries arbitrary comgi max max max cos cos lpq lpq lpq plexity extracted edge features robust comprehensive previous 
implementations maximize gradient kernels sizes encompass edge types scales simultaneously attempting balance edge detail noise suppression laplacian zero-crossing boundary localization fine detail livewire snapping discrete bounded nature local edge costs permit specialized sorting algorithm inserts points sorted list called active list constant time fourth live-wire tool free define goal pixel interactively free point image minimum cost paths computed pixels fast free point falls expanding cost wavefront interactivity impeded live-wire dynamic programming graph search algorithm algorithm live-wire graph search input start seed pixel local cost function link pixels data structures list active pixels sorted total cost initially empty neighborhood set neighbors pixel boolean function indicating expanded processed total cost function seed point output pointers pixel indicating minimum cost path algorithm initialize active list cost seed pixel begin points expand min remove minimum cost pixel active list true mark expanded processed begin tmp compute total cost neighbor tmp remove higher cost neighbor list begin neighbor list tmp assign neighbor total cost set reset back pointer place return end active list end end notice active list sorted lower cumulative cost computed pixel list point removed list order added back list lower cost similar adding point sorted list operation performed constant time figure demonstrates graph search algorithm create minimum cumulative cost path map optimal path pointers figure initial local cost map seed point circled simplicity demonstration local costs pixel based link based thought representing gradient magnitude cost feature figure shows portion cumulative cost pointer map expanding seed point cumulative cost notice diagonal local costs scaled euclidean distance consistent gradient magnitude cost feature previously complicating weighing euclidean distance demonstrate cumulative costs points active list change lower cumulative costs computed unexpanded neighbors demonstrated figure points expanded--the seed point lowest cumulative cost point active list notice points diagonal seed point changed cumulative cost direction pointers euclidean weighting seed diagonal points makes costly non-diagonal paths figures show cumulative cost direction pointer map stages completion note algorithm produces wavefront active points emanating initial start point called seed point wavefront grows faster lower costs interactive live-wire segmentation tool optimal path pointers generated desired boundary segment chosen dynamically free point interactive movement free point mouse cursor boundary behave live-wire adapts minimum cost path optimal path pointers free point back figure initial local cost matrix seed point shaded expanded points shaded expanded points shaded expanded points expanded finished total cost path matrix paths free points shaded seed point constraining seed point free points lie edge user interactively snap wrap live-wire boundary object interest figure demonstrates live-wire boundary segment adapts free point cursor position latching object boundary specifically note live-wire segments user-specified free point positions times fig shows live-wire segments discrete time instances live-wire segments updated dynamically interactively on-the-fly movement free point movement free point boundary digress desired object edge interactive input seed point prior point departure reinitiates boundary detection potential paths recomputed seed point effectively tieing boundary computed seed point note optimal paths computed seed point points image graph search produces minimum cost spanning tree image selecting free point mouse cursor interactive live-wire tool simply selecting optimal boundary segment large collection optimal paths pixel free point defines optimal path seed point minimum seed points ensure closed object boundary path map seed point object maintained object boundary definition provide closing boundary path free point closing boundary segment free point seed point expedites boundary closure placing seed points directly object edge difficult tedious seed point localized object edge spikes results segmented boundary seed points figure image demonstrating live-wire segment adapts snaps object boundary free point moves cursor movement path free point shown white live-wire segments previous free point positions shown green figure comparison live-wire cooling withot cooling seed points manually object edge cooling seed points generated automatically live-wire segment freezes boundary forced pass seed points facilitate seed point placement cursor snap forces mouse pointer maximum gradient magnitude pixel user neighborhood neighborhood resulting cursor snap cursor snap pixels mouse cursor moved user snaps jumps neighborhood pixel representing good static edge point path cooling generating closed boundaries objects interest require seed points reasons previously simple objects typically require seed points complex objects require cursor snap manual placement seed points tedious requires large portion boundary definition time figure comparison live-wire dynamic training training live-wire segment snaps nearby strong edges training favors edges similar characteristics learned static gradient magnitude cost map shows training high gradients favored map low costs training dynamic cost map favors gradients similar sampled previous boundary segment cost gradient magnitude cost gradient magnitude static cost map dynamic cost map automatic seed point generation relieves user precise closest portion current defined object boundary training manual placement seed points automatically selecting pixel current active boundary segment seed point selection based path cooling turn relies path coalescence single minimum cost path exists pixel seed point paths coalesce share portions optimal path paths pixels due bellman principle optimality optimal paths distinct pixels share common point pixel paths identical pixel back seed point noticeable seed point object edge free point moved seed point remains vicinity object edge optimal path selected displayed time mouse cursor moves paths typically identical seed point object edges change local free point free point moves farther farther seed point portion active live-wire boundary segment change longer seed points generated end stable segment changed recently stability measured time milliseconds active boundary path coalescence number times path redrawn distinct free points measure stability live-wire segment sense cooling longer pixel stable section live-wire boundary cooler eventually freezes automatically produces seed point figure illustrates benefit path cooling fig user place seed point manually object boundary cooling fig seed point free point manually seed points generated automatically cooling interactive dynamic training occasion section desired object boundary weak gradient magnitude relative nearby strong gradient edge nearby strong edge lower cost live-wire segment snaps strong edge desired weaker edge fig desired boundary woman harriet cheek part close high contrast shoulder man ozzie live-wire snaps shoulder training dynamic adaptation cost function based sample boundary segment training exploits object boundary segment considered good performed dynamically part boundary segmentation process result trained features updated interactively object 
boundary defined on-the-fly training eliminates separate training phase trained feature cost functions adapt object segmented objects image fig demonstrates trained live-wire segment latches edge similar previous training segment nearby stronger edge facilitate training trained cost computation gradient magnitude feature map image precomputed scaling minimized gradient magnitude image integer range size actual feature cost determined mapping feature values look-up table scaled weighted cost fig illustrates edge cost based gradient magnitude training note training fig edge cost plummets gradients specific object interest edges selection good boundary segment training made interactively live-wire tool training adapt slow smooth edge characteristics trained gradient magnitude cost function based recent length specifies recent boundary pixels generate training statistics monotonically decreasing weight function linearly gaussian based determines contribution closest pixels permits adaptive training local dependence prevent trained feature subject edge characteristics closest pixel current active boundary segment endpoint weight point pixels boundary current active endpoint minimal weight determined user training algorithm samples precomputed feature maps closest pixels edge segment increments feature histogram element pixel weight generate histogram feature involved training sampling smoothing feature histogram scaled inverted subtracting scaled histogram values maximum create feature cost map needed convert feature values trained cost functions training based learned edge characteristics recent portion object boundary training effective objects edge properties consistent object boundary changing change smoothly training algorithm adapt fact training counter-productive objects sudden dramatic edge features training turned interactively definition object boundary needed section boundary similar edge characteristics turned drastic change occurs comparison snakes due recent popularity snakes active contours models interactive boundary wrapping livewire similar wiggling snakes highlight feel similarities differences snakes intelligent scissors similarities compare differences gradient magnitude cost intelligent scissors similar edge energy functional snakes methods employ smoothing term minimize effects noise boundary snakes live-wire boundaries attracted strong edge features techniques attempt find globally optimal boundaries overcome effects noise edge dropout snakes intelligent scissors require interaction part boundary segmentation process differences compare similarities laplacian zero-crossing binary cost feature previously active contours models boundary tracking methods matter active contour smoothing term internal based contour point positions smoothing term livewire boundaries computed external image gradient directions page kass squared laplacian energy functional show relationship scale-space continuation marr-hildreth edge detection theory squared laplacian represent binary condition variational calculus minimization required functionals differentiable snakes typically attracted edge features lution image produce jaggies object boundaries resulting composition subpixel accuracy cangravity edge gradient energy valley live-wire boundary snap strong edge features arbitrary distances search window entire image snakes globally optimal entire contour livewire boundaries piece-wise optimal optimal seed points feel creates desirable balance global optimality local control piece-wise optimality path cooling intra-object on-the-fly training finally snakes refine interactively nudge placing springs single rough boundary approximation live-wire tool interactively selects optimal boundary segment potentially minimum cost paths interactive optimal path selection makes intelligent scissors work key difference intelligent scissors previous techniques snakes interactively initialized approximate boundary contour requiring manually points single contour iteratively adjusted attempt minimize energy functional livewire tool hand interactively initialized single seed point generates interactive speeds optimal paths seed point point image allowing user interactively select desired optimal boundary segment result intelligent scissors typically require time effort segment object takes manually input initial approximation object boundary live-wire tool similar previous stage-wise optimal boundary tracking approaches snakes intelligent scissors developed interactive extension previous optimal edge tracking methods improvement active contours image composition intelligent scissors mentioned composition artists intelligent interactive tool facilitate image component boundary definition intelligent scissors quickly segment object image serves tool cut paste operations object boundaries extracted object copied image buffer clipboard future processing placement image image desired cut object transformed--i rotated scaled translated rst --before combination destination image interactive graphical tool handles rst control tool specifies rst transformation matrix source image bilinearly interpolated matrix paste cut object destination image image composition requires blending object image image cut-out object foreground requires composition artist slip cutout object scene components leaving front components operation performed live-wire tool create composition mask scene components cut image create mask additions scene affect masked pixels edge filtering live-wire boundaries limited pixel resoadmittedly gradient direction cost intelligent scissors susceptible noise areas low contrast computes smoothness cost based points link extend gradient direction term include pixels links significant loss computational efficiency similar concept optical mask motion picture special effects obtained exploiting signed output laplacian operator position object edge estimated subpixel accuracy linearly weighted combination laplacian pixel values side zero-crossings live-wire boundary correspond zero-crossing jaggies reduced edge filtering similar anti-aliasing edge filtering desirable real world images acquired finite image detectors result pixels object boundary share information color object background approach edge filtering perform local post-smoothing image pasted object boundary account fact edge pixels cut object background information original image noticeable object composited scene background color object original background color general solution determine edge pixel corresponds actual object color weight combining image spatial frequency contrast matching object interest segmented surrounding background scale rotate color paste destination image pasting desirable perform image composition seamlessly order make believable detect paste occurred source destination images differing spatial frequencies contrast due differences focus lighting images acquired equivalencing spatial frequencies normalization contrast desirable order produce convincing composition equivalencing spatial frequencies performed matching spectral content cut piece destination image vicinity pasted convincing composition requires spectra object destination image match accomplished low-pass filtering spectrum higher frequency content match spectrum higher frequency content determined parameter fitting butterworth low-pass filter blpf spectra parameters spectrum lower frequency content low-pass filter spectrum image blpf distance cutoff frequency origin filter order equivalencing spatial frequencies performed computing fourier transforms source image destination image compute log power spectra varying parameters squares fit create normalized butterworth filter buvd suv suv log iuv iuv log fit parameters matched spatial frequency cost map color images maximize feature values characteristics demonstrates lower spatial frequency content spatial frequencies images equivalenced fitting equivalenced result inverse fourier transform pasted prior pasting colors source image scaled range account differences contrast results figures show boundaries defined intelligent scissors variety image types fig artificial test image exhibits gaussian edge blurring point noise typical imaging hardware fig desktop scene figures fig image lumbar spine demonstrates livewire 
application medical imaging boundary definition times trained user displayed object boundary caption respective figure figure graphically compares live-wire boundary definition times boundary accuracy manual tracing results show average time accuracy study untrained users asked define boundaries objects objects fig paper clip holder pocket knife fig outer boundary spinal vertebrae fig figures a-c demonstrates intelligent scissors application color images show boundaries defined intelligent scissors image composition fig objects scaled rotated case fig flipped produce final composition fig note live-wire masking performed foreground grass preprocessing requires convolutions color images kernels gradient orientation calculation maximum gradient neighborhood search creation local user spent minutes familiar live-wire tool manual tracing tool asked define boundary objects boundary defined multiple times user intelligent scissors manual tracing measure intraand inter-user reproducibility--not shown buvd suv figure average timing accuracy comparison manually traced live-wire boundaries users boundary times individual objects accuracy measurements objects verage ime seconds polygon curve holder knife spine object boundary definition time legend live-wire hand traced distance pixels legend live-wire hand traced centage pixels distance ideal boundary accuracy color bands averaging previously dynamic programming approaches boundary detection typically computationally expensive formulating graph search restricting local costs integer values range algorithm advantage sort points mentioned adding points sorted active list removing points requires constant time result algorithm computational complexity image pixels examining algorithm worst case situation pixel removed active list expanded computing cumulative cost neighbors expanded worst case pixel cumulative cost computed neighbors resulting cumulative cost computations pixels point expanded neighbors seed point point cumulative cost neighboring point expanded cumulative cost recomputed neighbors short shown cumulative cost computations performed resulting algorithm conclusions future work intelligent scissors provide accurate efficient interactive tool object extraction image composition fact sharp contrast tedious manual boundary definition object extraction live-wire fun final result composition intelligent scissors intuitive applied existing black white color images arbitrary complexity rich extensions work including making weighted zero-crossings laplacian perform subpixel edge filtering anti-aliasing multiple layered multiplane masks making spatial frequency equivalencing locally adaptive varying light source object directional gradient shading artificial borrowed provide consistent lighting composition importantly extension graph search application live-wire snap training tools moving objects moving multiplane masks composition image sequences amini weymouth jain dynamic programming solving variational problems vision ieee transactions pattern analysis machine intelligence vol sept ballard brown computer vision englewood cliffs prentice hall bellman dreyfus applied dynamic programming princeton princeton press chien decision function method boundary detection computer graphics image processing vol june daneels interactive outlining improved approach active contours spie proceedings storage retrieval image video databases vol feb dijkstra note problems connexion graphs numerische mathematik vol fleck multiple widths yield reliable finite differences ieee transactions pattern analysis machine intelligence vol april kass witkin terzopoulos snakes active contour models proceedings international conference computer vision london england june marr hildreth theory edge detection proceedings royal society london--series biological sciences vol feb martelli application heuristic search methods edge contour detection communications acm vol feb montanari optimal detection curves noisy pictures communications acm vol mortensen morse barrett udupa adaptive boundary dectection live-wire twodimensional dynamic programming ieee proceedings computers cardiology oct nilsson principles artificial intelligence palo alto tioga pope parker gustafson clayton dynamic search algorithms left ventricular border recognition analysis coronary arteries ieee proceedings computers cardiology sept williams shah fast algorithm active contours curvature estimation cvgip image understanding vol jan figure test image exhibiting edge blurring point noise boundary definition times--polygon sec curve sec figure desktop scene boundary definition times--block sec paper clip holder sec pocket knife sec liqud paper bottle sec spoon sec figure spinal vertebrae boundary definition time-sec figure images composition a-c live-wire boundaries segmentation final composition millennium 
ieee transactions communications vol coml april laplacian pyramid compact image code peter burt member ieee edward adelson abstract describe technique image encoding local operators scales identical shape serve basis functions representation differs established techniques code elements localized spatial frequency space pixel-to-pixel correlations removed subtracting lowpass filtered copy image image result net data compression difference error image low variance entropy low-pass filtered image represented reduced sample density data compression achieved quantizing difference image steps repeated compress low-pass image iteration process appropriately expanded scales generates pyramid data structure encoding process equivalent sampling image laplacian operators scales code enhance salient image features advantage present code suited image analysis tasks image compression fast algorithms coding decoding introduction common characteristic images neighboring pixels highly correlated represent image directly terms pixel values inefficient encoded information redundant task designing efficient compressed code find representation effect decorrelates image pixels achieved predictive transform techniques recent reviews predictive coding pixels encoded sequentially raster format prior encoding pixel predicted previously coded pixels preceding raster lines predicted pixel represents redundant information subtracted actual pixel difference prediction error encoded previously encoded pixels predicting pixel process causal restriction causal prediction facilitates decoding decode pixel predicted recomputed decoded neighboring pixels added stored prediction error noncausal prediction based symmetric neighborhood centered pixel yield accurate prediction greater data compression approach paper approved editor signal processing communication electronics ieee communications society presentation part conference pattern recognition image processing dallas manuscript received april revised july work supported part national science foundation grant mcs- national institutes health postdoctoral training grant burt department electrical computer systems engineering rensselaer polytechnic institute troy adelson rca david sarnoff research center princeton permit simple sequential coding noncausal approaches image coding typically involve image transforms solution large sets simultaneous equations encoding pixels sequentially techniques encode blocks predictive transform techniques advantages simple implement readily adapted local image characteristics generally greater data compression expense considerably greater computation describe technique removing image correlation combines features predictive transform methods technique noncausal computations simple local predicted pixel computed local weighted average unimodal gaussian-like related trimodal weighting function centered pixel predicted values pixels obtained convolving weighting function image result lowpass filtered image subtracted original original image result applying low-pass filter prediction error encode encode results net data compression largly decorrelated represented pixel pixel fewer bits low-pass filtered encoded reduced sample rate data compression achieved iterating process reduced image low-pass filtered yield error image obtained repeating steps times obtain sequence two-dimensional arrays implementation smaller predecessor scale factor due reduced sample density imagine arrays stacked result tapering pyramid data structure node pyramid represents difference gaussian-like related functions convolved original image difference functions similar laplacian operators commonly image enhancement refer proposed compressed image representation laplacian-pyramid code coding scheme outlined practical required filtering computations performed efficient algorithm suitable fast algorithm recently developed section ieee burt adelson laplacian pyramid gaussian pyramid step laplacian pyramid coding low-pass filter original image obtain image reduced version resolution sample density decreased similar form reduced version filtering performed procedure equivalent convolution family local symmetric weighting functions important member family resembles gaussian probability distribution sequence images called gaussian pyramid fast algorithm generating gaussian pyramid subsection subsection show algorithm expand image array interpolating values sample points device visualize contents levels gaussian pyramid section define laplacian pyramid gaussian pyramid generation suppose image represented initially array columns rows pixels pixel represents light intensity image point integer image bottom level gaussian pyramid pyramid level image reduced low-pass filtered version level computed weighted average values level -bywindow level representing obtained values level applying pattern weights graphical representation process dimension fig size weighting function critical selected -bypattern adequate filtering low computational cost level-to-level averaging process performed function reduce reduce means levels nodes refers number levels pyramid dimensions lth level note fig density nodes reduced half dimension fourth dimensions level level dimensions original image pyramid construction integers exist images measure pixels dimensions refer set low-pass filtered images gaussian pyramid cases generated trimodal unimodal weighting function gaussian pyramid image reduce fig one-dimensional graphic representation process generates gaussian pyramid row dots represents nodes level pyramid node level gray level image pixel node high level weighted average node values lower level note node spacing doubles level level weighting pattern generating kernel generate levels generating kernel note -bypattern weights generate pyramid array predecessor weighting pattern called generating kernel chosen subject constraints simpticity make separable one-dimensional length function normalized symmetric additional constraint called equal contribution stipulates nodes level contribute total weight nodes higher level case equal contribution requires constraints satisfied equivalent weighting functions iterative pyramid generation equivalent convolving image set equivalent weighting functions ieee transactions communications vol comno april fig equivalent weighting functions nodes levels infinity gaussian pyramid note axis scales adjusted factors aid comparison parameter generating kernel resulting equivalent weighting functions closely resemble gaussian probability density functions size equivalent weighting function doubles level distance samples equivalent weighting functions gaussian-pyramid levels shown fig case shape equivalent function converges rapidly characteristic form successively higher levels pyramid scale shape depend choice generating kernel characteristic shapes choices shown fig note equivalent weighting functions gaussian-like shape triangular flatter broader gaussian central positive mode sharply peaked flanked small negative lobes fast filter effect convolving image equivalent weighting functions blur low-pass filter image pyramid algorithm reduces filter band limit octave level level reduces sample interval factor fast algorithm requiring fewer computational steps compute set filtered images required fast fourier transform compute single filtered image fig illustrates contents gaussian pyramid generated original image left measures level pyramid higher level array roughly half large dimension predecessor due reduced sample density equivalent weighting functions fig shape equivalent weighting function depends choice parameter function triangular gaussian-like broader gaussian function trimodal gaussian pyramid interpolation define function expand reverse reduce effect expand -byn array -byn array interpolating node values values expand applied array gaussian pyramid yield array size result expanding times expand expand levels nodes imjn terms integers included sum apply expand times image obtain size original image full expansion image coding visualize contents arrays pyramid structures top row fig shows image obtained expanding levels pyramid fig lowpass filter effect gaussian pyramid shown burt adelson laplacian pyramid 
fig levels gaussian pyramid lady image original image level meusures pixels higher level array roughly half dimensdons predecessor level measures pixels laplacian pyramid recall purpose constructing reduced image serve prediction pixel values original image obtain compressed representation encode error image remains expanded subtracted image bottom level laplacian pyramid level generated encoding give formal definition laplacian pyramid examine properties laplacian pyramid generation laplacian pyramid sequence error images difference levels gaussian pyramid expand image serve prediction image equivalent weighting functions node laplacian pyramid difference convolutions equivalent weighting functions original image similar convolving appropriately scaled laplacian weighting function image node obtained directly applying operator considerably greater computational cost view gaussian pyramid set lowpass filtered copies original image view laplacian pyramid set bandpass filtered copies image scale laplacian operator doubles level level pyramid center frequency passband reduced octave order illustrate contents laplacian pyramid helpful interpolate sample points pyramid structure gaussian interpolation result expanding times size original image expanded laplacian pyramid levels lady image fig shown bottom row fig note image features edges bars enhanced laplacian pyramid enhanced features segregated size fine details prominent progressively coarser features prominent higher level images decoding shown original image recovered expanding summing levels laplacian pyramid efficient procedure expand add expand image add level reached recovered procedure simply reverses steps laplacian pyramid generation expand entropy assume pixel values image representation statistically independent minimum number bits pixel required encode image entropy pixel distribution optimum approached practice techniques variable length coding histogram pixel values lady image shown fig observed frequency occurrence gray level estimate probability occurrence similar images entropy ieee transactions communications vol comno april fig levels gaussian laplacian pyramid gaussian images upper row obtainedby expanding pyramid arrays fig gaussian interpolation level laplacian pyramid difference higher levels gaussian pyramid burt adelson laplacian pyramid fig distribution pixel gray level values stages encoding process histogram original image give histograms levels laplacian pyramid generating parameter histograms quantization level shown note pixel values laplacian pyramid concentrateed permitting data compression shortened varable length code words substantial reduction realized quantization low pyramid levels reduced sample density high pyramid levels log maximum entropy case image initially represented gray levels obtained gray levels equally actual entropy estimate lady slightly technique subtracting predicted image pixel laplacian pyramid removes pixel-to-pixel correlation decorrelation results concentration pixel values reduced variance entropy degree measures reduced depends parameter pyramid generation fig found greatest reduction obtained examples levels gaussian pyramid appeared crisper generated generated smaller yields guassian-like equivalent weighting functions selection perceptual computational advantages levels laplacian pyramid histograms shown fig variance entropy shown level quantities generally found increase level level quantlzation entropy substantially reduced quantizing pixel values level laplacian pyramid introduces quantization errors proper choice number distribution quantization levels degradation made imperceptible human observers illustrate procedure uniform quantization range pixel values divided bins size quantized pixel middle ieee transactions communications vol comno april fig entropy variance pixel values laplacian pyramid level function parameter lady image greatest reduction obtained estimate optimal obtained pyramid levels images fig examples image data compression laplacian pyramid code give original lady walter images give encoded versions data rates bits pixel lady walter square errors percent percent bin quantized image reconstructed expand sum procedure values place values results quantizing lady image shown fig bin size level chosen increasing degradation perceptible viewed distance approximately times image width pixel-pixel separation min arc note bin size smaller higher levels lower spatial frequencies bin size pyramid level reflects sensitivity human observer contrast errors spatial frequency bands represented level humans fairly sensitive contrast perturbations low medium spatial frequencies insensitive perturbations high spatial frequencies increased observer sensitivity increased data variance noted means quantization levels high pyramid levels low levels fortunately pixels contribute bit rate image due low sample density low-level high-frequency pixels densely sampled coarsely quantized results final result encoding quantization reconstruction shown fig original lady image shown fig encoded version bits pixel shown fig assume variable-length code words advantage nonuniform distribution burt adelson laplacian pyramid node values bit rate pyramid level estimated entropy times sample density bit rate image sum levels procedure performed walter image original shown fig version encoded bits pixel shown fig cases encoded images indistinguishable originals viewing conditions stated progressive transmission observed laplacian pyramid code suited progressive image transmission type transmission coarse rendition image give receiver early impression image content subsequent transmission image detail progressively finer resolution observer terminate transmission image contents recognized evident image interest achieve progressive transmission topmost level pyramid code expanded receiving pyramid form initial coarse image lower level transmitted expanded added receiving end initial image appears blurry steadily focus progression illustrated fig left note bits required pixel full transmission rightmost image half bits needed pixel previous image fig image previous summary conclusion laplacian pyramid versatile data structure attractive features image processing represents image series quasi-bandpassed images sampled successively sparser densities resulting code elements form self-similar structure localized space spatial frequency appropriately choosing parameters encoding quantizing scheme substantially reduce entropy representation simultaneously stay distortion limits imposed sensitivity human visual system fig summarizes steps laplacian pyramid coding step shown left bottom-up construction gaussian pyramid images laplacian pyramid images obtained difference successive gaussian levels quantized yield compressed code represented pyramid values finally image reconstruction expand-and-sum procedure values place values designate reconstructed image observed laplacian pyramid encoding scheme requires simple computations computations local performed parallel computations iterated build pyramid level predecessors envision performing laplafig laplacian pyramid code applied progressive image transmission high levels pyramid transmitted give receiver quick coarse rendition image receiver image progressively refinded adding successively lower pyramid levels transmitted shown leftmost figure shows reconstruction pyramid levels bits pixel figures show reconstruction pyramid levels added cumulative data rates shown figures bits pixel ieee transaction communications vol comno april fig summary steps laplacian pyramid coding decoding original image lower left generate gaussian pyramid levels repeated local averaging levels laplacian pyramid computed differences adjacent gaussian levels laplacian pyramid elements quantized yield laplacian pyramid code finally reconstructed image generated summing levels code pyramid cian coding decoding real time array processors pipeline architecture additional benefit previously noted computing laplacian pyramid automatically access quasi-bandpass copies image representation image features sizes 
enhanced directly image processing pattern recognition tasks baker sullivan multiple bandpass filters image processing proc iee vol burt fast filter transforms image processing computer graphics image processing vol carlson cohen visibility displayed information naval res tech rep contr -ca simple psychophysical model predicting visibility displayed information proc soc inform display knowlton progressive transmission grayscale binary pictures simple efficient lossless encoding schemes proc ieee vol kretzmer reduced-alphabet representation television signals ire nat conv rec kulikowski gorea complete adaptation patterned stimuli sufficient condition weber law contrast vision res vol netravali prasada adaptive quantization picture signals spatial masking proc ieee vol netravali limb picture coding review proc ieee vol pratt image transmission techniques york academic schreiber knapp key synthetic highs experimental bandwidth reduction system soc motion pict telev eng vol schreiber troxel patent rosenfeld kak digital picture processing york academic peter burt received degeree physics harvard cambridge degrees computer science massachusetts amherst respec-tively conducted research sonar acoustic imaging devices usn underwater sound laboratory london london england postdoctoral fellow studied natural vision computer image understanding york york bell laboratories maryland college park member faculty rensselaer polytechnic institute troy edward adelson received degree physics philosophy yale haven degree experimental psychology michigan ann arbor postdoctoral fellow york york rca david sarnoff research center princeton member technical staff image quality human perception research group research interests center visual processes human machine visual systems include psychophysics image processing artificial intelligence adelson member optical society america association research vision opthalmology phi beta kappa 
adelson anderson bergen burt ogden pyramid methods image processing image pyramid offers flexible convenient multiresolution format mirrors multiple scales processing human visual system digital image processing domains today image enhancement variety methods exist removing image degradations emphasizing important image information computer graphics digital images generated modified combined wide variety visual effects data compression images efficiently stored transmitted translated compact digital code machine vision automatic inspection systems robots make simple decisions based digitized input television camera digital image processing developing state areas mentioned important problems remain solved obvious case machine vision build machines abstract data structure represent image information critical successful completion image processing task structure attracted considerable attention image pyramid consists set lowpass bandpass copies image representing pattern information scale describe variety pyramid methods developed image data compression enhancement analysis graphics rca corporation final manuscript received november reprint re- perform routine visual tasks humans effortlessly increasingly clear format represent image data critical image processing algorithms applied data digital image initially encoded array pixel intensities raw format suited tasks alternatively image represented fourier transform operations applied transform coefficients original pixel values data compression image enhancement tasks inappropriate transform representation unsuited machine vision computer graphics spatial location pattem elements critical recently great deal interest representations retain spatial localization localization spatial frequency domain achieved decomposing image set spatial frequency bandpass component images individual samples component image represent image pattern information appropriately localized bandpassed image represents information fineness detail scale evidence human visual system representation multiresolution schemes increasingly popular machine vision image processing general importance analyzing images scales arises nature images scenes world objects sizes objects features sizes objects distances viewer result analysis procedure applied single scale miss information scales solution carry analyses scales simultaneously convolution basic operation image analysis systems convolution large weighting functions notoriously expensive computation multiresolution system wishes perform convolutions kernels sizes ranging small large computational problems forbidding main problems working multiresolution representations develop fast efficient techniques members advanced image processing research group actively involved development multiresolution techniques time work revolves representation pyramid versatile convenient efficient applied pyramid-based methods fundamental problems image analysis data compression image manipulation image pyramids task detecting target pattern scale approached ways involve simple convolutions illusrca engineer nov dec fig methods searching target pattern scales approach copies target pattern constructed expanded scales convolved original image approach single copy target convolved copies image reduced scale target large resolve critical details approaches give equivalent results efficient fourth power scale factor image convolutions represented trated fig copies pattern constructed increasing scales convolved image alternatively pattern fixed size convolved copies image represented correspondingly reduced resolutions approaches yield equivalent results provided critical information target pattern adequately represented approach efficient convolution target pattern expanded scale factor require arithmetic operations convolution image reduced scale factor substantial scale factors range commonly range image analysis image pyramid data structure designed support efficient scaled convolution reduced image representation consists sequence copies original image sample density resolution decreased regular steps shown fig reduced resolution levels pyramid obtained highly efficient iterative algorithm bottom level pyramid equal original image lowpass-filtered subsampled factor obtain pyramid level filtered subsampled obtain repetitions filter subsample steps generate remaining pyramid levels precise levels pyramid obtained iteratively convenient refer rca engineer nov dec fig levels gaussian pyramid expanded size original image effects lowpass filtering apparent fig equivalent weighting functions process constructing gaussian lowpass pyramid equivalent convolving original image set gaussian-like weighting functions subsampling shown weighting functions double size increase functions laplacian pyramid resemble difference gaussians shown process standard reduce operation simply write reduce call weighting function generating kernel reasons computational efficiency small separable five-tap filter generate pyramid fig pyramid construction equivalent convolving original image set gaussian-like weighting functions equivalent weighting functions successive pyramid levels shown fig note functions double width level convolution acts lowpass filter band limit reduced correspondingly octave level resemblance gaussian density function refer pyramid lowpass images gaussian pyramid bandpass lowpass images required purposes obtained subtracting gaussian lowpass pyramid level nextlower level pyramid levels differ sample density interpolate sample values level level subtracted next-lower level interpolation achieved reversing reduce process call expand operation image obtained expanding times expand precise terms integers contribute sum expand operation doubles size image iteration size size original image examples expanded gaussian pyramid levels shown fig levels bandpass pyramid terms lowpass pyramid levels expand levels shown fig node gaussian pyramid obtained directly convolving gaussianlike equivalent weighting function original image bandpass pyramid obtained convolving difference gaussians original image functions closely resemble laplacian operators commonly image processing fig reason refer bandpass pyramid laplacian pyramid important property laplacian pyramid complete image representation steps construct pyramid reversed recover original image top pyramid level expanded added form array expanded added recover alternatively write pyramid introduced data structure supporting scaled image analysis structure suited variety image processing tasks applications data compression graphics image analysis sections shown pyramid-building procedures significant advantages approaches scaled analysis terms computation cost complexity pyramid levels obtained fewer steps repeated reduce expand operations standard fft direct convolution large equivalent weighting functions requires -bit arithmetic maintain acadelson pyramid methods image processing fig levels laplacian pyramid expanded size original image note edge bar features enhanced segregated size curacy cascade convolutions small generating kernel -bit arithmetic compact code laplacian pyramid data structure composed bandpass copies image suited scaled-image analysis pyramid viewed image transformation code pyramid nodes considered code elements equivalent weighting functions sampling functions give node values convolved image original image reconstructed pyramid representation pyramid code complete reasons transforming image representation transformation isolate critical components image pattern directly accessible analysis transformation place data compact form stored transmitted efficiently laplacian pyramid serves objectives bandpass filter pyramid construction enhance image features edges important interpretation features segregated scale pyramid levels shown fig fourier transform pyramid code elements represent pattern components restricted spatial-frequency domain unlike fourier transform pyramid code elements restricted local regions spatial domain spatial spatial-frequency localization critical analysis images multiple objects code elements tend represent characteristics single objects confound characteristics objects pyramid representation permits data compression rca engineer nov dec fig pyramid data compression original image represented bits perpixel shown node values tbe laplacian pyramid representation image quantitized 
obtain effective data rates reconstructed images show degradation sample elements original image values samples tend represented small number bits data compression obtained quantization number distinct values samples reduced binning existing values results degradation image reconstructed quantization bins carefully chosen degradation detectable human observers affect performance analysis algorithms figure illustrates application pyramid data compression image transmission original image shown fig laplacian pyramid representation constructed image values quantized reduce effective data rate bit pixel one-half bit pixel images reconstructed quantized data shown figs humans tend sensitive errors low-frequency image components high-frequency components pyramid compression nodes level quantized coarsely higher levels fortuitous compression three-quarters pyramid samples level data compression quantization important image analysis reduce number bits precision carried arithmetic operations study pyramid-based image motion analysis found data reduced bits sample noticeably degrading computed flow field examples suggest pyramid effective representing image information transmission analysis salient information enhanced analysis extent quantization degrade analysis representation compact robust image analysis pyramid methods applied analysis ways outlined concerns pattern matching mentioned locate target pattern occur scale image pattern convolved level image pyramid levels pyramid combined nodes pixels original image cost searching pattern scales searching original image complexity patterns found limited fact image scales represented pyramid defined pyramid levels differ scale powers octave steps frequency domain power-of-two steps adequate patterns located simple complex patterns require closer match scale pattern defined target array scale pattern appears image variants pyramid easily defined squareroot-of-two smaller steps levels samples computational cost image processing based pyramids correspondingly increased class operations concerns estimation integrated properties local image regions texture characterized local density energy measures reliable estimates image motion require integration point estimates displacement regions uniform motion cases early analysis formulated three-stage sequence standard operations pattern convolved image images case motion analysis selects pattern attribute examined remaining stages nonlinear intensity transformation performed sample operations include simple threshold detect presence target pattern power function computing texture energy measures product samples images forming correlation measures motion analysis finally transformed sample values integrated local windows obtain desired local property measures pattern scale important parameter convolution integration stages pyramid-based processing employed stages facilitate scale selection support efficient computation flow diagram threestage analysis fig analysis begins construction pyramid representation image feature pattern convolved level pyramid stage resulting correlation values passed adelson pyramid methods image processing fig efficient procedure computing integrated image properties scales level image pyramid convolved pattern enhance elementary image characteristic step sample values filtered image passed nonlinear transformation threshold power function step finally integration pyramid built processed image pyramid levels step node values represent average image characteristic integrated gaussian-like window methods proved method call multi-resolution coring reduce random noise image sharpening details image image decomposed laplacian pyramid bandpass representation samples level passed coring function small values include noise set larger values include promenent image features retained peaked final enhanced image obtained summing levels processed pyramid technique illustrated fig figure original image random noise added fig shows image enhanced multiresolution coring recently developed pyramidbased method creating photographic images extended depth field begin images focused nonlinear intensity transformation stage finally filtered transformed image bottom level gaussian pyramid pyramid construction effect integrating input values set gaussian-like windows scales stage integrated property estimates locate boundary textured regions fig upper lower halves image show pieces wood differently oriented grain half image covered shadow boundary shaded unshaded regions prominent feature image location detected easily maximum gradient image intensity fig simple edge-detecting operation gradient-based procedure locate boundary pieces wood isolate line patterns make wood grain texture boundary found three-step process laplacian pyramid constructed original texture vertical grain enhanced convolving image horizontal gradient operator stage pyramid node squared stage integration pyramid constructed level filtered image pyramid stage energy measures obtained windows sizes figure shows level integration pyramid level filtered-image pyramid note texture differences original image converted differences gray level finally simple gradient-based edge-detection technique locate boundary image regions fig pyramid levels expanded size original image facilitate comparison class analysis operations concerns fast coarse-fine search techniques suppose locate precisely large complex pattern image attempt convolve full pattern image search begins convolving reduced-resolution pattern reduced-resolution copy image serves roughly locate occurrences target pattern minimum computation higher-resolution copies pattern image refine position estimates convolution computation minimum restricting search neighborhoods points identified coarser resolution search proceed stages increased resolution position refinement savings computation obtained coarse-fine search substantial size orientation target pattern position image enhancement pyramid methods applied data compression image analysis areas image science distances combine retains sharp regions figs show pictures circuit board camera focused depthplanes construct composite image components board surface focus laplacian pyramids original images lowfrequency levels pyramids identical low spatial-frequency image components slightly affected focus focus affect node values pyramid levels high-spatialfrequency information encoded nodes pyramids generally represent feature scene differ primarily attenuation due blur node largest amplitude image focus focus image components selected node-by-node pyramid region-by-region original images pyramid constructed composite image setting node equal node larger absolute composite image obtained simply expanding adding levels figure shows extended depth-offield image obtained rca engineer nov dec fig texture boundary detection energy measures original image pieces wood differently oriented grain separated horizontal boundary half image shadow attempt locate edges based image intensity isolate boundary shadow region order detect boundary pieces wood image convolve level laplacian pyramid pattern enhances vertical features level matches scale texture grain lower half image nodes level squared integrated constructing additional pyramid give energy image finally intensity edge-detector applied energy image yields desired texture boundary fig multiresolution coring part shows image noise added simulate transmission degradation laplacian pyramid constructed noisy image node values level cored result noise removed prominent features original image retained reconstructed image related application pyramids concerns construction image mosaics common task scientific fields advertising objective join number images smoothly larger mosaic segment boundaries visible suppose join left half fig half fig direct method combining images catinate left portion fig portion fig result shown fig mosaic boundary visible sharp generally low-contrast step gray level alternative approach join image components smoothly averaging pixel values transition zone centered join line width transition zone critical parameter narrow transition visible blurred step wide features images visible 
transition zone photographic double exposure blurred-edge effect due mismatch low frequencies mosaic boundary double-exposure effect due mismatch high frequencies general choice transition zone width avoid defects dilemma resolved image decomposed set spatial-frequency bands bandpass mosaic constructed band transition zone comparable width wavelengths represented band final mosaic obtained summing component bandpass mosaics computational steps multiresolution splining procedure simple pyramid methods begin laplacian pyramids constructed original images decompose images required spatial-frequency bands adelson pyramid methods image processing fig multifocus composite image original images limited depth field shown combined digitally give image extended depth field fig image mosaics left half image catinated half image give mosaic note boundary regions visible mosaic obtained combining images separately spatial frequency band pyramid representations expanding summing bandpass mosaics summed yield final mosaic fig note average node values extended transistion zone blending occurs automatically part reconstruction process conclusions pyramid offers image representation number tasks efficient compute pyramid filtering faster equivalent filtering fast fourier transform information format convenient nodes level represent information localized space spatial frequency discussed number examples pyramid proven valuable substantial data compression similar obtainable transform methods achieved pyramid encoding combined quantitization entropy coding tasks texture analysis rapidly simultaneously scales images combined form seamless mosaic images scene planes focus combined form single sharply focused image pyramid tasks bring conceptual unification problems representing manipulating low-level visual information offers flexible convenient multiresolution format matches multiple scales found visual scenes mirrors multiple scales processing human visual system locus image points fall boundary line region left left image pyramid composite image defined sample sample levels expanded wilson bergen mechanism model threshold special vision vision research vol rca engineer nov dec anderson alternative burt pyramid algorithm memo preparation burt adelson laplacian pyramid compact image code ieee transactions communication compp burt yen multi-resolution flowthrough motion analysis rca technical report prrl-tr- ogden adelson computer simulations oriented multiple spatial frequency band coring preparation burt adelson multiresolution spline application image mosaics acm transactions graphics vol authors left bergen anderson adelson burt joan ogden received mathematics illinois champaignurbana physics maryland coming princeton plasma physics laboratory post-doctoral research associate continued work nuclear fusion specializing plasma theory simulation started consulting company working variety applied physics problems december began working advanced image processing research group recently joined edward adelson received degree summa cum laude physics philosophy yale degree experimental psychology michigan dissertation dealt temporal properties photoreceptors human eye adelson research human motion perception digital image processing postdoctoral fellow york adelson joined rca laboratories member technical staff part advanced image processing research group advanced video systems research laboratory involved developing models human visual system image-processing algorithms image enhancement data ompression adelson published dozen papers vision image processing made numerous conference presentations awards include optical society america adolph lomb medal rca laboratories outstanding achievement award member association research vision opthalmology optical society america phi beta kappa contact rca laboratories princeton tacnet peter burt received degree physics harvard unversity degree massachusetts amherst conducted research sonar acoustic imaging devices navy underwater systems center london conn london england postdoctoral fellow studied natural vision computer image understanding york bell laboratories maryland member engineering faculty rensselaer polytechnic institute joined rca david sarnoff research center member technical staff head advanced image processing group contact rca laboratories princeton tacnet charles anderson received degree physics california institute technology harvard anderson joined staff rca laboratories princetion work involved studies optical microwave properties rareearth ions solids studies produced optically-pumped mirowave maser spectrometer acoustic radiation -to -ghz range awarded rca fellowship research oxford year fellow american physical society returning rca involved television displays leader subgroup developing electron-beam guides flat-panel television displays march appointed fellow technical staff rca laboratories august december head applied mathmaical physical sciences group january returned full time research member vision group maintaining role task force leader studies stylus disc interface january spent weeks regents lecturer invitation physics department ucla rca part-time member technical staff research interests rca include applications pyramid algorithm problems noise reduction data campression texture generation contact rca laboratories princeton research developed model structure primate visual system retina striate cortex research hopfield model associative memory contact rca laboratories princeton tacnet james bergen received degree mathematics psychology california berkely biophysics theoretical biology chicago work concerns quantitative analysis information processing human visual system chicago involved development model spatial temporal processing occurs early stages system bell laboratories murray hill work concentrates effect visual system structure extraction information visual image current work includes basic studies visual perception perceptual considerations design imaging systems contact rca laboratories princeton tacnet adelson pyramid methods image processing 
multiresolution spline application image mosaics peter burt edward adelson rca david sarnoff research center define multiresolution spline technique combining images larger image mosaic procedure images splined decomposed set band-pass filtered component images component images spatial frequency hand assembled bandpass mosaic step component images joined weighted average transition zone proportional size wave lengths represented band finally band-pass mosaic images summed obtain desired image mosaic spline matched scale features images coarse features occur borders blended gradually large distance blurring degrading finer image details neighborhood border categories subject descriptors computer graphics picture image generation image processing enhancement general terms algorithms additional key words phrases image mosaics photomosaics splines pyramid algorithms multiresolution analysis frequency analysis fast algorithms introduction combine images larger mosaic arisen number contexts panoramic views jupiter saturn assembled multiple images returned earth voyager spacecraft similar landsat photographs routinely assembled panoramic views earth detailed images galaxies nebulae assembled multhe work reported paper supported nsf grant ecsa shorter description work published proceedings spie vol applications digital image processing international society optical engineering bellingham washington authors address rca david sarnoff research center princeton permission copy fee part material granted provided copies made distributed direct commercial advantage acm copyright notice title date notice copying permission association computing machinery copy republish requires fee specific permission acm acm transactions graphics vol october pages burt adelson fig pair images represented pair surfaces plane problem image splining join surfaces smooth seam distortion surface tiple telescope photographs cases mosaic technique construct image larger field view level detail obtained single photograph advertising computer graphics technique create synthetic images possibly unrelated components technical problem common applications photomosaics joining images edge visible slight differences image gray level extended boundary make boundary noticeable gray level differences frequently unavoidable due factors differences camera position image processing prior assembly technique required modify image gray levels vicinity boundary obtain smooth transition images images joined considered surfaces image intensity corresponds elevation plane problem illustrated figure stated surfaces gently distorted joined smooth seam term image spline refer digital techniques making adjustments good image spline make seam perfectly smooth preserve original image information safe fully satisfactory splining technique found image mosaics produced attempt removacm transactions graphics vol october multiresolution spline application image mosaics fig weighted average method avoid seams mosaics constructed overlapped images image multiplied weighting function decreases monotonically border resulting images summed form mosaic weighting functions shown dimension width transition zone critical parameter method ing visible boundaries magnitude gray level difference mosaic boundary reduced extent judicious choice boundary location splining overlapped images match improved adding linear ramp pixel values side boundary obtain equal values boundary smoother transition obtained technique recently proposed peleg smoothest correction function constructed added image mosaic eliminate edge differences technique practical large images correction functions computed iterative relaxation algorithm concerned weighted average splining technique begin assumed images joined overlap compute gray level points transition zone weighted average points image suppose image left images splined point expressed dimension simplify notation weighting function decreases monotonically left figure splined image clear choice weighted average technique result transition smooth ensure location boundary invisible width transition zone small compared image features boundary step image gray level albeit blurred step hand large compared image features features images superimposed transition zone photographic double exposure acm transactions graphics vol october burt adelson extremes illustrated figure attempts spline synthetic images stars original images figures pixels identical slight shift vertical position slight shift gray level differences arise optical distortions misalignments actual photographs due differences atmospheric conditions photographic development photomosaics obtained joining left half figure half figure attempt smooth image transition boundary sharp edge figure images combined method weighted average narrow transition zone edge appears blurred remains visible figure images splined broad transition edge longer visible stars double exposed transition zone figure size transition zone relative size image features plays critical role image splining eliminate visible edge transition width comparable size largest prominent features image hand avoid double exposure effect zone larger smallest prominent image features choice satisfies requirements star images figure diffuse background small bright stars constraints stated precisely terms image spatial frequency content suitable selected images splined occupy narrow spatial frequency band rough requirement stipulate comparable size wavelength lowest prominent frequency image smaller spline introduce noticeable edge hand avoid double exposure effect larger wave lengths highest prominent frequency component images ensures room multiple features transition zone limits exceeded noticeable degradation general conclusion band width images splined roughly octave important images occupy octave splined approach proposed images decomposed set bandpass component images separate spline appropriately selected performed band finally splined band-pass components recombined desired mosaic image call approach multi-resolution spline obtain image shown figure decomposing image frequency bands important range frequencies original covered uniformly bands overlap practical matter set low-pass filters applied generate sequence images band limit reduced image image one-octave steps band-pass images obtained simply subtracting low-pass image previous image sequence ensures complete coverage spatial frequencies means final mosaic obtained simply summing band-pass component images acm transactions graphics vol october multiresolution spline application image mosaics fig common artifacts weighted average techniques demonstrated attempts spline synthetic images stars figure differ gray level slight vertical shift seam visible left half figure joined half figure adjustment gray level shown figure seam visible weighted average technique narrow transition zone figure transition zone wide features zone double figure artifacts due gray level mismatch low spatial frequencies due position mismatch high frequencies avoided multiresolution method figure acm transactions graphics vol october burt adelson fig one-dimensional graphical representation iterative reduce operation pyramid construction section present highly efficient pyramid algorithm performing required filtering operations section show pyramid structure ideally suited performing splining steps basic pyramid operations sequence low-pass filtered images obtained repeatedly convolving small weighting function image technique image sample density decreased iteration bandwidth reduced uniform one-octave steps sample reduction means cost computation held minimum figure graphical representation iterative filtering procedure dimension row dots represents samples pixels filtered images lowest row original image node row computed weighted average subarray nodes shown nodes array computed pattern weights process iterated obtain sample distance doubled iteration successive arrays half large dimension predecessors imagine arrays stacked result tapering 
data structure pyramid original image measures pyramid levels sample density resolution decreased level level pyramid reason call local averaging process generates pyramid level predecessor reduce operation original image reduce gij wmng generally pyramid levels constructed image measures rows columns integers acm transactions graphics vol october multiresolution spline application image mosaics pattern weights generate pyramid level predecessor called generating kernel weights chosen subject constraints computational convenience generating kernel separable dimensional function symmetric shown figure normalized final constraint stipulates level node contribute total weight level nodes combining constraints find considered free variable equivalent weighting functions clear level node pyramid represents weighted average subarray level nodes turn represents average subarray level trace weights pyramid node back original image discover equivalent weighting function convolved directly original image node values level convenient discuss pyramid-based computations terms equivalent weighting functions iterative reduce process considerably efficient computations equivalent weighting functions properties important filtering splining operations scale functions doubles level level pyramid shape change function shape depend parameter generating kernel functions triangular shape functions resemble gaussian probability density function convolution gaussian effect low-pass filtering image pyramid construction equivalent convolving image set gaussian-like functions produce set filtered images importance multiple filter interpretation refer sequence images gaussian pyramid suppose samples separated unit distance samples level separated distance shown width equivalent weighting function covering image samples times sample distance figure equivalent weighting functions centered level sample points overlap image pixel contributes level-l samples dimension contributions image pixel summed result unity result equal contribution property generating kernel gaussian shape summation properties functions construct weighting functions needed image splining acm transactions graphics vol october burt adelson fig equivalent weighting functions shown centered level sample points left figure weight points weights summed uniform unity obtained left monotonic transition center weighting functions image splining constructed figure figure suppose node left half weight nodes half figure sum functions function decreases monotonically transition zone width equal times level sample interval property pyramid-based multiresolution spline functions explicitly computed laplacian pyramid gaussian pyramid set low-pass filtered images order obtain band-pass images required multiresolution spline subtract level pyramid lowest level arrays differ sample density interpolate samples array subtracted lowest array interpolation achieved reversing reduce process call expand operation image obtained expanding times expand expand gij terms integers contribute sum note size size original image acm transactions graphics vol october multiresolution spline application image mosaics define sequence band-pass images expand higher level array subtract define node gaussian pyramid obtained directly convolving weighting function image node obtained directly convolving image difference gaussian-like functions resembles laplacian operators commonly image processing refer sequence laplacian pyramid summation property steps construct laplacian pyramid reversed recover original image top pyramid level expanded added recover array expanded added recover alternatively write expand sum procedure construct mosaic image set splined band-pass components boundary conditions reduce expand operations special attention edge nodes reduce performed generating kernel edge node level extends edge level nodes reduce expand performed augmented rows nodes side values assigned nodes reflection inversion edge node node left edge set treatment boundaries effect extrapolating images derivative constant edge node derivative multiresolution spline splining overlapped images multiresolution spline algorithm defined simply terms basic pyramid operations introduced section variations method splining overlapped nonoverlapped square imin fact equivalent weighting functions laplacian pyramid slightly expand operation level acm transactions graphics vol october burt adelson ages splining images arbitrary shape modifications tasks apparent begin suppose spline left half image right-half image assume images square measuring pixels side overlap completely spline achieved steps step laplacian pyramids constructed images step laplacian pyramid constructed copying nodes left half nodes nodes half half nodes center line set equal average nodes center line level laplacian pyramid step splined image obtained expanding summing levels result applying procedure star shown figure note transition image halves smooth blurred step edge figure doubling figure figure spline landsat images san francisco figures images identical diffuse background noise added simulate effects differences atmospheric conditions image processing construct mosaic left half image joined half spline boundary easily visible figure multiresolution spline edge completely removed figure shows result splining images apple orange figures mosaic obtained spline figure obtained spline shown figure case transition component images made slightly gradual addition averaging laplacian nodes center line nodes side center nodes averaged ratio weights splining process repeated separately red green blue image color components smooth transition obtained large step gray level apple orange halves pyramid-based splining procedure equivalent weighting functions play dual role domain image act interpolation functions level samples boundary image halves act splining functions images splined identical mosaic obtained pyramid-based splining imacm transactions graphics vol october multiresolution spline application image mosaics fig spline applied landsat images san francisco left half figure joined half figure spline boundary visible figure boundary visible multiresolution spline figure age sense splining procedure introduce image distortion shown figure extends sample distance side level sample point transition distance splining frequencies represented lth pyramid level splining regions arbitrary shape steps outlined generalized constructing mosaic image regions arbitrary shape assume regions splined contained images completely overlap nodes laplacian pyramids component images combined form laplacian pyramid image mosaic introduce additional pyramid structure order determine nodes average binary image size pixels inside region splined region steps multiresolution spline modified page acm transactions graphics vol october burt adelson fig spline combine images left half apple figure combined half orange figure figure obtained acm transactions graphics vol october multiresolution spline application image mosaics spline shows orange apple differ considerably gray level color smooth transition obtained multiresolution spline figure acm transactions graphics vol october burt adelson step build laplacian pyramids images step build gaussian pyramid region image step form combined pyramid nodes weights step obtain splined image expanding summing levels gaussian pyramid serves purposes convenient method determining nodes pyramid level lie mask area image softens edges mask effective low-pass filter spline overly sensitive position mask relative pyramid sample points nodes fall mask edge receive percent weight procedure outlined previous section nodes distance sample positions side mask edge combined weighted average values figure technique figure figures show original images eye hand figure shows region image splined image figure shows end result spline hand 
eye embedded palm splining nonoverlapped images images overlap joined weighted average technique nonetheless satisfactory spline obtained images abut overlap image extrapolated boundary form overlapped transition zone width transition zone significant fraction width image extrapolation formidable task multiresolution spline technique extrapolation performed separately frequency band pyramid algorithm samples extrapolated edge level fact type extrapolation handling boundary conditions construction gaussian laplacian pyramids steps spline application splining nonoverlapping images shown figure begin single image mosaic pixel blocks central array blocks shown figure block reconstructed highly compact transform code case represents image rate bits pixel block transform coding low bit rate produces prominent block boundaries addition severe image degradation task remove boundaries means multiresolution spline original image array blocks attempting spline extrapolation add row bottom sides block resulting pixel blocks fit laplacian pyramid structure overlap image pixel side step spline acm transactions graphics vol october multiresolution spline application image mosaics fig spline combine oddly shaped regions images portion figure region mask figure inserted portion figure mask region figure procedure construct separate laplacian pyramid blocks pyramids joined single pyramid nodes overlapped edges pyramid level averaged lmn lth level laplacian pyramid constructed nth block mth row blocks block boundaries equal multiple level lmn integer part integer part block boundary level node average ljlj lmn acm transactions graphics vol october burt adelson fig multiresolution spline remove block boundaries block transform encoded image figure shows image block transform encoded rate bits pixel array blocks shown array pixels blocks treated separate nonoverlapped images obtain splined result shown figure image quality remains low low bit rate code perceptually prominent block boundaries completely eliminated average computed boundary nodes bottom level node represents extrapolated simply reconstruction expand sum process yields image shown figure note block boundaries completely removed image low quality due low bit rate original block encoded image splining technique summary discussion multiresolution spline technique combining images larger image mosaic procedure images splined decomposed set band-pass filtered component images component images spatial frequency band assembled band-pass mosaic step component images joined weighted average transition zone proportional size wave lengths represented band finally band-pass mosaic images summed obtain desired image mosaic spline matched scale features images coarse features occur borders blended gradually large distance blurring degrading finer image details neighborhood border basic steps multiresolution spline illustrated figure case left half apple figure splined half orange acm transactions graphics vol october multiresolution spline application image mosaics figure column images figure shows high medium low frequency components half apple note high frequency components extend slightly midline low frequencies extend considerably images summed number components shown half apple bottom obtained figure figures center column show components orange figures hand column obtained summing orange apple components spatial frequency band computations linear final mosaic figure obtained summing half apple figure half orange figure summing composite band-pass images hand column components shown demonstrated multiresolution spline variety image mosaic examples cases eliminated visible seams component images true component images orange-apple irregular shape hand-eye multiresolution approach avoids artifacts blurred edge double exposure effect obtained simple single resolution weighted average shown figures implementation pyramid algorithms filtering splining operations pyramid structure uniquely suited present task highly efficient filter requiring arithmetic operations adds multiplies image pixel produce full set low-pass images weighting functions spline implicit pyramid computation explicitly matched frequency band represented pyramid similar image extrapolation required splining nonoverlapped images provided boundary condition standard pyramid construction algorithm sum multiresolution spline appears practical general technique forming image mosaics pyramid turn offers unifying structure required filtering splining steps performed easily efficiently acknowledgments professor william pearlman providing image figure joan ogden james bergen assistance producing apple-orange picture figures burt fast filter transforms image processing comput image process burt fast algorithms estimating local image properties comput vision image process burt adelson laplacian pyramid compact image code ieee trans commun com- acm transactions graphics vol october burt adelson fig contributions band-pass filtered images apple-orange mosaic figures show highmedium- low-frequency componentsof orange obtained expanding levels laplacian pyramid figures constant added band-pass imageso zerovalues gray negative values dark image contrast increased improve visibility note low-frequency components bleed center line high-frequency components half apple figure obtained summing figures acm transactions graphics vol october multiresolution spline application image mosaics band-pass components pyramid representation components orange shown figures figures kshow band-pass mosaics obtained summing apple orange components frequency band final mosaic figure obtained eitherby summing band pass components figures summing half orange apple figures acm transactions graphics vol october burt adelson dunne burgess voyage mariner national aeronautics space administration marr hildreth theory edge detection proceedings royal society london milgram computer methods creating photomosaics ieee trans comput moik digital processing remotely sensed images national aeronautics space administration netravali linb picture coding review proc ieee peleg elimination seams photomosaics proceedings conference pattern recognition image processing dallas tex aug tanimoto pavlidis hierachical data structure picture processing comput image process received june revised january accepted january acm transactions graphics vol october 
midterm examination computer vision november problem scoremax score total midterm exam fall camera projection true false orthographic projection twoparallel lines world parallel image conditions line viewed pinhole camera vanishing point infinity scene point coordinates perspectively projected image coordinates coordinates giveninmillimeters camera coordinate frame camera principal point coordinates assuming aspect ratio pixels camera focal length camera note aspect ratio defined ratio width height pixel midterm exam fall camera calibration showhow projection point planar scene world coordinates topixel coordinates inanimage plane represented planar affine cameramodel conditions affine transformation viewing planar scene howmanydegrees freedom solvefor minimum number calibration points needed estimate calibration parameters effects planar affine transformation onparallel lines midterm exam fall edge detection compare cannyedge detector laplacian-of-gaussian log edge detector questions operators isotropic non-isotropic describe operator terms order derivativesthat computes parameters defined user operator detector produce long thin contours briefly explain midterm exam fall featuredetection description wewant method corner detection images intensity voxel describe ageneralization harris corner detector tomasi-kanade corner detector giving main steps algorithm including test decide voxel corner point sift descriptor popular method describing selected feature points based local neighborhood properties theycan matched reliably images assuming feature points previously detected sift feature detector briefly describe main steps creating sift feature descriptor givenfeature point scene image sift descriptor invariant insensitive midterm exam fall hough transform ransac running favorite stereo algorithm assume produced dense depth map pixel input image scene point coordinates camera coordinate frame assume image scene single dominant plane front wall building unknown orientation smaller numbers scene points trees poles street part plane plane equation givenby define hough transform based algorithm detecting orientation plane scene define dimensions hough space procedure mapping scene points coordinates pixel space howthe plane sorientation determined describe howthe ransacalgorithm detect orientation plane scene scene points midterm exam fall epipolar geometry stereo top viewofastereo rig image optical centerleft optical center left image drawthe front views dimages show label approximate positions epipoles epipolar lines configuration cameras givenaconjugate pair points pixel coordinates inthe left image pixel coordinates inthe image stereo pair giv equation describes relationship points intrinsic extrinsic parameters cameras howmanyconjugate pairs points needed solvefor unknowns equation disparity gradient constraint solving stereo correspondence problem scene depth recovered stereo pair images circumstances images produced weak perspective projection images single perspective projection camera rotated optical center 
reconstruction motion estimation apparent contours circular motion k-y wong mendon cipolla department engineering cambridge proc british machine vision conference introduction problem modeling objects turntable motion recovery reconstructioncontour tracking motivation files rich source information apparent contours epipolar parameterisation reconstruction volume intersection reconstruction error sec radius motion recovery method capture images calibration grid multiple positions turntable image capture replace grid object capture views calibration camera position solve camera projection matrix calibration track corner points grid fit circles points solve axis rotation track apparent contours b-spline snake track object contour epipolar parameterization find correspondences apparent contours epipolar parameterization experiment correspondences found intersections b-splines epipolar lines profiles tracked b-spline snakes wire frame triangulation points computed triangulation pairs point correspondences shaded model results boyer cipolla triangulation experimental results reconstruction vase demo experimental results reconstruction head model motion recovery method epipolar geometry general motion epipolar tangencies affine approximation epipolar tangencies circular motion epipolar tangencies symmetry properties surface revolution symmetry properties image surface revolution symmetric image screw axis harmonic homology pointing screw axis bilateral symmetry harmonic homology epipolar geometry circular motion fixed entities image screw axis horizon epipoles epipolar lines related wef epipolar geometry correspondent epipolar tangents related intersect image screw axis epipolar tangents image intersect epipole preliminary results conclusions simple triangulation computationally simple cope planar surfaces motion estimation requires epipolar tangencies divide conquer trivial initializations optimizations low-dimension search space 
crcxctd cpd crcwcxd cxcrd cxcpd cbd crd ctd ctcsd bybabyctd dectd dedbcpd bwcpd cxctd bac ctd crcwctd btd cxaccrcxcpd ctd cxcvctd crctc cpcqd cpd bvd ctd cbcrcxctd crctbwctd cpd ctd bvd ctd cdd cxdactd cxd bvcpd cqd cxcscvctb bcbebdbfbl cwcpcrcpb bdbgbkbhbf abbscpcxbad cxd bactcsd csd cwbscrd bacrd ctd bactcsd btcqd cpcrd cxcrd cxcpd crd ctcxd cpcrd ctcrd cxd cpd cpd cpd cvctcscxd csctcud cpcqd crd accvd cpd cxd bxcpcrcw cpd cxd ctd ctd ctd ctcs cxd cxd cpd ctcpd cpd crct csctd cpd cwct csctcud cpcqd crd accvd cpd cxd cxd ctd ctd ctd ctcs cqdd cxd cvb cxczct crd ctcrd cxd cqctd dbctctd cpcxd cpd cfcwcxd cxcrd cxcpd crd ctd dbctd cxd csd crctcs cqctd ddctcpd cpcvd cwctdd cwcpdact cqctctd cqd cpcsd cpd cxctcs cpd crcwcxd cpd ctcrd cvd cxd cxd cqd ctd cccwcxd cwcpd cqctctd csd cxd cpd cwct crd cpd cxd cpd cscx crd cpd crcwcxd cxcrd cxcpd crd ctd cxd cpcvctd cwcxd cpb ctd dbct ctd ctd cpd crcxctd cpd cvd cxd cwd cud acd cscxd cwct cqctd cvd cqcpd cpd crcw cxcrd cxcpd crd ctd cpd cxd cpcvctba cccwct cxd cxd cwct cpd cvd cxd cwd cxd cxd cpd cpd cxd cxd cpczctd cuctdb ctcrd csd cpd crcw csctd dbcxd acdact ctd cpd cfcxd cwcxd cxd dactcs cpd cvd cxd cwd cxcrd cxcpd crd ctd dacxcsct cpcrd cxcrcpd cpd dbctd cud cud cpd ctdbd cud cpd cxd cpd cxdact csctd crd cxd cxd cqcyctcrd cpd crctd ctd cpd cpd cxd cpcqd cud cpd cvctd ctd cxcr cxd cpcvct ctcrd cvd cxd cxd cqb ctd cfct cxd cpd cwct cpd cpcrcw cxd cxd csctd ctd cpd crcpd bdba csd crd cxd cwcxd cpd ctd dbct crd cxcsctd cwct cqd ctd cpd crcwcxd cxcrd cxcpd crd ctd cxd cpcvctd cpd cxd csd crctcs cqdd bycxd crcwd ctd cpd bxd crcwd cpcvctd cjbkcl ctcpd bfbc ddctcpd cpcvd cxcrb cxcpd crd cxd crd ctcrd cxd cpd cpd cpd cvctcs cxd csctcud cpcqd crd accvd cpd cxd cccwct csctcud cpcqd crd accvd cpb cxd cxd ctd ctd ctd ctcscqddd cxd cvb cxczctcrd ctcrd cxd cqctd dbctctd cwct cpd cccwct cpd crcwcxd cqd ctd cxd cwcpd acd cscxd cwctcqctd cpcrctd ctd cud cwctd cpd cxd cpd cxd cpcvctb dbcwctd ctd cwct cpd cxd ddd cucpd cpcrctd ctd csctd ctd csd cqd cwd cwd dbdbctd ctcpcrcw cpd cpd crcwctd cwctcxd cpcvctcpd csd cwd dbdbctd cwctd cpcrctd ctd cpcvd ctctdbcxd cwd cwctcsctcud cpcqd ctcrd accvd cpd cxd cccwct cpcxd crd cxcqd cxd dbd czcxd cwct csctdactd ctd cpd crcxctd cpd crcwcxd cpd cvd cxd cwd cud cpd cpd crd cpd cud cxcrd cxcpd crd ctd btd ctcrd cscpd ddcrd cxcqd cxd cfd ctcs cxd cpd cqddbwbtcac btcrd cpcrd bwbtbtc bcbdb blbjb bcbdbcbg cxd dacxcscxd cvcpbucpddctd cxcpd cxd ctd ctd cpd cxd cud cwctd cqd ctd cxd ctd cuc btc ctd cxd cpd cxd cccwctd cxd cvd cxd ctd cud cpd cvd cxd cwd cxd cxd cpd cxd cwctd ctd ctd cwcpd cxd cpd cxcrczd cpd cxd cpd crcwcxd ctcpcrcw cpd ctd cpd cpd ctd ddb dbcxd cwd cpcrb crd cxd cvcud cwctd ctd cpd cxd cwcxd cqctd dbctctd cpd cpcrb cxcrctd cwctcpd cvd cxd cwd cxd cpd cucpd acd cscxd cvd cwctcvd cqcpd ddcqctd cpd crcwd cucpd cxcrd cxcpd crd ctd cpd cxd cpcvctcxd cyd cpcuctdb ctcrd csd cxcrd cxcpd crd ctd dacxcsct dbctd cud cud cpd ctdbd cud cpd cxd cpd cxdactcsctd crd cxd cxd cud cqcyctcrd cpd csd crctd ctd cpczb cxd cwctd cxd cpcqd cud cpd ddcvctd ctd cxcrcxd cpcvct ctcrd cvd cxd cxd cqd ctd cjbkcl cpd cxd cjbjclb cxcrd cxcpd crd ctd dbctd ctcsd cud cvctd ctd cxcrd csctd cpcwd cpd cucpcrctba cbcxd cvctd ctd cxcr cpd ctcpd cpd crct csctd dbctd ctcs cud cpd crcw cpd cwctctddctd cwb ctd crbab cpd csd cwctcrd ctcrd cxd cqctd dbctctd cpd ctd ctcs cwcpd cwct cvctd ctd cxcr cpd cpd cvctd ctd cwct cpd dbcpd cucpcrctb cxczctba cjbdbiclb cxcrd cxcpd crd ctd dbctd ctcsd csctd cvctd ctd cxcrd crctd ctcrd crctd crcwcpd cpdbcpd ctd cucpd dbdd cpcxd ctd byd ctdccpd ctb dbcpd ctd cucpd dbcpd csctd ctcscpd cpcqd cxcvcwd dbcwcxd ctd ctcvcxd dbcpd ctd cxd cwct cxcscsd cscpd czctd ctcvcxd crczd cccwct ctd cwd cwcpd dbctd ctd ctd cxd cwcxd cpd ctd crcpd cqctd ctcsd crctd dact cqd cpcs cpd cvct cvctd ctd cxcr ctcrd cvd cxd cxd cqd ctd cxd crd cscxd cvd cwd ctcxd dactd cxcvcpd ctcscxd cjbkb bjb bdbiclb cpd dbctd cpd cwct ctcrd cvd cxd cxd cucpd cxcrd cpd ctcsd cqcyctcrd byd dbcxd cjbkclb csctcud cpcqd crd accvd cpd cxd cxd ctd ctb ctd ctcscqddd cpcxd dbcxd ctd ctd cpd cxd cwcxd cqctd dbctctd cwctd crcpd cxd cwct cpd bvctd cpcxd cpcxd cpd cpd crd ctcrd ctcs cqdd dacxd cpd ckd cxd cvd cwcpd cpd cqct cxd cvcxdactd ctd cpd cxdact crcpd cxd dbcxd ctd ctcrd cwct cwctd cccwctd ckd cxd cvd crcpd ctd cud crct cscxabctd ctd czcxd csd ctd cpd cxd cwcxd cqctd dbctctd cwctd crcpd cxd cud cwctd cpd byd ctdccpd ctb cxd cwct ctd csctd cxd cbctcrd cxd bibabdb cwctcqd csddd cpd cucpd ctd cpd ctcrd ctcrd ctcsd cvctd cwctd cqddadctdccxcqd ctd ctdad ctcyd cxd cccwcxd cpd dbd cwct cxd cqd dact dbcwcxd ctd cpcxd cxd crd ctcrd ctcsba cwctcrcpd csctd cxd cbctcrd cxd bibabeb cwctdbcwctctd cucpcrcpd cpd crd ctcrd ctcsd cwctcqd csddd cxd cvcpadctdccxcqd ctd cxd cpd cxcrcyd cxd cccwcxd cpd dbd cwctdbcwctctd dactcpd cvd cwctcqd cud cwct crcpd cqd cxd cpd ddd cwctd cscxd ctcrd cxd cccwctd cpd crcwcxd cvd cqd ctd cpd ctcscxd cjbkclcxd dad dactd cxd cxd cxdecxd cvcpcrctd cpcxd ctd ctd cvddcud crd cxd dbcwcxcrcwd cpczctd cxd cpcrb crd cqd cwd cwctckd cxd cvaycud crctd cqctd dbctctd cpd cpd csd cwct cpd crcwd cpd cxd ddcud ctcpcrcwd cpd cxd cxd cxdecxd cvd cwcxd ctd ctd cvddcxd cpcwcpd csd cqd ctd cxd cvctd ctd cpd cfctcsctdactd cpd ctdbd cxd cwcxd cxd cxd cxdecpd cxd cqd ctd cud cpd cpd cpd crd cpd cud cxcrb cxcpd crd ctd cccwcxd ctd cwd csd ctd cxd ctd cwcpd cwctd ctd ctd 
cpd cxd cwcxd cqctd dbctctd cpd cud cpd ctctd crd ctb cpd cwcpd cwctd ctd cpd cxd cwcxd cqctd dbctctd ctcpcrcwd cpcxd cud cpd cqctd cpd cxcrd cpd cud cccwct ctd cxcrd cxd ctct crd cpd dbd ctd cpd cscpd cscsddd cpd cxcrd cvd cpd cxd cvd ctcrcwb cxd ctd cpd csd cwctd ctd cxcrd cxd cxd cwctcud cud cwctd cpcxd dbcxd ctd cpd cxd cwcxd cqctd dbctctd cpd cpd dbd ctcpd dactd cvctd ctd cpd cxdecpd cxd cucscxd cpd crctd cpd cud bvd cqcxd cxd cvd cwctd dbd ctcrcwd cxd ctd dbctd cqd cpcxd cpd cpd cvd cxd cwd cwcpd cpd cucpd cpd cxd ddd cpd crcwcxd cvctcpcrcwd cpd ctd cpd cpd ctd ddb dbcxd cwd crd cxcsb ctd cxd cvd cwctd ctd cpd cxd cwcxd cqctd dbctctd cwctd cpd cactd cxcrd cxd cvd cwctd ctd cpd cxd cwcxd cqctd dbctctd cpd cpd ctct crd cxd cpd cpd cqctcrcpd cwct crd ctcrd cxd cqctd dbctctd cpd cud cpd ddcpd cxd cpd ctd cqcyctcrd cud cpd ctctcrd ctd csb cxd cvd cwctd czctd ctd cpd crd ctba cpd ddd cwctd czcxd csd cud cqb cyctcrd crcpd cqctd ctd ctd ctd ctcscpd cpd cpd cvd cpd cwb dbcwctd ctd cwctd ctcxd ctcrctd cpd cpd cwcpd cpd cwctd cwctd cpd cpd ctcrd ctcrd ctcs byd cxd cpd crctb cxd csctd cxd cvcpcrcpd cwctdbcwctctd cpd csdbcxd csd dbd crcpd cpd cqct cxd cxd ctcs ctd cpd cxdactd cwct cqd csddba cccwct ctd cxcrd cxd cwcpd dbctcxd ctd cwctcud cud cwctd cpcxd dbcxd ctd cpd cxd cwcxd cqctd dbctctd cpd cxd cxd cpd cpd dbd cqd cpcs cpd cvctd cud cqcyctcrd cqctd csctd ctcsb crcwcpd cwd ctdbcxd cwadctdcb cxcqd ctd ctdad ctcyd cxd cpd dbctd ctcxd csctd cxd cvcpd ctd cpd adctdccxcqd ctd cxd cpd cxcrcyd cxd cpd dbctd ctcxd csctd cxd cvcpcrcpd cfctd ctd ctd ctdccpd ctd cxd cpd cxd cvd cwcpd cwctcpd cvd cxd cwd ctd cpcqd ctd crcxctd ctcpd crcwd cucpd cxd cpcvctcud cwctcvd cqcpd ddcqctd cpd crcw ctd cpd cxdactd cvctd ctd cxcr cqcyctcrd crcw cpd ckcscpd czb cwcpcxd ctcs cucpcxd czcxd ctcs ctd dbctcpd cxd cqd cwcxd cpd cqd cpcrczd cpd ayd cpckd ctcscrcpd ayba beba cactd cpd ctcs cfd btd ctcscxd cwctcxd csd crd cxd dbctd ctd cwct cpd ctcud cpd ctb dbd czcpd bycxd crcwd ctd cpd csbxd crcwd cpcvctd cjbkclb cxd cvd cwctd cpd crcwb cxd cqd ctd cpd ctd ctd cvdd cxd cxd cxdecpd cxd cccwctdd cpd ctcscpcsddd cpd cxcrd cvd cpd cxd cvcpd cpcrcwcpd dbctcsd cwctd ctba cccwctd ctcpd ctd dbd czctddcscxabctd ctd crctd cxd dbd czba bycxd dbctcud crd ctcrcxaccrcpd ddd cwct crcpd cud ctctb crd ctcsd cqcyctcrd cqctcrcpd ctd cwctdd cpd ctcpd cxd ctd ctd cxd crd cpd cwcpd crcpd cqct crcxctd ddd ctcrd cvd cxdectcsba cbctcrd csb dbctcsctdactd cpd ctd cwd csd cwcpd cxd cxd ctcpd cpd cwctd cwcpd cpcsd cpd cxcrcxd cwctd cqctd cud cxb cqd ctd cpcrctd ctd cud ctcpcrcwd cpd cccwcxd cscxabctd ctd crctcxd cxd cpd cqctcrcpd ctd cwctd cpcsd cpd cxcrd cxd ctd ctd cwd cscxd cxd ddd cud cpcrd cxcrcpd ctcud crcpd ctd cwctcxd csd crd cxd dbctcscxd crd ctcsd cwctdbd czd cucjbdbiclcpd cjbjclb cqd cwd cudbcwd ctd cxcrd cxcpd crd ctd cjbdbiclb crd cpd cxcrd cxcpd crd ctd cpd ctcs cpd cpd cvd cxd cwd cxd ctd ctd ctcsba cccwct dbd cxd cjbjcl ctd cxd cxd cpd ctd ctd cvdd cud crd cxd cwct ctd ctd ctcs cwctd ctba cwctcxd dbd cxd ctcpcsd cucwcpdacxd cvcrd ctcrd cxd cqctd dbctctd cpcxd cud cpd cpd cpd cpd ctcrd cpcxd ctcsdbcxd cwd ctd ctcrd cpcrctd cpd crd cscxb cpd ctd ddd ctd cwcxd cpczctd cxd cxd cxcqd ctd ctd ctd ctd cqb cyctcrd dbcxd cwd ctd cwcpd ctcpd cxcrd cpd cxd cxd ctd dactd cwctddd ddcvcxdactcwctd cxd cxcrcpd cvd cxd cwd cwcpd csd ctcrctd cpd cxd ddacd csd cwctcvd cqcpd cxd cpd cxd cpd cpcrcwcrcpd acd csd cwctcvd cqcpd ddd cxd cpd cpd crcwcud cwcxd czcxd csd cud csctd cqddd crcpd cxd cvctcpcrcwd cpd ctd cpd cxdactd cpdacxd cpd cpd cwcpd cpcrd cpd cwctcrctd cpd crd cscxd cpd ctd ddd ctd cccwctd cpd cpd cpd cpcrcwctd ctcrd cvd cxdecxd csctd ctd ctd ctd ctcs cqdd cpd cpd crd ctcrd cxd crd cpcxd cqctd dbctctd cwct cpd crcw cpd cjbdbdclb cjbeclb cjbdbeclb cjbicl cpd cjbdbhclba cfcwcxd cwctd ctcrcwd cxd ctd cpcscsd ctd cxd cxd cpd cqd ctd cwctd cpd crcwcxd cvd cud cxcrd cxcpd crd ctd ctczctddcscxabctd ctd crct cxd cwcpd cwctdd cpd cpczctcwcpd csb ddctd csctcrcxd cxd cpd dbcwctd cwctd cvcxdactd crcpd cxd cxd cwct cxd cpcvct crcpd crd cpcxd cvcxdactd cpd cccwctd ctd ctd cwd csd cwctd ctctczcpd ctd cud crcwcsctb ctcrd ctcsd cpd cwcpd cpd ctcpd cpd cvctcscxd cpdacpd cxcscrd accvd cpd cxd ctd dactd cpd crcw dacpd cxcs crd accvd cpd cxd cpd ctcpd ctcs cpd cqctcxd cvctd cpd ddcvd csba cccwctd ctd cucqcxd cpd ddcsctcrcxd cxd cxd dbctd cxd ctcsd cxd cpd cxd cpd cxdactd cpd csctd crcwcpd cwct ctd ctcs cxd cwcxd cpd ctd cpd cxd cwctd cpd cxcrcpd cxd cpd crcwcxd cxcrd cxcpd crd ctd cjbkb bdbib bjclba cfcxd cxd ctcvctd ctd cxcrd cpd csctd cxd cxd cqctd ctd csctd ctd cxd ctcwd dbctd ctcpcrcw cpd cpd crcwctd cpd ctcpcrcw crcpd cxd cpd cwctd cwcpd acd cscxd cpcrcrctd cpcqd crcpd cxd cud cwct cpd cccwct dbd czcxd cjbdbjclcxd cxd cxd cpd cxd cwcpd cxd ctd ctd ctd cpd cxcrd cpd ctcsd cqcyctcrd cxd cvcpd ctctd cucsctd ctd csctd crcxctd cqctd dbctctd cpd btcvcpcxd cwd dbctdactd cpd dacpd cxcs crd accvd cpd cxd cwct cpd cpd ctcpd ctcs cpd ctd cpd cvd csba byd cwctd ctb cwct cpd cvd cxd cwd ctd ctd ctcs cxd cjbdbjcl cxd cud crcpd cxd cxd cxdecpd cxd ddb cpd ctcsd cpcvd cqcpd cpd crcwd cwcpd ctcpd crcwctd dactd cpd cxcqd ctd cpcrctd ctd cud cwctd csctd cpd cxd csd ctcwctd ctba bfba cccwct cactcrd cvd cxd cxd byd cpd ctdbd cfctcpd ctcrd crctd ctcsdbcxd cwd ctd ctd ctd cxd cvd cxcrd cxcpd crd ctd cxd cvd cwctd crcwctd ctacd ctcscxd cjbkclba btd cxcrd cpd crb ctcxd ctd 
ctd ctd ctcscpd cpcrd ctcrd cxd cud cpd dbcxd cwcrd ctcrb cxd cqctd dbctctd crctd cpcxd cpcxd btd cpd cpd dbcpddd ctdcd ctd crcwcpd csctd cxd cxd ctd cucpcvd cpd cwbzbpb cebnbxb dbcwctd cwct dactd cxcrctd cuda bnbmbmbmbnda crd ctd csd cwct cpd cpd csd cwctd ctcxd cpd ctcscvctb bnda bebx cud ctcpcrcwd cpcxd cucrd ctcrd ctcsd cpd cpd csda btd cxd cpd crctd cpd cpd cxd cpd cxd cpcvctcxd ctcrcxacctcscqddcp crcpd cxd byd cwct ctdccpd ctd cxd cwcxd cpd ctd ctcrcxacctd cxd cxd cpd cxd cpd csd crcpd ctd cpd cpd ctd ctd cud cxd ctd dbd cscxd ctd cxd cpd cpd byd ctcpcrcwd cpd cpd cpd crcwcrd cud crb cxd bnd ctcpd ctd cwd dbdbctd cwct cpd cpd crcwctd cwct cxd cpcvct dbcwctd cpcrctcs cpd crcpd cxd cccwct ctdccpd ctd cxd cwcxd cpd ctd ctcucpcxd ddd cxd ctd ctd cpd ctd cpd crcwcxd cvcud cwcxd crd cud crd cxd cwctd cxcqcxd cxd cxctd dbd cscqctd ctd crd ctdc cpd ctd cpd crct csctd ctbacvbab cjbdbkclb ctcscvct cqcpd ctcs ctcrcwd cxd ctd ctbacvbab cjbdbfclb cccwct crd ctcrd cxd cqctd dbctctd cpd cxd cscxcrcpd ctd cpd cxd cwcxd cqctd dbctctd cwctcxd crcpd cxd byd ctcpcrcw crd ctcrd cxd bnda cwctd cxd csctcud cpd cxd crd cud crd cxd cxcy bnd ctcpd cxd cvcwd dbdbctd cwct crcpd cxd cuda cpd csd cuda cpcvd ctctdbcxd cwd cwctd cqcyctcrd csctd byd cxd cpd crctb cxd cwctd ctd csctd cxd cbctcrd cxd bibabdd cwctcrd ctcrd cxd ctd cud crctd cwcpd cwctcqd csddd cpd cucpd ctd cqctcpd cpd cvctcscxd cpcwd cpd cxczct crd accvd cpd cxd btcrd accvd cpd cxd bpb bnbmbmbmbnd ctcrcxacctd cpd crcpd cxd cud ctcpcrcwd cud cwctd cpd bece dbcxd cwd ctd ctcrd cwctcxd cpcvctba cccwctcvd cpd cxd acd csd cwctcqctd crcwcrd accvd cpd cxd cpd ctcpb ctcs cqdd cwct cpd crcw crd cud cwct cxd cscxdacxcsd cpd cpd cpd cqdd cwct cpcxd dbcxd crd cud cwct crd ctcrd ctcs cpcxd cpd byd dbcxd cvcjbkclb dbctctdcd ctd cwcxd cqctd cpd crcwcpd bpcpd cvd cxd bnda bebx cxcy bnd bece bnd bdb cccwctcud cud cwcxd cxd cxd cxdecpd cxd cqd ctd cxd cxd ctcvctd ctd cpd cpd cxd cpd ctcpd cxd cqctd cqd ctd cxd crd ctd dacxd cxd crcw cpd btc ctd cxd cpd cxd cpd czd cacpd csd bycxctd csd cabyd cpd cxd cxdecpd cxd csddd cpd cxcr crd csctd cpczctd cfcwcxd cwct cud cwct cxd cxd cxdecpd cxd cqd ctd cxd cwcpd ctcsdbcxd cwd cwctd ctd cwctd cqd ctd cwctd crb ctd cud cwctcvd cpd cwcpd csd cpcrctd cud cxcqd ctcrd accvd cpd cxd cscxabctd cqd cpd cxcpd ddba cccwcxd crcwcpd cvctd cwct crd cpd cxd cpd cpd ctd cud cwctd cqd ctd cxd cvctd ctd cpd cud cwct cxd cxd cxdecpd cxd cxd bdb cpczctd ctdcd ctd cxcpd cxd ctb dbcwctd cxd cwct cqctd cscxd crd ctd dacpd ctd cud ctcpcrcw cpd cxd cwct cqctd cudactd cxcrctd cxd cwctcvd cpd cwba dbctdactd dbcwctd cwctcvd cpd bzbpb cebnbxb cwcpd cpd ctd cxcrd ctcscud cwctd cqd ctd crcpd cqct dactcs crcxctd ddba byd cxd cpd crctb dbcxd acd csctd cpczctd cwctcvd cpd cwcxd cxd ddcpcrcwcpcxd dbcwcxcrcwctd cpcqd ctd cpcsddb cpd cxcrd cvd cpd cxd cvd cxd cwcpd cpczctd cxd cjbdclb ctd dactd dbcxd cwd cpczctd cwctd cxd cxd cxdecpd cxd cxd csd dactd cpd cpd cqctd cud crcpd cxd cud ctcpcrcwdactd ctdcb ctbacvbab cwct crd ctd crcpd cxd cwct ctcxcvcwcqd cwct cxd cpcvctcvd cxcsb cccwcxd cxd cxd cxdecpd cxd cxd cwctd cxd ctd cpd ctcsd cxd cwct crcwcpd cvctcxd ctd ctd cvddcxd cpd cccwct czctdd cpd crcxctd cxd cxd cwcpd cwctd cqctd cud crcpd cxd cqctd cpd cpd cwctcsddd cpd cxcrd cvd cpd cxd cvd cxd cxd cpcsd cpd cxcrcxd btd cwctd crctd crcxctd cpd cvd cxd cwd cwcpd cqctctd cxd ctb cxcrd cxd cvcs cxcy cpd cxcrd cpd cud cccwcxd cpd cpcrcw cwcpd cqctctd cpd cxcrd cpd ddcud cxd cud cxd ctd ctcrctd dbd czd cabyd cjbhb bdbgclb cpd cvd cxd cwd dbctd ctcrd cpcxd cqd cwctd crd ctd cud cwctcvd cpd cwcpd csd cwctcud cucs cxcy byd cwctd cpd crcwcxd cvd cqd ctd cwcpd dbctcrd cxcsctd cwctd ctb cwct cvd cpd crd crcpd cxd cxd crcxd cqct cpd cqcxd cpd ddba dbb ctdactd cpd cscxd crd ctcs cxd cwct cxd csd crd cxd cpd cqcyctcrd crcpd cpd cpd ddcqctd ctd ctd ctd ctcsd cxd cvd ctctd crd ctd budd ctd cxcrd cxd cwct cvd cpd cwd ctctd cxd cxd cpd czcxd csddb cpd cxcrd cvd cpd cxd cvcrcpd cqctcpd cxctcsd ctctd cpd cxd csd cud crcwcpcxd cpczcxd cwct cxd cxd cxdecpd cxd cqd ctd ddd cxcpd cpd cwctd cwcpd ctdcd ctd cxcpd cxd ctba cccwct ctcrcxd ctcrcwb cxd ctcxd csctd crd cxcqctcscxd cbctcrd cxd bgba dbctdactd cwcxd cpd cvd cxd cwd cxd cpcrd cxcrcpd cqctcrcpd ctd cwctd cqctd cud cxcqd ctd crcpd cxd cud ctcpcrcwd cpd cxd cvctd ctd cpd ddd cxd ctd cpd cvctba cfcwctd ctcpd crcwcxd cvcud cwctcqctd cxcqd ctd cpd crcwd cucpd cxcrd cxcpd crd cpd cxd cpcvctb cwctd cxd cpd cpd dbcpddd cxd cxd cwcxd crcpd cxd cpcrctba bxdactd cxcu cwctd crcpd cxd cpd cpd ctd ctd cpd crd cpd ctd cpd ctcs cpdd dbcxd bhbc dacpd ctd ctcpcrcw cud dcb cpd cpd cxd ddb cpd cpd cxd cpd cxd cpd crcpd cxd cpd ctcpcsddd dactd cxdc cxd cxd cccwd cpcxcvcwd cud dbcpd cpd cxcrcpd cxd csddd cpd cxcr cvd cpd cxd ctctd cxd cpcrd cxcrcpd cfctcxd dactd cxcvcpd ctcpd ctd cxcrd cxd cud cwctd cpcxd dbcxd ctcrd cud crb cxd cxcy cwcpd ddcxctd csd cxd cxd cxdecpd cxd cpd cvd cxd cwd dbcwcxcrcw cxd cpd cwctd cwcpd cxd ctba cccwcxd cpczctd cxd cxd ctd cpcrd cxcrcpd acd csd cwct cvd cqcpd cxd cpd cpd crcw cpd cxcrd cxcpd crd ctd cpd cxd cpcvctb cwctcscxd crd ctd cxdecpb cxd cud cwctd cxcqd ctd crcpd cxd cxd cxdactd ddd cwctd cpcxd dbcxd crd cud crd cxd ctcpd ctd cwctcsctcvd ctctd dbcwcxcrcwd cwctd csctd cxd csctcud ctcsb cxd crd ctcpd cxd cpd crd ctcrd ctcs cpd cpd dactcs cpdbcpddcud cwctcxd cxcsctcpd ctd cpd cxdactd crcpd cxd cfctd 
ctd cxcrd cxcy cwctcud dbcxd cvcud cxcy bnd bpczcc cxcy cycx beb dbcwctd cza czcxd ctcrcpd cwcpd cqctddd cwct ctd cxctd cxcsctd cxd ddb ddd ctd cpd cxcpd cvd cxd ctd cpd cxd ddb cpd cscc cxcy bncc cycx cpd ctcxd dactd cxcqd ctcud crd cxd cfctcud cwctd ctd cxd ctd cwcpd cxd cqct cxcqd ctd cscxd crd ctd cxdectcc cycx cxd cvd cxcsba cxd cxdactd ddb cwct csctcud cpd cxd crd cxd ctd cxcrd ctcs cqctcpcscxd cpd crctcqctd dbctctd ctd cpd cpd ctd ctd cxdectcsd crcpd cxd dactcrb cccwct cud crd cxd cxcy cpd cycx cvctd cwctd crcpd cwct cxcsctcpd ctd cpd cxdactcrd accvd cpd cxd cud cwctd cpd cpd csda cccwcpd cxd cxcud cpd csd ctcrcxcuddcxcsctcpd crcpd cxd cuda cpd csda dbcxd cwd ctb ctcrd ctcpd cwctd cwctd cxcy bpcc cycx cccwctd cwctd ctcpd ctd cwct csctcvd ctctd csctdacxcpd cxd cud cwcxd cxcsctcpd ctd cpd cxdactcrd accvd cpd cxd cbctcrd cxd bibabddbctd cwd dbcwd dbcs cxcy crcpd cqctcwcpdact cxczct adctdccxcqd ctdad cyd cxd cqctd dbctctd dbd cpd cpd cxd cbctcrd cxd bibabe dbct cwd cwd cxd crcpd cqctcwcpdact cxczctcpadctdccxcqd ctd cxd cpd cxcrcyd cxd bgba crcxctd cxd cxd cxdecpd cxd cwcxd ctcrd cxd dbctd cwd dbcwd dbd ctcsddd cpd cxcrd cvd cpd cxd cvd acd csd cwctcrd accvd cpd cxd bpb bnbmbmbmbnd cxd cxb cxdecxd cvctd cpd cxd bdb dbcwctd cwctcvd cpd cwbzcxd cpd ctctba cccwcxd cxd cpd cxd cpd crctd cucpczd dbd crd cpd cucsddd cpd cxcrd cvd cpd cxd ctcrcwd cxd ctd cpd cscxd cpcvctd ctd cpd cxdecpd cxd cud cwctd ctcrcwd cxd ctcud crcwcpcxd cwcpd cxd ctcs cxd dacxd cpczctd cqd ctd ctbacvbab cjbdclb cccwct crd cpd cxd cxd dad dactd cud crd cxd ctcpcrcw dbcwcxcrcw ctcrcxacctd cwct cqctd crcpd cxd cpd dbcxd ctd ctcrd cwctd cxcqd ctd crcpd cxd cucpd cwctd cpd bzcxdactd cpd ctctbzbpb cebnbxb ctd bece cqctcpd cpd cqcxd cpd cxd crcwd ctd dactd ctdcba byd cwcxd ctcpcrcwdactd ctdcda bece cwcpd csctd cwcs dbcwcxcrcw cxd cwct cqctd ctcscvctd cqctd dbctctd cxd cpd csda cpd csd cwctcsctd cwd cuda cxd bcb cccwctcrcwcxd csd ctd dactd ctdc cpd cwd ctcxcvcwcqd cxd dactd cxcrctd cxcu cpd ddb csctd cwcs bdbabxdactd dddactd ctdcda cwctd cwcpd cwctd cwcpd cxd ctd cpd ctd dbcwcxcrcwcxd cwctd ctcxcvcwcqd cxd cvdactd ctdcd cucsctd bdba bycxd dbctd ctd cwcpd cud cpd dddactd ctdcda dbcxd cwd crcwcxd csd ctd cxbactbab cpd ddd ctcpcud cud cwctd ctctb cwct cqctd crcpd cxd cud cwcpd dactd ctdc crcpd cqctcrd ctcs cpd cud crd cxd cwct crcpd cxd cyd cxd cpd ctd cccwct ctcscvct cxd crcxcsctd cxd bnda cpd cwd cwct crd cxcqd cxd cwct ctd ctd cvddcxd bdb cxd cxcy bnd bnd ctd crctd cwctd cpd cxd cud cwctcqctd crcpd cxd cuda cvcxdactd crcpd cxd cuda cxd bpd cxd cxcy bnd bnd bfb cpd cwct cqctd crcpd cxd cuda cpd cud crd cxd cud crcpd cqct cqd cpcxd ctcs cqdd ctd cpcrcxd cwct cxd cxd cwct ctd cpd cxd cpcqd dact dbcxd cwcpd cvd cxd byd cpd dddactd ctdcda cwctd cwcpd cwctd cpd ctd cwcpd cwct cud crd cxd cxd czd dbd cud ctcpcrcw crcwcxd cccwcpd cxd cwct cpd cxd ddd cud cwctcqctd crcpd cxd ctcpcrcwcrcwcxd cxd czd dbd dbcxd ctd ctcrd cwctd crcpd cxd cuda cccwctd cwct cpd cxd ddd cud cwctcqctd crcpd cxd cuda cvcxdactd cwctd crcpd cxd cxd cpd ctd cxd bpd cxd cxcy bnd bnd bebv bgb btcvcpcxd cwctcqctd crcpd cxd cuda cpd cpcud crd cxd cud crcpd cqct cqd cpcxd ctcs cqdd ctd cpcrcxd cwct cxd cxd cwct ctd cpd cxd cpcqd dact dbcxd cpd cvd cxd cwcpd cwcxd ctd cpd cxd cqd ctd bfb cqctcrcpd cud ctcpcu csct cwct dactd cxd crcwcxd csd ctd cxd cxd ddctd ddba bycxd cpd ddb cud cwctd cxcubu cxd czd dbd cud ctcpcrcw crcwcxd csda bebv cwctd cwctcqctd crcpd cxd cud cwctd cxd bpcpd cvd cxd bnd bebv cccwcpd cxd cwct cxd cxd cxdecpd cxd cxd bdb crcpd cqct ctdcd ctd ctcs ctcrd cxdactd cxd ctd cwct cud crd cxd cud ctcpcrcwdactd ctdcda bece cwctd cwcpd cwctd cccwctd ctcrd cxdact ctd cpd cxd cxd ctcrcxcudd cpd cpd cvd cxd cwd ctd cscqctd cwctd cpdccxd csctd cwd csctcxd cwctd ctctba byd ctcpcrcwd csctda dbcxd cwcsctd cwcsb crd ctbu dbcwctd cxd cwctd cpd ctd cuda cccwctd ctcpd ctcpd ctcpcud csctd crd ctcpd crcpd cqctcrd ctcscpd cxd bfb ctdcd cud ctcpcrcwd csct dbcxd cwcsctd cwcsa bdcrd ctbu dbcwctd ctcpcvcpcxd cxd cwctd cpd ctd cuda bvd ctcpd ddbu cwcpd cqctctd crd ctcscud ctdactd ddcrcwcxd csda cuda cqctcrcpd ctd cwctcrcwcxd csd ctd cpd ctd cucsctd csba cccwd crcpd cqct crd ctcs cpd cxd bgb bvd cxd cxd cwcxd cpd ctd csctcrd ctcpd cxd cvd cwctcsctd cwd cxd ctcpcrcwcxd cvd cwct cpd csctd cwdectd buctd cxcsctd crd cxd cvctcpcrcwbu dbctcpd crd ctbu dbcwcxcrcwcxd cscxcrcpd ctd cwctcqctd crcpd cxd cuda cpd cud crd cxd cxd cpd ctd cpd ctd crcpd cxd cqd cpcxd ctcs cqdd ctd cpcrcxd cwct cxd cxd dbcxd cpd cvd cxd btd cwcxd cxd dbct crd cwct cxd cpd crcpd cxd cwct cccwct cxd cpd crcpd cxd cpd cwct cpd crcpd cqct crd ctcs cqdd cpcrcxd cvcud cwct ctcpcrcw ctcpcuba cccwcpd cxd dbctczd dbd cwctd cxd cpd crcpd cxd cuda cvcxdactd cwctd crcpd cxd cucxd cpd ctd cpd cwct cxd cpd crcpd cxd ctcpcrcwd cpd ctd cxd dbczd dbd cpd cxd cvcud cwctd cccwctd dactd cpd cxd cvd cxd ctd cud cwcxd cpd cvd cxd cwd cxd dbcwctd ctc cxd cwct cxd ctd ctd cxd ctcsd crd ctcpcrcwbu cpd csbu cfct dbd cwd dbcwd dbd crd ctbu cpd csbu cxd ddcxctd cscxd cvcpd cpd cvd cxd cwd dactd cpd bhba bzctd ctd cpd cxdectcs bwcxd cpd crct ccd cpd cud ccd cpcscxd cxd cpd cscxd cpd crctd cpd cud cpd ctcsctacd ctcscud ctd cxd cpcvd cxcsba bzcxdactd cpd cxd ctd buaibzb cwctcscxd cpd crct cpd cud ctcrcxacctd cud ctcpcrcw crcpd cxd cxd cwct cvd cxcsb cwct cscxd cpd crctd cwctcrd ctd cxd cxd cwctd ctd deb bpd cxd dbbebu czdea dbcz csctd crd ctd cwctcscxd cpd crctd cpd cud cxd cxd crd ddctdcd ctd ctcscpd deb bpd cxd 
dbbebz czdea dbczb dbb bhb dbcwctd dbb cxd cpd cxd cscxcrcpd cud crd cxd cud ctd cqctd cwcxd cxd cwctd ctd bub cwcpd cwcpd cwctdacpd ctbcdbcwctd dbbebucpd cwctd dbcxd ctba cccwct cpd cvd cxd cwd ctd ctd ctcs cxd cjbfb bgcl crd bhb crcxctd ddb cxd dbd czd cxcu dbct ctd cpcrct cwct cxd cscxb crcpd cud crd cxd cqdd cpd cpd cqcxd cpd cud crd cxd cwct cvd cxcsba cccwcxd cvcvctd cvctd ctd cpd cxdecpd cxd cscxd cpd crct cpd cud cud crd cxd cpd cud dbd ctd cwct cscxd cpd crctd cpd cud cpcud crd cxd csctacd ctcsd dactd cpcvd cxcs cqct deb bpd cxd dbbebz czdea dbczb cub dbb bib cxd cxdactd ddb cud ctcpcrcwcvd cxcsd crcpd cxd deb cwcxd cud crd cxd acd csd crcpd cxd cwcpd cxd crd cpd cud dbcwcxcrcw cub dbb cxd cpd cwcpd cscxabctd ctd crctd cqctd dbctctd cwct dacpd cpd dbd crcpd cxd cpd ctcqd csctcscqddd cwctcscxd cpd crctcqctd dbctctd cwctd crcpd cxd ctcvcpd csd ctd cucwd dbd cxcrczd ddd cwctcud crd cxd crcwcpd cvctd cpd cxcrd cpd cxcud cwctd ctcxd cpd crcpd cxd dbcwctd ctcub deb cwcpd cpd dacpd ctb dbcxd cwcpdact cpd dacpd cpd cpd ctcpd cqddd crcpd cxd bzcxdactd cwct ctd cxcrd ctcs cud cxcy cxd ctd cpd cxd beb ctd cpd cxd bgb crcpd cqctd ctdbd cxd ctd cpd cpcvctd ctd cpd cxdectcscscxd cpd crct cpd cud bpbw cxcy dbcwctd cub dbb bpd bncc cycx dbb cycx dbb cpd cwct cvd cxcs ctcrcxacctd cscxd crd ctd ctd cycx cwcpd cpd crd cxcsctd ctcs csd cxd cwct cxd cxd cxdecpd cxd cwcxd cxd ctcrcxacctd cpcscxd crd ctd ctd ctd cud crcpd cxd cccwct cpd cvd cxd cwd cxd cjbfb bgcl cud crd cxd bhb cxd bwb cxd ctcud crcpd cxd cpbwb cscxd ctd cxd cpd cvd cxcsba btd cyd ctcsb cwcxd cpd cpd cvd cxd cwd dbd czd cud bib cvctd ctd cpd cwct cscxd ctd cxd cxd cpd acdcctcs cqctd cwcxd cpd ctd cwctcvd cxcscxd cwctcud cscxd ctd cxd cpd cpcrctd cub dcb cpd cpd cxd ddb cpd cpd cxd cpd cxd aib cpd crcpd ctd csctd crd ctb bib csctd cwctc cxd cwcxd cud cscxd ctd cxd cpd cpd cpd ctd ctd cpcrctb cpd cpd cpdd bwcjdcbnddbnaibnd cxd cxd cxd cxcpd cxdectcsd cwctdacpd ctd cud cwctcud crd cxd cub dbb cccwctacd cpd dactd cwcxd cpd cpddcvd ctd cud cwctd cxd cxd cjdcbnddbnaibnd crcpd cxd cxd csctd cucxd crd ctcpd cxd cvdcb cwctd ddb cwctd aib cwctd crd cxd bwcjdcbnddbnaibnd clbpd cxd bwcjdcbnddbnaibnd clbn bwcjdca bdbnddbnaibnd clb bwcjdcbndda bdbnaibnd clb bwcjdcbnddbnaia bdbnd clb bwcjdcbnddbnaibnd bdclb cccwcxd crd cpd cxd cxd csd ckcxd cpcrctayb crcwcpd cvcxd dacpd ctd cxd cwct cpd cpdd cpd cxd cvd ctd cwcpd cwct dacpd cxd cscxcrcpd ctd cwctd ctcxcvcwcqd cxd cwctdcb cscxd ctd cxd cud cwctcpd cpddb cpd csd cud cwba cccwctcrd cpd bncz bncz cpd cscz cpcrcrd cud cscxabctd ctd crcpd ctd cud cwctcpdcctd cccwctd ctcrd csd cpd dactd cwct cpd cpdd cvd ctd cud cwct cpdccxd cjdcbnddbnaibnd crcpd cxd cxd csctd cucsctcrd ctcpd cxd cvdcb cwctd ddb cwctd aib cwctd crd cxd bwcjdcbnddbnaibnd clbpd cxd bwcjdcbnddbnaibnd clbn bwcjdcb bdbnddbnaibnd clb bwcjdcbnddb bdbnaibnd clb bwcjdcbnddbnaib bdbnd clb bwcjdcbnddbnaibnd bdclb cccwcxd cpd cvd cxd cwd csd ctd crd cxcsctd cwctcucpcrd cwcpd aicxd ctb cxd cscxcrba cbd ctcrcxcpd cwcpd csd cxd cvd cud cwctcqd cscpd ddcrcpd ctd cpd csd dbd cpcscscxd cxd cpd cpd ctd crcpd cqctd ctd cud ctcsd cwcpd csd ctd cwcxd ctd cxb cscxcrcxd ddba bvd cxd cvd cwctcvctd ctd cpd cxdectcscscxd cpd crctd cpd cud csctd cpd ddc crcpd cqctcpd dccxd cpd ctcsd cxd cvd cxd cxd cpd crctcsd ctd cccwct ctd cxd cpd dccxd cpd cxd cwcpd acdcctcs ctd crctd cpcvctctd ctct cjbfb bgclb cccwcxd dactd cwct cqd ctd cucrd cxd cvbu cxd cxd ctba cccwctcpd cvd cxd cwd crcpd cqct ctcpd cxd cscxacctcs czctctd cpcrcz cwct crcpd cxd cwcpd cvctd cpcvcpd ctcsd ctcpcrcwd cxd cxd cxd cwctcvd cxcsb dbcwcxcrcwcpd dbd crd ctbu cpd dbctcrd ctbu biba cqcyctcrd csctd cccwct ctdcd ctd cxd ctd ctd ctcs cxd cwcxd cpd ctd cxd csctd ctd cpd crcpd cwd dbd cxd bycxcvd ctd cpd csbhd ctd ctcrd cxdactd ddba cccwctd cpd cud cwctd ctd csctd cpd ctcyd ctcrd cpd cvd ctd dbcxd cwacdcctcscpd ctcrd cpd cxd cpd cpdactd cpcvctcrd cpd cpcrd dacpd cxcpd crctba dbctdactd cwcxd cvcpcqd cwctd cpd crcwcxd cpd cvd cxd cwd ctd cxd ctd crcwd cxd ctd cpd csctd cccwctd cpd crcpd cqct cpd ddd cwcxd cud dbcwcxcrcw cpd crcw crd crcpd cqct crd ctcsct crcxctd ddcpd ctcpcrcwd cxcqd ctd crcpd cxd cxd cwctcxd cpcvct ctbacvbab crd cxcrcpd ctcs cpd ctcpd cpd crct csctd crd ctcscvctb cqcpd ctcsd ctd cpd ctd ctd crb cccwct crd csctd cud cwct cpd cwct ctd crd cpcrctcsctacd ctcs cxd cjbebcclba cccwct cpdactd cpcvctcrd cuctcpcrcw cpd dbcpd ctd cxd cpd ctcscud ctctdccpd ctcpd csd cwct crd dacpd cxb cpd crct cpd cxdc dbcpd crcwd ctd cqdd cwcpd crd ctd dbct cscxcpcvd cpd cpd cxdc cxd ctcpcs cud crd dacpd cxcpd crct cpd cxdcb cccwctd crcpd cxd cuctcpcrcwd cpd cxd cwctcxd cpcvctcxd csctacd ctcscqddcp bgb ctb dcbnddbnaibnd ctcrcxcuddcxd cvd cwctd cxd cxd cud cwctcrctd ctd cud cpd cwctd cxctd cpd cxd cpd cwct cwctcxcvcwd cud cwct ctcrd cpd cvd ctba cccwctd cpd crcwcrd cpd ctcrd ctcsd cxd cvcpcrd dad cxd czctd ctd crd ctcsd cucpckd cpd crcwayd ctcrd cpd cvd ctctd cqctcscsctcscxd cpd cvctd ckd cpd crcwayd ctcrd cpd cvd ctb cpd cxd cpd ctcscxd bycxcvd ctbdba ccd crd ctcpd cpd crcwcrd cud cpd cpd cpd cpd ddcvcxdactd crcpb cxd dbctacd cvctd ctd cpd ctcpd ctdbcxd cpcvctd cwcpd ctcpd ctd cwd crcwctcpcrcwd cxdcctd cxd cwctcxd cxd cpcvctd cpd crcwctd cwctcrd cud cwctd cpd cxd cvcpd crcpd ctcsd cpcsd cpd cxcrctd cud crd cxd cccwcpd cxd cvctd ctd cpd ctc cqddbm dcbnddb bpd cxd dcbnddb amb dcbnddb amb bnd dbcwctd ctc dcbnddb cxd cwctcrd cud cxdcctd dcbnddb cxd cwctcxd cxd cpcvctb amcpd csa cpd ctd cwctcpdactd cpcvctcrd cpd cscrd dacpd cxcpd crct cucpd cpd cpd csd cxd cpd ctd cqd csd cwctctd ccd crcpd cxd cwct 
image descriptions browsing retrieval carlo tomasi leonidas guibas computer science department stanford stanford abstract arpa image understanding workshop monterey november stanford started bort develop techniques image data base browsing retrieval based picture content queries pictorialdescriptions ofthe desired images formulatedfroma point-and-clickgraphical query editor lets user navigate space description parameters retriever extracts set indices query searches data base ecient approximate nearest neighbor algorithms computational geometry navigator query editor enables user view possibly large set retrieved images browse data base introduction bandwidth today communication systems capacity informationstorage devices makes exchange store large amounts pictures time low cost libraries images movies catalogs maps aerial surveys pictures books journals widely electronic form current retrieval systems make ine bective wealth pictorial information fact moving images by-and-large left uninterpreted growing data bases usefulness information function howwell accessed image data bases useless size stanford started bort develop techniques browsing retrieval based picture content discussed instance gupta jain faloutsos task requires investigation fundamental issues image representation paper outline kind system plan build conceptual challenges lie ahead query imagedata base manyforms user speci idea image leading focussed retrieval problem generic exploratory interaction browsing system case user system formulate query systemthen searches data base matches returns image set empty small large design browsing retrieval system address issues query language primitives constructs query query editor tools formulate query edit image indexing arrange images data base generate indices fast retrieval search algorithms indices respond query output presentation displaythe results ofthe query large number images retrieved design query language image indexing scheme closely related retrieval system match queries indices propose unify aspects cning language description images queries query pictorial description looked queries cimage-like far-reaching consequence decision image retrieval occurs syntactic level attempt made extract semantics images therebyavoid imagerecognition worthy pursuit shown elusiveover decades computer vision research price wepay choice provide pictorial language rich dexible user describe potentially large complexsets images small number constructs time enable user build description intuitiveway successive cnements design graphical user interface retrieval system paramount importance queries images language browsing set images similar navigating queries query editor system presentation retrieved images data base browser based uni ced notion navigating space descriptions fact query formulated starting tentative description modifying parameters satisfaction controls parameter-space navigation tool output retrieval displayed query-sensitive manner emphasizing parts image relevant query letting user navigate images perceptually meaningful data base browsing design image indexing scheme entails cning part image description pre-stored provide reliable retrieval cues general language combines primitives words constructs sentences toavoid combinatorial complexity indices retrieval language primitives constructs similar text retrieval based words sentences salton finally search algorithms break descriptions indices images recombine retrieved sets images query result conclusion identi ccation image query descriptions lowers level processing syntactic matching leads concept description language unifyingtheme ofour project design ofprimitivesis computer vision problem entails identifying imagefeatures describe image perceptually meaningful cning composition constructs strong section outline criteria design indices primitives image description language section discuss structure query including language compositionconstructs issues design search algorithms problem displaying query results indices success enterprise depend extent whichwe discover eciently compute indices image correlate perceptual characteristics image partition kinds objects sizes colors textures mutual positions indices capture user remembers image describe image hope image query drawn user yield similarindices lead portion index space original image hashes evidence caelli notions object size relative position color texture primitives index selection computational representation indices require research exploration desirable indices compute remainrelatively unchanged transformations image induced localized environment small lighting conditions viewpoint scene observed part research area exploring ways make textures canonical small projective ene deformations experimenting techniques drawn leu lee malikand rosenholtz binford andlevitt shi tomasi sato cipolla primary class index functions wehave exploring coe ecients basis functions wavelet representations image multiresolution analysis active area research lastfour cveyears yielded goodresults anumber applications image compression mallat daubechies cohen amultiresolution representation natural image query application variety reasons user maywantto search adata base images query muchlower resolution image suchas obtained video camera setting user draws imagequery tools natural parts desired image berent levels detail search outdoor scene grassy celd lower part image blue sky low detail type house speci area image high detail setting treat imageindices signi ccant waveletcoe ecients bsaythose valueis abovesome threshold mightdowell matching videoimageto forthe general image retrieval application drawbacks existing wavelet technology wavelet coe ecients computed sensitive exact positioning image data image plane area exploring canchoring wavelet basis elements image independent image translation possibility simply compute set centered wavelet coe ecients pixel convolving image copy centered pixel wavelet function translation class problem wavelet basis makes tradeo spatiallocalizationand frequency localization daubechies describing image hierarchically spatial localization important upper levels hierarchy coarse segmentation image objects frequency localization importantinthe lower levels describing texture objects workingon classes ofwavelet functions mix match functions good spatial localization level good frequency localization cnal possibly problem remark application important store coe ecients reconstruct image wewant store wavelet basis indices functions coe ecients large convey signi ccant perceptual spatial frequency aspect image wemay fact choose record indices number berent redundantwavelet functions goal image compression reconstruction test similarity images wavelet coe ecients image indices standard wavelet bases respect sharp color intensity boundaries image bectively averaging capples oranges essential search object query image object berent background nal image end exploring ways build multiresolution image representations edge information berent scales averaging implied anymultiscale representation image edges alternate approach problem consists crst coarse segmentation image regions treat region separate image build multiresolution structure standard wavelet basis region pixels treated ctransparent bsowe build twomultiresolution structures region representing usual color fintensity ffrequency data representing transparency alpha computer graphics lingo separates foreground background searching composite structures individual regions image display reduced version berman queries previous section primitives imagedescription shown traditional features patterns queries expressed terms primitives pictorially subject query crst phase research restricting classifying types images speci objects instance wewant distinguish natural landscape picture city portrait end texture plays major role intend textures complex queries capture essence type image pictures manhattan expect accept retriever return images printed circuit boards similar city pictures regularity type textures response reduces large data base substantially smaller set images city pictures good progress made indices richvocabulary 
textures colors contour elements contour junctions illustrate query works textural descriptors menus user select texture categories deterministic statistical color edges intensity category texture varies set parameters vector parameter values texture pointinavector space user interface space sparsely sampled provide user examples textures displayed small window screen clicking windows crst coarse-level navigation texture space set cursors multi-dimensional equivalentofajoystick lets user navigate locally continuously adjusting parameter values texture descriptor navigation samples current texture small neighborhood displayed updated orientation similar interaction user select colors contour junctions patterns retrieval patterns interconnected suitable constructs sophisticated visual languages investigated authors instance rabittiand savino discussion relatedissues willuse onlysimplelogical topological next-to operators stronger linguistic component introduced stage basic perceptual computationalissues appropriately addressed search data base images hashed possibly large number indices wehave search problemof retrieving images indices match query image assumption image data base static advantageous spend time organizing make queries ecient cost query output-sensitive depend number images match query overhead term accessing data base wewant make smallas cnitely sublinear number images stored wenowhave geometric problem space determined indices wehave selected complicating factor standard data base queries expect cnd exact matches simplest case near-neighbor searches images indices tolerance query image weintend techniques computational geometry arya mount provide ecient algorithms approximate nearest neighbor problems data base returns images matching query conveys informationabout image returned selected typically matchedimageswillbe returned numberof canonical collections images collection share csame reason matching query weintend exploit additionalstructure displaying results user allowing navigate potential matches returned discussed section display suppose query returns images user maychoose browse order picka order determine query cned modi ced displayof pictures organized appropriatelyfor easy browsing display query-sensitive sense part image caused retrieved emphasized achieved instance displaying uninteresting part image lower resolution brightness rest blowing interesting regions providing ccaricature imagethat dects interest user expressed query pictures arranged space dimensions correspond signi ccant perceptual parameters user enabled navigate space navigating space textures section occur navigating entire data base browsing query provide main dimensions interest navigation navigator query editor conclusion work demonstrate image retrieval syntactic level solve hard problems image interpretation semantic image segmentation image compression time wedo plan drawasheavily previous work areas instance semantic segmentation possibilities good syntactic segmentation algorithms developed early mid-seventies instance horowitz pavlidis view main issues lie cnition good set retrieval indices area whichwehavechosen start research develop crst demonstrations understanding issues solid foundation construction ofe bective retrieval systems provide hints pursuit loftier goal interpreting semantics images acklowledgement leonidas guibas wishes davidsalesin forsuggesting himthe idea ofmultiresolution image representations insightful discussions adamfinkelstein danhuttenlocher davidsalesin yoav shoham gratefully acknowledged arya mount arya mount approximate nearest neighbor queries cxed dimensions proceedings siam symposium discrete algorithms soda pages berman berman bartell salesin multiresolution painting compositing acm siggraph proceedings pages binford levitt binford levitt quasi-invariants theory exploitation arpa image understanding workshop pages caelli caelli bischof liu filter-based models pattern classi ccation pattern recognition cohen cohen daubechies vial wavelets interval fast wavelet transforms applied computational harmonic analysis daubechies daubechies ten lectures wavelets siam philadelphia faloutsos faloutsos flickner niblack petkovic equitz barber ecient bective querying image content technical report ibm almadenresearch center san jose gupta gupta weymouth jain semanticqueries pictures vimsys model proceedings international conferenceonvery large data bases barcelona spain horowitz pavlidis horowitz pavlidis picture segmentation tree traversal algorithm journal acm jain jain editor nsf workshop visual information management systems redwood lee lee mitra krile analysis sequential complex images feature extraction two-dimensional cepstrum techniques journal optical society america leu leu shape normalization compacting pattern recognition letters malik rosenholtz malik rosenholtz computing local surface orientation shape texture curved surfaces technical report ucb fcsd eecs division california berkeley mallat mallat scale change versus scale representation proceedings international conference computer vision pages london england rabitti savino rabitti savino query processing imagedatabases working conference visual database systems budapest hungary salton salton automatic text processing transformation analysis retrieval information addison-wesley pub reading sato cipolla sato cipolla extracting ene transformation texture moments technical report cued ff-infeng ftr department engineering universityofcambridge shi tomasi shi tomasi good features track proceedings ieee conference computer vision pattern recognition cvpr 
ctd cud crd cxd cpd dbd cud cpd cxcpd crd cxd cpd cfct cwctd crd dad dactc dbcxd cwct ckd cpd crcwaybbckd cpd crcwayczctd ctd cpd ctcpcrcwd cxcqd ctd cxctd cpd cxd cpd csd crcpd ctd cvctd ctd cpd ctcpd cpd crcwcrd cud cwctd cpd cpd ctdactd ddd crcpd cxd cccwctcrd ctcrd cxd cqctd dbctctd cpd cqctcwcpdactcscxabctd ctd ddcud cwctd ctd cpd cscrcpd csctd cwctd ctd csctd cqd csdd cpd cpd ctcrd ctcrd ctcscqddadctdccxcqd ctd ctdad ctcyd cxd dbcwcxd ctcxd cwct crcpd csctd cwct dbcwctctd cpd crd ctcrd ctcs cwct cqd csdd cqddadctdccxcqd ctd cxd cpd cxcrcyd cxd cccwctd ctcrd ctcrd cxd cpd ctcsctb crd cxcqctcscxd csctd cpcxd cqctd dbba bibabdba ctd csctd byd cwctd ctd csctd cwctcsctcud cpd cxd crd csctd adctdcb cxcqd ctdad cyd cxd cqctd dbctctd dbd crd ctcrd ctcs cpd figure convolution kernel compute match cost rectangular part figure parts person model coordinate system ideal configuration pair cpcxd cucrd ctcrd ctcsd cpd cxd cxd cpd ctcscxd bycxcvd ctbeba cccwct crcpd cxd cud cwctcyd cxd cxd ctcrcxacctcscqddd dbd cxd cxcy bndd cxcy cpd csb cycx bndd cycx ctcxd cwctcrd cscxd cpd ctcud cpd ctd cuctcpcrcwd cpd cpd cxd cscxcrcpd ctcscqddcrcxd crd ctd cxd bycxcvd ctbecpba cpd cxcsctcpd crd accvd cpd cxd cwctd ctd cxd crd cxd crcxcsctb cpd cxd cpd ctcscxd bycxcvd ctbecqba cccwctcxcsctcpd ctd cpd cxdactd cxctd cpd cxd cxd cvcxdactd cqddai cxcy cwctcpd cvd cqctd dbctctd cwctd cpcxd cpdcctd cxd cwctckcwctcxcvcwd aycscxd ctcrd cxd cccwct cxcsctcpd ctd cpd cxdactd cxdectcxd cvcxdactd cqddd cxcy cwct cpd cxd cwct dbd cwctcxcvcwd bzcxdactd cwctd cqd ctd dactcsd crcpd cxd bpb bnd bndc bndd cpd bpb bnd bndc bndd dbd cpd cwct csctcud cpd cxd crd ctcpd ctd cwct csctdacxcpd cxd cqctd dbctctd cwct cxcsctcpd dacpd ctd cpd cwctd ctd cqd ctd dactcsdacpd ctd bxcpcrcwcyd cxd ctcrcxacctd dbctcxcvcwd cxcy cxcy cxcy cxcy cud cwctcrd cpd crcxcpd ctcsdbcxd cwcsctdacxcpd cxd cxd ctcpcrcw cwct ctd cpd cxdact cxctd cpd cxd cxdect cpd cyd cxd cpd cxcvd ctd cccwd dbct csctacd cwct cpcxd dbcxd csctcud cpd cxd crd cud cwctd ctd csctd cqctb cxcy bnd cxcy cyb cxcy cxcy cyb cvd cvd cvd cxcy cxcy cydc cxcy cycx cxcy cydd cxcy cycx dbcwctd ctd cwctacd ctd cxd cwctcscxabctd ctd crctcqctd dbctctd cwctcxcsctcpd ctd cpd cxdactcpd cvd ctcpd csd cwctd cqd ctd dactcsd ctd cpd cxdactcpd cvd ctb cwctd ctcrb csd ctd cxd cwctcscxabctd ctd crctcqctd dbctctd cwctcxcsctcpd ctd cpd cxdactd cxdect figure parts car model distance joints measured horizontal vertical directions respect orientation cpd csd cwctd cqd ctd dactcsd ctd cpd cxdactd cxdectb cxd cvd cvcud cxdectd cpd cxd cpd csd cwctd cwcxd cscpd cscud cwd ctd cpd ctd cwctcwd cxded cpd cpd dactd cxcrcpd cscxd cpd crctd cqctd dbctctd cwctd cqd ctd dactcscyd cxd cxd cxd cxd cwctcxd cpcvctb cxcy bndd cxcy cud cpd csb cycx bndd cycx cud ctdcd ctd cxd ctd dbctd ctd cxcy bndb cxcy bndb cxcy cqctd cpd cvctdacpd ctd cpd cxcy cqct cpd dacpd ctba cccwd cwct csctcud cpd cxd crd cpddd ctd cpd cxdactd cpd cpd cwct cpd cpd cpcqd cwctcyd cxd cpd cscxd cpd cvctcxcud cwctd cpd cpd ctd cpd cxcvd ctcscpd cwct cyd cxd cwcpdactcscxabctd ctd ctd cpd cxdactd cxdectd cccwctcsctcud cpd cxd crd cqctctdcd ctd ctcscxd cwctcud ctd cpd cxd beb cpd cscxd cpd crct cqctd dbctctd cxcy cpd cycx bzcxdactd cwct crcpd cxd bnd bndc bndd dbct csctb acd ctcc cxcy bpb bnd bndc bndd dbcwctd cxcy cxcy bpbeb cxcy cvd cvd cxcy bpbeb bndd cxcy bndd cxcy bndd cxcy cxcy cxd cscxcpcvd cpd dbctcxcvcwd cpd cxdc dbcxd ctd cxctd cxcy cpd cxcy cpd csca cxd cpd cpd cxdcd cwcpd ctd cud cpd cpd cxd cuai cpcscxcpd cpcqd cwctd cxcvcxd cccwctd ctdbd cxd cxd crd cscxd cpd ctd bndd cxd cscxcrcpd cwct cxd cxd cwct cyd cxd cxd cwct cxd cpcvct crcpd ctcs cpcrcrd cscxd cwct dbctcxcvcwd dbct cwcpd cwctc cscxd cpd crctcqctd dbctctd cxcy cpd cscc cycx cxd ctd cpd cwctcsctcud cpd cxd crd cxcy bnd cyd cvcxdactd cpcqd dactb ddcxctd csb cxd cvcpd ctdcd ctd cxd cpd cxd beb bibabeba bvcpd csctd byd cwctcrcpd csctd cwctcsctcud cpd cxd crd csctd adctdccxcqd cxd cpd cxcr cyd cxd cqctd dbctctd cwct crcpd dbcwctctd cpd cwct crcpd cqd csddba cccwctdbcwctctd cwcpdactcpd cxcsctcpd cxd cxd dbcxd ctd ctcrd cwctcrcpd cqd csddcpd cscrcpd dactcpd cvd cwctcqd cud cwct crcpd dbcxd cwcpcrd cxd cpd cwctcscxd cpd crctcud cwctcxd cxcsctcpd cxd cxd cxczctcxd cwct ctd csctd cwct crcpd cxd cpcyd cxd cxd ctcrcxacctcs cqddd dbd cxd cxcy bndd cxcy cpd cycx bndd cycx ctcxd cwctcrd cscxd cpd ctcud cpd ctd cuctcpcrcwd cpd bac cpd cxcsctcpd crd accvb cpd cxd cwctd cxd crd cxd crcxcsctba cccwct cxcsctcpd ctd cpd cxdact cxdect cxd cvcxdactd cqdd cxcy cwct cpd cxd cwct dbd cwctcxcvcwd cwct cyd cxd ctcscxd cwctcrcpd csctd cwctd cpd cpd dbcpddd cwcpdactd cwct cpd ctd cxctd cpd cxd bxcpcrcwcyd cxd ctcrcxacctd dbctcxcvcwd cxcy cxcy cxcy cud cwct crd cpd crcxcpd ctcs dbcxd csctdacxcpd cxd cxd cwct ctd cpd cxdactd cxdectcpd cscyd cxd cpd cxcvd ctd cfctcsctacd ctd cwctd cpcxd dbcxd csctcud cpd cxd crd cud cwctcrcpd csctd cqctb cxcy bnd cyb cxcy cyb cvd cvd cvd cxcy cxcy cydc cxcy cycx cxcy cydd cxcy cycx dbcwctd ctd cwctacd ctd cxd ctd cwcpd cwct cxctd cpd cxd cuda cpd csda cxd cwct cpd ctb cwct ctcrd ctd cxd cwct cscxabctd ctd crct cqctd dbctctd cwctcxcsctcpd ctd cpd cxdactd cxdectcpd csd cwctd cqd ctd dactcsd ctd cpd cxdact cxdectb cxd cvd cvcud cxdectd cpd cxd cpd csd cwctd cwcxd cscpd cscud ctd cpd ctd cwctcwd cxded cpd cpd csdactd cxcrcpd cscxd cpd crctd cqctd dbctctd cwctcyd cxd cxd cxd cxd cwctcxd cpcvctb ctcpd ctcsdbcxd cwd ctd ctcrd cwctd cxctd cpd cxd cud cwctd cpd ctctbycxcvd ctbfb ctdcd ctd cxd ctd dbctd ctd cxcy bpbd cwctdbcwctctd cwctcrcpd crcpd ddd cxcsctcwd cxded cpd dddbcxd cwd ctd ctcrd cwct cxctd cpd cxd cwct cqd csddba cfct ctd cxcy cqct cpd cvct dacpd ctb cpczcxd cvcpd cvcrd ctcrd cxd cqctd dbctctd cxdectd cud cwctd cpd cpd csdb cxcy cqctcpd cpd ctd dacpd ctb 
cpd dbcxd cvd cwctdbcwctctd cxcsct cpd cwct cqd cwct crcpd cqd csdd dbcxd cwd cxd crd ctcpd cxd cwctcsctcud cpd cxd crd crcwba bzcxdactd cwct crcpd cxd bnd bndc bndd dbct csctacd cxcy bpb bnd bndc bndd dbcwctd cxcy cvd cvd cxcy bpbeb bndd cxcy bndd cxcy bndd cxcy cxcy cxd cscxcpcvd cpd dbctcxcvcwd cpd cxdc dbcxd ctd cxctd cxcy cpd cxcy cpd csca cxd cpd cpd cxdcd cwcpd ctd cud cpd cpd cxd cpcscxcpd cpcqd cwctd cxcvcxd cccwct ctdbd cxd cxd crd cscxd cpd ctd bndd cxd cscxcrcpd cwct cxd cxd cwct cyd cxd cxd cwct cxd cpcvct dbcxd ctd ctcrd crd cscxd cpd cud cpd cwcpd cxd cpd ctcsd cqctcxd cwctd cpd ctd cxctd cpd cxd cpd cwctd cpd dbdbct cwcpd cwct cscxd cpd crct cqctd dbctctd cxcy cpd cycx cxd ctd cpd cwct csctcud cpd cxd crd cxcy bnd cyd cvcxdactd cpcqd dactb ddcxctd cscxd cvcpd ctdcd ctd cxd cpd cxd beb bjba ctd ctd cpd cxd cpd bxdcd ctd cxb ctd cfctcscxd crd ctd cxdectcsd cwctd cpcrctd cud cxcqd ctd cpd crcpd cxd cxd bhbccqd crczctd cud ctcpcrcwd cud cwctdccpd csddd cxd cxd bdbccqd crczctd cud cxdect cpd bebc cqd crczctd cud cxctd cpd cxd cdd cxd cwctd cpd cpd ctd ctd ddd ctd acd csd cwct cqctd crd accvd cpd cxd cpd csctd dbcxd cwacdactd ctd cpd cxd cpbfbebca bebgbcd cxdcctd cxd cpcvct cxd cpcqd bdbcd ctcrd csd cpbgbhbcc dec ctd cxd bycxcvd ctbgd cwd dbd ctcrd cvd cxd cxd ctd cxd cvd cwctd ctd csctd cwcpd dbct crcpd ctcrd cvd cxdect cwct ctd csctd cqd cpcs cpd cvct cxcvcwd cxd crd cscxd cxd cpd dacpd cxctcs ctd dbcxd cwcpd cxd ctcvctd ctd cxcrd csctd cccwcxd cxd cpd ctd cwctcpcqcxd cxd ctcrd cvd cxdect cpd cxcrd cpd ctcs cqcyctcrd bycxcvd cwd dbd ctcrd cvd cxd cxd ctd cxd cvd cwctcrcpd csctd ctd cwcpd dbct crcpd ctcrd cvd cxdectcucpcxd ddcscxabctd ctd czcxd csd cucrcpd csctd cpdbcxcsct dacpd cxctd ctd dbcxd cxd cvd csctd cccwcxd cxd cpd ctd cwctcpcqcxd cxd ddd cud ctd cwd ctcrd cvd cxdectcvctd ctd cxcrd cqcyctcrd crcwcpd cpckd ctcscrcpd ayba bkba bucpddctd cxcpd byd cpd cxd cwcxd ctcrd cxd dbctd ctd cwcpd cwctcqctd cpd crcwcpd ctdcd ctd ctcs cqddctd cpd cxd bdb crcpd cqctd ctcud cpd ctcscpd cwctd cpdccxd ctd cxd cxb btc ctd cxd cpd ctd cud cwctd csctd crd accvd cpd cxd cccwctc btc ctd cxd cpd ctcxd cwctcrd accvd cpd cxd dbcxd cpdccxb cqcpcqcxd cxd ddcvcxdactd cwctcxd cxd cpcvctbm bpcpd cvd cpdc cyc bucpddctd ctd cwctd cxd cxctd bpcpd cvd cpdc cyc bjb cccwct cxd crcpd ctd cxd cud cpd cxd cpcqd cwct cqcyctcrd cwcpd cxd czd dbd cqctcud ctd cqd ctd dacxd cvd cwctcxd cpcvctba cccwcxd cxd cxd cud cpd cxd cxd cvcxdactd cqddd cwctckd cxd cvaycrd ctcrd cxd cqctd dbctctd cpd cccwct cpd cvctd cwct csctcud cpd cxd crd cxd crd accvd cpd cxd cwct ctd cqcpcqd cwcxd crd accvd cpd cxd cwd cscqctba cfctcrcpd crcpd ctd cwcxd cxd cxd cvbm bnda bebx cxcy bnd bkb dbcwctd ctcs cxcy cxd cwctcsctcud cpd cxd crd cpd crcxcpd ctcsdbcxd cwctcscvct bnda cpd csc cxd cpd cpd cxdecpd cxd crd cpd ctd cwcpd cwcxd cxd cwct ddd cxcrcpd bzcxcqcqd cscxd cxcqd cxd ctcs cxd cpd czd cacpd csd bycxctd csctd cxd cpd cxd cqd ctd cccwctd cxczctd cxcwd cscud crd cxd cyc ctcpd ctd cwctd cqb cpcqcxd cxd ddd cud cqd ctd dacxd cvcxd cpcvctc cvcxdactd cpd cpd cxcrd cpd crd accvb cpd cxd cud cwctd csctd cxd cxdactd ddb cwctd cxczctd cxcwd csd cwd cqct cwcxcvcw dbcwctd cwct cpd ctd cpd crct cwct cpd cpcvd ctct dbcxd cwct cxd cpcvct cscpd cpd cwct cxd cxd cwctdd cpd cpcrctcsb cpd dbd cwctd dbcxd ctba bxdactd cwd cvcwd cwctd cpd cucpd csctd cpdd dactd cpd cxd cwct cxd cpcvctb dbct cpd dccxd cpd cwct cxczctd cxcwd cqddcpd cxd cvcxd cxd cxd cpd cwctd csd crd cud cpd crcw cpd cxd cxctd cud cxd cscxdacxcsd cpd cpd cyc cxbpbd bnd blb cccwct cud crd cxd bnd ctcpd ctd cwct cpd crcw cpd cxd cud cpd cpd crcpd cxd cxd cxd cpcvctc cccwcxd cud crd cxd csctd ctd csd figure recognition results person model top left image shows model revolute joints default configuration remaining images show examples globally matching configuration figure recognition results car model top left image shows model prismatic joints default configuration remaining images show globally matching configuration cwctd cpd cxcrd cpd csctd cxd cvd crcwctd ctd ctcscud cxd cscxdacxcsd cpd cpd cccwctd cpd cscpd cscpd cpcrcwd acd cscxd cvd cwctc btc ctd cxd cpd cxd bjb cxd cxd cxd cxdect cwct ctd ctd cvddcud crd cxd cqd cpcxd ctcs cqdd cpczcxd cvd cwctd ctcvcpd cxdactd cvcpd cxd cwd cbd cqd cxd cxd cvb bkb cpd csb blb cxd bjb dbctd cqd cpcxd bpcpd cvd cxd bnda bebx cxcy bnd bece bnd dbcwcxcrcw cxd ctdccpcrd cwct cpd cpd bdb cxcu dbct ctd cwct cpd crcw crd cqctd cwctd ctcvcpd cxdactd cvcpd cxd cwd cud cwctd cpd crcwd cpd cxd cxctd blba byd cfd cwcxd cpd ctd cwct cpd cxd cpd cqcyctcrd crd accvd cpd cxd cxd cqcpd ctcs ctd cwct ctd cpd cxdactd cxd cxd cxd cscxdacxcsd cpd cpd cxd cxd cxd crd cpd cxd cxd cud cpd cxd cpcqd cwctcpcqd ctd crcpd cxd cuctcpcrcwd cpd cxd cwctcud cpd ctb dbd czba cccwcxd cpd dbd cpd cxd ctcvd cpd ctcs cpd cpcrcw csctd cqcpd ctcs cpcrczcxd cpd ctcrd cvd cxd cxd cccwct ctcrd cvd cxd cxd cwct acd cxd cpcvct ctd ctd crct crcpd cqct csd cxd cxb cud cxd cpcqd crcpd cxd cqd ctd ctd cxd cpcvctd cxd cud cpd cxd cpcqd cwctd ctdacxd cpd crcwcrcpd cqctd ctcs cxd ctcpd cxcud cxd cpcqd ctd crcpd cxd cfct cpd cwcpdact ctdb ctd cwcpd cpd cwct csctcud cpb cxd crd cxcy cqctd cwctd cpd ctcscscxd cpd crctcqctd dbctctd cpd cud ctcsd crcpd cxd cccwcxd cqctd ctd csctd cwctcxcsctcpd cwcpd adctdcb cxcqd cyd cxd crcpd cqctckd ctcsay cqdd cpd cpd dbcxd cwd cvd ctcpd crd dbcwcxd cpd cvct csctcud cpd cxd cpd dactd ctdcd 
object recognition pictorial structures daniel huttenlocher computer science department joint work pedro felzenszwalb mit lab talk object recognition computer vision definition overview part-based models objects pictorial structures modeling bayesian framework formalize learning recognition problems efficient algorithms pictorial structures learning models labeled examples recognizing objects images object recognition kind model object shape geometric relations twoor three-dimensional appearance reflectance color texture generic object class versus specific object recognition involves detection determining object visible image localization determining object image recognition goal detect localize multi-part objects arbitrary locations scene generic object models person car articulated objects combine geometry appearance provide efficient practical algorithms pictorial structures local models appearance non-local geometric spatial constraints image patches describing color texture spatial relations pairs patches simultaneous appearance spatial information simple part models non-distinctive history recognition pictorial structures date early practical recognition algorithms proved difficult purely geometric models widely combinatorial matching image features dominant approach early don capture appearance color texture appearance based models tasks templates patches image lose geometry generally learned examples face recognition common application part-based approaches geometric part decompositions solid modeling biederman dickinson person models detect local features apply geometric constraints body structure forsyth fleck local image patches geometric constraints gaussian model spatial distribution parts burl perona pictorial structure style models lipson formal definition model set parts configuration random field locations parts appearance parameters edge neighboring parts explicit dependency connection parameters quick review probabilistic models random variable characterizes events sum dice distribution maps probabilities joint distribution multiple events rolling events independent conditional distribution sum die random field set dependent problems address recognizing model image find location parts multiple highly locations measure model present learning model labeled images form model parameters constant color rectangle learn average color variation relative translation parts learn average position variation standard bayesian approach estimate posterior distribution probabilities configurations image model find maximum map high values sampling proportional bayes rule likelihood image configuration model fixed depends appearance prior obtaining configuration model image depends constraints class models computational difficulty depends form posterior distribution structure graph important represents markov random field mrf depends explicitly neighbors require tree prior relative location natural models animate objects skeleton reasonable objects central part star graph prior computed efficiently class models likelihood product individual likelihoods parts good approximation parts don overlap form connection important space deformation distance normal distribution transformed space capture ideal relative locations parts measures deformation mahalanobis distance transformed space weighted squared euclidean distance bayesian formulation learning images configurations supervised labeled learning problem obtain estimates model maximum likelihood estimate argmax argmax independent examples rewrite joint probability product appearance dependencies separate argmax efficiently learning models estimating appearance estimation type part constant color patch gaussian model computing color covariance estimating dependencies estimate pairwise locations translation compute offset parts variation offset tree minimum spanning tree mst algorithm pairs smallest relative spatial variation generic face model part local image patch represented response oriented filters vector part pairs parts constrained terms relative position image models parts parts parts eyes tip nose corners mouth parts eye split pupil left side side learned part face model appearance structure parameters learned labeled frontal views structure captures pairs predictable relative location uncertainty gaussian covariance model captures direction spatial variations differs part part represented rectangle fixed width varying length learn average variation connections approximate revolute joints joint location relative position orientation foreshortening estimate average variation learned part model parameters learned including joint locations shown ideal configuration generic person model bayesian formulation recognition model image seek good configuration maximum posteriori map estimate highest probability configuration argmax sampling posterior distribution values high measure testing hypotheses brute force solutions intractable parts discrete locations part efficiently recognizing objects map estimation algorithm tree structure viterbi style dynamic programming locations parts slow practice millions dynamic programming method finding pair-wise locations linear time resulting method requires distance arbitrary cost similar techniques sampling posterior distribution time minimization problem recall location argmax argmax graph structure mrf pairwise dependencies argmax standard approach negative log argmin -log part matches image -log locations agree model minimizing tree structures dynamic programming minimize express function pairs cost location location recursive formulas terms children min leaf node children term empty root node parent term omitted running time compute minimum equations start leaf nodes build sub-trees running time parts locations part part pair defining equation time pair pairs distance don location pairs define kind distance transform location minimum location classical distance transforms defined set points min location distance nearest cones rooted point commonly computed grid min computing distance transforms pass algorithm norm time locations d-dim grid pass min sum mask distance array place simple method approximate norms involved exact method reports point closest generalized distance transforms replace indicator function arbitrary min intuitively grid location find distance small distance cost location change bounded change small dominates nearby large values generalized distance transform gdt computed classic algorithm map estimate express recursive minimization formulas gdt cost function gdt maps locations space difference squared distance distance ideal relative locations recursive equations computed time number dimensions parameter space fixed case recognizing faces generic model frontal view learned -part models local oriented filters parts small spatial variation part locations similar size orientation face map estimation find match posterior estimate configuration accurate parts overlap locations image runs frames desktop workstation recognizing faces recognizing people frontal view models generic model binary rectangles parts match difference image specific model color rectangles parts match original image sampling posterior find good matches posterior estimate high configurations due overlap parts samples measured correlation chamfer matching search locations runs minute sampling posterior generate good matches hypotheses locations large validate compare technique correlation-like measure chamfer computation similar map estimation recursive equations part ability solve equation linear time convolution gaussian linear time dynamic programming approximation box filters due wells recognizing people variety poses variety poses samples posterior model specific person summary pictorial structures combine local part appearance global spatial constraints don localize parts exploit context suitable generic models object classes bayesian framework natural learning problem estimation requires placing part models images structure parameters learned practical algorithms searching locations image match good matches high posterior occluded parts make part likelihood 
robust measure apply tracking people video incorporate location previous time frame prior efficient methods start generic models learn person specific models discriminate people person face methods 
ctd cxdactba cccwctcpd cvd cxd cwd cqddc cpd decpd dacsctd crd cxcqctcscxd cjbdblclcrcpd cqctcrcwcpd cvctcsd crcxctd crd cpd cscxacctcs cvctd ctd cpd cxdectcscscxd cpd crctd cpd cud dbcxd cwd cwctd ctd cpcrctcscqddcxd cpd ctba cactcuctd ctd crctd cjbdcl btbabtd cxd cxb ccbacfctddd cwb cabac cpcxd bacdd cxd cvbwddd cpd cxcr cvd cpd cxd cvcud cbd dacxd cvcecpd cxcpd cxd cpd cqd ctd cxd cecxd cxd btc ced bdbeb blb cbctd ctd cqctd bdblblbcb cpcvctd bkbhbhb bkbibjba cjbecl btba buctcxd cvd cpd cfd cud btd cxcrd cpd ctcs cqcyctcrd cactcrd cvd cxd cxd bzctd ctd cpd cxdect cwct bzctd ctd cpd cxdectcsc cvcwccd cpd cud babvcec cab bdblblbdb cpcvctd bgbibdb bgbibiba cjbfcl bzba bud cvctcud bwcxd cpd crct ccd cpd cud cpd cxd cxd btd cqcxb cpd ddbwcxd ctd cxd babvcebzc ced babebjb babfb cbctd ctd cqctd bdblbkbgb cpcvctd bfbebdb bfbgbhba cjbgcl bzbabud cvctcud babwcxd cpd crctccd cpd cud cpd cxd cxd bwcxcvcxd cpd cpcvctd bvcebzc ced babfbgb babfb ctbdblbkbib cpcvctd bfbgbgb bfbjbdba cjbhcl chba bud ddczd dab cectczd ctd caba cicpcqcxcwba cpd czd cacpd csd bycxctd csd dbcxd cwbx crcxctd btd dccxd cpd cxd babvcec cab bdblblbkb cpcvctd bibgbkb bibhbhba cjbicl babvbabud ccbac bac ctd cvb bac ctd cpbacactcrd cvd cxd cxd cpd cpd cqcyctcrd bvd cpd ctd bvcec cab bdblblbib cpcvctd bebebfb bebfbcba cjbjcl babvba bud cfctcqctd ctd cpba cqcpcqcxd cxd cxcr btd cpcrcwd cqcyctcrd cactcrd cvd cxd cxd cdd cxd crcpd cwd ctd ddcpd csbzd cqcpd bzctd ctd ddbabxbvbvceb ced babeb bdblblbkb cpcvctd bibebkb bibgbdba cjbkcl babtbabycxd crcwd ctd cpd cscababtbabxd crcwd cpcvctd bacccwctcactd ctd ctd cpd cxd cpd csc cpd crcwcxd cvd cuc cxcrd cxcpd cbd crd ctd bac bxbxbx ccd cpd bvd ctd ced bebeb bdb cpd cpd bdblbjbfb cpcvctd bibjb blbeba cjblcl bwbabtba byd ddd cpd bac byd ctcrczba bud csdd cpd bvcec cab bdblblbjb cpcvctd bibjbkb bibkbfba cjbdbccl cbba bzctd cpd bwba bzctd cpd cbd crcwcpd cxcr cactd cpdccpd cxd bzcxcqcqd bwcxd cxcqd cxd cpd cwct bucpddctd cxcpd cactd cpb cxd cpcvctd btc ced bib bib dactd cqctd bdblbkbgb cpcvctd bjbebdb bjbgbdba cjbdbdcl cfbabxbac bzd cxd cwct cactcrd cvd cxd cxd cpd cpd ctd ctd cxdectcs bebw cqcyctcrd bvceb ced beb bgb btd cxd bdblbkblb cpcvctd bfbhbfb bfbjbeba cjbdbecl chbac ctd bacfctd cpd babvd cpcxd byd cxd cud crcpd cxdecpd cxd cpd ctd ctd cpd cxd bvd cpcxd ctcs cqb cyctcrd bvcec cab bdblblbgb cpcvctd bfblb bgbhba cjbdbfcl bwbac bac ctd crcwctd bzbabtbac cpd csctd cpd cfbac bacad crczb cxcscvctbabvd cpd cxd cvc cpcvctd cdd cxd cvd cwctc cpd csd abbwcxd cpd crctba btc ced bdbhb blb cbctd ctd cqctd bdblblbfb cpcvctd bkbhbcb bkbibfba cjbdbgcl cwcxczcpdbcp cpd bwba bzctcxcvctd cbctcvd ctd cpd cxd cqdd bzd cxd cvc crd cxd bvcec cab bdblblbkb cpcvctd bdbebhb bdbfbdba cjbdbhcl cqcyctcrd bwctd ctcrd cxd dbcxd cectcrd cpd cxdectcs bucxd cpd byctcpd ctd bvcec cab bdblblbjb cpcvctd bdbjblb bdbkbhba cjbdbicl cxd bxba bzd cxd cbcxd cwcpba bvd accvd cpd cxd bucpd ctcs cbcrctd bvd cpd cxaccrcpd cxd cpd cpcvct csctdccxd cvba bvcec cab bdblblbjb cpcvctd bdbcbcbjb bdbcbdbfba cjbdbjcl bwbabzba dbctba bycxd cxd cpd cpd ctd ctd cxdectcs cccwd ctctb bwcxd ctd cxd cpd csctd cpcvctd btc ced bdbfb babhb cpddbdblblbdb cpcvctd bgbgbdb bgbhbcba cjbdbkcl cpd ctcpd cscbbac bac cpddcpd bacecxd cpd ctcpd cxd cvbtd cactcrd cvd cxd cxd bfb cqcyctcrd byd btd ctcpd cpd crctba bvceb ced babdbgb babdb cpd cpd ddbdblblbhb cpcvctd bhb bebgba cjbdblcl cfba cad crczd cxcscvct crcxctd cecxd cpd cactcrd cvd cxd cxd cdd cxd cwct cpd csd bwcxd cpd crctba bvcb bdbdbjbfb cbd cxd cvctd cectd cpcvb bdblblbiba cjbebccl bac cbdbcpcxd cpd bwbac bucpd cpd csba bvd csctdccxd cvba bvceb ced bjb bdb dactd cqctd bdblblbdb cpcvctd bdbdb bfbeba bdbc 
normalized cut method image segmentation shi malik ieee trans pattern analysis machine intelligence divisive aka splitting partitioning method graph-theoretic criterion measuring goodness image partition hierarchical partitioning dendrogram type representation regions criterion measuring candidate partitioning affinity measure elements region high affinity elements regions low affinity element element examples components affinity function spatial position intensity color texture motion defines similarity pair data elements affinity similarity measures intensity distance color texture motion aff aff problem formulation undirected graph set nodes data element pixel set edges weights representing affinity connected nodes find image partition maximizes association region minimizes disassociation regions finding optimal partition np-complete partition affinity similarity defined cut total weight edges removed optimal bi-partition minimizes cut cut biased small regions bjai define normalized similarity called normalized-cut assoc total connection weight nodes nodes ncut measures disimilarity regions disassociation measure ncut removes bias based region size vkai vbassoc abcut vaassoc bacut bancut similarly define normalized association nassoc measures similar average nodes groups goal find bi-partition minimizes ncut maximizes nassoc proved ncut nassoc minimize ncut arg min ncut vbassoc bbassoc vaassoc aaassoc banassoc dimensional vector define affinity node nodes diagonal matrix node wid degree matrix symmetric matrix shown arg min ncut relaxing constraint real values means approximate solution solving equation form subject minarg dyy yady affinity matrix solution eigenvector eigenvector characteristic vector matrix specifies segmentation based values components similar points similar eigenvector components theorem real symmetric matrix orthogonal smallest eigenvectors minimized smallest eigenvector minimum eigenvalue smallest eigenvector means ncut smallest eigenvector real-valued minimizes ncut smallest eigenvector real-valued optimally sub-partitions regions note converting real-valued binaryvalued introduces errors propagate sub-partition ncut segmentation algorithm set problem define affinity matrix degree matrix solve eigenvectors smallest eigenvalues eigenvector smallest eigenvalue threshold obtain binary-valued vector ncut ncut thresholds regions ncut threshold recurse region comments algorithm recursively bi-partitions graph eigenvectors robustness reasons due errors caused binarization real-valued eigenvectors solving standard eigenvalue problems takes time speed algorithm exploiting locality affinity measures implies sparse nonzero values diagonal sparse leads time algorithm point set eigenvalues eigenvectors grayscale image eigenvalues eigenvectors discretizing eigenvector partitioning stops histogram bimodal results 
layered image representation chuck dyer based paper representing moving images layers wang adelson ieee trans image processing motivation standard flow assumes optical flow smooth bad things occlusion boundaries decompose image sequence set overlapping layers layer smooth motion problem definition input video algorithm motion vectors motions hypothesis number motion hypotheses theory hypothesis corresponds distinct motion video pixel assigned motion hypothesis closely approximates motion vector segments frame distinct regions motion hypothesis motion hypothesis generation region motion hypothesis represents pixel motions region squares fit find affine motion parameter region iteration initialized small blocks motion hypothesis refinement k-means cluster motion hypotheses unknown empty clusters removed large clusters split maintain minimum region segmentation pixel compare hypotheses dense motion vectors find closest hypothesis group pixels represented motion hypothesis region pixels large error unassigned hypotheses membership removed region adjustment region splitter assumes areas motion connected disconnected areas region split separate regions increases number hypotheses k-means region filter small regions give poor motion estimates remove regions area threshold disconnected objects motion merged segmentation step algorithm summary dense motion estimation region segmentation motion estimation performed pairs consecutive frames pair segmentation initialized blocks k-means initialized lattice affine space subsequent frame pairs initialized final segmentation motion hypotheses previous frame pair layer synthesis motion estimates relate frame previous frame frames projected video frame cumulative projection transformation matrix layers necessarily ordered similarly frames assume largest layer background median values projected pixel final image affine motion segmentation video mosaic layer flower bed regions images aligned motion compensation aligned regions flower bedtree house major layers application video synthesis layered decomposition captures spatial coherence object motion temporal coherence object shape texture semantically-meaningful layers synthesize sequences layers 


space faces image point high dimensional space image point rnm linear subspaces classification expensive search nearest neighbors store large pdf suppose data points arranged idea fit line classifier measures distance line convert coordinates coordinate measure coordinate measure distance line classification orange pts position line orange point dimensionality reduction find dimensionality reduction represent orange points coordinates coordinates essentially makes cheaper store compare points bigger deal higher dimensional problems linear subspaces variation direction orange points unit vector minimizes var unit vector maximizes var solution eigenvector largest eigenvalue eigenvector smallest eigenvalue principal component analysis suppose data point n-dimensional procedure applies eigenvectors define coordinate system eigenvector largest eigenvalue captures variation training vectors eigenvector smallest eigenvalue variation compress data top eigenvectors corresponds choosing linear subspace represent points line plane hyper-plane dimensionality reduction set faces subspace set images suppose dimensional find subspace pca fitting hyper-plane set faces spanned vectors face eigenfaces pca extracts eigenvectors set vectors vectors direction face space projecting eigenfaces eigenfaces span space faces face converted eigenface coordinates recognition eigenfaces algorithm process image database set images labels run pca compute eigenfaces calculate coefficients image image recognized calculate coefficients detect face face find closest labeled face database nearest-neighbor k-dimensional space limits pca attempts fit hyperplane data interpreted fitting gaussian covariance matrix good model data model advance don pca regression techniques fit parameters model alternatives improvements pca developed lle http toronto roweis lle isomap http isomap stanford kernel pca http ucsd classes cse kernelpca article pdf survey methods applied object recognition moghaddam principal manifolds probabilistic subspaces visual recognition ieee transactions pattern analysis machine intelligence pami june vol issue pps http merl papers 
object recognition lighting affects appearance margaret thatcher illusion peter thompson margaret thatcher illusion peter thompson recognition problems object detection recognizing identity object recognition category recognition activity recognition classification problems choose class list candidates face detection face recognition sinha poggio perception makes recognition hard intrinsic variability class pose variability illumination variability background variability segmentation problem region image object feature selection problem features describe shape appearance approximate invariants limited range viewpoint variation parallelism collinearity angle pair lines co-termination pose consistency correspondences image features model features independent small number correspondences yields camera --the consistent strategy generate hypotheses small numbers correspondences triples points calibrated perspective camera backproject verify notice main issue camera calibration groups frame groups voting pose model leads correct sets correspondences pose vote pose accumulator array hough transform issues figure evolution testing model-based object recognition system mundy heller proc int conf computer vision copyright ieee evolution testing model-based object recognition system mundy heller proc iccv figure evolution testing model-based object recognition system mundy heller proc int conf computer vision copyright ieee figure evolution testing model-based object recognition system mundy heller proc int conf computer vision copyright ieee figure evolution testing model-based object recognition system mundy heller proc int conf computer vision copyright ieee invariants geometric properties invariant camera transformations easiest case view plane object weak perspective assume base points object point object written image points obtained multiplying plane affine transformation apk invariants means base points image read values object object image --invariant suggests strategy hough transform search correspondences form vote geometric hashing vote identity correspondence invariants hypotheses large votes fill table indexed base points fourth point yield object identity recognizing human actions movement posture change run walk crawl jump hop swim skate sit stand kneel lie dance object manipulation pick carry hold lift throw catch push pull write type touch hit press stroke shake stir turn eat drink cut stab kick point drive bike insert extract juggle play musical instrument conversational gesture point sign language activities situation assessment withdrawing money atm activities constructed composing actions partial order plans good model activities involve multiple agents detecting unusual situations activity patterns facilitated video activity transform objects space actions space-time segment region-ofinterest features points curves wavelet coefficients correspondence deform alignment recover parameters generative model discriminative classifier segment volume-ofinterest features points curves wavelets motion vectors correspondence deform alignment recover parameters generative model discriminative classifier key cues action recognition morpho-kinesics action shape movement body identity object activity context image video stick figure action stick figures variety ways resolutions degrees freedom joint positions joint positions joint angles complete representation evidence effectively computable human body configurations human body configurations mathematical challenges modeling shape variation nearest neighbor search high dimensions combining statistical optimality computational efficiency reconstruction algorithms sensing modalities 
adelson anderson bergen burt ogden pyramid methods image processing image pyramid offers flexible convenient multiresolution format mirrors multiple scales processing human visual system digital image processing domains today image enhancement variety methods exist removing image degradations emphasizing important image information computer graphics digital images generated modified combined wide variety visual effects data compression images efficiently stored transmitted translated compact digital code machine vision automatic inspection systems robots make simple decisions based digitized input television camera digital image processing developing state areas mentioned important problems remain solved obvious case machine vision build machines abstract data structure represent image information critical successful completion image processing task structure attracted considerable attention image pyramid consists set lowpass bandpass copies image representing pattern information scale describe variety pyramid methods developed image data compression enhancement analysis graphics rca corporation final manuscript received november reprint re- perform routine visual tasks humans effortlessly increasingly clear format represent image data critical image processing algorithms applied data digital image initially encoded array pixel intensities raw format suited tasks alternatively image represented fourier transform operations applied transform coefficients original pixel values data compression image enhancement tasks inappropriate transform representation unsuited machine vision computer graphics spatial location pattem elements critical recently great deal interest representations retain spatial localization localization spatial frequency domain achieved decomposing image set spatial frequency bandpass component images individual samples component image represent image pattern information appropriately localized bandpassed image represents information fineness detail scale evidence human visual system representation multiresolution schemes increasingly popular machine vision image processing general importance analyzing images scales arises nature images scenes world objects sizes objects features sizes objects distances viewer result analysis procedure applied single scale miss information scales solution carry analyses scales simultaneously convolution basic operation image analysis systems convolution large weighting functions notoriously expensive computation multiresolution system wishes perform convolutions kernels sizes ranging small large computational problems forbidding main problems working multiresolution representations develop fast efficient techniques members advanced image processing research group actively involved development multiresolution techniques time work revolves representation pyramid versatile convenient efficient applied pyramid-based methods fundamental problems image analysis data compression image manipulation image pyramids task detecting target pattern scale approached ways involve simple convolutions illusrca engineer nov dec fig methods searching target pattern scales approach copies target pattern constructed expanded scales convolved original image approach single copy target convolved copies image reduced scale target large resolve critical details approaches give equivalent results efficient fourth power scale factor image convolutions represented trated fig copies pattern constructed increasing scales convolved image alternatively pattern fixed size convolved copies image represented correspondingly reduced resolutions approaches yield equivalent results provided critical information target pattern adequately represented approach efficient convolution target pattern expanded scale factor require arithmetic operations convolution image reduced scale factor substantial scale factors range commonly range image analysis image pyramid data structure designed support efficient scaled convolution reduced image representation consists sequence copies original image sample density resolution decreased regular steps shown fig reduced resolution levels pyramid obtained highly efficient iterative algorithm bottom level pyramid equal original image lowpass-filtered subsampled factor obtain pyramid level filtered subsampled obtain repetitions filter subsample steps generate remaining pyramid levels precise levels pyramid obtained iteratively convenient refer rca engineer nov dec fig levels gaussian pyramid expanded size original image effects lowpass filtering apparent fig equivalent weighting functions process constructing gaussian lowpass pyramid equivalent convolving original image set gaussian-like weighting functions subsampling shown weighting functions double size increase functions laplacian pyramid resemble difference gaussians shown process standard reduce operation simply write reduce call weighting function generating kernel reasons computational efficiency small separable five-tap filter generate pyramid fig pyramid construction equivalent convolving original image set gaussian-like weighting functions equivalent weighting functions successive pyramid levels shown fig note functions double width level convolution acts lowpass filter band limit reduced correspondingly octave level resemblance gaussian density function refer pyramid lowpass images gaussian pyramid bandpass lowpass images required purposes obtained subtracting gaussian lowpass pyramid level nextlower level pyramid levels differ sample density interpolate sample values level level subtracted next-lower level interpolation achieved reversing reduce process call expand operation image obtained expanding times expand precise terms integers contribute sum expand operation doubles size image iteration size size original image examples expanded gaussian pyramid levels shown fig levels bandpass pyramid terms lowpass pyramid levels expand levels shown fig node gaussian pyramid obtained directly convolving gaussianlike equivalent weighting function original image bandpass pyramid obtained convolving difference gaussians original image functions closely resemble laplacian operators commonly image processing fig reason refer bandpass pyramid laplacian pyramid important property laplacian pyramid complete image representation steps construct pyramid reversed recover original image top pyramid level expanded added form array expanded added recover alternatively write pyramid introduced data structure supporting scaled image analysis structure suited variety image processing tasks applications data compression graphics image analysis sections shown pyramid-building procedures significant advantages approaches scaled analysis terms computation cost complexity pyramid levels obtained fewer steps repeated reduce expand operations standard fft direct convolution large equivalent weighting functions requires -bit arithmetic maintain acadelson pyramid methods image processing fig levels laplacian pyramid expanded size original image note edge bar features enhanced segregated size curacy cascade convolutions small generating kernel -bit arithmetic compact code laplacian pyramid data structure composed bandpass copies image suited scaled-image analysis pyramid viewed image transformation code pyramid nodes considered code elements equivalent weighting functions sampling functions give node values convolved image original image reconstructed pyramid representation pyramid code complete reasons transforming image representation transformation isolate critical components image pattern directly accessible analysis transformation place data compact form stored transmitted efficiently laplacian pyramid serves objectives bandpass filter pyramid construction enhance image features edges important interpretation features segregated scale pyramid levels shown fig fourier transform pyramid code elements represent pattern components restricted spatial-frequency domain unlike fourier transform pyramid code elements restricted local regions spatial domain spatial spatial-frequency localization critical analysis images multiple objects code elements tend represent characteristics single objects confound characteristics objects pyramid representation permits data compression rca engineer nov dec fig pyramid data compression original image represented bits perpixel shown node values tbe laplacian pyramid representation image quantitized 
obtain effective data rates reconstructed images show degradation sample elements original image values samples tend represented small number bits data compression obtained quantization number distinct values samples reduced binning existing values results degradation image reconstructed quantization bins carefully chosen degradation detectable human observers affect performance analysis algorithms figure illustrates application pyramid data compression image transmission original image shown fig laplacian pyramid representation constructed image values quantized reduce effective data rate bit pixel one-half bit pixel images reconstructed quantized data shown figs humans tend sensitive errors low-frequency image components high-frequency components pyramid compression nodes level quantized coarsely higher levels fortuitous compression three-quarters pyramid samples level data compression quantization important image analysis reduce number bits precision carried arithmetic operations study pyramid-based image motion analysis found data reduced bits sample noticeably degrading computed flow field examples suggest pyramid effective representing image information transmission analysis salient information enhanced analysis extent quantization degrade analysis representation compact robust image analysis pyramid methods applied analysis ways outlined concerns pattern matching mentioned locate target pattern occur scale image pattern convolved level image pyramid levels pyramid combined nodes pixels original image cost searching pattern scales searching original image complexity patterns found limited fact image scales represented pyramid defined pyramid levels differ scale powers octave steps frequency domain power-of-two steps adequate patterns located simple complex patterns require closer match scale pattern defined target array scale pattern appears image variants pyramid easily defined squareroot-of-two smaller steps levels samples computational cost image processing based pyramids correspondingly increased class operations concerns estimation integrated properties local image regions texture characterized local density energy measures reliable estimates image motion require integration point estimates displacement regions uniform motion cases early analysis formulated three-stage sequence standard operations pattern convolved image images case motion analysis selects pattern attribute examined remaining stages nonlinear intensity transformation performed sample operations include simple threshold detect presence target pattern power function computing texture energy measures product samples images forming correlation measures motion analysis finally transformed sample values integrated local windows obtain desired local property measures pattern scale important parameter convolution integration stages pyramid-based processing employed stages facilitate scale selection support efficient computation flow diagram threestage analysis fig analysis begins construction pyramid representation image feature pattern convolved level pyramid stage resulting correlation values passed adelson pyramid methods image processing fig efficient procedure computing integrated image properties scales level image pyramid convolved pattern enhance elementary image characteristic step sample values filtered image passed nonlinear transformation threshold power function step finally integration pyramid built processed image pyramid levels step node values represent average image characteristic integrated gaussian-like window methods proved method call multi-resolution coring reduce random noise image sharpening details image image decomposed laplacian pyramid bandpass representation samples level passed coring function small values include noise set larger values include promenent image features retained peaked final enhanced image obtained summing levels processed pyramid technique illustrated fig figure original image random noise added fig shows image enhanced multiresolution coring recently developed pyramidbased method creating photographic images extended depth field begin images focused nonlinear intensity transformation stage finally filtered transformed image bottom level gaussian pyramid pyramid construction effect integrating input values set gaussian-like windows scales stage integrated property estimates locate boundary textured regions fig upper lower halves image show pieces wood differently oriented grain half image covered shadow boundary shaded unshaded regions prominent feature image location detected easily maximum gradient image intensity fig simple edge-detecting operation gradient-based procedure locate boundary pieces wood isolate line patterns make wood grain texture boundary found three-step process laplacian pyramid constructed original texture vertical grain enhanced convolving image horizontal gradient operator stage pyramid node squared stage integration pyramid constructed level filtered image pyramid stage energy measures obtained windows sizes figure shows level integration pyramid level filtered-image pyramid note texture differences original image converted differences gray level finally simple gradient-based edge-detection technique locate boundary image regions fig pyramid levels expanded size original image facilitate comparison class analysis operations concerns fast coarse-fine search techniques suppose locate precisely large complex pattern image attempt convolve full pattern image search begins convolving reduced-resolution pattern reduced-resolution copy image serves roughly locate occurrences target pattern minimum computation higher-resolution copies pattern image refine position estimates convolution computation minimum restricting search neighborhoods points identified coarser resolution search proceed stages increased resolution position refinement savings computation obtained coarse-fine search substantial size orientation target pattern position image enhancement pyramid methods applied data compression image analysis areas image science distances combine retains sharp regions figs show pictures circuit board camera focused depthplanes construct composite image components board surface focus laplacian pyramids original images lowfrequency levels pyramids identical low spatial-frequency image components slightly affected focus focus affect node values pyramid levels high-spatialfrequency information encoded nodes pyramids generally represent feature scene differ primarily attenuation due blur node largest amplitude image focus focus image components selected node-by-node pyramid region-by-region original images pyramid constructed composite image setting node equal node larger absolute composite image obtained simply expanding adding levels figure shows extended depth-offield image obtained rca engineer nov dec fig texture boundary detection energy measures original image pieces wood differently oriented grain separated horizontal boundary half image shadow attempt locate edges based image intensity isolate boundary shadow region order detect boundary pieces wood image convolve level laplacian pyramid pattern enhances vertical features level matches scale texture grain lower half image nodes level squared integrated constructing additional pyramid give energy image finally intensity edge-detector applied energy image yields desired texture boundary fig multiresolution coring part shows image noise added simulate transmission degradation laplacian pyramid constructed noisy image node values level cored result noise removed prominent features original image retained reconstructed image related application pyramids concerns construction image mosaics common task scientific fields advertising objective join number images smoothly larger mosaic segment boundaries visible suppose join left half fig half fig direct method combining images catinate left portion fig portion fig result shown fig mosaic boundary visible sharp generally low-contrast step gray level alternative approach join image components smoothly averaging pixel values transition zone centered join line width transition zone critical parameter narrow transition visible blurred step wide features images visible 
transition zone photographic double exposure blurred-edge effect due mismatch low frequencies mosaic boundary double-exposure effect due mismatch high frequencies general choice transition zone width avoid defects dilemma resolved image decomposed set spatial-frequency bands bandpass mosaic constructed band transition zone comparable width wavelengths represented band final mosaic obtained summing component bandpass mosaics computational steps multiresolution splining procedure simple pyramid methods begin laplacian pyramids constructed original images decompose images required spatial-frequency bands adelson pyramid methods image processing fig multifocus composite image original images limited depth field shown combined digitally give image extended depth field fig image mosaics left half image catinated half image give mosaic note boundary regions visible mosaic obtained combining images separately spatial frequency band pyramid representations expanding summing bandpass mosaics summed yield final mosaic fig note average node values extended transistion zone blending occurs automatically part reconstruction process conclusions pyramid offers image representation number tasks efficient compute pyramid filtering faster equivalent filtering fast fourier transform information format convenient nodes level represent information localized space spatial frequency discussed number examples pyramid proven valuable substantial data compression similar obtainable transform methods achieved pyramid encoding combined quantitization entropy coding tasks texture analysis rapidly simultaneously scales images combined form seamless mosaic images scene planes focus combined form single sharply focused image pyramid tasks bring conceptual unification problems representing manipulating low-level visual information offers flexible convenient multiresolution format matches multiple scales found visual scenes mirrors multiple scales processing human visual system locus image points fall boundary line region left left image pyramid composite image defined sample sample levels expanded wilson bergen mechanism model threshold special vision vision research vol rca engineer nov dec anderson alternative burt pyramid algorithm memo preparation burt adelson laplacian pyramid compact image code ieee transactions communication compp burt yen multi-resolution flowthrough motion analysis rca technical report prrl-tr- ogden adelson computer simulations oriented multiple spatial frequency band coring preparation burt adelson multiresolution spline application image mosaics acm transactions graphics vol authors left bergen anderson adelson burt joan ogden received mathematics illinois champaignurbana physics maryland coming princeton plasma physics laboratory post-doctoral research associate continued work nuclear fusion specializing plasma theory simulation started consulting company working variety applied physics problems december began working advanced image processing research group recently joined edward adelson received degree summa cum laude physics philosophy yale degree experimental psychology michigan dissertation dealt temporal properties photoreceptors human eye adelson research human motion perception digital image processing postdoctoral fellow york adelson joined rca laboratories member technical staff part advanced image processing research group advanced video systems research laboratory involved developing models human visual system image-processing algorithms image enhancement data ompression adelson published dozen papers vision image processing made numerous conference presentations awards include optical society america adolph lomb medal rca laboratories outstanding achievement award member association research vision opthalmology optical society america phi beta kappa contact rca laboratories princeton tacnet peter burt received degree physics harvard unversity degree massachusetts amherst conducted research sonar acoustic imaging devices navy underwater systems center london conn london england postdoctoral fellow studied natural vision computer image understanding york bell laboratories maryland member engineering faculty rensselaer polytechnic institute joined rca david sarnoff research center member technical staff head advanced image processing group contact rca laboratories princeton tacnet charles anderson received degree physics california institute technology harvard anderson joined staff rca laboratories princetion work involved studies optical microwave properties rareearth ions solids studies produced optically-pumped mirowave maser spectrometer acoustic radiation -to -ghz range awarded rca fellowship research oxford year fellow american physical society returning rca involved television displays leader subgroup developing electron-beam guides flat-panel television displays march appointed fellow technical staff rca laboratories august december head applied mathmaical physical sciences group january returned full time research member vision group maintaining role task force leader studies stylus disc interface january spent weeks regents lecturer invitation physics department ucla rca part-time member technical staff research interests rca include applications pyramid algorithm problems noise reduction data campression texture generation contact rca laboratories princeton research developed model structure primate visual system retina striate cortex research hopfield model associative memory contact rca laboratories princeton tacnet james bergen received degree mathematics psychology california berkely biophysics theoretical biology chicago work concerns quantitative analysis information processing human visual system chicago involved development model spatial temporal processing occurs early stages system bell laboratories murray hill work concentrates effect visual system structure extraction information visual image current work includes basic studies visual perception perceptual considerations design imaging systems contact rca laboratories princeton tacnet adelson pyramid methods image processing 
texture texture easy recognize hard define deterministic textures thing-like stochastic textures stuff-like tasks discrimination segmentation classification texture synthesis shape texture texture transfer video textures texture discrimination shape texture modeling texture texture image obeying statistical properties similar structures repeated degree randomness steerable oriented pyramids texture synthesis efros leung iccv synthesizing pixel find windows image match neighborhood pixels neighborhood filled synthesize pick matching window random assign center pixel window sample image generated image sample markov random field markov random field mrf generalization markov chains dimensions first-order mrf probability pixel takes values neighbors higher order mrf larger neighborhoods markov chain markov chain sequence random variables state model time markov assumption state dependent previous dependency conditional probability first-order markov chain th-order markov chain synthesizing pixel sample image exact neighborhood match present find matches ssd error randomly choose preferring matches higher probability sample generated image growing texture starting initial image grow texture pixel time window size controls regularity synthesis results increasing window size results aluminum wirereptile skin failure cases growing garbage verbatim copying image-based text synthesis efros leung extended observation neighbor pixels highly correlated input image non-parametric sampling idea unit synthesis block faster synthesize pixels block synthesizing block input texture random placement blocks block neighboring blocks constrained overlap minimal error boundary cut min error boundary minimal error boundary overlapping blocks vertical boundary overlap error philosophy corrupt professor algorithm plagiarize source image cover evidence rationale texture blocks definition correct samples texture problem connecting texture transfer constraint texture sample texture transfer texture object paint object requires separating texture shape hard cheat assume capture shape boundary rough shading add constraint sampling similarity luminance underlying image spot parmesan rice 
ieee transactions communications vol coml april laplacian pyramid compact image code peter burt member ieee edward adelson abstract describe technique image encoding local operators scales identical shape serve basis functions representation differs established techniques code elements localized spatial frequency space pixel-to-pixel correlations removed subtracting lowpass filtered copy image image result net data compression difference error image low variance entropy low-pass filtered image represented reduced sample density data compression achieved quantizing difference image steps repeated compress low-pass image iteration process appropriately expanded scales generates pyramid data structure encoding process equivalent sampling image laplacian operators scales code enhance salient image features advantage present code suited image analysis tasks image compression fast algorithms coding decoding introduction common characteristic images neighboring pixels highly correlated represent image directly terms pixel values inefficient encoded information redundant task designing efficient compressed code find representation effect decorrelates image pixels achieved predictive transform techniques recent reviews predictive coding pixels encoded sequentially raster format prior encoding pixel predicted previously coded pixels preceding raster lines predicted pixel represents redundant information subtracted actual pixel difference prediction error encoded previously encoded pixels predicting pixel process causal restriction causal prediction facilitates decoding decode pixel predicted recomputed decoded neighboring pixels added stored prediction error noncausal prediction based symmetric neighborhood centered pixel yield accurate prediction greater data compression approach paper approved editor signal processing communication electronics ieee communications society presentation part conference pattern recognition image processing dallas manuscript received april revised july work supported part national science foundation grant mcs- national institutes health postdoctoral training grant burt department electrical computer systems engineering rensselaer polytechnic institute troy adelson rca david sarnoff research center princeton permit simple sequential coding noncausal approaches image coding typically involve image transforms solution large sets simultaneous equations encoding pixels sequentially techniques encode blocks predictive transform techniques advantages simple implement readily adapted local image characteristics generally greater data compression expense considerably greater computation describe technique removing image correlation combines features predictive transform methods technique noncausal computations simple local predicted pixel computed local weighted average unimodal gaussian-like related trimodal weighting function centered pixel predicted values pixels obtained convolving weighting function image result lowpass filtered image subtracted original original image result applying low-pass filter prediction error encode encode results net data compression largly decorrelated represented pixel pixel fewer bits low-pass filtered encoded reduced sample rate data compression achieved iterating process reduced image low-pass filtered yield error image obtained repeating steps times obtain sequence two-dimensional arrays implementation smaller predecessor scale factor due reduced sample density imagine arrays stacked result tapering pyramid data structure node pyramid represents difference gaussian-like related functions convolved original image difference functions similar laplacian operators commonly image enhancement refer proposed compressed image representation laplacian-pyramid code coding scheme outlined practical required filtering computations performed efficient algorithm suitable fast algorithm recently developed section ieee burt adelson laplacian pyramid gaussian pyramid step laplacian pyramid coding low-pass filter original image obtain image reduced version resolution sample density decreased similar form reduced version filtering performed procedure equivalent convolution family local symmetric weighting functions important member family resembles gaussian probability distribution sequence images called gaussian pyramid fast algorithm generating gaussian pyramid subsection subsection show algorithm expand image array interpolating values sample points device visualize contents levels gaussian pyramid section define laplacian pyramid gaussian pyramid generation suppose image represented initially array columns rows pixels pixel represents light intensity image point integer image bottom level gaussian pyramid pyramid level image reduced low-pass filtered version level computed weighted average values level -bywindow level representing obtained values level applying pattern weights graphical representation process dimension fig size weighting function critical selected -bypattern adequate filtering low computational cost level-to-level averaging process performed function reduce reduce means levels nodes refers number levels pyramid dimensions lth level note fig density nodes reduced half dimension fourth dimensions level level dimensions original image pyramid construction integers exist images measure pixels dimensions refer set low-pass filtered images gaussian pyramid cases generated trimodal unimodal weighting function gaussian pyramid image reduce fig one-dimensional graphic representation process generates gaussian pyramid row dots represents nodes level pyramid node level gray level image pixel node high level weighted average node values lower level note node spacing doubles level level weighting pattern generating kernel generate levels generating kernel note -bypattern weights generate pyramid array predecessor weighting pattern called generating kernel chosen subject constraints simpticity make separable one-dimensional length function normalized symmetric additional constraint called equal contribution stipulates nodes level contribute total weight nodes higher level case equal contribution requires constraints satisfied equivalent weighting functions iterative pyramid generation equivalent convolving image set equivalent weighting functions ieee transactions communications vol comno april fig equivalent weighting functions nodes levels infinity gaussian pyramid note axis scales adjusted factors aid comparison parameter generating kernel resulting equivalent weighting functions closely resemble gaussian probability density functions size equivalent weighting function doubles level distance samples equivalent weighting functions gaussian-pyramid levels shown fig case shape equivalent function converges rapidly characteristic form successively higher levels pyramid scale shape depend choice generating kernel characteristic shapes choices shown fig note equivalent weighting functions gaussian-like shape triangular flatter broader gaussian central positive mode sharply peaked flanked small negative lobes fast filter effect convolving image equivalent weighting functions blur low-pass filter image pyramid algorithm reduces filter band limit octave level level reduces sample interval factor fast algorithm requiring fewer computational steps compute set filtered images required fast fourier transform compute single filtered image fig illustrates contents gaussian pyramid generated original image left measures level pyramid higher level array roughly half large dimension predecessor due reduced sample density equivalent weighting functions fig shape equivalent weighting function depends choice parameter function triangular gaussian-like broader gaussian function trimodal gaussian pyramid interpolation define function expand reverse reduce effect expand -byn array -byn array interpolating node values values expand applied array gaussian pyramid yield array size result expanding times expand expand levels nodes imjn terms integers included sum apply expand times image obtain size original image full expansion image coding visualize contents arrays pyramid structures top row fig shows image obtained expanding levels pyramid fig lowpass filter effect gaussian pyramid shown burt adelson laplacian pyramid 
impose directional sampling searching constraints intelligent scissors image composition eric mortensen brigham young barrett byu dept comp sci byu provo limits techniques boundary search degree freedom window two-dimensional boundary template boundary extraction previous graph searching techniques non-interactive template specification losing benefits human guidance expertise abstract present interactive tool called intelligent scissors image segmentation composition fully automated segmentation unsolved problem manual tracing inaccurate laboriously unacceptable intelligent scissors objects digital images extracted quickly accurately simple gesture motions mouse gestured mouse position proximity object edge live-wire boundary snaps wraps object interest live-wire boundary detection formulates discrete dynamic programming two-dimensional graph searching problem mathematically optimal boundaries greatly reducing sensitivity local noise intervening structures robustness enhanced on-the-fly training boundary adhere specific type edge simply strongest edge neighborhood boundary cooling automatically freezes unchanging segments automates input additional seed points cooling user free gesture path increasing efficiency finesse boundaries extracted extracted objects scaled rotated composited live-wire masks spatial frequency equivalencing frequency equivalencing performed applying butterworth filter matches lowest frequency spectra image components intelligent scissors creation convincing compositions existing images dramatically increasing speed precision objects extracted introduction digital image composition recently received attention special effects movies variety desktop applications movies image composition combined digital manipulation techniques realistically blend film script goal image composition combine objects regions photographs movie frames create seamless believable image image sequence appears convincing real fig shows believable composition created combining objects extracted images fig a-c objects digitally extracted combined minutes interactive tool called intelligent scissors existing images objects interest extracted segmented surrounding background unpredictable complexity manual segmentation tedious time consuming lacking precision impractical applied long image enm byu dept comp sci byu provo sequences due wide variety image types content current computer based segmentation techniques slow inaccurate require significant user input initialize control segmentation process paper describes interactive digital image segmentation tool called intelligent scissors rapid object extraction arbitrarily complex backgrounds intelligent scissors boundary detection formulates discrete dynamic programming two-dimensional graph searching problem presented part tool boundary cooling on-the-fly training reduce user input dynamically adapt tool specific types edges finally present live-wire masking spatial frequency equivalencing convincing image compositions background digital image segmentation techniques extract image components surrounding natural background computer based segmentation tools typically primitive offer advantage manual tracing region based magic wands provided desktop applications interactively selected seed point grow region adding adjacent neighboring pixels type region growing provide interactive visual feedback resulting region boundaries edited modified popular boundary definition methods active contours snakes improve manually entered rough approximation initialized rough boundary approximation snakes iteratively adjust boundary points parallel attempt minimize energy functional achieve optimal boundary energy functional combination internal forces boundary curvature external forces image gradient magnitude snakes track frame-to-frame boundary motion provided boundary hasn moved drastically active contours follow pattern initialization energy minimization result user final boundary rough approximation input resulting boundary satisfactory process repeated boundary manually edited provide detailed comparison snakes intelligent scissors section class image segmentation techniques graph searching formulation similar concepts find globally optimal boundaries techniques differ snakes boundary points generated stage-wise optimal cost fashion snakes iteratively minimize energy functional points contour parallel giving appearance wiggling snakes graph searching techniques typically require boundary template--in form manually entered rough approximation figure merit --which illiam barrett important difference previous boundary finding techniques intelligent scissors presented lies laplacian zero-crossing creates binary feature boundary defining criteria method interaction previous methods exhibit pattern boundary approximation boundary refinement intelligent scissors user interactively select suitable boundary set optimal boundaries emanating seed point addition previous approaches incorporate onthe-fly training cooling computationally efficient finally appears problem automated matching spatial frequencies digital image composition addressed previously intelligent scissors boundary definition dynamic programming formulated graph searching problem goal find optimal path start node set goal nodes applied image boundary finding graph search consists finding globally optimal path start pixel goal pixel-in pixels represent nodes edges created pixel neighbors paper optimality defined minimum cumulative cost path start pixel goal pixel cumulative cost path sum local edge link costs path local costs minimum cost path correspond image component boundary pixels accurately links neighboring pixels exhibit strong edge features low local costs vice-versa local component costs created edge features local costs computed weighted sum component functionals letting represents local cost directed link pixel neighboring pixel local cost function weight feature function empirically weights work wide range images laplacian zero-crossing binary edge feature edge localization convolution image laplacian kernel approximates partial derivative image laplacian image zero-crossing corresponds points maximal minimal gradient magnitude laplacian zero-crossings represent good edge properties low local cost laplacian image pixel application discrete laplacian kernel digital image produces zero-valued pixels zero-crossing represented neighboring pixels change positive negative pixels closest represent zero-crossing resulting feature cost single-pixel wide cost canyons boundary localization image feature formulation laplacian zero-crossing gradient magnitude gradient direction distinguish strong high gradient edges weak low gradient edges gradient magnitude direct correlation edge strength local cost represent partials image gradient magnitude approximated gradient scaled inverted high gradients produce low costs vice-versa gradient component function giving inverse linear ramp function finally gradient magnitude costs scaled euclidean distance resulting maximum gradient unity scaled diagonal neighbor horizontal vertical neighbor gradient direction adds smoothness constraint boundary associating high cost sharp boundary direction gradient direction unit vector defined letting unit vector perpendicular rotated degrees clockwise gradient direction point formulation gradient direction feature cost vector dot products bidirectional link edge vector pixels links horizontal vertical diagonal relative position neighborhood point dot product positive noted neighborhood link direction associates high cost edge link pixels similar gradient directions perpendicular perpendicular link direction feature cost low gradient direction pixels similar link two-dimensional dynamic programming mentioned dynamic programming formulated directed graph search optimal path paper utilizes optimal graph search similar presented dijkstra extended nilsson technique builds extends previous boundary tracking methods important ways imposes directional sampling searching constraints utilizes set edge features costs laplacian zero-crossing multiple gradient kernels active list sorted sort nodes pixels priori goal nodes pixels formulation boundary finding graph search eliminates directed sampling searching restrictions previous implementations allowing boundaries arbitrary comgi max max max cos cos lpq lpq lpq plexity extracted edge features robust comprehensive previous 
implementations maximize gradient kernels sizes encompass edge types scales simultaneously attempting balance edge detail noise suppression laplacian zero-crossing boundary localization fine detail livewire snapping discrete bounded nature local edge costs permit specialized sorting algorithm inserts points sorted list called active list constant time fourth live-wire tool free define goal pixel interactively free point image minimum cost paths computed pixels fast free point falls expanding cost wavefront interactivity impeded live-wire dynamic programming graph search algorithm algorithm live-wire graph search input start seed pixel local cost function link pixels data structures list active pixels sorted total cost initially empty neighborhood set neighbors pixel boolean function indicating expanded processed total cost function seed point output pointers pixel indicating minimum cost path algorithm initialize active list cost seed pixel begin points expand min remove minimum cost pixel active list true mark expanded processed begin tmp compute total cost neighbor tmp remove higher cost neighbor list begin neighbor list tmp assign neighbor total cost set reset back pointer place return end active list end end notice active list sorted lower cumulative cost computed pixel list point removed list order added back list lower cost similar adding point sorted list operation performed constant time figure demonstrates graph search algorithm create minimum cumulative cost path map optimal path pointers figure initial local cost map seed point circled simplicity demonstration local costs pixel based link based thought representing gradient magnitude cost feature figure shows portion cumulative cost pointer map expanding seed point cumulative cost notice diagonal local costs scaled euclidean distance consistent gradient magnitude cost feature previously complicating weighing euclidean distance demonstrate cumulative costs points active list change lower cumulative costs computed unexpanded neighbors demonstrated figure points expanded--the seed point lowest cumulative cost point active list notice points diagonal seed point changed cumulative cost direction pointers euclidean weighting seed diagonal points makes costly non-diagonal paths figures show cumulative cost direction pointer map stages completion note algorithm produces wavefront active points emanating initial start point called seed point wavefront grows faster lower costs interactive live-wire segmentation tool optimal path pointers generated desired boundary segment chosen dynamically free point interactive movement free point mouse cursor boundary behave live-wire adapts minimum cost path optimal path pointers free point back figure initial local cost matrix seed point shaded expanded points shaded expanded points shaded expanded points expanded finished total cost path matrix paths free points shaded seed point constraining seed point free points lie edge user interactively snap wrap live-wire boundary object interest figure demonstrates live-wire boundary segment adapts free point cursor position latching object boundary specifically note live-wire segments user-specified free point positions times fig shows live-wire segments discrete time instances live-wire segments updated dynamically interactively on-the-fly movement free point movement free point boundary digress desired object edge interactive input seed point prior point departure reinitiates boundary detection potential paths recomputed seed point effectively tieing boundary computed seed point note optimal paths computed seed point points image graph search produces minimum cost spanning tree image selecting free point mouse cursor interactive live-wire tool simply selecting optimal boundary segment large collection optimal paths pixel free point defines optimal path seed point minimum seed points ensure closed object boundary path map seed point object maintained object boundary definition provide closing boundary path free point closing boundary segment free point seed point expedites boundary closure placing seed points directly object edge difficult tedious seed point localized object edge spikes results segmented boundary seed points figure image demonstrating live-wire segment adapts snaps object boundary free point moves cursor movement path free point shown white live-wire segments previous free point positions shown green figure comparison live-wire cooling withot cooling seed points manually object edge cooling seed points generated automatically live-wire segment freezes boundary forced pass seed points facilitate seed point placement cursor snap forces mouse pointer maximum gradient magnitude pixel user neighborhood neighborhood resulting cursor snap cursor snap pixels mouse cursor moved user snaps jumps neighborhood pixel representing good static edge point path cooling generating closed boundaries objects interest require seed points reasons previously simple objects typically require seed points complex objects require cursor snap manual placement seed points tedious requires large portion boundary definition time figure comparison live-wire dynamic training training live-wire segment snaps nearby strong edges training favors edges similar characteristics learned static gradient magnitude cost map shows training high gradients favored map low costs training dynamic cost map favors gradients similar sampled previous boundary segment cost gradient magnitude cost gradient magnitude static cost map dynamic cost map automatic seed point generation relieves user precise closest portion current defined object boundary training manual placement seed points automatically selecting pixel current active boundary segment seed point selection based path cooling turn relies path coalescence single minimum cost path exists pixel seed point paths coalesce share portions optimal path paths pixels due bellman principle optimality optimal paths distinct pixels share common point pixel paths identical pixel back seed point noticeable seed point object edge free point moved seed point remains vicinity object edge optimal path selected displayed time mouse cursor moves paths typically identical seed point object edges change local free point free point moves farther farther seed point portion active live-wire boundary segment change longer seed points generated end stable segment changed recently stability measured time milliseconds active boundary path coalescence number times path redrawn distinct free points measure stability live-wire segment sense cooling longer pixel stable section live-wire boundary cooler eventually freezes automatically produces seed point figure illustrates benefit path cooling fig user place seed point manually object boundary cooling fig seed point free point manually seed points generated automatically cooling interactive dynamic training occasion section desired object boundary weak gradient magnitude relative nearby strong gradient edge nearby strong edge lower cost live-wire segment snaps strong edge desired weaker edge fig desired boundary woman harriet cheek part close high contrast shoulder man ozzie live-wire snaps shoulder training dynamic adaptation cost function based sample boundary segment training exploits object boundary segment considered good performed dynamically part boundary segmentation process result trained features updated interactively object 
fig levels gaussian pyramid lady image original image level meusures pixels higher level array roughly half dimensdons predecessor level measures pixels laplacian pyramid recall purpose constructing reduced image serve prediction pixel values original image obtain compressed representation encode error image remains expanded subtracted image bottom level laplacian pyramid level generated encoding give formal definition laplacian pyramid examine properties laplacian pyramid generation laplacian pyramid sequence error images difference levels gaussian pyramid expand image serve prediction image equivalent weighting functions node laplacian pyramid difference convolutions equivalent weighting functions original image similar convolving appropriately scaled laplacian weighting function image node obtained directly applying operator considerably greater computational cost view gaussian pyramid set lowpass filtered copies original image view laplacian pyramid set bandpass filtered copies image scale laplacian operator doubles level level pyramid center frequency passband reduced octave order illustrate contents laplacian pyramid helpful interpolate sample points pyramid structure gaussian interpolation result expanding times size original image expanded laplacian pyramid levels lady image fig shown bottom row fig note image features edges bars enhanced laplacian pyramid enhanced features segregated size fine details prominent progressively coarser features prominent higher level images decoding shown original image recovered expanding summing levels laplacian pyramid efficient procedure expand add expand image add level reached recovered procedure simply reverses steps laplacian pyramid generation expand entropy assume pixel values image representation statistically independent minimum number bits pixel required encode image entropy pixel distribution optimum approached practice techniques variable length coding histogram pixel values lady image shown fig observed frequency occurrence gray level estimate probability occurrence similar images entropy ieee transactions communications vol comno april fig levels gaussian laplacian pyramid gaussian images upper row obtainedby expanding pyramid arrays fig gaussian interpolation level laplacian pyramid difference higher levels gaussian pyramid burt adelson laplacian pyramid fig distribution pixel gray level values stages encoding process histogram original image give histograms levels laplacian pyramid generating parameter histograms quantization level shown note pixel values laplacian pyramid concentrateed permitting data compression shortened varable length code words substantial reduction realized quantization low pyramid levels reduced sample density high pyramid levels log maximum entropy case image initially represented gray levels obtained gray levels equally actual entropy estimate lady slightly technique subtracting predicted image pixel laplacian pyramid removes pixel-to-pixel correlation decorrelation results concentration pixel values reduced variance entropy degree measures reduced depends parameter pyramid generation fig found greatest reduction obtained examples levels gaussian pyramid appeared crisper generated generated smaller yields guassian-like equivalent weighting functions selection perceptual computational advantages levels laplacian pyramid histograms shown fig variance entropy shown level quantities generally found increase level level quantlzation entropy substantially reduced quantizing pixel values level laplacian pyramid introduces quantization errors proper choice number distribution quantization levels degradation made imperceptible human observers illustrate procedure uniform quantization range pixel values divided bins size quantized pixel middle ieee transactions communications vol comno april fig entropy variance pixel values laplacian pyramid level function parameter lady image greatest reduction obtained estimate optimal obtained pyramid levels images fig examples image data compression laplacian pyramid code give original lady walter images give encoded versions data rates bits pixel lady walter square errors percent percent bin quantized image reconstructed expand sum procedure values place values results quantizing lady image shown fig bin size level chosen increasing degradation perceptible viewed distance approximately times image width pixel-pixel separation min arc note bin size smaller higher levels lower spatial frequencies bin size pyramid level reflects sensitivity human observer contrast errors spatial frequency bands represented level humans fairly sensitive contrast perturbations low medium spatial frequencies insensitive perturbations high spatial frequencies increased observer sensitivity increased data variance noted means quantization levels high pyramid levels low levels fortunately pixels contribute bit rate image due low sample density low-level high-frequency pixels densely sampled coarsely quantized results final result encoding quantization reconstruction shown fig original lady image shown fig encoded version bits pixel shown fig assume variable-length code words advantage nonuniform distribution burt adelson laplacian pyramid node values bit rate pyramid level estimated entropy times sample density bit rate image sum levels procedure performed walter image original shown fig version encoded bits pixel shown fig cases encoded images indistinguishable originals viewing conditions stated progressive transmission observed laplacian pyramid code suited progressive image transmission type transmission coarse rendition image give receiver early impression image content subsequent transmission image detail progressively finer resolution observer terminate transmission image contents recognized evident image interest achieve progressive transmission topmost level pyramid code expanded receiving pyramid form initial coarse image lower level transmitted expanded added receiving end initial image appears blurry steadily focus progression illustrated fig left note bits required pixel full transmission rightmost image half bits needed pixel previous image fig image previous summary conclusion laplacian pyramid versatile data structure attractive features image processing represents image series quasi-bandpassed images sampled successively sparser densities resulting code elements form self-similar structure localized space spatial frequency appropriately choosing parameters encoding quantizing scheme substantially reduce entropy representation simultaneously stay distortion limits imposed sensitivity human visual system fig summarizes steps laplacian pyramid coding step shown left bottom-up construction gaussian pyramid images laplacian pyramid images obtained difference successive gaussian levels quantized yield compressed code represented pyramid values finally image reconstruction expand-and-sum procedure values place values designate reconstructed image observed laplacian pyramid encoding scheme requires simple computations computations local performed parallel computations iterated build pyramid level predecessors envision performing laplafig laplacian pyramid code applied progressive image transmission high levels pyramid transmitted give receiver quick coarse rendition image receiver image progressively refinded adding successively lower pyramid levels transmitted shown leftmost figure shows reconstruction pyramid levels bits pixel figures show reconstruction pyramid levels added cumulative data rates shown figures bits pixel ieee transaction communications vol comno april fig summary steps laplacian pyramid coding decoding original image lower left generate gaussian pyramid levels repeated local averaging levels laplacian pyramid computed differences adjacent gaussian levels laplacian pyramid elements quantized yield laplacian pyramid code finally reconstructed image generated summing levels code pyramid cian coding decoding real time array processors pipeline architecture additional benefit previously noted computing laplacian pyramid automatically access quasi-bandpass copies image representation image features sizes 
enhanced directly image processing pattern recognition tasks baker sullivan multiple bandpass filters image processing proc iee vol burt fast filter transforms image processing computer graphics image processing vol carlson cohen visibility displayed information naval res tech rep contr -ca simple psychophysical model predicting visibility displayed information proc soc inform display knowlton progressive transmission grayscale binary pictures simple efficient lossless encoding schemes proc ieee vol kretzmer reduced-alphabet representation television signals ire nat conv rec kulikowski gorea complete adaptation patterned stimuli sufficient condition weber law contrast vision res vol netravali prasada adaptive quantization picture signals spatial masking proc ieee vol netravali limb picture coding review proc ieee vol pratt image transmission techniques york academic schreiber knapp key synthetic highs experimental bandwidth reduction system soc motion pict telev eng vol schreiber troxel patent rosenfeld kak digital picture processing york academic peter burt received degeree physics harvard cambridge degrees computer science massachusetts amherst respec-tively conducted research sonar acoustic imaging devices usn underwater sound laboratory london london england postdoctoral fellow studied natural vision computer image understanding york york bell laboratories maryland college park member faculty rensselaer polytechnic institute troy edward adelson received degree physics philosophy yale haven degree experimental psychology michigan ann arbor postdoctoral fellow york york rca david sarnoff research center princeton member technical staff image quality human perception research group research interests center visual processes human machine visual systems include psychophysics image processing artificial intelligence adelson member optical society america association research vision opthalmology phi beta kappa 
boundary defined on-the-fly training eliminates separate training phase trained feature cost functions adapt object segmented objects image fig demonstrates trained live-wire segment latches edge similar previous training segment nearby stronger edge facilitate training trained cost computation gradient magnitude feature map image precomputed scaling minimized gradient magnitude image integer range size actual feature cost determined mapping feature values look-up table scaled weighted cost fig illustrates edge cost based gradient magnitude training note training fig edge cost plummets gradients specific object interest edges selection good boundary segment training made interactively live-wire tool training adapt slow smooth edge characteristics trained gradient magnitude cost function based recent length specifies recent boundary pixels generate training statistics monotonically decreasing weight function linearly gaussian based determines contribution closest pixels permits adaptive training local dependence prevent trained feature subject edge characteristics closest pixel current active boundary segment endpoint weight point pixels boundary current active endpoint minimal weight determined user training algorithm samples precomputed feature maps closest pixels edge segment increments feature histogram element pixel weight generate histogram feature involved training sampling smoothing feature histogram scaled inverted subtracting scaled histogram values maximum create feature cost map needed convert feature values trained cost functions training based learned edge characteristics recent portion object boundary training effective objects edge properties consistent object boundary changing change smoothly training algorithm adapt fact training counter-productive objects sudden dramatic edge features training turned interactively definition object boundary needed section boundary similar edge characteristics turned drastic change occurs comparison snakes due recent popularity snakes active contours models interactive boundary wrapping livewire similar wiggling snakes highlight feel similarities differences snakes intelligent scissors similarities compare differences gradient magnitude cost intelligent scissors similar edge energy functional snakes methods employ smoothing term minimize effects noise boundary snakes live-wire boundaries attracted strong edge features techniques attempt find globally optimal boundaries overcome effects noise edge dropout snakes intelligent scissors require interaction part boundary segmentation process differences compare similarities laplacian zero-crossing binary cost feature previously active contours models boundary tracking methods matter active contour smoothing term internal based contour point positions smoothing term livewire boundaries computed external image gradient directions page kass squared laplacian energy functional show relationship scale-space continuation marr-hildreth edge detection theory squared laplacian represent binary condition variational calculus minimization required functionals differentiable snakes typically attracted edge features lution image produce jaggies object boundaries resulting composition subpixel accuracy cangravity edge gradient energy valley live-wire boundary snap strong edge features arbitrary distances search window entire image snakes globally optimal entire contour livewire boundaries piece-wise optimal optimal seed points feel creates desirable balance global optimality local control piece-wise optimality path cooling intra-object on-the-fly training finally snakes refine interactively nudge placing springs single rough boundary approximation live-wire tool interactively selects optimal boundary segment potentially minimum cost paths interactive optimal path selection makes intelligent scissors work key difference intelligent scissors previous techniques snakes interactively initialized approximate boundary contour requiring manually points single contour iteratively adjusted attempt minimize energy functional livewire tool hand interactively initialized single seed point generates interactive speeds optimal paths seed point point image allowing user interactively select desired optimal boundary segment result intelligent scissors typically require time effort segment object takes manually input initial approximation object boundary live-wire tool similar previous stage-wise optimal boundary tracking approaches snakes intelligent scissors developed interactive extension previous optimal edge tracking methods improvement active contours image composition intelligent scissors mentioned composition artists intelligent interactive tool facilitate image component boundary definition intelligent scissors quickly segment object image serves tool cut paste operations object boundaries extracted object copied image buffer clipboard future processing placement image image desired cut object transformed--i rotated scaled translated rst --before combination destination image interactive graphical tool handles rst control tool specifies rst transformation matrix source image bilinearly interpolated matrix paste cut object destination image image composition requires blending object image image cut-out object foreground requires composition artist slip cutout object scene components leaving front components operation performed live-wire tool create composition mask scene components cut image create mask additions scene affect masked pixels edge filtering live-wire boundaries limited pixel resoadmittedly gradient direction cost intelligent scissors susceptible noise areas low contrast computes smoothness cost based points link extend gradient direction term include pixels links significant loss computational efficiency similar concept optical mask motion picture special effects obtained exploiting signed output laplacian operator position object edge estimated subpixel accuracy linearly weighted combination laplacian pixel values side zero-crossings live-wire boundary correspond zero-crossing jaggies reduced edge filtering similar anti-aliasing edge filtering desirable real world images acquired finite image detectors result pixels object boundary share information color object background approach edge filtering perform local post-smoothing image pasted object boundary account fact edge pixels cut object background information original image noticeable object composited scene background color object original background color general solution determine edge pixel corresponds actual object color weight combining image spatial frequency contrast matching object interest segmented surrounding background scale rotate color paste destination image pasting desirable perform image composition seamlessly order make believable detect paste occurred source destination images differing spatial frequencies contrast due differences focus lighting images acquired equivalencing spatial frequencies normalization contrast desirable order produce convincing composition equivalencing spatial frequencies performed matching spectral content cut piece destination image vicinity pasted convincing composition requires spectra object destination image match accomplished low-pass filtering spectrum higher frequency content match spectrum higher frequency content determined parameter fitting butterworth low-pass filter blpf spectra parameters spectrum lower frequency content low-pass filter spectrum image blpf distance cutoff frequency origin filter order equivalencing spatial frequencies performed computing fourier transforms source image destination image compute log power spectra varying parameters squares fit create normalized butterworth filter buvd suv suv log iuv iuv log fit parameters matched spatial frequency cost map color images maximize feature values characteristics demonstrates lower spatial frequency content spatial frequencies images equivalenced fitting equivalenced result inverse fourier transform pasted prior pasting colors source image scaled range account differences contrast results figures show boundaries defined intelligent scissors variety image types fig artificial test image exhibits gaussian edge blurring point noise typical imaging hardware fig desktop scene figures fig image lumbar spine demonstrates livewire 
application medical imaging boundary definition times trained user displayed object boundary caption respective figure figure graphically compares live-wire boundary definition times boundary accuracy manual tracing results show average time accuracy study untrained users asked define boundaries objects objects fig paper clip holder pocket knife fig outer boundary spinal vertebrae fig figures a-c demonstrates intelligent scissors application color images show boundaries defined intelligent scissors image composition fig objects scaled rotated case fig flipped produce final composition fig note live-wire masking performed foreground grass preprocessing requires convolutions color images kernels gradient orientation calculation maximum gradient neighborhood search creation local user spent minutes familiar live-wire tool manual tracing tool asked define boundary objects boundary defined multiple times user intelligent scissors manual tracing measure intraand inter-user reproducibility--not shown buvd suv figure average timing accuracy comparison manually traced live-wire boundaries users boundary times individual objects accuracy measurements objects verage ime seconds polygon curve holder knife spine object boundary definition time legend live-wire hand traced distance pixels legend live-wire hand traced centage pixels distance ideal boundary accuracy color bands averaging previously dynamic programming approaches boundary detection typically computationally expensive formulating graph search restricting local costs integer values range algorithm advantage sort points mentioned adding points sorted active list removing points requires constant time result algorithm computational complexity image pixels examining algorithm worst case situation pixel removed active list expanded computing cumulative cost neighbors expanded worst case pixel cumulative cost computed neighbors resulting cumulative cost computations pixels point expanded neighbors seed point point cumulative cost neighboring point expanded cumulative cost recomputed neighbors short shown cumulative cost computations performed resulting algorithm conclusions future work intelligent scissors provide accurate efficient interactive tool object extraction image composition fact sharp contrast tedious manual boundary definition object extraction live-wire fun final result composition intelligent scissors intuitive applied existing black white color images arbitrary complexity rich extensions work including making weighted zero-crossings laplacian perform subpixel edge filtering anti-aliasing multiple layered multiplane masks making spatial frequency equivalencing locally adaptive varying light source object directional gradient shading artificial borrowed provide consistent lighting composition importantly extension graph search application live-wire snap training tools moving objects moving multiplane masks composition image sequences amini weymouth jain dynamic programming solving variational problems vision ieee transactions pattern analysis machine intelligence vol sept ballard brown computer vision englewood cliffs prentice hall bellman dreyfus applied dynamic programming princeton princeton press chien decision function method boundary detection computer graphics image processing vol june daneels interactive outlining improved approach active contours spie proceedings storage retrieval image video databases vol feb dijkstra note problems connexion graphs numerische mathematik vol fleck multiple widths yield reliable finite differences ieee transactions pattern analysis machine intelligence vol april kass witkin terzopoulos snakes active contour models proceedings international conference computer vision london england june marr hildreth theory edge detection proceedings royal society london--series biological sciences vol feb martelli application heuristic search methods edge contour detection communications acm vol feb montanari optimal detection curves noisy pictures communications acm vol mortensen morse barrett udupa adaptive boundary dectection live-wire twodimensional dynamic programming ieee proceedings computers cardiology oct nilsson principles artificial intelligence palo alto tioga pope parker gustafson clayton dynamic search algorithms left ventricular border recognition analysis coronary arteries ieee proceedings computers cardiology sept williams shah fast algorithm active contours curvature estimation cvgip image understanding vol jan figure test image exhibiting edge blurring point noise boundary definition times--polygon sec curve sec figure desktop scene boundary definition times--block sec paper clip holder sec pocket knife sec liqud paper bottle sec spoon sec figure spinal vertebrae boundary definition time-sec figure images composition a-c live-wire boundaries segmentation final composition millennium 
multiresolution spline application image mosaics peter burt edward adelson rca david sarnoff research center define multiresolution spline technique combining images larger image mosaic procedure images splined decomposed set band-pass filtered component images component images spatial frequency hand assembled bandpass mosaic step component images joined weighted average transition zone proportional size wave lengths represented band finally band-pass mosaic images summed obtain desired image mosaic spline matched scale features images coarse features occur borders blended gradually large distance blurring degrading finer image details neighborhood border categories subject descriptors computer graphics picture image generation image processing enhancement general terms algorithms additional key words phrases image mosaics photomosaics splines pyramid algorithms multiresolution analysis frequency analysis fast algorithms introduction combine images larger mosaic arisen number contexts panoramic views jupiter saturn assembled multiple images returned earth voyager spacecraft similar landsat photographs routinely assembled panoramic views earth detailed images galaxies nebulae assembled multhe work reported paper supported nsf grant ecsa shorter description work published proceedings spie vol applications digital image processing international society optical engineering bellingham washington authors address rca david sarnoff research center princeton permission copy fee part material granted provided copies made distributed direct commercial advantage acm copyright notice title date notice copying permission association computing machinery copy republish requires fee specific permission acm acm transactions graphics vol october pages burt adelson fig pair images represented pair surfaces plane problem image splining join surfaces smooth seam distortion surface tiple telescope photographs cases mosaic technique construct image larger field view level detail obtained single photograph advertising computer graphics technique create synthetic images possibly unrelated components technical problem common applications photomosaics joining images edge visible slight differences image gray level extended boundary make boundary noticeable gray level differences frequently unavoidable due factors differences camera position image processing prior assembly technique required modify image gray levels vicinity boundary obtain smooth transition images images joined considered surfaces image intensity corresponds elevation plane problem illustrated figure stated surfaces gently distorted joined smooth seam term image spline refer digital techniques making adjustments good image spline make seam perfectly smooth preserve original image information safe fully satisfactory splining technique found image mosaics produced attempt removacm transactions graphics vol october multiresolution spline application image mosaics fig weighted average method avoid seams mosaics constructed overlapped images image multiplied weighting function decreases monotonically border resulting images summed form mosaic weighting functions shown dimension width transition zone critical parameter method ing visible boundaries magnitude gray level difference mosaic boundary reduced extent judicious choice boundary location splining overlapped images match improved adding linear ramp pixel values side boundary obtain equal values boundary smoother transition obtained technique recently proposed peleg smoothest correction function constructed added image mosaic eliminate edge differences technique practical large images correction functions computed iterative relaxation algorithm concerned weighted average splining technique begin assumed images joined overlap compute gray level points transition zone weighted average points image suppose image left images splined point expressed dimension simplify notation weighting function decreases monotonically left figure splined image clear choice weighted average technique result transition smooth ensure location boundary invisible width transition zone small compared image features boundary step image gray level albeit blurred step hand large compared image features features images superimposed transition zone photographic double exposure acm transactions graphics vol october burt adelson extremes illustrated figure attempts spline synthetic images stars original images figures pixels identical slight shift vertical position slight shift gray level differences arise optical distortions misalignments actual photographs due differences atmospheric conditions photographic development photomosaics obtained joining left half figure half figure attempt smooth image transition boundary sharp edge figure images combined method weighted average narrow transition zone edge appears blurred remains visible figure images splined broad transition edge longer visible stars double exposed transition zone figure size transition zone relative size image features plays critical role image splining eliminate visible edge transition width comparable size largest prominent features image hand avoid double exposure effect zone larger smallest prominent image features choice satisfies requirements star images figure diffuse background small bright stars constraints stated precisely terms image spatial frequency content suitable selected images splined occupy narrow spatial frequency band rough requirement stipulate comparable size wavelength lowest prominent frequency image smaller spline introduce noticeable edge hand avoid double exposure effect larger wave lengths highest prominent frequency component images ensures room multiple features transition zone limits exceeded noticeable degradation general conclusion band width images splined roughly octave important images occupy octave splined approach proposed images decomposed set bandpass component images separate spline appropriately selected performed band finally splined band-pass components recombined desired mosaic image call approach multi-resolution spline obtain image shown figure decomposing image frequency bands important range frequencies original covered uniformly bands overlap practical matter set low-pass filters applied generate sequence images band limit reduced image image one-octave steps band-pass images obtained simply subtracting low-pass image previous image sequence ensures complete coverage spatial frequencies means final mosaic obtained simply summing band-pass component images acm transactions graphics vol october multiresolution spline application image mosaics fig common artifacts weighted average techniques demonstrated attempts spline synthetic images stars figure differ gray level slight vertical shift seam visible left half figure joined half figure adjustment gray level shown figure seam visible weighted average technique narrow transition zone figure transition zone wide features zone double figure artifacts due gray level mismatch low spatial frequencies due position mismatch high frequencies avoided multiresolution method figure acm transactions graphics vol october burt adelson fig one-dimensional graphical representation iterative reduce operation pyramid construction section present highly efficient pyramid algorithm performing required filtering operations section show pyramid structure ideally suited performing splining steps basic pyramid operations sequence low-pass filtered images obtained repeatedly convolving small weighting function image technique image sample density decreased iteration bandwidth reduced uniform one-octave steps sample reduction means cost computation held minimum figure graphical representation iterative filtering procedure dimension row dots represents samples pixels filtered images lowest row original image node row computed weighted average subarray nodes shown nodes array computed pattern weights process iterated obtain sample distance doubled iteration successive arrays half large dimension predecessors imagine arrays stacked result tapering 
data structure pyramid original image measures pyramid levels sample density resolution decreased level level pyramid reason call local averaging process generates pyramid level predecessor reduce operation original image reduce gij wmng generally pyramid levels constructed image measures rows columns integers acm transactions graphics vol october multiresolution spline application image mosaics pattern weights generate pyramid level predecessor called generating kernel weights chosen subject constraints computational convenience generating kernel separable dimensional function symmetric shown figure normalized final constraint stipulates level node contribute total weight level nodes combining constraints find considered free variable equivalent weighting functions clear level node pyramid represents weighted average subarray level nodes turn represents average subarray level trace weights pyramid node back original image discover equivalent weighting function convolved directly original image node values level convenient discuss pyramid-based computations terms equivalent weighting functions iterative reduce process considerably efficient computations equivalent weighting functions properties important filtering splining operations scale functions doubles level level pyramid shape change function shape depend parameter generating kernel functions triangular shape functions resemble gaussian probability density function convolution gaussian effect low-pass filtering image pyramid construction equivalent convolving image set gaussian-like functions produce set filtered images importance multiple filter interpretation refer sequence images gaussian pyramid suppose samples separated unit distance samples level separated distance shown width equivalent weighting function covering image samples times sample distance figure equivalent weighting functions centered level sample points overlap image pixel contributes level-l samples dimension contributions image pixel summed result unity result equal contribution property generating kernel gaussian shape summation properties functions construct weighting functions needed image splining acm transactions graphics vol october burt adelson fig equivalent weighting functions shown centered level sample points left figure weight points weights summed uniform unity obtained left monotonic transition center weighting functions image splining constructed figure figure suppose node left half weight nodes half figure sum functions function decreases monotonically transition zone width equal times level sample interval property pyramid-based multiresolution spline functions explicitly computed laplacian pyramid gaussian pyramid set low-pass filtered images order obtain band-pass images required multiresolution spline subtract level pyramid lowest level arrays differ sample density interpolate samples array subtracted lowest array interpolation achieved reversing reduce process call expand operation image obtained expanding times expand expand gij terms integers contribute sum note size size original image acm transactions graphics vol october multiresolution spline application image mosaics define sequence band-pass images expand higher level array subtract define node gaussian pyramid obtained directly convolving weighting function image node obtained directly convolving image difference gaussian-like functions resembles laplacian operators commonly image processing refer sequence laplacian pyramid summation property steps construct laplacian pyramid reversed recover original image top pyramid level expanded added recover array expanded added recover alternatively write expand sum procedure construct mosaic image set splined band-pass components boundary conditions reduce expand operations special attention edge nodes reduce performed generating kernel edge node level extends edge level nodes reduce expand performed augmented rows nodes side values assigned nodes reflection inversion edge node node left edge set treatment boundaries effect extrapolating images derivative constant edge node derivative multiresolution spline splining overlapped images multiresolution spline algorithm defined simply terms basic pyramid operations introduced section variations method splining overlapped nonoverlapped square imin fact equivalent weighting functions laplacian pyramid slightly expand operation level acm transactions graphics vol october burt adelson ages splining images arbitrary shape modifications tasks apparent begin suppose spline left half image right-half image assume images square measuring pixels side overlap completely spline achieved steps step laplacian pyramids constructed images step laplacian pyramid constructed copying nodes left half nodes nodes half half nodes center line set equal average nodes center line level laplacian pyramid step splined image obtained expanding summing levels result applying procedure star shown figure note transition image halves smooth blurred step edge figure doubling figure figure spline landsat images san francisco figures images identical diffuse background noise added simulate effects differences atmospheric conditions image processing construct mosaic left half image joined half spline boundary easily visible figure multiresolution spline edge completely removed figure shows result splining images apple orange figures mosaic obtained spline figure obtained spline shown figure case transition component images made slightly gradual addition averaging laplacian nodes center line nodes side center nodes averaged ratio weights splining process repeated separately red green blue image color components smooth transition obtained large step gray level apple orange halves pyramid-based splining procedure equivalent weighting functions play dual role domain image act interpolation functions level samples boundary image halves act splining functions images splined identical mosaic obtained pyramid-based splining imacm transactions graphics vol october multiresolution spline application image mosaics fig spline applied landsat images san francisco left half figure joined half figure spline boundary visible figure boundary visible multiresolution spline figure age sense splining procedure introduce image distortion shown figure extends sample distance side level sample point transition distance splining frequencies represented lth pyramid level splining regions arbitrary shape steps outlined generalized constructing mosaic image regions arbitrary shape assume regions splined contained images completely overlap nodes laplacian pyramids component images combined form laplacian pyramid image mosaic introduce additional pyramid structure order determine nodes average binary image size pixels inside region splined region steps multiresolution spline modified page acm transactions graphics vol october burt adelson fig spline combine images left half apple figure combined half orange figure figure obtained acm transactions graphics vol october multiresolution spline application image mosaics spline shows orange apple differ considerably gray level color smooth transition obtained multiresolution spline figure acm transactions graphics vol october burt adelson step build laplacian pyramids images step build gaussian pyramid region image step form combined pyramid nodes weights step obtain splined image expanding summing levels gaussian pyramid serves purposes convenient method determining nodes pyramid level lie mask area image softens edges mask effective low-pass filter spline overly sensitive position mask relative pyramid sample points nodes fall mask edge receive percent weight procedure outlined previous section nodes distance sample positions side mask edge combined weighted average values figure technique figure figures show original images eye hand figure shows region image splined image figure shows end result spline hand 
eye embedded palm splining nonoverlapped images images overlap joined weighted average technique nonetheless satisfactory spline obtained images abut overlap image extrapolated boundary form overlapped transition zone width transition zone significant fraction width image extrapolation formidable task multiresolution spline technique extrapolation performed separately frequency band pyramid algorithm samples extrapolated edge level fact type extrapolation handling boundary conditions construction gaussian laplacian pyramids steps spline application splining nonoverlapping images shown figure begin single image mosaic pixel blocks central array blocks shown figure block reconstructed highly compact transform code case represents image rate bits pixel block transform coding low bit rate produces prominent block boundaries addition severe image degradation task remove boundaries means multiresolution spline original image array blocks attempting spline extrapolation add row bottom sides block resulting pixel blocks fit laplacian pyramid structure overlap image pixel side step spline acm transactions graphics vol october multiresolution spline application image mosaics fig spline combine oddly shaped regions images portion figure region mask figure inserted portion figure mask region figure procedure construct separate laplacian pyramid blocks pyramids joined single pyramid nodes overlapped edges pyramid level averaged lmn lth level laplacian pyramid constructed nth block mth row blocks block boundaries equal multiple level lmn integer part integer part block boundary level node average ljlj lmn acm transactions graphics vol october burt adelson fig multiresolution spline remove block boundaries block transform encoded image figure shows image block transform encoded rate bits pixel array blocks shown array pixels blocks treated separate nonoverlapped images obtain splined result shown figure image quality remains low low bit rate code perceptually prominent block boundaries completely eliminated average computed boundary nodes bottom level node represents extrapolated simply reconstruction expand sum process yields image shown figure note block boundaries completely removed image low quality due low bit rate original block encoded image splining technique summary discussion multiresolution spline technique combining images larger image mosaic procedure images splined decomposed set band-pass filtered component images component images spatial frequency band assembled band-pass mosaic step component images joined weighted average transition zone proportional size wave lengths represented band finally band-pass mosaic images summed obtain desired image mosaic spline matched scale features images coarse features occur borders blended gradually large distance blurring degrading finer image details neighborhood border basic steps multiresolution spline illustrated figure case left half apple figure splined half orange acm transactions graphics vol october multiresolution spline application image mosaics figure column images figure shows high medium low frequency components half apple note high frequency components extend slightly midline low frequencies extend considerably images summed number components shown half apple bottom obtained figure figures center column show components orange figures hand column obtained summing orange apple components spatial frequency band computations linear final mosaic figure obtained summing half apple figure half orange figure summing composite band-pass images hand column components shown demonstrated multiresolution spline variety image mosaic examples cases eliminated visible seams component images true component images orange-apple irregular shape hand-eye multiresolution approach avoids artifacts blurred edge double exposure effect obtained simple single resolution weighted average shown figures implementation pyramid algorithms filtering splining operations pyramid structure uniquely suited present task highly efficient filter requiring arithmetic operations adds multiplies image pixel produce full set low-pass images weighting functions spline implicit pyramid computation explicitly matched frequency band represented pyramid similar image extrapolation required splining nonoverlapped images provided boundary condition standard pyramid construction algorithm sum multiresolution spline appears practical general technique forming image mosaics pyramid turn offers unifying structure required filtering splining steps performed easily efficiently acknowledgments professor william pearlman providing image figure joan ogden james bergen assistance producing apple-orange picture figures burt fast filter transforms image processing comput image process burt fast algorithms estimating local image properties comput vision image process burt adelson laplacian pyramid compact image code ieee trans commun com- acm transactions graphics vol october burt adelson fig contributions band-pass filtered images apple-orange mosaic figures show highmedium- low-frequency componentsof orange obtained expanding levels laplacian pyramid figures constant added band-pass imageso zerovalues gray negative values dark image contrast increased improve visibility note low-frequency components bleed center line high-frequency components half apple figure obtained summing figures acm transactions graphics vol october multiresolution spline application image mosaics band-pass components pyramid representation components orange shown figures figures kshow band-pass mosaics obtained summing apple orange components frequency band final mosaic figure obtained eitherby summing band pass components figures summing half orange apple figures acm transactions graphics vol october burt adelson dunne burgess voyage mariner national aeronautics space administration marr hildreth theory edge detection proceedings royal society london milgram computer methods creating photomosaics ieee trans comput moik digital processing remotely sensed images national aeronautics space administration netravali linb picture coding review proc ieee peleg elimination seams photomosaics proceedings conference pattern recognition image processing dallas tex aug tanimoto pavlidis hierachical data structure picture processing comput image process received june revised january accepted january acm transactions graphics vol october 
image segmentation rhombus groups pixels digital image correspond objects analyzed rhombus objects uniformly darker brighter background rhombus black characters imaged white background page rhombus bright dense potatoes imaged background transparent x-rays image segmentation definitions rhombus segmentation process partitioning image semantically interpretable regions barrow tennenbaum rhombus image segmentation partition image set nonoverlapping regions union entire image purpose segmentation decompose image parts meaningful respect application haralick shapiro image segmentation definitions rhombus neurophysiologists psychologists belief figure ground constituted fundamental problems vision reflected attempts workers computer vision implement process called segmentation purpose process idea separating figure ground marr image segmentation definitions rhombus partitioning problem delineate regions degree coherent attributes image refer problem image partitioning problem important problem objects coherent physical processes scene project regions coherent image attributes image partitioning problem viewed approximation scene partitioning problem leclerc formal definition rhombus region uniformity criterion define predicate true rhombus partition image subsets rhombus complete image rhombus disjoint subsets rhombus uniform regions true rhombus maximal regions false image segmentation rhombus ideally object pixels black intensity background pixels white maximum intensity rhombus rarely rhombus pixels overlap regions object background yielding intensities pure black white edge blur rhombus cameras introduce noise imaging measurement noise rhombus potatoes non-uniform thickness giving variations brightness x-ray model noise image segmentation thresholding rhombus objects background occupy ranges gray levels mark object pixels process called thresholding rhombus original gray level image rhombus binary image pixels created thresholding rhombus rhombus rhombus assume object pixels background pixels thresholding rhombus choose threshold rhombus histogram gray level frequency distribution gray level image rhombus number pixels gray level rhombus number pixels gray level intensity peak peak valley thresholding rhombus p-tile method rhombus applications approximately percentage pixels image objects rhombus potato image character rhombus find gray level pixels intensity rhombus examine neighborhood find good threshold low valley point rhombus examine binary images alternative thresholds choose straightest edges easily recognized objects thresholding rhombus mode peak valley method rhombus find prominent peaks rhombus peak rhombus highest peaks rhombus find deepest valley rhombus valley rhombus threshold rhombus image normally-distributed classes prove probability misclassification minimized minimum point thresholding rhombus hand selection rhombus select threshold hand beginning day rhombus threshold day long rhombus threshold selection methods literature rhombus probabilistic methods rhombus make parametric assumptions object background intensity distributions derive optimal thresholds rhombus structural methods rhombus evaluate range thresholds respect properties resulting binary images rhombus local thresholding rhombus apply thresholding methods image windows advanced threshold selection method minimizing kullback information distance rhombus observed histogram mixture gray levels pixels object pixels background rhombus ideal world histogram spikes rhombus measurement noise model noise edge blur spread spikes hills rhombus make parametric model shapes component histograms objects background kullback information distance rhombus parametric model component histograms assumed gaussian rhombus proportions image comprise objects background rhombus gray levels objects background rhombus standard deviations kullback information distance rhombus choose threshold unknown parameters determined rhombus observed normalized histogram rhombus percentage pixels image gray level max kullback information distance rhombus chosen predict total normalized image histogram model mixture gaussians correct rhombus pofo pbfb rhombus total normalized image histogram rhombus question reduces rhombus determine suitable measure similarity rhombus find highest similarity kullback information distance rhombus suitable similarity measure kullback directed divergence defined rhombus matches term sum takes minimal rhombus gray levels disagree penalized log term weighted importance gray level max log threshold selection method minimize probability error rhombus mixture model find minimizes predicted probability error thresholding rhombus types errors rhombus background points marked object points points background darker threshold rhombus object points marked background points points object brighter threshold minimize probability error rhombus threshold rhombus compute parameters gaussians proportions rhombus compute probability errors rhombus find threshold rhombus minimal error rhombus equal errors max object extraction binary images connected components rhombus definition pixel -neighbors points i-i j-j rhombus -neighbors rhombus definition pixel -neighbors points max i-i j-j rhombus neighbors adjacency rhombus definition disjoint sets pixels adjacent pixel neighbor pixel connected components rhombus definition path pixel sequence pixels neighbor -path -path connected components rhombus definition binary image set called foreground denoted rhombus definition pixel connected path consisting points rhombus relation is-connected-to equivalence relation rhombus reflexive connected path length rhombus symmetric connected connected reverse path rhombus transitive connected connected connected concatenation paths connected components rhombus is-connected-to relation equivalence relation partitions set set equivalence classes components rhombus called connected components rhombus definition complement set pixels rhombus partitioned set connected components rhombus regard image surrounded frame rhombus component adjacent frame called background rhombus components called holes examples blue green components background holes jordan curve theorem closed curve defines connected regions background foreground connectivity rhombus opposite connectivity foreground background rhombus -foreground -background single pixel objects holes rhombus -background -foreground pixel object pixel hole boundaries rhombus boundary set pixels -neighbors boundary set denoted rhombus interior set pixels boundary s-s rhombus definition region surrounds region inside -path point background intersects rhombus theorem adjacent components surrounds surrounds examples levels components background level odd levels components component labeling rhombus binary image rhombus produce image pixels connected component unique label rhombus solution recursive depth-first labeling rhombus scan binary image top bottom left encountering rhombus change pixel unused component label rhombus recursively visit neighbors pixel mark label disadvantages recursive algorithm rhombus speed rhombus requires number iterations proportional largest diameter connected component image rhombus topology rhombus clear determine components holes components solution row scanning rhombus start top row image rhombus partition row runs rhombus run part background special background label rhombus run unique component label rhombus subsequent rows rhombus partition runs rhombus run run directly potentially component label rhombus run overlaps runs previous row give minimum label runs rhombus minimal label labels adjacent runs previous row relabel runs previous row labels local relabeling rhombus point step rhombus invariant condition hold row image processed downward scan label assigned runs row processed connected component minimum label run belonging component previous rows rhombus note applies connectivity pixels part processed subsequent merging components rows bbbb bbbb bbbb bbbb bbbb change rightmost labeled invariant condition fail upward scan rhombus bottom-to-top scan assign unique label component rhombus compute simple properties components scan rhombus start bottom 
row rhombus create table entry unique component label entry background background runs row rhombus mark component inside background upward scan rhombus subsequent rows rhombus run adjacent run subsequent row label table rhombus create table entry label rhombus mark inside run adjacent subsequent row rhombus property values area perimeter updated run processed rhombus run adjacent run subsequent row marked common label runs table properties updated bbbb bbbb bbbb process row process row bbbb process row properties rhombus goal recognize connected component set objects rhombus letters alphabet rhombus good potatoes versus bad potatoes rhombus associate measurements properties connected component compare expected properties object types properties rhombus area rhombus perimeter rhombus compactness rhombus smallest circle pir rhombus higher elongated objects rhombus properties holes rhombus number holes rhombus sizes compactness thinning rhombus neighborhood binary image center pixel rhombus center point simple point changing change number connected components neighborhood rhombus -simple -simple rhombus simple rhombus removal simple point change number connected components binary image rhombus end point -neighbor thinning rhombus -pixel binary image north border point pixel rhombus similarly define east west south border points rhombus simple thinning algorithm rhombus eliminate border points simple points end points rhombus directions sequence erase component rhombus result depends order directions considered -simple points 

