representative internet measurements aditya akella srinivasan seshan dept computer science carnegie mellon pittsburgh anees shaikh networking policy technologies ibm watson research center hawthorne introduction efforts characterize understand structure behavior internet long history network research community understanding network evolved knowledge configuration workload failure modes complete characterizing operation current internet infrastructure usage patterns essential improve understanding internet shape future numerous studies internet properties work understand measure network terms number distribution measurement sites research studies aim collect analyze internet data end-hosts typically limited small number probes located primarily universities research institutions naturally authors studies express caveats results offer justification limited perspective examples reasoning studies internet path properties include statements routes hosts plausibly representative measuring paths sources wide variety isps provide representative view testbed topology paths traverse large internet recent work delves issue context discovering internet router-level topology concluding vantage points improve discovery nodes links authors point impossible claim measurement sites study representative conclusions unavoidably sensitive choice measurement sites deploying maintaining large-scale measurement infrastructure extremely challenging clear guidance representativeness results obtained existing measurement testbeds crucial missing element current network measurement research paper argue measurements traffic paths workloads representative data collected locations large portion internet users obvious trade-off large degree representativeness common client-server communication pattern means measurement infrastructure places stub networks ingress points egress points sources destinations traffic flowing internet popular peer-to-peer applications measurement probes concentration points close busy dial-up access servers broadband central offices cable head-ends resources complete approach place measurement probe access point internet studies general properties entire network survey delays paths usage view studies valuable important interesting mention practical characterize network based common usage realizing vision well-placed infrastructure collecting representative measurements difficult number reasons key challenge lies determine parts network commonly notion commonly paths dictated largely application deployment locations popular web sites file servers mail servers game servers user populations question determine application servers popular densest groups users reside challenge arises variety objectives internet measurement studies requirements deploying probe stations measure path properties characterize session interarrivals durations internet application paper outline methodology determining representative set internet measurement locations based actual usage network recognize measuring aspects network implies notions representativeness focus attention determining locations enable meaningful measurements network-layer properties main idea technique leverage access records large network distributed application servers understand demand originates client requests directed information describe arrive set network measurement locations captures significant fraction traffic ways reduce number locations manageable level detecting removing redundancies provide overview work evaluating current measurement testbeds terms ability capture views commonly paths network proposed methodology discussed focus developing methodology identify representative points internet network-layer properties related routing path link metrics topology measured proposed approach based view key representative measurements collect information portions network client-server nature internet applications achieved focusing parts network carry traffic active clients popular servers approach determine significant clients servers reside determining popular servers necessarily hard number companies publish lists top web sites expect measured clients access examples include alexa internet nielsen netratings addition recent study wills describes measurementbased technique estimate relative popularity internet applications querying local dns servers active client populations estimating active client prefixes hand challenging assume geographic distribution internet clients roughly geographic population density census data heuristics potentially enumerate areas expect active clients reside order characterize measure network-layer properties important classify active clients terms isps connected cut approximate method achieving turn published lists rank isps metro areas subscriber base classifications obtain rough classification active clients base geography upstream isp categorization clients approximate calls informed accurate method propose employing data distributed application servers large content distribution networks cdns collect accurate information active client clusters addition data large cdn cross-check data popular servers servers typically customers large cdns akamai cdn consists large collection servers monitoring nodes distributed world connected variety upstream carrier isps akamai deploys collections servers major cities cluster attached distinct upstream isp serving city internally akamai maintains statistics total traffic received served cluster terms bytes number requests data ranking server clusters terms total number request arrivals total numbers bytes served end-clients obtain exhaustive accurate list active client clusters akamai serves cdns akamai serve significant fraction bytes internet serve objects popular web sites approach expected yield representative set active client locations terms geography topology important advantage employing data large cdn obtain actual traffic volumes active clients content providers pieces information construct approximate matrix amount traffic client cluster web server knowledge understanding important path measurement purposes sampled relative paths obtain estimates typical loss rates delays experience internet information locations active web servers clients step formulate set guidelines placement measurement vantage points order estimate network-layer properties metrics goal select measurement points characterize paths set popular web servers active client clusters measurement node located active client location popular web server ideal impractical requires large number measurement nodes reduce number measurement nodes propose simple approach identify smallest set nodes node characterized geographic location isp belongs york cover significant fraction important paths paths generally means end-to-end level paths set frequently visited web sites active clients direction client server server client number measurement nodes reduced exploiting isp customer-provider relationships remove redundancies suppose active client groups attached york smaller regional provider customer case choosing measurement node attached york cover paths client clusters customer multihomed multiple providers choose distinct measurement points covering sets active clients selecting measurement locations important trade-off number client clusters web servers covered respect total weights covered paths important measure paths paths highest weight critical ensure reasonable spectrum paths traversing variety geographic locations isps measured evaluating current measurement testbeds absence measurement infrastructure representative vantage points important understand completeness results obtained existing measurement testbeds additional objective work proposed methodology evaluate network measurement testbeds analyze well-placed testbed nodes terms ability probe important internet paths large number clients reach popular destination servers information step determining suitability measurement infrastructure observing internet properties evaluation ongoing discussion limited overview approach vehicles network measurements existing network research testbeds designed deployed serve broader research objectives analysis focus primarily placement testbed nodes evaluate features special functionality degree customized extended initial study widely-used research testbeds nimi national measurement internet infrastructure nimi government-supported measurement infrastructure consisting probes probes located primarily universities industrial government research labs nodes europe ron 
resilient overlay networks ron mit project focused overlay network services testbed consists nodes located international locations ron testbed notable includes small number broadband-connected nodes skitter skitter project caida project aims map internet paths uncover topology testbed consists nodes large number international nodes approximately planetlab planetlab large testbed centrally managed nodes located distinct locations planetlab site typically machines testbed intended enable development deployment evaluation global-scale network services nodes located primarily educational institutions americas europe asia-pacific regions nodes commercial data centers industry labs geographic information testbeds readily understanding topological representativeness requires effort begun experiments primarily based traceroute measurements multiple points generate list access providers node data analyze distribution networks covered testbed terms size placement internet hierarchy studies require bidirectional network-layer measurements clients servers paths nodes existing testbeds research testbed nodes educational research institutions abilene internet reach half paths planetlab nodes passed abilene based data october measurements nodes represent typical network characteristics constructing as-paths testbed nodes understand relative extent bidirectional measurements summary ongoing work paper outlined proposal improving representativeness internet measurement studies advocate approach focuses attention heavily paths determined examining traffic data distributed application servers interested leveraging data large cdns provide view active client regions frequently visited web content providers identifying active client clusters popular destinations begin determine number locations probes cover paths finally ongoing effort analyze quantify ability testbeds measure widely paths paper overview approach work preliminary phases working large cdn service provider collect client request statistics identify active endpoints web-based content applications data plan apply refine proposed methodology arrive set probe locations provide representative view typical internet path properties data working characterizing ability existing testbeds measure representative paths akamai technologies http akamai akella seshan shaikh empirical evaluation widearea internet bottlenecks proceedings acm sigcomm internet measurement conference imc miami october alexa internet top english language sites http alexa andersen balakrishnan kaashoek morris resilient overlay networks proceedings symposium operating system principles sosp banff canada october barford bestavros byers crovella marginal utility network topology measurements proceedings acm sigcomm internet measurement workshop imw san francisco november christenson ranking internet service providers size http jetcafe npc isp large html july cooperative association internet data analysis skitter http caida tools measurement skitter feamster andersen balakrishnan kaashoek measuring effects internet path faults reactive routing proceedings acm sigmetrics san diego june netratings weekly top parent companies http netratings paxson end-to-end routing behaviour internet proceedings sigcomm symposium communications architectures protocols september paxson adams mathis experiences nimi proceedings passive active measurement workshop pam hamilton zealand april peterson anderson culler roscoe blueprint introducing disruptive technology internet proceedings acm workshop hot topics networks hotnets princeton october http planet-lab saroiu gummadi dunn gribble levy analysis internet content delivery systems proceedings symposium operating systems design implementation osdi boston december wills mikhailov shang inferring relative popularity internet applications actively querying dns caches proceedings acm sigcomm internet measurement conference imc miami october 
exploring congestion control aditya akella srinivasan seshan scott shenker ion stoica cmu-cs- school computer science carnegie mellon pittsburgh research sponsored darpa contract additional support provided ibm views conclusions contained document authors interpreted respresenting cial policies expressed implied darpa ibm government computer science department carnegie mellon aditya cmu computer science department carnegie mellon srini cmu internet research center icsi icir berkeley shenker icir computer science department berkeley istoica berkeley abstract early days modern congestion control ushered development tcp decbit congestion control algorithm pioneering theoretical analysis chiu jain widespread agreement linear aimd control algorithms early congestion control design decisions made context loss recovery fairly primitive tcp reno timed-out losses occurred routers fifo drop-tail subsequent years signi improvement tcp loss recovery algorithms instance tcp sack recover losses timing addition proposals improved router queueing behavior red active queue management explicit congestion noti cation ecn tolerate bursty behavior perow packet scheduling drr fair queueing provide explicit fairness view developments seek answer fundamental question paper aimd remain sole choice congestion avoidance control modern settings mechanism provide performance evaluate linear congestion control styles aimd aiad mimd miad context loss recovery router algorithms show aimd unambiguous choice traditional setting reno-style loss recovery fifo drop-tail routers fails provide goodput performance modern settings aimd fails aiad proves reasonable alternative keywords congestion control active queue management introduction rst sophisticated transport congestion control algorithms developed simultaneously decbit tcp employed additive-increase multiplicative-decrease aimd window adjustment algorithms theoretical study con rmed simple model synchronous congestion signals static bandwidth aimd fair stable choice linear alternatives aimd aiad mimd miad past decade due tremendous success tcp congestion control enduring persuasiveness superiority aimd widely accepted deeply held belief result research studies advocating exploring linear schemes aimd papers congestion control investigate algorithmic issues fall aimd paradigm departing aimd paradigm majority propose non-linear congestion control algorithms approaches radically tcp notable exceptions statement discussed section discussed section propose linear control algorithms aimd paper revisit question aimd reasonable choice linear congestion control schemes seek explore options linear congestion control theoretically serve viable option modern congestion control algorithm ignoring issues tcp compatibility tcp-friendliness incremental deployment question early development tcp congestion control context reno-style loss recovery fifo drop-tail routers tcp-reno reacts fairly severely losses reno incurs losses window times restarts past important window adjustment algorithm increase window conservatively avoid multiple losses progress made loss recovery algorithms past decade modern loss recovery recovery schemes sack incur gentle penalty losses endure packet drops single window restarting conservative window adjustment algorithms addition drop scheduling policies routers changed signi cantly early days tcp active queue management aqm widely accepted red algorithm widely implemented isn clear widely deployed aqm general red give ows early congestion signals physical queue exhausted absorb bursts packets reduces burstiness loss patterns lessens chance tcp time-out restart explicit congestion noti cation ecn giving congestion signals losses penalty loss tcp sack employed conjunction ecn addition modifying drop-policies routers calls routers adopt perow queueing schemes cit round robin drr explicitly ensure fairness ows schemes widely deployed isps deploying routers capability require tcp window adjustment algorithm provide fairness days widespread deployment drr similar algorithms future paper evaluate deployment erent window adjustment schemes ows internet carry packets bandwidth long-lived ows uctuate substantially tra load model change time applications arise due reasons paper seek evaluate performance congestion control algorithms wide variety bandwidth variations extreme rst sight contrast past congestion control evaluation simulation studies looked primarily cases bandwidth constant paper simulations nsto evaluate linear congestion control scheme function settings loss recovery mechanisms queue management schemes backdrop variety bandwidth variations focus ect setting relative performances algorithms primary metric evaluate schemes goodput fraction bandwidth transmit distinct data packets achieved scenarios scenarios varying bandwidth key achieving high goodput ability track bandwidth ability variations signi cantly overshooting undershooting evaluate fairness delay loss rate properties congestion control schemes simulations show aimd superior design choice traditional setting tcp reno loss recovery fifo drop-tail routers modern developments mentioned aimd longer superior tcp sack active queue management techniques fair queueing routers enable linear alternatives provide comparable signi cantly goodput performance observe aiad linear alternatives achieve fairness long routers fifo drop-tail show analysis simulations hybrid linear algorithms linear increase decrease purely additive purely multiplicative alleviate fairness issues aiad provide good performance rest paper organized section compare tracking ability window adjustment schemes section lay framework paper compare contrast congestion control algorithms section presents results study section brie revisit issue fairness linear congestion control schemes section present related work finally section summarizes paper aimd superior rst question aimd superior choices terms goodput achieved subsequent analysis moot entire paper misguided exercise show section algorithms scenarios performs worst algorithms fact suggests special care deciding algorithm maximize usage bandwidth congestion control scheme balance tracking rapid bandwidth minimizing packet losses faster sender modi window size faster sender track bandwidth hand fast large window size increase probability sender overshooting bandwidth result large number packets dropped negative implications losses packets retransmitted higher fraction bandwidth devoted retransmitting packets burst losses hurt loss recovery algorithm forcing restart bandwidth mbps time seconds aimd-best bandwidth mbps time seconds aiad-best aimd aiad mimd miad aimd aiad mimd miad bandwidth mbps time seconds miad-best bandwidth mbps time seconds mimd-best aimd aiad mimd miad aimd aiad mimd miad figure good cases canonical choices goodput algorithms variation shown table plot goodput measured fraction average bandwidth transmit unique packets number canonical congestion control schemes multiplicative additive schemes vary window size bandwidth increases slowly additive increase outperform multiplicative increase fast track overestimate bandwidth contrast multiplicative increase perform bandwidth increases large abrupt reasoning applies bandwidth decreases window decrease algorithms intuitively reason single canonical congestion control scheme dominate wide range scenarios present results supporting observation figure shows patterns bandwidth variations measure goodput linear algorithms scenarios scenarios chosen case erent algorithm achieves highest throughput describe results detail figure shows saw-tooth bandwidth pattern aimd performs compared aimd window size mimd miad increases fast aiad decreases slowly result schemes experience losses retransmissions aimd signi cantly worse goodput miad due fact miad experiences larger number timeouts simulation details section simulations drop-tail fifo routers tcp sack bandwidth mbps time seconds aiad-worst bandwidth mbps time 
seconds mimd-worst aimd aiad mimd miad aimd aiad mimd miad figure bad cases aiad figure mimd figure notice y-axes erent scales figure shows aiad performs reason result subtle bandwidth drops aiad reduces window size slower disciplines miad aiad lose slightly packets decrease window size set increase window size previous high bandwidth period window size aiad increases continuously multiple high bandwidth periods duration low bandwidth period short tcp sack recovers packet losses experiencing retransmission timeouts contrast miad mimd avoid timeouts constantly overshoot bandwidth finally aimd perform window decrease low periods sets window increase high periods compared previous experiment scenario presented figure high low periods shorter high bandwidth larger give advantage miad aiad miad longer overshoots bandwidth increases aiad ers fact increase window size fast high periods figure presents scenario makes mimd winner square pattern bandwidth variation periods longer bandwidth decreases aiad miad lose packets tcp sack longer avoid retransmission timeouts hand aimd exploit bandwidth window size increases slowly high periods leaves mimd discipline adequately track abrupt bandwidth construct scenarios make canonical congestion control schemes winner construct scenarios make congestion control schemes loser instance aimd exhibits worst performance experiments presented figures miad performs worst figure completeness figure present tra scenarios aiad mimd perform worst figure additive increase algorithms slow catch sudden increase bandwidth aiad aimd aiad track rapid decrease bandwidth ends losing packets aimd figure shows mimd performs worst case multiplicative increase algorithms overshoot bandwidth signi amounts time-out miad performs mimd additive decrease substantially higher number packets outstanding mimd summary clear winner loser canonical congestion control schemes shown section congestion control scheme devise bandwidth variation pattern make scheme winner loser relative performance schemes erent scenarios compare behavior congestion control schemes develop evaluation methodology based competitive analysis subject section evaluation methodology order meaningfully compare algorithms make key guiding assumptions rst guiding assumption congestion control algorithms designed scenario matter realistic scenario time load model internet change abruptly applications arise nature infrastructure congestion control algorithms evaluated wide variety scenarios guiding assumption robustness important optimality demand congestion control algorithm perform situations concerned worst-case performance best-case performance embody guiding assumptions concrete methodology borrow approach similar study competitive algorithms set congestion control algorithms compare study consists aimd aiad mimd miad set environments scenarios algorithms faced scenario variation bandwidth quantity interest goodput fairness loss delay denote score algorithm environment smax maxa afsa denote score achieved scenario algorithms smax measure environment close matching performance algorithms per-environment scores aggregate scores rank worst-case score environments maxe efda rank measures worst-case performance algorithm lower ranks represent robust algorithms poorly measure aggregate erences lower values algorithm metric table outlines notation section approach intended capture basic qualitative behavior algorithms approach limitations wide range algorithms explored scores represent deviations good algorithm environment represent deviations algorithms wide set environments sampled similar problems arise focuses environments extreme dominate worst case results alter rankings choosing sets crucial method explain choices scenarios extreme abrupt construct tra models periodic packet bursts periodic outages result variations roughly similar shown ned smax alternate nition results similar notation description score algorithm environment smax maxafsa smax maxafda rank algorithm measuring worst-case performance kek metric average performance table notation environment variation perow bandwidth cons-low constant mbps cons-high constant mbps sq-low sql mbps mbps mbps regular intervals sq-high sqh mbps mbps mbps regular intervals rw-low rwl mbps rw-high rwh mbps rd-low rdl mbps rd-high rdh mbps rw-additive rwa mbps rw-multiplicative rwm mbps real-cons-low rcl pareto length ows arrive poisson inter-arrival times real-cons-high rch real-cons-low inter-arrival time low real-sq rsq inter-arrival time varies square manner table environments choosing set environments choosing components aim include environments cover wide variety situations keeping set small manageable deliberately choose environments fairly extreme goal realistic test algorithms unusually harsh conditions include environments ect realistic scenarios finally add environments hope reveal key aspects algorithms behavior resulting composition set shown table scenarios simple topology single congested link varying bandwidth basic bandwidth variations describe variation perow bandwidth constant bandwidth constant included cons-low environment constant bandwidth low mbps cons-high environment constant bandwidth high mbps square-wave bandwidth undergoes square wave oscillations bandwidth variations occurring seconds sq-low sql scenario bandwidth varies mbps mbps sq-high sqh scenario bandwidth varies mbps mbps random walk rwl rwh bandwidth varies random walk bandwidth time bandwidth chosen uniformly interval rw-low rwl mbps rw-high rwh mbps random rdl rdh bandwidth chosen uniformly randomly interval mbps rd-low rdl mbps rd-high rdh additive random walk rwa environment rw-additive rwa bandwidth chosen additively constrained interval bandwidth time chosen uniformly random interval mbps multiplicative random walk rwm environment rw-multiplicative rwm bandwidth picked multiplicatively constrained interval words chosen uniformly random interval mbps realistic cross tra variation bandwidth determined pareto-length ows arriving bottleneck router poisson inter-arrival times environment real-cons-low rcl inter-arrival time real-cons-high rch environment real-sq rsq varies square manner variation occurs seconds scenarios chosen ect realistic load cross-tra models cases listed table exceeds capacity link set choosing set algorithms faimd aiad mimd miadg letlc denote linear congestion control scheme increase parameter decrease parameter window increase decrease equations mimd linear control schemes pick single set parameters reasonable performance settings loss recovery schemes router algorithms bandwidth variations choice ensure key properties single algorithm case aimd summarize behavior entire family linear control schemes algorithm belongs aimd single algorithm ensure near-optimal performance settings addition choosing parameters representative algorithm ensure choice obscure core qualities increase decrease linear control algorithm pick decrease parameter candidate aimd algorithm close similar additive decrease property hold entire range sizes congestion window spanned bandwidth variations algorithms exposed subjectively list conditions satis linear control algorithms window sizes additive increase additive increase component instant time window undergo increment greater current size serves distinguish additive increase form multiplicative increase additive decrease additive decrease component decrement window serves erentiate multiplicative decrease multiplicative increase multiplicative increase component large increment size window larger multiplicative decrease multiplicative decrease component chosen window decrement mbps mbps mbps mbps mbps mbps mbps mbps mbps short lived long lived tcp sack flow tcp sack flow figure topology simulations figure shows setting simulations cbr source starting control bandwidth link simulations involving realistic tra patterns setting shown figure bandwidth variations chosen hard lowest window 
size undergo increment assuming round-trip time section similarly lowest window size undergo decrement applying conditions permissible values parameters approximately results comparison candidate alogithms classes aimd aiad mimd miad shown appendix based results choose candidate linear control schemes comparison aimd aiad mimd miad henceforth refer schemes aimd aiad mimd miad simulation set-up simulations nsto study congestion control schemes combinations loss recovery router algorithms environments simulation identical tcp test ows linear congestion control scheme investigation subject erent variations bandwidth topology testing variations shown figure implement variations bandwidth scenarios choose bandwidth link constant introduce cbr-like cross-tra consume varying amounts bandwidth link bandwidth cross-tra consumes bandwidth descriptions bandwidth variation scenarios turned recipes cross-tra rate varied testing drop-tail red router mechanisms employ single rate controlled cbr source end-points realize bandwidth variations testing drr schedulers cbr source incur losses bandwidth slightly larger expected time-varying number xed rate cbr sources simultaneous tcp ows tested single cbr source limited bandwidth instant time drr bandwidth vary desired vary number cbr ows accurately implement variation bandwidth simple calculation shows achieve bandwidth cbr ows capacity link number test tcp ows test tcp ows randomize round-trip times slightly avoid synchronization ects topology shown figure suited tests control bandwidth directly amenable implementation bandwidth variations topology shown figure implement variations rst describe set-up detail explain reasons erence figure tcp-sack ows implementing aimd pareto-distributed lengths poisson inter-arrival times run nodes constitute cross tra link test tcp ows nodes addition place-holder long-lived ows nodes router employs drr scheduling router implements drr rio explained greater detail tcp-sack cross tra priority test tra router addition bandwidth equals link simulating environments ensure tcp ows constituting cross-tra link allocated fair-share capacity irrespective congestion control algorithm employed test ows ensured drr router long-lived place-holder ows place-holder ows emulate testows pareto-distributed tcp ows enter link aggregate occupies fair-share tcp ows constituting cross-tra incur losses link fair-share exiting link ensured rio router marking packets belonging cross tra high priority tcp-sack cross tra testing setting drop-tail ers modify parameters low priority packets router implement drop-tail behavior packets belonging test ows testing drr setting drr scheduler rio router notice ows belonging cross tra incur additional losses drr employed router results discussed introduction metrics evaluating performance erent congestion control schemes goodput measure goodput fraction bandwidth transmit unique packets goodput values lie delay queueing delay measured milliseconds loss rate loss rate measured terms percentage packets lost score packet loss fairness fairness metric ned gmax gmingavg gmax gmin gavg maximum minimum average goodputs test ows present results rst describing rankings change tcpreno severe loss penalty gentle loss penalties discuss impact erent router drop policies queueing behavior presenting results show goodput aggregate scores show erent behavior present values fairness loss delay ordering values quantities similar ordering values delay loss show raw values absolute magnitude delays losses easily inferred simulations test ows run simulations erent number test ows results qualitatively similar reasons space show results higher numbers ows impact loss recovery algorithms mentioned section tcp reno incurs severe penalty recovering losses tcp sack adept handling losses incurs gentle penalty performed simulations congestion control algorithms types loss recovery tcp reno tcp sack simulated schemes scenarios tests routers fifo drop-tail routers ers sized match delay-bandwidth product network tcp reno loss recovery results tcp reno loss recovery shown gure subsequent tables mark algorithms goodput values underlining results aimd aiad deliver roughly similar goodput test environments hand multiplicative increase algorithms perform poorly large values signi cantly overestimate bandwidth invoke tcp reno expensive loss recovery routines aimd fairness aiad aimd perfectly fair addition aimd ers fewest losses miad ering aimd aiad highest delay values algorithms frequently timed-out leaving queue empty summarize tcp reno loss recovery fifo drop-tail routers aimd aiad provide goodput performance aiad fair tcp sack loss recovery figure shows results tcp sack loss recovery fifo drop-tail routers absolute values don show tables goodputs signi cantly higher tcp reno expected loss delay values higher comparative terms mimd achieves high goodput fact marginally aimd aiad terms delay loss rate mimd worst performance employed chiu-jain fairness index comparison results qualitatively identical tcp reno goodput fairness delay loss droptail aimd aiad mimd miad rwl rwh rdl rdh sql sqh rwm rwa rsq rcl rch loss delay aimd aiad mimd miad figure fifo drop-tail ers tcp reno loss recovery table compares erent algorithms basis metrics algorithms achieving goodput performance underlined gure bottom shows raw delays loss rates column gure algorithms presented order aimd aiad mimd miad aimd remains algorithm achieve reasonable levels fairness fact gentle loss recovery tcp sack makes fairness properties non-aimd algorithms worse timeout-induced restarts invoked tcp reno ows fair share continue exploit advantage longer periods time tcp sack goodput fairness delay loss droptail aimd aiad mimd miad rwl rwh rdl rdh sql sqh rwm rwa rsq rcl rch loss delay aimd aiad mimd miad figure fifo drop-tail ers tcp sack loss recovery summarize tcp sack loss recovery reduces distinguishing factors erent schemes schemes miad provide roughly comparable goodput performance aimd highest levels fairness impact multiple congested bottleneck links persistent high loss rate aiad raise concerns validity goodput results scenarios multiple congested bottleneck links high loss-rate congested down-stream link ect goodput competing ows up-stream links check case perform simulations test ows traverse multiple congested distinct bottleneck links show details simulations observe situations multiple congested bottlenecks aiad continues identical goodput aimd consequence aiad ability packets outstanding aimd instant ability sets negative impact aiad higher loss rate goodput helps aiad utilize bandwidth ectively aimd situations impact router queuing behavior ecn variety router con guration settings ect behavior end-to-end congestion control schemes important factors include drop policy drop-tail aqm early congestion noti cation ecn fair scheduling drr sizing turn ect active queue management router employing drop-tail policy senders gauge incipient congestion indication congestion actual drastic frequently results burst losses long queues routers red active queue management attempts provide earlier gradual indication congestion network endpoints tcp reno goodput fairness delay loss red aimd aiad mimd miad rwl rwh rdl rdh sql sqh rwm rwa rsq rcl rch loss delay aimd aiad mimd miad figure red gateways tcp reno loss recovery 
objective red style feedback reduce loss rates delays managing occupancy router actively end-hosts tcp reno simulated circular topology test traverses bottleneck links links turn shared erent competing test ows routers employ red active queue management figure reduce loss rates delays signi cantly schemes red greatly alter relative goodputs algorithms aimd aiad achieving goodput results fifo drop-tail ers tcp reno end-points red signi cantly improves fairness schemes aiad worst regard erence small increased fairness red explained fifo drop-tail routers model considered chiu jain packet drops synchronous deterministic resulting ows experiencing similar loss epochs red hand randomizes losses ows time red ectively decouples loss epochs ows helps punish ows greater number packets outstanding rate higher fewer packets outstanding red achieve long-term fairness summary red routers tcp reno loss recovery aimd aiad provide goodput fair tcp sack goodput fairness delay loss red aimd aiad mimd miad rwl rwh rdl rdh sql sqh rwm rwa rsq rcl rch loss delay aimd aiad mimd miad figure red gateways tcp sack loss recovery end-hosts tcp sack figure red routers signi shift performance expected loss rates delays fairness worse tcp reno algorithms terms goodput mimd performance aiad reason mimd aiad signi cantly aimd compared fifo drop-tail ers red tolerant bursty tra patterns tcp sack times-out occasionally fifo drop-tail ers aggressive congestion control schemes mimd employed due large bursts packet losses time-outs rare red miad aggressive times-out providing poor performance red routers tcp sack loss recovery mimd aiad achieve highest goodput mimd fair aiad slightly unfair aimd continues provide lowest loss delay highest fairness checked increased fairness persists scenarios ows ering rtts case algorithms give roughly rtt-biased allocations aimd ect early congestion indications red routers provide explicit congestion noti cation ecn marking bit headers forwarded packets incipient congestion marking gentle form feedback end-systems packets lost providing congestion indications simulations con reno sack loss recovery loss rates signi cantly reduced compared red drop-tail delays slightly increased tcp sack loss recovery exacerbates fairness issues fifo drop-tail routers added gentleness due ecn helps aggressive ows hold additional bandwidth incurring penalty results slightly worse fairness ecn form loss recovery tcp reno goodput fairness delay loss ecn aimd aiad mimd miad rwl rwh rdl rdh sql sqh rwm rwa rsq rcl rch loss delay aimd aiad mimd miad figure ecn tcp reno loss recovery hosts employ tcp reno loss recovery ecn figure produces dramatic change algorithms providing identical goodput performance algorithms provide identical performance terms goodput loss rate miad provide poor fairness aiad provide poor performance terms delay tcp-reno loss recovery routers employing ecn algorithms provide near-identical performance morover miad unfair algorithm tcp sack loss recovery figure general conclusions hold key side ects firstly miad mimd superiority goodput increases considerably aiad performs aimd terms goodput compared tcp-reno case presented summary ecn tcp-sack end-points miad mimd moderate goodput advantage aiad good performance comparable miad mimd terms goodput aimd aggressive shows poor goodput performance ect smaller ers previous experiments con gured routers queue sizes roughly equal delaybandwidth product congested link rule-of-thumb adopted internet enable tcp aimd default setting fully utilize network capacity performed simulations reduced router size delay-bandwidth product tcp sack goodput fairness delay loss ecn aimd aiad mimd miad rwl rwh rdl rdh sql sqh rwm rwa rsq rcl rch loss delay aimd aiad mimd miad figure ecn tcp sack loss recovery congestion control schemes cope small ers due limited space include detailed results summarize fairness properties largely unchanged small ers goodput loss rates algorithms form loss recovery deteriorate signi cantly reduced ers due excessive overshooting drop-tail routers aiad achieves goodput aimd largely aimd conservative back-o drops occasionally leaves queue empty small ers impact results red routers red system designed ensure low average queue occupancy essence smaller drop-tail router ers makes gradually adapting schemes aiad red performance ordering change smaller ers ect drr evaluation fairness important metric congestion control algorithm performance alternative approach providing fairness rely router mechanisms drr question seek answer congestion control algorithms perform routers provide fairness explicitly simulations drr scheduler bottleneck router provide instantaneous perow max-min fairness figures show results reno sack loss recovery firstly schemes equally fair form loss recovery aggressive algorithms provide signi cantly goodput performance algorithms addition algorithms similar terms delay loss rate routers provide fairness explicitly algorithms provide signi cantly goodput performance algorithms algorithms equally fair discussion goal congestion control maximize fairness minimize loss delay achieving reasonable levels goodput aimd clear choice matter form loss recovery router queueing discipline employed setting aimd achieved low tcp reno goodput fairness delay loss drr aimd aiad mimd miad rwl rwh rdl rdh sql sqh rwm rwa rsq rcl rch loss delay aimd aiad mimd miad figure drr tcp reno loss recovery tcp sack goodput fairness delay loss drr aimd aiad mimd miad rwl rwh rdl rdh sql sqh rwm rwa rsq rcl rch loss delay aimd aiad mimd miad figure drr tcp sack loss recovery delays loss rates high levels fairness hand goal congestion control maximize goodput achieving reasonable levels fairness loss rates delay situation considerably erent figure helpful understanding algorithms compare goal combination loss recovery algorithm router algorithm table depicts congestion control algorithms achieve highest goodput algorithms achieve fair performance circled tcp ows incur large penalty losses routers employ packet drops congestion routers ensure perfect isolation ows scenarios dotted box figure congestion control schemes aimd aiad superior schemes conservative increase result sending rate bursty mimd miad traditional setting tcp reno loss recovery fifo drop-tail routers aimd achieves highest goodput penalty due losses minimal due ows employing tolerant mimd aiad aiad aimd miad mimd aiad aiadaimd aimdmimd aiad drr fifo red tcp reno queueing red ecn tcp sack loss recovery aimd aiad aimd aiad aimd aiad mimd miad figure plot showing algorithms achieved highest goodput settings considered previous section encircled algorithms unfair loss recovery schemes due routers marked packets congestion scenarios inside dotted box figure aggressive congestion control algorithms stand gain terms goodput aimd conservative increase decrease inferior performance settings hand schemes aggressive increase mimd aggressive decrease aiad miad provide signi cantly goodput situation key observation stands evaluation fact aiad 
leading goodput performers scenarios considered aiad achieves reasonable levels fairness long routers fifo drop-tail suggests deploy modern loss recovery mechanisms router queue management schemes aiad nitely viable choice congestion control fact alleviate fairness issues aiad fifo drop-tail case choice terms ciency fair bandwidth allocation considered pure linear schemes address issue fairness hybrid schemes hybrid congestion control algorithms section address erent issues solve fairness problems aiad drop-tail fifo routers advantages disadvantages hybrid linear congestion control algorithms algorithms linear increase decrease purely additive purely multiplicative turns hybrid algorithms solutions aiad fairness problem address issues start revisiting chiu-jain analysis deriving conditions fairness hybrid algorithms fairness linear congestion control algorithms governed update equations biw success bdw loss system synchronous congestion signals static bandwidth argue true aiad true mimd combinations parameters yield fair congestion control algorithm assume system reaches steady state nonzero window size updates window follow periodic cycle increases decreases easy analysis excludes miad end cycle size window identical start simplicity assume sequence consists increases decreases sequence repeats inde nitely steady state shown gure stress argument applies general steady states figure window update sequence steady state fact sequence linear increases window size bkiw sequence linear decreases bkdw obtain equation window steady state bjd bkdd bji bkii bjd aibkdd bji bkdd bkii aibkdd bkdd bkii algorithm completely multiplicative implying assume means allowable means ows window size hand algorithm completely additive allowing cases parameter values precisely tuned single steady-state ows converge means hybrid algorithms achieve fairness present algorithms section chiu jain establish conditions convergence fairness conditions cient contrary conclusions analysis additive component decrease hybrid algorithms rwl rwh rdl rdh sql sqh rwm rwa rsq rcl rch fairness goodput aimd aiad aimad maimd rwl rwh rdl rdh sql sqh rwm rwa rsq rcl rch loss delay aimd aiad aimad maimd figure figure showing performance hybrid algorithms column algorithms presented order aimd aiad aimad maimd choose setting tcp sack loss recovery fifo drop-tail routers aiad worst fairness scenario introduction mentioned papers proposed linear control schemes erent aimd notable exceptions argues purely linear increase proposes hybrid increase multiplicative additive terms parameter values evaluation found marginally choice call maimd linear control scheme note slight perturbation standard aimd small multiplicative component hand previous results suggest aiad fairness issues desirable candidate linear congestion control propose aimad control algorithm adds bit multiplicative decrease notice multiplicative component aggressive additive decrease examine salient features drawbacks schemes present results tcp sack loss recovery fifo drop-tail routers figure aimad achieves signi cantly fairness aiad environments fifo drop-tail routers tcp sack loss recovery improvement fairness cost worse goodput addition aimad expected lower loss rates lower delays aiad note aimad fairness comparative aimd addition aimad delay loss rates higher aimd similarly maimd fifo drop-tail routers tcp sack loss recovery improves worst-case performance aimd reasonable goodput compared aimd environments due aggressive increase loss rate fairness good aimd speci cally fairness maimd slightly worse environments raw link capacity high finally delays aimd maimd similar general observe aimad performs aiad respect metrics situation discussed paper hand maimd goodput performance comparable aimd tcp sack loss recovery true router con gurations due space constraints present detailed results alternate router con gurations considered maimd fairness similar aimd form loss recovery related work past research studies exploring linear alternatives tcp congestion control algorithms separate studies bear similarity work authors present study tracking abilities congestion control algorithms networks provide fairness explicitly study increase component congestion control algorithms additive multiplicative non-linear decrease component chosen multiplicative paper shows analysis fair network mimd responsive congestion noti cations schemes including aimd concludes mimd track bandwidth ectively work ers key aspects rstly additive decrease schemes purview analysis impact loss recovery factored analysis result conclusions erent qualitatively observations impact fair-queueing presented section shown reno-style loss recovery schemes dominant sack-style loss recovery algorithms miad provide identical goodput performance contrast employs simulations study relative performance aimd aild aild linear increase aimd decrease ned equation constant loss ratio bandwidth constant authors observe networks red-like gateways aild cient fair outperforms aimd nition linear decrease adopted study produce linear control scheme sense ned paper drop rate nonlinear function aggregate load knowledge study rst compare linear congestion control schemes wide variety router con gurations erent loss recovery schemes wide range variations bandwidth studies congestion control algorithms propose slowly adaptive alternatives congestion control tcp-friendly provide identical throughput current tcp steady state loss rate proposes non-linear slowlyadaptive window adjustment algorithms proposes rate-based schemes congestion control issues pertaining dynamic behavior schemes partially addressed work presented paper non-linear algorithms rate-based schemes hope cient intuition schemes evaluated long run summary paper attempt revisit original design decision focus exclusively aimd linear congestion control examined impact modern developments loss recovery router algorithms choice linear congestion control scheme tested basic linear congestion control algorithms wide variety settings traditional context tcp reno loss recovery fifo drop-tail routers aimd aptly made choice include notice appendix mimd performance similar aimd aiad drr tcp-sack employed results negate presented results show mimd absolute choice modern developments aimd longer compelling choice congestion control congestion control algorithms providing performance aimd varying degrees shown aiad reasonable alternative choice modern congestion control scheme fact aiad reasonable fairness long routers employ fifo drop-tail queueing adding small multiplicative component additive decrease aiad ensure fairness guaranteed fifo drop-tail ers employed compromising goodput ramakrishnan raj jain binary feeback scheme congestion avoidance computer networks acm transactions computer systems vol van jacobson congestion avoidance control acm computer communication review vol aug proceedings sigcomm symposium stanford august chiu jain analysis increase decrease algorithms congestion avoidance computer networks computer networks isdn systems vol june deepak bansal hari balakrishnan tcp-friendly congestion control real-time streaming applications technical report mit-lcs-trmit cambridge massachusetts gibbens kelly resource pricing evolution congestion control automatica vol handley padhye floyd widmer tcp friendly rate control tfrc protocol speci cation internet draft internet engineering task force july work progress gorinsky vin additive increase appears inferior tech rep department computer sciences texas austin gorinsky vin analysis binary adjustment policies fair heterogeneous networks tech rep department computer sciences texas austin november narayanan venkitaraman tae eun kim kang-won lee songwu vaduvur bhargavan design evaluation congestion control algorithms 
future internet poster acm sigmetrics mathis mahdavi floyd romanow tcp selective acknowledgement options request comments internet engineering task force oct fall floyd simulation-based comparisons tahoe reno sack tcp acm computer communication review vol july sally floyd van jacobson random early detection gateways congestion avoidance ieee acm transactions networking vol aug sally floyd tcp explicit congestion noti cation acm computer communication review vol oct alan demers srinivasan keshav scott shenker analysis simulation fair queueing algorithm sigcomm symposium communications architectures protocols austin texas sept acm computer communications review sept shreedhar george varghese cient fair queueing cit round robin acm computer communication review vol oct network simulator nshttp isi nsnam borodin el-yaniv online computation competitive analysis cambridge press karp koutsoupias papadimitriou shenker combinatorial optimization congestion control proceedings annual symposium foundations computer science redondo beach nov deepak bansal hari balakrishnan sally floyd scott shenker dynamic behavior slowlyresponsive congestion control algorithms proceedings acm sigcomm san diego california tcp reno droptail aimd aiad mimd miad alg alg alg alg tcp sack droptail aimd aiad mimd miad alg alg alg alg tcp reno red aimd aiad mimd miad alg alg alg alg tcp sack red aimd aiad mimd miad alg alg alg alg based guidelines presented section choice parameters evaluate results instantiations linear control schemes instantiations set compared compared scenarios erent combinations loss recovery schemes ering mechanisms discuss paper backdrop bandwidth variations employed method outlined section compare instantiations classes recall picking candidate seek separately choose potentially distinct candidates setting uniform choice parameters reasonable performance settings pick instantiation summarizes performance family linear control schemes ensure nearoptimal performance variety settings present full set results scenarios discussed paper droptail red drr ecn router mechanisms reno sack-style loss recovery present values goodput instantiation goodput primary metric comparison show results fairness delay loss algorithms signi cantly erent terms metrics hard instantiation pick scheme shown bold font underlined shows good performs scenarios candidate instantiations scenario resulting poor performance resulting sub-optimal performance nal choices aimd aiad mimd miad tcp reno drr aimd aiad mimd miad alg alg alg alg tcp sack drr aimd aiad mimd miad alg alg alg alg tcp reno ecn aimd aiad mimd miad alg alg alg alg tcp sack ecn aimd aiad mimd miad alg alg alg alg 
responsiveness dns-based network control jeffrey panga aditya akellaa anees shaikha balachander krishnamurthya srinivasan seshana computer science department network software services labs research carnegie mellon ibm watson research center florham park pittsburgh hawthorne bala research att jeffpang aditya srini cmu aashaikh watson ibm abstract years large web content providers interested improving scalability availability increasingly turned techniques mirroring content distribution isp multihoming domain system dns gained prominent role techniques directs client requests achieve goals scalability availability dns thought offer transparent agile control react quickly isp link failures phenomenon flash crowds paper investigate assumption objective quantifying degree responsiveness expected dns combination web dns access measurements busy web sites large content distribution network characterize behavior end-systems local dns servers terms adherence dns-based controls results suggest dns coarse-grained mechanism poorly suited applications route control require quick response link failures performance degradations propose proactive techniques deployed cooperation large content providers important clients potential improve responsiveness dns-based control categories subject descriptors computer systems organization computer-communication networks network protocols general terms measurement keywords dns time-to-live network control introduction growing popularity internet services applications large content service providers turned number distribution techniques improve scalability availability performance face ever-increasing request rate popular web sites deliver content redundant mirror sites outsourcing delivery alternate servers content distribution network cdn large data centers enterprises rely multihomed connectivity coupled intelligent route control improve resilience network link permission make digital hard copies part work personal classroom granted fee provided copies made distributed profit commercial advantage copies bear notice full citation page copy republish post servers redistribute lists requires prior specific permission fee imc october taormina sicily italy copyright acm failures optimizing performance bandwidth costs common requirement approaches tighter network control client access application cdn mirrored site deployment clients directed servers offer good response time similarly employing route control multiple isp connections directing packets correct provider link crucial extract performance reliability benefits multihoming years domain system dns emerged common approach type network control appeal dns-based techniques arises ubiquity transparency leveraging dns content providers provide late binding controls address returned client resolution operation returned address turn determines server contacted isp inherent approach assumption dnsbased control responds quickly unexpected conditions link failures flash crowds increased congestion responses resolution requests timeto-live ttl determines long response cached client local nameserver setting ttl small seconds forces clients resolve address frequently providing fast response practice complicated behavior wide variety applications dns servers deployed internet applications perform internal dns caching adhere expected behavior implementations local dns server ldns software reported adhere dns ttls imply clients ldnses continue connect failed link access loaded mirror site paper degree responsiveness expected dns-based network control practice base analysis empirical observations client access behavior large web sites hosting major sports events requests wide variety ldnses contacting authoritative dns servers large cdn results show majority clients ldnses honor dns ttls significant fraction clients ldnses collectively ldnses measurements violate ttls large amount excess hours findings suggest mechanisms improve dns responsiveness expect internet services applications continue rely dns network control addition traditional distributed database function propose architectural techniques increase dns agility deployment performanceor availability-sensitive application providers cooperation specific users previous work addressed issues dns-based control focusing context server selection cdns examples include impact small ttls response time effect dns lookups client-perceived response time question accuracy due proximity clients ldnses effects dns cache hit rates small ttls contribution measurement quantification level responsiveness offered dns view important issue continued growth number services vendor products dns control mechanism section provide overview related research dns section description measurement data collection methodology section present observations analysis follow proposals improving responsiveness dns-based control section section summarizes paper related work considerable work dns arena ranging exhaustive characterization local wide-area level examinations mis dns specific applications traffic root dns servers unnecessary traffic characterized caida team examined impact dns caching software load upper levels dns hierarchy authors collect local area traces dns application traffic characterize dns performance caching behavior proposed modifications dns improve web performance include piggybacking http responses dns replies ldnses renew cache entries proactively notion leases arose context web cache coherency reduce staleness caches recent work adaptive leases discusses ways caches avoid constantly poll reduce risk staleness primarily promising flush cached objects lease expiry proactively notified origin server draw idea examine ways web content owner cdn notify cooperating ldns flush caches data collection methodology order measure responsiveness dns-based control ideally observe clients respond dns update name-to-address mapping records domain requires access application logs servers track access patterns clients information timing dns updates measure quickly clients respond dns challenge identify data sources dns update logs application logs dns entries updated collect reasonable set observations clients react dns difficult obtain coordinated data observations specific behavior data sets collectively infer dns responsiveness focus client ldns behavior terms adherence dns ttls approach identify frequency clients ldnses cached dns records ttl access application dns server refer behavior ttl violations violations widespread infer dns techniques network control well-suited situations require fast response hand number violations small suggests dns-based control provide good responsiveness describe characteristics measurement data sets analysis observations large web events data set consists cache logs distributed hosting infrastructure serves content number web sites collected logs large sporting events worldwide audiences held april june july hosted infrastructure event request rate high authoritative servers directed clients set distributed caches minute ttl conclusion event archived updating servers direct clients lower capacity origin servers combine cache access logs administrator log timestamps indicating updates dns made archive event combining access logs cache sites extracted roughly -day long segment event time dns update place ideally traffic caches subside minutes ttl period dns update archive event analysis focus client requests continue arrive cache sites dns updated ttl expires count requests ttl violations classify long ttl expiry arrive caches network location clients originate requests grace time dns update log timestamp account delay updating dns conservative result underestimate number violations note view client requests distinguish violations caused client applications caused noncompliant ldns servers data event extends approximately day ttl expiration count violations day ldns behavior large cdn data set consists measurements servers belonging akamai cdn cdn employs two-level nameserver hierarchy achieve 
fine-grained client redirection load balancing analyzing data set aim characterize effectiveness dns referrals adherence ttls records crucial parts dns-based network control infrastructure data set collect dns request logs requests high-level servers cdn duration day logs address requesting ldns server summary request made requested domain timestamp response requests client ldns high-level servers return referral typically list records low-level cdn servers deemed close requesting ldns servers ldns server sends request low-level servers typically list records ttls typically minutes pick random sample ldns addresses appearing high-level request logs total approximately million ldns chosen track dns requests makes low-level servers returned high-level servers tracked low level request logs time window tracked ideal case ttl low-level record expires ldns make fresh request high-level server check date time total request volume date time total request volume date time total request volume date time total request volume date time total request volume date time total request volume april june july figure traffic volume dns change large web-hosted events bottom row graphs zoom time dns update ttl expiry timestamps x-axis edt ldns continues approach send requests low-level server record holds server expired indicating violation ttl logs collected march limit analysis resolution requests names represent static image content domain names form axx img cdn net incorporating requests cdn names analysis yield values number violating ldnses analysis results section describe observations made web event cdn access measurements analysis results observe extent clients ldnses data sets adhere respond dns ttls draw inferences responsiveness dns-based control observations web events figure show aggregate request volume caches time end events requests grouped -minute intervals top graphs show clear peak occurring end event period constant sustained traffic dns update marked solid line case effect dns change dramatic causing sharp drop requests coming cache locations clients redirected archive servers bottom graphs figure zoom portion trace dns update graphs solid line denotes time update dashed line time minute ttl expires requests arriving ttl expiry considered violation analysis subject grace period update time ttl expiration request volume decreases rapidly roughly april june july events remaining half traffic decays slowly long period discuss detail half client requests shifted quickly remaining requests stale dns entries significant figure plot distributions extent dns ttl violations requests arriving ttl expiration event specific times annotated graph seconds seconds day ttl expiration graph shows bulk violations long hours day fact requests arrive long day access logs extend roughly day past dns update time duration majority violations long dns provide control clients honor ttls cases clients violate ttl small amount effect consistent events figure illustrates effect plots distribution maximum observed ttl violation client makes request dns update client makes requests ttl expires violation graph captures time request client observed traces extend day dns update distribution truncated roughly day similar figure clients violate ttl continue dns entries expire graph shows clients violate ttl hours ldns accesses large cdn figure show cdf length time local dns servers cache records stale ttls duration ttl violation notice random sample ldnses observed high-level server trace exhibit violation record ttl time ttl expiry sec cumulative fraction ttl violations sec april event june event july event min min min day max arrival time ttl expiry sec cumulative fraction ttl violations sec april event june event july event min min min day violations maximum violation figure cdf request arrival time violation dns ttl maximum arrival time event time x-axis logarithmic scale ldnses made request top-level server return log collection result determine duration ttl violation cdf reach y-axis figure show similar cdf violating ldnses constitute ldns servers notice noncompliant ldnses show violation ttls excess hour exhibit violations hours length observations roughly similar made web event dataset figure characterization biased favor ldnses making total requests report ldnses adhering ttls reality analysis depends heavily number frequency requests made ldns order classify violator ldns server consistently violates ttls hour request rate hours low-level trace identified ttl-adhering server address issue plot cdf ttl violation duration top ldnses ranked volume requests generate high-level server logs figures notice figure violate ttls exhibit ttl violations excess hours finally characterized ldnses networkaware clustering nac groups addresses close topologically common administrative control interested noncompliant ldnses small networks addressing dns configuration deployment issues easier larger analysis considers clusters sizes higher fractions non-compliant ldnses collect large list ldnses observed high-level low-level dns logs group nacs bgp tables collected route views project roughly time ldns logs violating ldnses finally classify ldnses violators non-violators ranges prefix collected top requesting ldnses low-level logs primarily access low-level server logs frac servers max ttl violation max ttl violation hours ldns random sample ldns top ldnses frac servers max ttl violation max ttl violation hours ldns random sample ldns top violating ldnses figure cdfs duration ttl violation records ldnses show ldnses observed low-level trace plot violating ldnses figure solid line shows cdf random sample ldnses dashed line shows cdf ldnses made requests top level servers ldns servers violating servers percentage total ldns server subnet size figure relative distribution ldnses left bar violating ldnses bar size nac length nac results characterization shown figure ldnses nacs lengths constitute ldnses violating servers suggesting small clusters higher fraction violators hand ldnses nacs lengths constitute servers violators nacs lengths distribution violators measurements based limited sample suggest relative proportion non-compliant ldnses higher smaller nacs nacs lengths changing operation ldnses smaller networks eliminate substantial number non-responsive local dns servers additional findings natural question arises analysis number violations significant intuition noncompliant dns server implementations primarily responsible violations traced small number misconfigured networks section describe additional analyses questions dns implementations obvious place root ttl violations dns server implementations perform analysis combined list violating ldns servers list ldns addresses gathered earlier measurements dns implementations october results limited berkeley internet domain bind implementations widely nameservers internet found common ldns addresses bind version response addresses belonged ldnses violated ttls observations table list top bind implementations ldnses top implementations violating ldnses table omits count dns error messages returned response version queries notimp refused servfail formerr responses notimp non-bind implementation microsoft windows dns tinydns table single distribution bind large majority violating ldnses prefix length nac bind 
version discovered october address changed march ldnses violating ldnses bind version count bind version count -rel -rel -rel -rel -rel-noesw -rel -rel -rel-noesw -rel -rel table ldns bind versions difficult argue data sets single software implementation responsible ttl violations identifying noncompliant networks performed simple enumeration client networks gain initial insight clients networks primarily responsible observed ttl violations web access data events clustered addresses violating clients class networks clusters ranked unique addresses observed cluster focused identifying networks top violating clusters patterns emerged note approach limited client workload identification top violators subject popularity web events clients cluster interesting observations arose discuss events top violating clusters belonged web crawler popular search engine crawlers continue visit live web pages re-resolving hostnames found cases specific regional networks responsible violating clients june event top clusters belong networks provincial network asia dial-up isp europe notable finding april event large number noncompliant requests generated dial-up broadband subscribers single isp finally found client addresses belonging multiple sites enterprise network top violating clusters event logs examples interesting imply dns ttl violations fact due misconfigurations optimizations specific networks architectural support proactive dns previous observations suggest dns limited ability provide fine-grained network control argue attain network control cooperative settings content application providers deploy dns-based control mechanisms cooperation customers stand benefit customers modify dns infrastructure enable performance enhancements dynamic server selection route control ideally content provider simply set ttl records aggressively advise customers ensure ldns servers client applications obey ttls earlier work shown lowering ttls records manner significantly reduce dns cache hit rates large increase wide-area dns traffic viable option customers promised performance availability return addition simple ttl-based mechanisms achieve additional control cooperative settings establishing out-of-band negotiation channels content service providers customer ldns servers outline approaches employ idea push-based invalidation approach adns ldns servers negotiate band initial exchange dns request response modifying adns server easy control content publisher interested dns-based control customers modify ldns servers accept invalidations adns customer ldns servers act invalidations flushing caches invalidation adns trigger resolution include alternate address ldns communication participating set ldnses belong large high-end customers gain increased availability performance approach clients customer networks reach lightly loaded mirror sites content publisher fetch content faster adaptive leases final approach requires tighter integration adns ldns entails explicit cooperation approach adns partition list ldns servers classes based request frequency importance client base ldns servers customers high-volume class terms traffic revenue generate accept leases periodically renew duration lease adns server support fine-grained invalidations resource records invalidations triggered perceived adns force clients employ address alternately ldns poll adns updates records lease renewal period depend relative importance ldns influenced variety factors expected frequency performance path publisher client lease communicated ldns resource record duration lease set ttl record summary paper degree responsiveness expected dns-based network control techniques server selection cdns link selection multihomed end-networks collect measurements client access behavior large web sites requests ldnses accessing nameservers large cdn results show majority clients ldnses honor dns ttls significant fraction web event clients ldnses measurements adhere dns ttls violate ttls large amount excess hours suggested architectural techniques including proactive invalidation adaptive leases deployed cooperatively application providers customers improve responsiveness dns-based control future work plan conduct active study ldns behavior probes trigger dns lookups gauge adherence ttls intend investigate noncompliance develop evaluate initial architectural techniques acknowledgment grateful roberto prisco akamai bruce maggs akamai cmu herbie pearthree ibm global services assistance obtaining log data study oliver spatscheck michael rabinovich duane wessels anonymous reviers valuable feedback albitz liu dns bind reilly associates cohen kaplan proactive caching dns records addressing performance bottleneck proceedings symposium applications internet january duvvuri shenoy tewari adaptive leases strong consistency mechanism world wide web ieee transactions knowledge data engineering september internet systems consortium isc bind http isc bind jung krishnamurthy rabinovich flash crowds denial service attacks characterization implications cdns web sites international world wide web conference jung sit balakrishnan morris dns performance effectiveness caching ieee acm transactions networking october krishnamurthy liston rabinovich dew dns-enhanced web faster content delivery international world wide web conference budapest hungary krishnamurthy wang network-aware clustering web clients proceedings acm sigcomm stockholm sweden august krishnamurthy wills zhang performance content distribution networks proceedings acm sigcomm internet measurement workshop imw san francisco november mao cranor douglis rabinovich spatscheck wang precise efficient evaluation proximity web clients local dns servers proceedings usenix annual technical conference monterey june north american network operators group nanog mailing list http nanog mailinglist html shaikh tewari agrawal effectiveness dns-based server selection proceedings ieee infocom anchorage april oregon route views project http routeviews wessels fomenkov wow lot packets proceedings passive active measurement workshop pam jolla april wessels fomenkov brownlee claffy measurements laboratory simulations upper dns hierarchy proceedings passive active measurement workshop pam antibes juan-les-pins france april 
cookies trust-boundaries cat accurate deployable flood protection martin casado aditya akella pei cao niels provos scott shenker casado cao stanford aditya cmu niels google shenker icsi berkeley abstract packet floods targeting victim incoming bandwidth notoriously difficult defend number solutions proposed network capabilities thirdparty traffic scrubbing overlay-based protection suffer drawbacks limit applicability practice propose cat network-based flood protection scheme cat flows performa three-way handshake in-network element obtain permission send data three-way handshake dissuades source spoofing establishes unique handle flow revocation receiver cat offers protection qualities network capabilities require major architectural background motivation denial-of-service dos packet flooding remains problem internet today receiver centric solutions generally ineffective flooding resource exhausted victim control forms resource consumption dos outgoing bandwidth exhaustion computational complexity attacks treated local resource management issue dealt victim resource scheduling admission control schemes industry internet research community proposed deployed number solutions made great strides offering protection flooding describe traffic filtering victim isps variety statistical machine learning techniques infer attack traffic input victims pushback arbor networks location filtering performed tierisp pushed isps close sources pushed points upstream local bottleneck link victim general schemes provide trade-off rate false positives degree sensitivity low-bandwidth attacks traffic filtering source schemes suggest filtering packet floods close source aitf firebreak schemes adopted involve isp damaging action customers behalf victim economic trust relationship overlays overlaysolutions cdns mayday sos filter packet floods large set nodes distributed edges network aggregate bandwidth offered overlay nodes high presenceof high-bandwidth overlay vet traffic back-end server public address remains vulnerable network capabilities departure filteringbased approaches network capability schemes siff tva require recipients mark wanted legitimate traffic unforgeable capabilities schemes guarantee legitimate traffic receives priorityover illegitimate traffic existing proposals requirechanges clients servers upgrades routers honor capabilities protect legitimate traffic result provide tangible near-term benefits party traffic scrubbing approach company peers number large isps sinks traffic protected servers company offer dos prevention services web-servers protection connection floods performing tcp handshake network flood detection statistical techniques mentioned per-flow rate limiting prolexic approach difficult web sites control decisions legitimacy traffic generally company offering protection handles detection malicious traffic good argument support position sruti workshop steps reducing unwanted traffic internetusenix association enforcement paper propose cat approach protecting public web servers bandwidth floods goal cat offer protection guarantees capabilities practical adoption story implies major architecturalchanges backwards compatibility existing clients incremental deployment path cat achieves goal combinations techniques flow cookies stateless backwardcompatible capability mechanism offloads connection-setup filtering in-network elements requiring per-flow state filtering trust boundaries existing commercial relationships isps leveraged identify viable locations filtering term furthest set isps web server economic relationship trust boundary argue trust boundary natural location filtering flows cat protected server perform handshake middlebox server trust boundary successful completion handshake provide sender valid flow cookie sender communicate receiver lifetime cookie receiver revokes cookie revocations performed middlebox trust boundary sections present overview cat discuss flow cookies detail mechanism dynamically detecting trust boundary present analysis bgp data determine properties existing trust boundaries finally present related work conclude overview cat cat designed guiding principles filtering mechanisms accurate effective decisions permit flows made devices services reliably determine origin traffic destination wishes receive traffic ensure incremental deployability protection mechanism existing commercial relationships network entities isps leveraged forcing functions deployment protection infrastructure flow cookie mechanism realizes principle flow cookies liberally borrows ideas capabilities third-party traffic scrubbing third-party scrubbing cookie box situated on-route clients protected web-server network location high incoming bandwidth typically inside protectedserver isp cookie box engages flows clients three-way handshake connections completed handshake forwarded web server subsequent handshake flow cookies functions similar network capabilities cookie box inserts capabilities outgoing packets server capabilities echoed future packets clients tcp timestamp fieldto insertthe capability compatibility web-server deems client misbehaving terminate connection simply request cookie box filter offending flow simple approach offers salient features offloading three-way handshake highbandwidth infrastructure special purpose hardware determine clients source spoofing packets forwarded server carry non-forgeable cookie computed packet header web-servers make effective policy decisions basis addresses enforced network signaling wanted-ness flow implicit response traffic protected server server reply client ack client unable fresh cookie current times filtering enforced in-network approach offers web servers protection bandwidth link cookie box deployed detection illegitimate traffic performed web server server implement flexible meaningful policies service flow cookies operates point deployment easy adopt suffers key limitations attacker overwhelms link cookie box deployed effectively flood server cookie box sinks traffic packet floods avoid filtering routing cookie box alternate isps peering points sruti workshop steps reducing unwanted traffic internet usenix association web server provider peers customer peer peer peer customer peer customer peer figure isps shaded gray gion trust web serv isps enclosed white square trust boundary xample isps trust boundary terminate trust chain traf fic recei peers naturally limitations addressed deplo ying cookie box erse collection netw ork links spread eral isps note deplo yment cookie box acilitated web serv taking adv antage netw ork links isp recursi ely isp isps economic elationship netw ork entities economic relationship pays deli ering traf fic transiti closure economic relationships isps defines gion trust protected serv figure isps trust gion terminate sequence economic relationships trust boundary figure links serv trust boundary natural locations deplo ying cookie box fer highest incoming bandwidth requiring web-serv relationships gue serv stronger clout persuade isp gion trust deplo cookie box greater erage ensure cookie box administered operated correctly fecti trust boundary follo wing properties aggre ate bandwidth boundary links ery high ensures cookie box trust boundary handle high-v olume flooding number routes tra ersing boundary links roughly propor tional bandwidth links pre ents innetw ork hot-spots underpro visioned links managing man flo links boundary ailable filtering capacity present analysis connecti vity graphs internet demonstrates trust boundary stub netw orks today satisfy properties definition isps trust boundary web serv perform tcp handshak subsequent filtering traf fic web serv fecti ely pro vide functionality setting isps lie eral trust boundaries inside figure multihomed web serv seeking protection deplo cookie box netw ork links primary isp edges web serv xpects recei lar fraction traf fic eral gions trust isps coordinate decide perform tcp handshak subsequent filtering web serv present simple 
modification bgp multiple isps ascertain responsibility distrib uted manner flo cookies flo cookies xtension syn cookies middlebox places secure limited lifetime cookie tcp timestamp ery outgoing data pack protected serv flo cookies fers strong protection ainst flooding require modification clients netw ork resistant sourcespoofing require -flo state netw ork unlik approaches common comme cia orld flo cookies meant deplo yed web serv perimeter cookie box handful box enforces flo cookies deplo yed edges protected web serv isp illustrate idealized setup figure section present ervie flo cookies approach flo cookies designed protect services tcp assume protocols uch udp managed means rate limiting aggre ates full details flo cookie protocol design issues analysis found view cookie box protected web serv cooper ate perform follo wing tasks cookie box intercepts syn pack ets destined web serv syn pack source blacklist dropped blacklist syn pack ets box responds syn cookie source address ged web serv cookie computed yed message authentication code sruti workshop steps reducing unwanted traffic internetusenix association connection -tuple syn cookies require state maintenance cookie box run gigabit line speeds step ensures spoofed sources syn floods unwanted connection attempts traverse link cookie box protected website forpackets web serverthat carryan ack flag includes data packets cookie box checks ack sequencenumberis valid syn cookie connection handed web site tcp handoff scheme outgoing packets web server clients client connection request cookie box adds secure non-forgeable flow cookie explained flow cookie computed similar manner syn cookie valid limited amount time minute explain flow cookie echoed back client checked cookie box cookie box implicitly infers web server wishes engage communication end-point marking outgoing acks web server chooses send acks client client unable fresh cookies times flow cookie helps cookie box ensure packets belonging flows accepted server traverse link cookie box web server web server understands accepted usage policy local administration alreadykeeping perflow state outstanding connection position determine client misbehaving web serverdoes receive packets flow things push filters cookie box flow blacklist case cookie box maintains source port revocation list time filters packets inform cookie box stop issuing fresh capabilities client statelessly simply closing connection case client longer receive valid cookies flow current cookie times approach employed filter high-bandwidth malicious flows immediately approach critical situations shut low priority clients overload server determines attacker address address block request cookie box add address block blacklist assume internet routes symmetric as-level ensuring backwards-compatibility backwards-compatible exploit tcp timestamp option place flow cookie step timestamp field packets tcp timestamp option proposed rfcto measure rtts supported major host operating systems rfc option enabled ends sender places timestamp packet subsequent packets receiver echo timestamp common operating systems enable timestamps default exceptions windows windowsxp shown trick windows echoing timestamps packet connection set cookie box negotiates timestamp option client rfcdoes timestamp encoded option field prevent disruption cookie box web server explicitly agree format care web site wishes timestamps measure rtts avoid undesirable interactions protected web servers dissuaded timestamp values rtt calculations requires insignificant modification tcp stack web server network stacks rtt calculations aid timestamps alternate method require modification web server full detail implementation demonstrate flow cookies ability inter-operate existing clients implemented flow cookies software router user-space network development environment tested implementation numerous public web servers tests show flow cookies compatible client oses server software handle fully dynamic interactive sessions static content found flow cookie implementation blacklist lookup effect throughput ourrouterand operateat gigabit speeds micro-benchmarking focus software implementation flow cookies easily implemented hardware tested synthetic flooding attacks found flow cookies offer full protection established flows severe loads full details implementation testing sruti workshop steps reducing unwanted traffic internet usenix association leveraging trust relationships primary limitation flow cookies leverages protection bandwidth high-speed links protected links sink traffic web server require routes introduce network bottlenecks server vulnerable attacks unprotected links troublesome problem cookie-boxes deployed isp cookie box protecting distinct set web servers cookie boxes arrive consensus perform handshake filtering flow section extend flow cookies point-solution generic wide-area service introduce minor modification bgp isps deployed cookies-boxes determine boxes manage handshake filtering destination basis argue viable effective deployment strategy leverage existing client provider relationships trust relationships isps internet today neighboring isps rely contractual agreements slas coordinate mutual exchange traffic agreements involve money changing hands customer-provider contracts faith-based peering relationships argue agreements define trust relationships isps implicitly explicitly trust relationship network network trusts steps preventing packet floods entering network link simplest case isp pays isp global internetconnectivity safe implicitly trusts violation trust detectable lets packet floods result picking alternate provider implicit trust relationships exist today neighboring isps don share customerproviderrelationship mayalsoenterinto explicit trustrelationships peer isps contractually agree mutually cooperate vet packets destined network instances cooperation peer isps traffic engineering purposes observed empirically explicit trust relationships forged customer network non-neighbor isp providing specialized form protection default trust relationships symmetric customer trust provider traffic flow d--e trust relation figure illustration trust relationships end-toend as-level path thing provider assume guarantees customer explicit trust agreements peers symmetric assume trust exists customer-provider relationships peering relationships bgp-based mechanism relationships isps determine completely distributed stateless manner single isp responsible insertingflow cookies filteringpackets illustrate solution source send receiver design routing internet as-level path vector communicate bgp figure isp isp assume isp path vector relationshipsbetween pairs isps downstream trust relationship fora--b b--c c--d d--e ande--r b--c c--d d--e e--r information easy piggy back bgp path vector protocol bgp announce route neighbor appends number announcement simply change announcement trusts neighbor destination prefixes protected similarly advertised bgp announcement lets trust relationship pair neighboring isps a-b encoded binary form means trusts packets received vetted flow cookies means assume trust relations path s--a a--b b--c c--d d--e e--r implicitly assumes flow cookies deployed sruti workshop steps reducing unwanted traffic internetusenix association packet arrives checks notices sequence trust relationships forward path simply forwards packet similarly forward packet receives packet notices continuous trust sequence starting receiver trust upstream neighbor check destination prefix advertised protected isps make inference make minor modifications routing tables cookie boxes assume isp deploys distinct cookie box peering links cookie box similar router routing table difference route cookie box table annotated downstream trust sequence inverse 
trust relationship upstream annotation packets received isp destined denotes trust relationship annotation flow cookie check insertion filtering lets packet based inference isp decides flow cookie insertion check packets packets flow past trust frontier forwarded destination trusted vet packets simply forwards packet similarly trustse accepts packet legitimate trust relationships similarly play deciding filter packets filter packets pushes filters upstream turn pushes filters hit trust boundary edge filters finally installed tierisps install large number filters section filters needed connection attempts attack flows automatically filtered timer cookie expires filterscan storedin larger slowermemoriessince consulted syn packets ips aggregated filters memory pressure exploring trust boundary previously trust relationships isps implicitly define region trust protected server deploy multiple cookie boxes refer boundary region trust boundary isp trust boundary links trust frontier ases trust frontier links ases figure cdf number ases top x-axis links bottom x-axis trust boundaries stub networks stub network packets arriving isp trust boundary packets sources past studies shown isps higher internet isp-hierarchy higher bandwidth links links isp higher capacity implies independent mechanism trust boundary dictates maximum amount aggregate filtering bandwidth server existing trust relationships addition isps higher hierarchy larger number interconnections isps advantage isps trust boundary point deployment filtering access greaterbandwidth isolation multiple links put ideal trust boundary composed multiple large isps tierand tierwith routes distributed boundary links manner proportional link bandwidth explore properties trust boundaries internet today publicly provider-subscriber peering relationship information inferred bgp data analysis assumes trust transfers client provider relationships ends peering links practice peering agreements provisions filtering analysis pessimistic amount filtering bandwidth trust boundary analysis covers trust boundaries stub networks total number distinct ases links trust boundaries stubnetworks figure andin subsequent analysis term link refer collection physical interdomain links neighboring isps stub networks ases boundaries total links stubs links boundary distribution tiers trust sruti workshop steps reducing unwanted traffic internet usenix association percent ases frontier tier tier tiers tiers figure cdfof thepercentof aseson theboundarythatare tier tiers tiers stub network tier tier tier tier figure histogram fraction routes passing boundary isps belonging tiers boundary shown past studies assume links smaller lower-tier isps tier lower bandwidth tier figure cdf plot percentage autonomous systems tier tiers tiers clear boundary largely made tier isps trust boundaries stub networks consist tier isps unsurprising larger tier isps peer heavily ending recursive passing trust distribution tiers boundary routes web servers traverse small isps trust boundary boundary provide nominal protection demonstrate case analyze routes destinations data set stub networks figure histogram percent routes traverse tier trust boundary stub networks expected trust boundaries vast majority routes pass tier links pass tier results suggest cases trust boundary provide effective high-speed filtering bandwidth network nature peering relationships difficult complete study trust boundary properties smaller tieror tierisps engage private peering relationships relationships inferred public bgp data issue neglect analysis level path vector necessarily reflect true forwarding path packet due internal isp policies bgp-based scheme analysis trust boundary hold situations related work discussed related approaches section section elaborate filter-based approaches pushback aitf require identification blocking illegitimate traffic network pushback router attempts identify attack traffic determining congested state finding aggregate describes attack traffic pushing aggregate upstream blocked close source contrast solution lets web server discern unwanted traffic aitf based observation pure filterbased approach pushback requires state core routers aitf decentralizes state pushing filtering rules close source filtering rules determined attack recognition mechanism resistant spoofing flow cookies viewed simplified variant network capabilities contrast capabilities scheme offloads connection negotiation network requires modification routers tcp flow cookies aims partial path protection trusts end communication public web sites capability schemes strive offer complete path protection firebreak proposes anycast redirect traffic filtering portals close source flow cookies conjunction firebreak enforce precise per-flow filtering stateless backwards compatible manner feel viable deployment strategy push filtering target expect deployment edge close source authors suggest virtual nets network filter ddos proposal suggest deployment close victim authors extend work multiple isps filtering points participate flow negotiation schemes vulnerable source spoofing first-packet flooding offer method dynamically determining enforce filtering placement filtering hardware ddos solutions relying deployment security appliances perform number ddos prevention functions offloading three-way handshake syn cookies enforcing per-flow rate limiting millions flows argue endserver responsible distinguishing good bad sruti workshop steps reducing unwanted traffic internetusenix association traffic pushing filtering decisions network addition require per-flow state lowering complexity cost implementation summary ddos flooding attacks target victim incoming bandwidth difficult victim directly control utilization incoming link solutions proposed industry research community tackle problem solutions inaccurate ineffective low-bandwidth floods impossible incrementally deploy require expensive state maintenance paper proposed simple approach flood protection directly addresses drawbacks existing mechanism approach builds current signaling mechanisms tcp three-way handshake past work network capabilities internet trust relationships isp customer-provider relationships outlined flow cookies simple backwardscompatible point-deployable network-level protection mechanism offer high protection bandwidth public web servers flow cookies helps public web servers implement flexible traffic policies high bandwidth network locations minimal additional support network argued protection offered flow cookies enhanced deploying flow cookie boxes isps direct indirect economic relationship web server isps lie webserver region trust presented simple bgpbased mechanism coordinate handshake filtering activities multiple boxes study interesting properties trust regions internet today arbor home page http arbornetworks netscaler syn flood protection http netscaler docs library netscalersyndefense pdf prolexic home page http prolexic tcpha home page http dragon linux-vs dragonfly akella seshan anda shaikh anempiricalevaluationofwide-areainternetbottlenecks ininternetmeasurement conference miami nov andersen mayday distributed filtering internet services usits seattle argyraki cheriton active internet traffic filtering real-time response denial-of-service attacks usenix annual technical conference bernstein syn cookies http syncookies html casado cao akella provos flowcookies bandwidth amplification defend ddos flooding attacks stanford hpng technical report casado mckeown virtual network system proceedings sigcse technical symposium computer science education franics firebreak perimeter defense architecture http cornell people francis firebreak hotnetsfirebreak-v pdf gao inferring autonomous system relationships internet dec greenhalgh handley huici routing tunneling combat dos attacks proc usenix workshop steps reducing unwanted traffic internet july keromytis misra rubenstein sos secure overlay services proceedings ofacm sigcomm lee lui yau admission control dynamic adaptation proportional-delay diffservenabled web server sigmetrics pages york usa acm press mahajan bellovin floyd 
ioannidis paxson shenker controlling high bandwidth aggregatesinthenetwork sigcommcomput commun rev norton internet service providers peering proceedings nanog albuquerque mexico june stone centertrack overlay network tracking dos floods proceedings ninth usenix security symposium august subramanian agarwal rexford katz characterizingthe internet hierarchy multiple vantage points june tadayoshi kohno claffy remote physical device fingerprinting ieee symposium security privacy welsh culler adaptive overload control busy internet servers usits yaar perrig song siff stateless internet flow filter mitigate ddos flooding attacks proceedings ieee security privacy symposium yang wetherall anderson dos-limiting network architecture proc acm sigcomm sruti workshop steps reducing unwanted traffic internet usenix association 
self-management chaotic wireless deployments aditya akella glenn judd srinivasan seshan peter steenkiste carnegie mellon faditya glennj srini prsg cmu abstract past years wireless networking technologies made vast forays daily lives today hardware personal wireless technology employed homes shopping malls shops airports present-day wireless network deployments bear important properties unplanned access points aps deployed users spontaneous manner resulting highly variable densities unmanaged manually con guring managing wireless network complicated refer wireless deployments chaotic paper present study impact interference chaotic deployments end-client performance large-scale measurement data cities show uncommon tens aps deployed close proximity aps con gured minimize interference neighbors perform trace-driven simulations show performance end-clients suffer signi cantly chaotic deployments argue endclient experience signi cantly improved making chaotic wireless networks self-managing design evaluate automated power control rate adaptation algorithms minimize interference neighboring aps ensuring robust end-client performance categories subject descriptors computer systems organization computer-communication networks computer-communication networks network architecture design wireless communication general terms measurement performance experimentation work supported army research office grant number daad nsf grant numbers aniccr- cnsas ibm intel permission make digital hard copies part work personal classroom granted fee provided copies made distributed profit commercial advantage copies bear notice full citation page copy republish post servers redistribute lists requires prior specific permission fee mobicom august september cologne germany copyright acm keywords access points interference power control channel assignment introduction wireless data networking technology ideal environments including homes airports shopping malls inexpensive easy install wires supports mobile users result sharp increase wireless past years wireless technology ectively surprisingly cult wireless links susceptible degradation attenuation fading interference result poor unpredictable performance wireless deployments share scarce spectrum resources public interfere factors challenging deployments wireless devices access points aps close proximity past dense deployments wireless networks campus-like environments experts carefully manage interference planning cell layout special tools rapid deployment cheap hardware personal wireless technology ghz cordless phones bluetooth devices quickly changing wireless landscape market estimates approximately million wifi aps sold quarter sales wifi equipment triple resulting dense deployment wireless networking equipment areas neighborhoods shopping malls apartment buildings ers past dense campus-like deployments important ways unplanned campus deployments carefully planned optimize coverage minimize cell overlap recent deployments result individuals independent organizations setting small number aps type spontaneous deployment results highly variable densities wireless nodes aps cases densities high urban environments apartment buildings nodes share spectrum networking technologies bluetooth uwb devices cordless phones unmanaged con guring managing wireless networks cult people management issues include choosing simple parameters ssid channel complex questions number placement aps power control aspects management include troubleshooting adapting environment tra load making wireless network secure term chaotic deployments chaotic networks refer collection wireless networks properties deployments provide unique opportunities enable techniques determine location provide ubiquitous wireless connectivity create numerous challenges wireless networks common densely packed chaotic deployments contention poor performance security problems hinder deployment infrastructures negating bene ered wireless networks main goal paper show interference chaotic deployments signi cantly ect enduser performance end rst large-scale measurements aps deployed cities quantify current density deployment con guration characteristics hardware analysis data shows regions tens aps deployed close proximity exist major cities users employ default factory-set con gurations key parameters transmission channel interestingly wireless technology deployed quickly simulate measured deployment con uration patterns study impact unplanned deployments end-user performance true impact end-user performance depends workloads imposed users network aps unplanned deployment carefully con gured optimal static channel assignment users experience signi performance degradation factor throughput ect pronounced density client density high tra load heavy improve end-user performance chaotic deployments explore algorithms automatically manage transmission power levels transmissions rates aps clients combination careful channel assignment power control algorithms attempt minimize interference neighboring aps reducing transmission power individual aps strawman power control algorithm develop called power-controlled estimated rate fallback perf reduces transmission power long link client maintain maximum speed mbps experiments implementation perf show signi cantly improve performance observed clients aps close show highly utilized ap-client pair pair throughput increase mbps mbps general term management refer unilateral automatic con guration key access point properties transmission power channel incorporating mechanisms selfmanagement future wireless devices long improving end-user performance chaotic networks rest paper structured present related work section section characterize density usage hardware cities section presents simulation study effect dense unmanaged deployments end-user performance present analysis power control two-dimensional grid-like deployment section section outline challenges involved making chaotic deployments self-managing describe implementation rate adaptation power management techniques section section presents experimental evaluation techniques discuss power control algorithms section conclude paper section related work section rst discuss current orts map deployments present overview commercial services products managing networks general wireless networks finally contrast proposal wireless management transmission power control multi-rate adaptation related past approaches internet web sites provide street-level maps wifi hot-spots cities popular examples include maps wi-fi-zones jiwire vendors market products targeted locating wireless networks intego wifi locator research studies intel place lab project maintains database aps cities paper hot-spot data maps intel place lab database aps infer deployment usage characteristics hardware knowledge rst research study quantify characteristics describe data sets greater detail section general problem automatically managing conguring devices well-studied wired networking domain solutions exist widely deployed number interesting research problems simplifying network management remain work paper compliments results extending wireless domain wireless domain commercial vendors market automated network management software aps examples include propagate networks autocell strix systems access network alcatel omniaccess airview software high-level products aim detect interference adapt altering transmit power levels access points access additional support load management ective coverage coverage hole management multiple aps deployed enterprise network products tailor-made speci hardware airview embedded alcatel omniacess hardware proprietary designs products products targeted primarily large deployments tens clients accessing sharing wireless network past rate adaptation mechanisms leverage multiple rates supported proposed sadeghi study multirate adaptation algorithms improve throughput perfordata set collected aps stats collected place lab jun mac essid gps coordinates maps aug mac essid channel pittsburgh wardrive jul mac essid channel supported rates gps coordinates table characteristics data sets mance hoc networks rate control algorithms contrast designed speci cally work conjunction power control extend past algorithms support power control similarly tra scheduling 
algorithms proposed optimize battery power sensor networks networks contrast focus paper saving energy develop power control algorithms enable cient wireless spectrum dense wireless networks general hoc networks recently received great deal attention issues power rate control studied context hoc routing protocols signi erences hoc networks chaotic networks hoc networks multi-hop focus ap-based infrastructure networks nodes hoc networks power limited mobile contrast nodes chaotic networks typically limited mobility cient power finally hoc networks consist nodes cooperate contrast chaotic networks involve nodes organizations competing bandwidth spectrum section signi impact design power rate control algorithms characterizing current deployments understand problems created chaotic deployments collect analyze data deployment set metropolitan areas section present preliminary observations density aps metropolitan areas typical usage characteristics channels transmission common vendor types measurement data sets separate measurement data sets quantify deployment density usage aps cities characteristics data sets outlined table description data sets place lab data set list aps located cities gps coordinates data collected part intel place lab project june place lab software commodity hardware clients notebooks pdas cell phones locate listening radio beacons aps gsm cell towers xed bluetooth devices maps maps website gis visualization tool map wardriving results uploaded independent users street-level data census obtained access complete database wardriving data maintained website august database geographic coordinates zip code wireless network essid channel employed mac address pittsburgh wardrive data set collected july part small-scale wardriving effort covered densely populated residential areas pittsburgh unique measured collected gps coordinates essid mac address channel employed measurement observations section analyze data sets identify realworld deployment properties relevant cient functioning wireless networks reader note data analyzed gross underestimate real-world ciency problem data sets complete fail identify aps present identify nondevices share spectrum density wireless devices increasing rapid rate contention chaotic deployments increase dramatically properties data sets lead underestimate deployment density data sets biased speci expect results channel usage vendor deployment accurate deployment density location information place lab data set identify aps interference range analysis conservatively set interference range considered typical indoor deployments assume nodes neighbors interference range neighborhood relationship construct interference graphs cities results analysis interference graphs cities shown table average note aps city place lab dataset column table identi maximum degree cities degree number aps interfering range boston san diego wireless ers interference aps deployed close proximity figure plot distribution degrees aps measured place lab data set cities hundreds aps degree portland found half city number aps max degree max connected connected neighbors component size components chicago washington boston portland san diego san francisco table statistics aps measured cities place lab data set nodes degree boston chicago portland san diego san francisco wash figure distribution degrees place lab data set nodes measured neighbors channels non-overlapping channel nodes interfere node vicinity fourth column table shows size maximum connected component interference graph city nal column shows number connected components interference graph statistics large groups aps deployed close proximity statistics show dense deployments hardware begun urban settings mentioned earlier expect density continue increase rapidly usage channels table presents distribution channels aps wifimaps data set indication users aps manage networks notice aps transmit channel default aps remaining non-overlapping channels channels identify con icts distribution suggests aps overlap coverage con gured minimize interference pittsburgh wardrive data set information rates supported measured aps information classify aps channel percentage aps table channels employed aps maps data set classi aps recent standardization june measurements suggest wireless technology deployed quickly vendors management support vendor percentage aps total classi linksys cisco aironet cisco agere systems d-link apple computer netgear ani communications delta networks lucent acer table popular vendors maps data set determine popular brands mac addresses maps data set ieee company assignments classify vendor aps classi manner aps maps data set matching vendor distribution vendors shown table notice cisco products linksys aironet make half market observation suggests future products vendor incorporated built-in mechanisms self-management wireless networks signi cantly limit impact interference chaotic deployments understand speci models incorporate software con guration management wireless networks survey popular aps marketed top vendors table products irrespective vendors software users con gure basic parameters wireless networks essid channel security settings low-end aps targeted deployment individual home users include software automatic con guration management wireless network products targeted enterprise campus-style deployments cisco aironet series sophisticated centralized management parameters transmit power levels selecting non-overlapping channels deployed aps products targeted campuses expensive smaller-scale deployments apartment-buildings impact end-user performance -node topology -node sub-topology figure simulation topologies derived metropolis wardrive data set units axis meters figure shows -node topology derived metropolis wardrive data set figure shows sub-topology nodes assigned channel static optimal channel assignment algorithm applied -node topology order quantify impact deployment usage characteristics aps internet performance observed end-users conducted trace-driven simulations publicly glomosim simulator simulated deployment topology shown figure obtained portion pittsburgh wardrive aps topology settings assumptions simulations node map corresponds clients laptops vary clients located respective aps move speci assume aps transmit channel aps employ xed transmit power level dbm speci default setting commercial aps aps transmit single rate mbps multi rate support glomosim settings transmission interference ranges rts cts turned default setting commercial aps modi two-ray path loss model largescale path loss ricean fading model factor small scale fading intuition suggests impact interference chaotic wireless deployments depends large extent workloads imposed users aps involved occasional transmission data users users experience degradation performance due interference nearby aps key goal simulations systematically quantify precise impact user workloads eventual user performance achieve simulate types user workloads simulation set-up workloads relative proportions http representing web-browsing activity ftp representing large downloads tra rst set workloads called http assume clients running http sessions aps http size distribution based well-known model http tra client http transfer separated previous time drawn poisson distribution seconds vary values simulated http workloads sleep times results qualitatively similar omitted brevity average load ered http client kbps sleep time kbps sleep time interfering tra http workload set workloads called comb-ftpi similar http workload exception clients entire set-up running long-lived ftp ows duration simulation vary average load ered ftp clients simulation mbps simulate set workloads interference low client-densities andtraffic volumes normalized http 
performance stretch http comb ftp http comb ftp http normalized ftp performance stretch comb ftp comb ftp ftp figure average performance http ftp ows low client densities low levels competing ftp tra http comb ftp workloads conduct simulations http comb-ftp workloads low client densities results shown figure performance measurements average erent simulation runs variance runs shown low x-axis pictures stretch parameter tune density aps square meter simulation simulation stretch distance pair aps simulation topology factor larger actual distance original topology distance clients change higher stretch lower likelihood interference nodes simulation topology topology figure note stretch nodes completely interference range simulations stretch impact interference nodes user performance gure y-axis shows average normalized performance http figure ftp ows figure simulations normalized http ftp performance simply ratio average throughput http ftp throughput achieved ftp bulk transfer operating isolation mbps viewed amount work user completed xed time interval relative maximum achievable work notice workloads aggressive http component time performance http ows improves stretch point performance stays aggressive http workloads interval impact performance http ows severe performance ftp comb-ftp workload shown figure http component workload aggressive performance lone ftp ers not-so-aggressive http component expected impact ftp minimal studied impact interference light-weight user tra access points sections vary important factors determining client load density clients tra volume clients create aggressive interference settings impact client densities traffic load normalized http performance stretch http comb ftp http comb ftp http performance normalized ftp performance stretch comb ftp comb ftp ftp performance figure average performance http ftp ows greater client densities impact client density figures show average performance individual http ftp sessions comb-ftp http workloads high number clients performance http ftp ows ers signi cantly high client densities figure http performance lowered compare stretch stretch due interference aggressive http ows true performance ftp figure aggressive http component performance http ows inferior ftp ers normalized http performance stretch comb ftp comb ftp comb ftp comb ftp http performance normalized ftp performance stretch comb ftp comb ftp comb ftp comb ftp ftp performance figure average performance http ftp ows higher competing ftp tra levels comb-ftpa workloads impact tra volume figures show average performance http ftp ows simulations competing ftp ows comb-ftp comb-ftp workloads performance impact http ftp ows slightly pronounced cases http component workloads aggressive curves figure realistic channel assignments performed simulations -node topology aps statically assigned channels based distribution table note similar levels interference impact performance observed half aps simulation assigned channel predominant channel employed aps measurements limiting impact interference section explore ect simple mechanisms mitigating interference chaotic networks study optimal static allocation non-overlapping channels aps eliminate interference altogether present preliminary investigation ect reducing transmit power levels aps interference experienced investigate transmit power control improves total capacity chaotic network fairness allocation capacity individual aps effect optimal static channel allocation performed simulations -node topology figure aps statically assigned non-overlapping channels neighboring aps share channel illustration figure shows lay-out aps assigned channel scheme normalized http performance stretch comb ftp comb ftp comb ftp comb ftp http performance normalized ftp performance stretch comb ftp comb ftp comb ftp comb ftp ftp performance figure performance http ftp ows optimal static assignment aps nonoverlapping channels transmit power level set dbm reception range performance http ftp ows simulations shown figure average performance http ftp ows improves signi cantly comparing figures note performance curves atten earlier account sparse nature interference graph impact interference average http performance inferior stretch compared case nodes interferes stretch ftp performance similarly optimal observations suggest optimal static channel allocation reduces impact interference eliminate altogether impact transmit power control augment simulations optimal static channel allocation conservative lower power settings aps forced aps figure power level dbm yields transmission range half range default power level dbm show improves http ftp performance total network capacity normalized http performance stretch comb ftp comb ftp comb ftp comb ftp http performance range normalized ftp performance stretch comb ftp comb ftp comb ftp comb ftp ftp performance range figure performance http ftp ows optimal static channel assignment aps transmit power level set dbm reception range improvement application performance performance results http ftp ows simulations shown figures compared figures performance individual ows improves signi cantly interference nodes lowered performance curves attening stretch results show transmit power control conjunction good channel allocation mechanism reduce impact interference chaotic networks substantially improvement network capacity figure show transmit power control improves user performance normalized ftp performance stretch original topology static channel allocation transmit power control ftp performance ftp fairness stretch original topology static channel allocation transmit power control fairness figure performance ftp ows optimal channel assignment transmit power control workload composed ftp ows client figure shows performance ftp ows simulations figure shows fairness index throughput achieved ftp ows workload composed fully bulk ftp transfers user runs ftp bulk transfer user simulation sheds light careful management aps improve total capacity network aps completely unmanaged capacity densely packed network aps maximum capacity figure static channel allocation aps improves capacity two-fold lowering transmit power aps improves capacity additional factor fairness figure show fairness throughputs achieved individual ftp ows understand performance aps chaotic deployment ers signi cantly compared fairness metric derived ned throughputs individual ows highest densities access points poor management results unfair allocation capacity access points channel allocation coupled transmit power control immediately ensures highly equitable allocation highest density fairness allocation section simulations study impact transmit power reduction network performance key observation simulations end-user performance signi cantly chaotic deployments interference aggressive sources bulk ftp transfers showed careful management aps transmit power control static channel allocation mitigate negative impact performance transmit power control enable equitable allocation capacity interfering aps key drawback simulations lack support multi-rate adaptation explore bene transmit power control conjunction multirate adaptation section benefits transmit power reduction dclient mediumutilization utilization in-range aps interference range transmission client power level dmin figure computing minimum spacing grid topology section simple model wireless communication applied two-dimensional grid topology shown figure quantify advantages transmit power control model impact rate adaptation analysis assume sends tra single client xed distance dclient practice transfer tcp expect small amount tra client due tcp acknowledgements amount 
uplink tra small downlink tra simplify analysis ignore real-world ects multipath fading channel capture simplifying assumptions subsequent sections stress algorithms designed operate symmetric fashion uplink downlink tra examine range transmit power levels tra loads transmit power level tra load pair determine minimum physical spacing required aps dmin support speci load compute rst calculate medium utilization required utilizationap load throughputmax maximum throughput determined rst calculating path loss client pathloss log dclient based pathloss model constants correspond measurements collected local environment received signal strength computed rss txpower pathloss signal-to-noise ratio snr rss noisefloor choose noise oor dbm typical hardware snr data tables based measurements presented determine maximum transmission rate ap-client link maximum throughput rate rate mbps minimum snr table minimum required snr prism rate mbps throughput mbps table maximum throughput computed utilization single link determine medium utilization summing utilization in-range aps determine aps range computing rss formula candidate range local rss interferencethreshold set interferencethreshold dbm calculations figure shows results calculations client distance meters loads ranging mbps mbps client distances loss parameters shift scale graph trends remain mbps regions shown bottom chart maximum transmission rate power level speci point graph point dbm power x-axis mbps load line translates distance y-axis implies transmit mbps dbm aps order avoid overloading wireless link addition solid-black line parallel x-axis transmission rate mbps communicate client simulations previous section typically xed transmit power increased stretch corresponds picking point x-axis moving vertically power dbm load mbps mbps mbps mbps figure minimum distance power dclient draw key conclusions figure minimum distance aps supported decreases maximum supported density increases dramatically transmission power dbm decreased high density higher loads require transmit power levels dbm lowest transmit power commercial hardware aware adding support lower transmit power levels wireless hardware simple improving density aps supported graph determine upper bound power level employed x-axis order achieve throughput inter-ap distance axis higher power level typically ect decrease increase performance node reduce performance nearby nodes basis power control algorithms discussed section finally note highest densities require low transmission power forcing nodes transmission rate mbps suggests tra requirements low advantageous nodes voluntarily reduce transmission power transmission rate increase network capacity dense networks revisit issue section deployment challenges power control ers simple powerful technique reducing interference tradeo obvious reducing power channel improve performance channels reducing interference reduce throughput channel forcing transmitter lower rate deal reduced signal-to-noise ratio result carefully incentives users techniques practice incentives power control complex distinguish techniques applicable campus deployments chaotic wireless networks campus environments number aps control single organization organization position power control cell optimizes global network metric total network throughput fairness additional important consideration campus networks user obtain service aps transmission range design carefully issues loadbalancing users aps power control chaotic networks infrastructure controlled multiple organizations priorities con ict home network consisting single strategy transmit maximum power incentive reduce power interference results previous section show max power strategy employed multiple aps result suboptimal network performance implies single node improve performance increasing power obtain performance neighbors act socially reduce transmission power appropriately analogous tradeo sel social congestion control internet node improve performance transmitting quickly internet result congestion collapse degraded performance similar factors drove wide deployment congestion control algorithms drive deployment power control algorithms note added side incentive deployment automatic power control limits propagation transmission turn limits opportunity malicious users eavesdropping transmission work focuses socially responsible power control algorithms work chaotic environments call power control algorithms socially responsible erentiate approaches require global coordination multiple access points campus-wide wireless networks algorithms targeted individual access points clients behave altruistic manner agnostic actions aps clients algorithms work campus scenarios issues load-balancing arise environments leave extension design campus deployments future work note algorithms targeted nodes behaving altruistic manner practical considerations make feasible simply relying altruism end users algorithms implemented end users equipment vendors equipment vendor point-ofview reducing interference bene cial regulatory mandates limit transmit power extended require dynamic adjustment transmit power order increase spatial reuse potentially higher transmit power limits bene end users equipment vendors finally discussed section technology quickly adopted chaotic networks users chaotic networks change factory default settings vendor implemented intelligent transmit power control deployed quickly widely adopted transmission power rate selection order characterize power adaptation ects network-wide individual user throughput ran experiments rate selection algorithms implemented aps clients section describe xed-power rate selection algorithms adaptive-power algorithms evaluate introduce algorithms brie describe implementation environment rate selection algorithms rate selection implementation experiments nic based prism chipset running version rmware driver modi version hostap prism driver linux extensively modi give ne-grained control rate selection transmission power driver driver achieves per-packet control transmission rate tagging packet transmission rate prism rmware ignore internal rate selection algorithm send packet speci rate rmware retransmissions rate prism rmware control retransmission packets driver tagging packet speci number retries instance setting packet retry count tells rmware attempt retries rmware inform driver packet acknowledged completely replace rmware rate selection retransmission algorithms ability control rate retransmissions disadvantage approach retransmissions occur slowly implemented rmware compromise set retransmit count retransmissions handled rmware driver informed fairly quickly channel conditions poor packet prism chipset support perpacket transmission power control transmission rate fundamental limitation wireless nics characteristic prism rmware overcome limitation change transmission power rst wait nic transmission ers empty change power level queue packets power level technique supports per-packet power control packets pass driver user data set transmit power control management packets acks rts cts beacons handled completely rmware packets simply power level card time approach introduces overhead extra idle time power level set operation enables examine basic tradeo resulting changing transmission power levels fixed-power rate selection algorithms implementations select transmission rate variation auto rate fallback arf algorithm arf attempts select transmission rate in-band probing ack mechanism arf assumes failed transmission transmission rate high successful transmission assumed current transmission rate good higher rate arf implementation works threshold number consecutive packets successfully node selects highest transmission rate threshold number consecutive packets dropped node decrements transmission rate tra amount time node highest transmission rate transmission implementation increment threshold set successful packet transmissions decrement threshold dropped packets noti cations transmission failure rmware discussed section idle timeout seconds constraints 
driver-based approach settings designed approximate prism rmware implementation arf algorithm increment threshold decrement threshold idle timeout seconds alternative probing channel transmission rate channel signal-to-noise ratio snr select optimal transmission rate snr snr-based rate selection algorithms eliminate overhead probing correct transmission rate face number practical challenges card measurements snr inaccurate vary cards make model snr measurements completely characterize channel degradation due multipath interference finally information snr-based rate selection algorithms measured receiver snr receiver determines packet received successfully proposals made overcoming problem leveraging rts cts mechanism solutions work current hardware implementation overcome challenge tagging packet channel information speci cally packet transmit power level send path loss noise estimate packet destination sender receiver estimate uplink downlink path loss information required asymmetry arise due antenna diversity snr-based algorithm estimated rate fallback erf hybrid pure snrbased arf-based algorithms path loss information estimate snr transmission received erf determines highest transmission rate supported snr addition snr measurements uncertainty estimated snr rate selection decision boundary erf rate immediately estimate transmission rate number successful sends similarly estimated snr decision threshold erf rate immediately estimated transmission rate number failures finally packets received destination interval erf begin fall back lowest rate channel information received erf stuck state stale channel information prevents communication turn prevents obtaining channel information power rate selection algorithms arf erf algorithms xed transmission power power level typically set fairly high maximize chance node communicate intended destination discussed earlier high power levels create signi interference reduce performance channels section discuss algorithms combine power rate control minimize interference strategies transmitter attempts reduce power minimum level reach intended receiver maximum transmission rate essence sender acts socially reducing interference long cost rate reduction arf extended naturally support conservative power control adding low power states highest rate state highest rate number successful sends transmit power reduced xed amount process repeats lowest transmit power reached transmission failed threshold reached case transmit power raised xed amount failures continue transmit power raised maximum transmit power reached rate fallback begins call algorithm powercontrolled auto rate fallback parf erf easily extended implement conservative power control estimated snr receiver computed earlier estimated snr amount power margin decision threshold highest transmit rate transmit power lowered estimatedsnr decisionthreshold powermargin powermargin variable aggressiveness power control algorithm tuned call algorithm power-controlled estimated rate fallback perf performance evaluation discuss results basic experiments conducted verify current commodity hardware achieve performance improvements transmit power control experiments modi hostap driver prism cards previously interference test rst measured interference aggressive tcp bandwidth-limited tcp arf erf perf algorithms discussed previously note parf algorithm initial experimentation parf found behavior unstable power decrease decisions receiver result ack-half data transmission ack exchange failing due insu cient power turn result sender increasing power fault receiver power level setting happen perf considers packet losses perf largely avoids overreaction packet losses basing power rate selection snr interactions makes perf react slowly transmission failures result perf behaved stably performed signi cantly parf parf evaluation topology experiment shown figure client pairs communicate laboratory setting nodes communicate coaxial cables attenuators cables control attenuation pathloss pathloss pathloss victim pair aggressor pair tcp benchmark rate limited file transfer figure laboratory interference test topology node victim pair repeatedly executes tcp throughput benchmark client runs erf algorithm power manually set dbm default power dbm aggressor pair executes rate-limited transfer mbps client power rate selection algorithm aggressor pair varied measure ability algorithms reduce interference experienced victim pair interference arf erf perf figure lab interference test shown figure power reduction perf completely eliminated interference experienced victim pair error bars show con dence intervals interference arf erf perf figure lab interference test unlimited rate figure shows test aggressor transfer running unlimited speed loss pairs represents extreme situation occur degree current xed power networks due heterogeneous transmit power levels case victim communication arf erf practically poor performance arf erf result asymmetric carrier sense experiment victim pair sense transmissions aggressor pair defer transmissions prevent collisions aggressor pair hear lower powered transmissions victim transmits packets quickly essentially interfering transmission victim pair note aggressor transmissions received successfully aggressor pair obtains throughput approximately mbps setting perf alleviates situation reducing power aggressor aggressor ap-client link overprovisioned terms power experiment perf completely isolate pairs note power control care asymmetric carrier sense situation introduced inadvertently ap-client link reduce power overwhelmed neighboring uncooperative high power nodes undesirable assume aps clients desire sacri performance lowering transmit power pathloss pathloss pathloss victim pair aggressor pair tcp benchmark rate limited file transfer figure home interference test topology interference arf erf perf figure home interference test demonstrate similar situation occur laboratory repeated rate-limited interference test residential setting nodes communicated air shown figure coaxial cables laboratory tests figure shows results test arf erf experienced similar performance degradation due interference perf reduce degradation discussion evaluation considered protocols reduce power long transmission rate una ected possibility reduce interference algorithms transmission rate reduced strategy considered implementation called load-sensitive power-controlled estimated rate fallback lperf transmitters reduce power reduces transmission rate speci cally reduce power long resulting transmission rate cient support actual tra demands potentially increasing total network throughput lperf involves fairly subtle tradeo scope interference controlled power level duration interference determined transmission rate analysis section simple topologies analyzed achieving highest access point density requires lperf-like approach lower transmit rates enable lower transmit power settings practice found achieving good performance interference reduction lperf technique challenging actual demand require higher transmission rate select cult demand function transmission rate addition wireless medium shared ability satisfy tra demand transmission rate depends fraction shared medium node receives assuming fair distributed mac protocol size fair share depends demands nearby nodes additional complication set nearby nodes transmission power power determines range transmission order address lperf incorporates techniques continuously monitor link tra demand medium utilization tuning techniques adapt quickly demand open research question accurate measurements received signal strength noise transmit power nodes area hardware implementation variance rss noise estimates typical entire range snr thresholds transmission rates signi issue summary design algorithms lowering transmission rates challenging task future expect range transmit rates supported wireless cards greatly increase greatly helps algorithms creating situations maximum link bandwidth providing wider range power levels algorithms employ 
addition anecdotal evidence vendors providing accurate rss noise estimators newer cards result lperf-like algorithms promising direction summary chaotic network consists set co-located wireless nodes owned controlled erent people organizations main characteristic deployment largely unplanned unmanaged paper studied important characteristics chaotic wireless networks measurements cities show chaotic networks dense tracedriven simulations show performance endclients signi cantly dense chaotic wireless deployments presented evaluated automated power control rate adaptation algorithms reduce interference neighboring nodes ensuring robust end-client performance speci cally showed perf algorithm reduces transmission power reducing transmission rate improve aggregate throughput signi cantly small testbed discussed improvements denser deployments acknowledgment drew celley eric blevins maps providing access vast database grateful yatin chawathe pointing intel place lab database ucla parallel computing lab glomosim rahul dhar live experiments feedback suman banarjee carl gunter brad karp david wetherall helped improve paper substantially finally shepherd victor bahl anonymous reviewers valuable feedback suggestions accessone network ows http strixsystems products products main asp alcatel airview software http alcatel autocell http propagatenetworks product ieee oui companyid assignments http standards ieee regauth oui oui txt intego wi-fi locator http intego wifilocator wi-fi hotspot locator http jiwire wi-fi-zones find hotspot locations http wi-fi-zones wifimaps wardriving maps hotspot locator http wifimaps aguayo bicket biswas judd morris link-level measurements mesh network proceedings acm sigcomm conference network architectures protocols portland august akella karp seshan shenker papadimitriou sel behavior stability internet game-theoretic analysis tcp proceedings sigcomm symposium communications architectures protocols pittsburgh august http cmu aditya papers cc-gametheory pdf cheng chawathe lamarca krumm accuracy characterization metropolitan-scale wi-fi localization proceedings mobisys seattle june chiu jain analysis increase decrease algorithms congestion avoidance computer networks computer networks isdn systems june clark partridge ramming wroclawski knowledge plane internet proceedings acm sigcomm karlsruhe germany august datacomm research datacomm research report wireless lan equipment shipments triple years http tmcnet usubmit feb htm draves padhye zill comparison routing metrics static multi-hop wireless networks sigcomm portland august acm droms dynamic host con guration protocol technical report internet engineering task force march rfc global mobile information systems simulation library http pcl ucla projects glomosim hills large-scale wireless lan design ieee communications november holland vaidya bahl rate-adaptive mac protocol multi-hop wireless networks proceedings mobicom rome italy september holland vaidya bahl rate-adaptive mac protocol multi-hop wireless networks proceedings mobicom rome july acm instat mdr wlan market share report http instat nrep htm intel research seattle place lab privacy-observant location system http placelab judd steenkiste emulation understand improve wireless networks applications proceedings nsdi boston kawadia kumar principles protocols power control hoc networks ieee journal selected areas communications kompella snoeren sparta scheduled power rate adaptation acm sensys mah empirical model http network tra proceedings ieee infocom april malinen host driver http hostap epitest qiao choi jain shin miser optimal low-energy transmission strategy ieee acm mobicom rao stoica overlay mac layer networks proceedings mobisys seattle june rappaport wireless communications principles practice prentice-hall englewood cli rexford greenberg hjalmtysson myers xie zhan zhang network-wide decision making wafer-thin control plane hotnets-iii san diego november sadeghi kanodia sabharwal knightly opportunistic media access multi-rate hoc networks proceedings mobicom atlanta october acm santhanam cruz optimal routing link scheduling power control multi-hop wireless networks infocom ieee march thomson narten ipv stateless address autocon guration technical report internet engineering task force december rfc van der vegt auto rate fallback http phys vdvegt docs gron node html ietf con guration networking zeroconf working group http ietf html charters zeroconf-charter html 
detecting ddos attacks isp networks aditya akella ashwin bharambe mike reiter srinivasan seshan carnegie mellon abstract past solutions detecting denial service attacks identifying perpetrators targeted end-node victims attention problem isp perspective paper explores key challenges involved helping isp network detect attacks attacks external sites isp network propose detection mechanism router detects traffic anamolies profiles normal traffic constructed stream sampling algorithms addition isp routers exchange information increase confidence detection decisions initial results show individual router profiles capture key characteristics traffic effectively identify anomalies low false positive false negative rates profile construction extremely efficient supporting multi-gigabit speeds incremental deployment techniques signficantly impact effectiveness distributed reinforced decision making introduction distributed denial service ddos attacks increasingly frequent disturbance today internet recent research efforts explored designing mechanisms detecting attacks identifying perpetrators solutions aimed aiding end-node victims attack work problem point view internet service provider isp specifically design mechanisms isps quickly efficiently answer questions isp backbone ddos attack isp network carrying useless traffic traffic malicious traffic today bgp-driven internet large ases peer ases multiple pops points presence packet destination hands packet ases hot potato routing shortest route destination due factors packets destination traverse diverse disjoint paths dispersion makes hard detect ddos traffic single point necessitating distributed approach problem approach problem relies routers isp identifying traffic pattern violations achieved building traffic profiles stream sampling algorithms extremely small memory footprint sampling long time windows normal traffic profiles created current traffic profiles constructed smaller time windows current profile corroborate attack traffic aimed destination ultimately dropped destination normal router suspicious key challenge approach making robust ensure profiles detailed malicious attackers disguise attack traffic normal traffic avoid detecting normal variations traffic patterns including unusual flash crowds attacks finally profiles collected efficiently creating opportunities attack initial results stream-sampling schemes build profiles show profile normal traffic accurately identify anomalies low false-positive falsenegative rates locally router consume low per-packet computation memory high router speeds rely mechanism small traffic perturbations isp traffic trigger false positives approach made robust routers communicate suspicions routers backbone routers aggregate suspicions received routers deciding traffic aggregate belongs attack attacker circumvent mechanism successfully guise traffic fit normal profile large number routers attacker takes paths isp network sends large amount traffic easily caught choosing set statistics constitute normal profiles ensure approach mimicking profiles extremely hard describe approach greater detail section present discussion section profile-based ddos detection infeasible traffic statistics single destination backbone router traffic profile collected overhead detect intruders point time high-traffic destinations considered attack router track destinations traffic occupies greater fraction capacity outgoing link sample-and-hold algorithm call destinations popular destinations list unpopular traffic profiles router basically set fingerprints traffic popular destinations effective choice fingerprints key characterizing traffic streams computing arbitrary fingerprints require excessive memory computation identified fingerprints efficiently computed stream sampling algorithms total number bytes destination number prefixes sourcing traffic destination motivation set fingerprints characterizes source-subnet distribution catch random source spoofing attacker approximation flow-length distribution traffic destination sample specific points flow-length distribution keeping track number source addresses send fraction total traffic destination values sample-and-hold zeroeth moment computation algorithms computing fingerprints statistic computed sampling small interval time minute reflect typical day-of-week hour-of-day traffic patterns routers construct per-hour per-weekday normal traffic profiles averaging statistics hourly periods algorithm router statistics hand router algorithm popular destination number bytes destination baseprofile statistic current sampling interval continue step stop fingerprint denote computed current sampling interval denote standard deviation values fingerprint jvi flag flag parameter algorithm conf denote confidence router suspects attack set conf flag assigns weights fingerprint depending extent fingerprint contributes errors false-positive negatives err err sum false positive negative rates isp perform measurements determine configure routers packet perform operations run sample-and-hold probabilistically sample large-volume destinations requiring hash-table lookup update byte operation packet sampled update statistics destination counting statistic apply algorithm involving hash-table lookup update byte operations assume memory operations performed sram profile computation consumes cpu cycles support high data rates slightly mechanism destinations unpopular suddenly popular infeasible in-core traffic statistics destinations store base profiles disk computing statistics randomly sampled packets time router finds destination popular list pages base profile disk profile exists fingerprints flagged computes flags conf stated distributed detection destination conf router sends conf dest pair neighbors receiving information obtained base profile message neighbors discard duplicates compute aggregate aggr conf values received destination forward non-duplicates neighbors destination aggr exceeds pre-defined threshold router concludes destination attack consensus stage helps reduce errors identification attacks messages special low-bandwidth out-of-band icmp messages routers messages neighbors authenticated ttl timed periodically minute refreshed preliminary results provide set results local profile construction attack detection functionality traffic generated popular attack tools liketfnand trin traffic traces abilene backbone routers nsvarying number spoofed bytes source ips attack rate destinations levels popularity results show profiles generated sampling schemes stable accurate time hour periods fingerprinting schemes low false positive rate unpopular destinations popular destinations addition unpopular destinations irrespective number spoofed octets rate high attack traffic false negative rate close popular destinations false negative rate low-rate significant attacks improves rapidly rate attack increased uniformly true varying number spoofed source octets results fingerprinting algorithms encouraging experimentally analyze consensus algorithm discussion schemes detect subtle irregular traffic patterns obvious volume subnet count fingerprints provide valuable information distinguish flash crowd ddos attack hard attacker aiming orchestrate ddos attack single machine isp infrastructure circumvent mechanism fingerprints router track details flow-length distribution traffic due source subnets attacker arbitrarily spoofed source addresses attack packets makes detection trace-back simpler attacker spoofs small number source ips orchestrates heavy attack attack detected routers attack traffic significantly impacts normal operation isp network albeit low confidence consensus algorithm helps improve detection accuracy notice attacker train normal traffic profiles time identify attack traffic legitimate investigating balance reacting persistent traffic susceptible form attack randomization measurement intervals minute helps ensure attacker escape detection spreading attack traffic consecutive intervals avoid detection interval investigating important questions addressed include identifying attacks avoid measure profiles measuring exact space computation requirements modern router architectures measuring convergence effectiveness consensus algorithm partial incremental deployment issues identifying subset routers provide detection impact partial deployment consensus algorithms finally plan validate algorithms running real attack datasets alon matias szegedy space complexity approximating frequency 
moments proceedings stoc estan varghese directions traffic measurement accounting proc sigcomm floyd bellovin ioannidis kompella mahajan paxson pushback messages controlling aggregates network draft-floyd-pushbackmessages- txt gibbons tirthapura estimating simple functions unions data streams proc spaa jung krishnamurthy rabinovich flash crowds denial service attacks characterization implications cdns web sites proceedings conference honolulu 
scaling properties internet graph aditya akella shuchi chawla arvind kannan srinivasan seshan computer science department carnegie mellon pittsburgh faditya shuchig cmu farvind srinig cmu abstract internet grows size crucial understand speeds links network improve order sustain pressure end-nodes added day speeds links core edges roughly improve moore law improvement structure internet graph routing network necessitate faster improvements speeds key links network paper combination analysis extensive simulations show worst congestion internet fact scales poorly network size number nodes shortest-path routing show surprisingly policy-based routing exacerbate maximum congestion compared shortest-path routing results show crucial identify ways alleviate congestion avoid links perpetually congested end show congestion scaling properties internet graph improved dramatically introducing moderate amounts redundancy graph terms parallel edges pairs adjacent nodes categories subject descriptors computer systems organization computercommunication networks computer-communication networks network architecture design general terms design performance keywords power-law distribution congestion shortest path routing policy routing introduction internet grows size day time progresses end-hosts added edge network correspondingly accommodate end-hosts isps add routers links history shown addition links maintains power law properties internet topology addition end-hosts places greater load network fortunately improvement network technology operates time period expect network links edge core network improve similar performance factor growth traffic time typically follow similar moore law-like technology trends due topology network behavior internet routing increase load links result speed hot-spot links network improve quickly true parts network eventually bottlenecks network poor scaling properties situation adjust routing behavior remove power law nature topology accept end-to-end network performance network improve rapidly individual links hand worst congestion scales network size expect network continue operate paper combination analysis simulation address issue maximum congestion internet scales network size analysis employ simple combinatorial probabilistic arguments give bounds maximum congestion model network evolution based preferential connectivity simple model traffic unit amount flow pair nodes routed shortest path complement analytical results large set detailed simulations computing congestion links network based real synthetically generated as-level topologies simulations investigate impact key factors worst congestion network include routing algorithm employed nodes network bgp policy-driven routing refer policy routing shortest-path routing sophisticated models communication nodes modeling realistic traffic demands factoring higher popularity nodes network alternate degree distributions exponential distribution power law trees evolving preferential connectivity key contribution paper show maximum congestion internet scales poorly growing size internet graph specifically maximum congestion shortest path routing bad exponent depending exponent power law degree distribution graph simulations show policy routing graph results roughly maximum congestion shortest path routing worse realistic nonuniform traffic models considered congestion scaling properties power law graphs worsen substantially show terms maximum congestion power law trees considerably worse power law graphs contrast graphs exponential degree distribution good congestion properties key contribution paper discussion simple guidelines result dramatic improvement congestion scaling properties internet graph show parallel links added adjacent nodes network simple functions degrees minimum degrees maximum congestion resulting graph scales linearly rest paper structured discuss related work section section formalize analytical approach discuss simulation set-up analysis presented section section presents results simulations section discuss implications results network design finally section conclude paper related work past research efforts aimed studying properties large-scale internet-like graphs class studies proposed models graph evolution result power law degree distribution notable examples include power law random graph model aiello bicriteria optimization model fabrikant preferential connectivity model barabasi albert class studies category aimed analyzing properties power law graphs based inferences drawn measurements real data efforts inferences construct realistic generators internet-like graphs theoretical analysis based preferential connectivity model barabasi albert simulations topologies generated synthetically inetthe problem characterizing congestion graphs specifically designing routing schemes minimize congestion studied widely approximation online algorithms worst congestion graph inversely related maximum concurrent flow achieved graph obeying unit edge capacities turn related quantity called cut ratio graph aumann characterize relationship maximum concurrent flow cut ratio okamura give bounds cut ratio special graphs algorithmic approaches problem survey multi-commodity flow relaxation problem find fractional routing good congestion properties fairly good approximation factors achieved problem distributed involve lot book-keeping involve solving large linear programs makes impractical point view routing internet disagreement power law correctly models degree distribution internet graph widely agreed distribution heavy-tailed main results specifically simulation results focus power law distributions hold equally heavy-tailed distributions weibull maximum concurrent flow achieved graph factor log cut ratio number nodes choose approach analyzing congestion achieved widely implemented routing schemes shortest path bgp-policy based routing work bears closest resemblance mihail arguments max-flow min-cut theory paper shows graphs obeying power law degree distribution good expansion properties routing log congestion close optimal log achieved regular expanders addition based simulations run inet-generated topologies paper concludes congestion power law graphs scales log shortest path routing paper shows policy routing results worse congestion work key aspects identify theoretical analysis restrict routing shortest path fact assumes optimal routing algorithm minimizes congestion show fact shortest path routing employed power law graphs exhibit poor scaling properties terms congestion maximum congestion scales confirm detailed simulation experiments addition simulations show policy routing worsen maximum congestion network contrary conclusion evaluations policy routing shortest path routing graphs small number nodes approximately nodes policy routing graphs due dependence real graphs shortest path routing graphs simulations hand graphs nodes finally impact traffic workloads deployments parallel links scaling properties network methodology combinatorial probabilistic arguments simple model network combined extensive simulations understand congestion properties internet graph give precise formulation problem laying key questions seek address analysis describe set-up simulations corroborate extend analytical arguments problem statement unweighted graph representing internet as-as graph denote total degree vertex key aspects pertaining graph degree distribution graph routing algorithm nodes graph communicate traffic demand matrix determining amount traffic pairs nodes graphs give precise definitions aspects turn paper concerned graphs power law degree distribution defined definition unweighted graph power law degree distribution exponent integers number nodes proportional similarly graphs exponential degree distribution number nodes proportional integers henceforth refer graphs power law graphs exponential graphs denote routing scheme graph representing path routing traffic nodes routing schemes paper shortest path routing scheme route nodes shortest path nodes graph multiple shortest paths maximum degree nodes paths pick highest maximum degree tiebreaking rule reflective typical policies employed internet higher 
degree nodes typically larger well-provisioned providers lower degree nodes general primary connection stub networks report results tie-breaking rule results hold qualitatively tie-breaking schemes random choice favoring lower degree nodes policy routing scheme traffic nodes routed bgp-policy classify edges peering edges customer-provider edges ases provider typically ases internet provide transit traffic destined customers implies carry traffic peer peers provider similarly carry traffic providers peers provider rules give rise valley-free routing path sequence customer provider edges peering edge provider customer edges detailed description mechanism reader referred traffic vector vector non-negative terms term signifying amount traffic nodes congestion edge due traffic vector routing scheme sum total amount traffic edge define edge congestion due traffic vector routing scheme maximum congestion edge graph edge-congestion max paper interested quantifying congestion graph power law degree distribution shortest path policy routing schemes due traffic vectors specifically traffic vectors any-any corresponds traffic vector unit traffic pair nodes leaf-leaf order define model classify nodes graph stubs carriers stubs nodes customers words directing customer-provider edges graph customer provider peering edges considered bidirected edges vertices incoming edges ases customers called stubs leaves graph model unit traffic pair stubs graph clout model motivated fact wellplaced sources sources high degree connected high degree neighbors send larger amounts traffic sources case stubs average degree neighbors increasing function previous case traffic refer details nodes stubs paper function ducu stubs simulation set-up simulations serve purposes corroborate theoretical results characterize congestion realistic network models considered analysis simulations run sets graphs set graphs maps internet topology collected month intervals nov april number nodes graph set maximum april set set graphs synthetic power law graphs generated inetin set generate graphs sizes varying nodes simulations metric interest generate slightly graphs nodes report average metric graphs pointed section order implement leaf- leaf clout models communication identify stubs network note degree greater additionally order implement policy routing classify edges peering non-peering edges order real graphs employ relationship inference algorithms gao label edges graphs peering customer-provider edges algorithms global bgp tables infer relationships nodes relationships identify stubs nodes providers node henceforth refer real graphs accurately labeled real graphs alrs labeling edges identifying stubs synthetic graphs inet tricky bgp information refer synthetic graphs labeled algorithms heuristically labeled synthetic graphs hlss algorithms classifying nodes key implementing leaf-toleaf communication edges key implementing policy routing synthetic graphs discuss turn stub identification identify stubs synthetic graphs edge assign provider degree degree notice explicitly identify peering edges edges nodes identical degree bidirectional identify stubs graphs labeled test accuracy stub-identification algorithm real graphs comparing labels produced algorithm true labels alrs compute fraction false positives false negatives results figure show simple algorithm low error rate notice inference algorithms gao error intrinsically labels alrs inaccurate edge classification purpose classifying nodes simply edges graph customer-provider edges simple scheme purposes edge classification results significant error maximum congestion real graphs employing policy routing order improve accuracy labeling edges resort machine learning algorithms varying random seed inet graph generator false positives nodes identified stubs algorithm stubs alr false negatives stubs alr identifies stubs algorithm error rate false positives false negatives max edge congestion number nodes real labels learned labels accuracy stub identification accuracy edge labeling figure accuracy heuristics graph left shows accuracy simple stub identification algorithm graph shows error maximum congestion due machine-learning based edge-classification algorithm employing good machine learning algorithm classification proves tough task huge bias customer-provider edges graphs roughly edges customer-provider edges -nearest neighbor algorithm classifying edges peering non-peering edge unlabeled graph classified peering edge edges similar labeled graph peering edges similarity edges judged based degrees respective end points neighboring vertices measure accuracy procedure applying real graphs comparing classification true labels machine learning algorithm accuracy peering edges accuracy customer-provider edges purposes computing worst congestion graph low accuracy labeling fact shown figure labeling real graphs algorithm results error worst congestion employing policy routing comparison congestion computed alrs importantly growth congestion identical cases report simulation results congestion power law trees exponential topologies comparison power law graphs insight significance density edges graph model interesting generative models power law topologies result exponential distributions fringe cases tree topologies evolve preferential connectivity model generate exponential degree distributions modify inetto generate exponential degree distribution add edges inet usual exponent exponential graphs nodes chosen total number edges exponential graph close power law graph nodes note due lack real data exponential graphs good labeling edges nodes perform experiments policy routing leaf-leaf clout traffic models analytical results section show expected maximum edge congestion power law graph grows route unit flow pairs vertices shortest path perform heuristic hill-climbing estimate exponent minimizes error number edges preferential connectivity generative model barabasi albert completeness give description model preferential connectivity model fixed constant parameter start complete graph nodes call set nodes core graph graph time denoted time step node added network node picks nodes random connects vertex probability divdi picked div degree vertex time total degree nodes time end steps process generate power law degree distribution fact power law graph exponent maximum degree node degree order show lower bound congestion power law graph plan roughly edge highest degree nodes core call edge vertex graph shortest path tree rooted vertex show trees edge constant fraction trees nodes subtree rooted edge lower bound routes connection precisely defined shortest path trees congestion edge sum congestions edge shortest path trees congestion edge trees defined trees total congestion edge note necessarily congested edge graph maximum congestion worse theorem theorem expected maximum edge congestion power law graph exponent grows route unit flow pairs vertices shortest path begin technical lemma distance nodes refers number hops shortest path nodes assume lemma maximum integer vertices lie distance nodes lie distance node core graph node core nodes lie distance proof prove nodes lie distance vertices core neighbors nodes lie distance vertex core graph begin showing nodes lie distance extend nodes distance level denote set nodes distance remove graph vertices level higher remaining graph vertices definition assume vertices level nodes levels number nodes level nodes level residual graph connected nodes level number size neighbor set level case nodes level highest degree nodes graph case minimum degree node level size neighborhood level 
total degree nodes level quantity assumption constant fraction apply technique compute number nodes level number nodes level distance defined lemma denote set nodes distance node core graph lemma jvrj proof theorem parts shows trees edge lemma expected number shortest path trees leaf nodes edge proof tree node essentially breadth tree starting level tree edge contained tree hand nodes depths tree closer loss generality case shortest path break ties favor paths high degree nodes path implies contained tree trees correspond equidistant claim nodes equidistant combined fact constant fraction nodes leaf nodes implies result definition power law degree distribution prove claim observe pick random node graph conditioned fact node lies distance constant probability node lies distance argument fraction nodes number nodes fraction nodes equidistant nodes figure fraction shortest path trees edge congruent lemma show number nodes distance constant fraction number nodes distance nodes distance number lemma lie node picked set distance argument probability node lies distance constant nodes set distance prove tree leaf high congestion lemma shortest path tree leaf node edge expected congestion edge tree proof loss generality closer show degree imply result distance note show nodes lie depth tree note number nodes depth number nodes distance remaining nodes lemma lie depth neighbors hops tree removing edges incident neighbors level tree remain level level move farther putting edges incident back graph conditioned fact stay level tree means node level connect nodes entered graph step ignoring constant fraction nodes uniformly graph remaining nodes levels probability nodes formed edge time entered graph lies size graph varies nodes probability node connects factor easily case definition lemma leaf simulations show values ratio shortest path tree degree original degree number nodes node node figure congestion edge random shortest path tree figure plots ratio degrees graph degrees random shortest path tree probability node mentioned number nodes level constant times number nodes levels expected number nodes levels connect constant fraction expected number nodes levels connect constant fraction total degree result experimental support section report results experiments conducted validate theoretical results obtained hold preferential connectivity model internet-like graphs generated inetunfortunately graphs generated inethave values consistent observed behavior internet decreases time discuss detail section order validate theoretical results observe asymptotic behavior congestion fixed modify inetcode purposes section fixed recalculating reported average multiple runs simulation random seeds generating graphs figure plots fraction nodes equidistant note fraction lies consistent result lemma constant fraction trees case edge figure compares degrees highest degree nodes graph degrees shortest path tree random node find ratio degrees consistently similarly ratio degrees increasing consistent findings lemma finally plot maximum congestion graphs generated inetas function number nodes graph figure note maximum congestion scales roughly corroborates finding theorem simulation results section present results simulation study inet-generated graphs henceforth graphs generated inet alter inet max edge congestion number nodes max link congestion figure maximum congestion function inetgenerated graphs figure plots functions aid comparison chooses depend recall contrast simulation results previous section modified inet code employs show results graphs show results shortestpath routing policy-based routing cases present results any-any communication model leaf-leaf model finally clout model shortest-path routing figure shows maximum congestion power law graphs generated inetas function number nodes any-any model communication trend graph clear maximum congestion internetlike graphs scales worse notice slope maximum congestion curve slightly increasing explained mentioned earlier inetchooses exponent power law degree distribution function number nodes slog notice absolute decreases increases lower bound suggests slope function log-log plot steadily increase fact point expect curve scale roughly worst rate growth congestion figure shows maximum congestion power law trees exponential graphs power law trees generate exponent increasing number nodes tree exponents significantly higher power law graphs notice edge congestion power law trees grows faster compared graphs expected trees fewer edges lower bound maximum congestion holds equally trees satisfying power law degree distributions predicts slope curve trees consistent graph hand notice edge congestion exponential graphs smaller compared power law graphs fact edge congestion exponential graphs linear growth scales explained intuitively recall choose exponent exponential distribution match total number edges n-node power law graph power law empirically determined constants number ases internet november max edge congestion number nodes power law tree exponential congestion normalized rank edges nodes nodes nodes nodes nodes nodes nodes nodes maximum edge congestion distribution edge congestion figure edge congestion shortest path routing any-any communication figure left shows maximum edge congestion figure shows distribution congestion links number links normalized case figure left plots worst congestion exponential graphs preferential connectivity trees max edge congestion number nodes power law tree congestion normalized rank edges nodes nodes nodes nodes nodes nodes nodes nodes maximum edge congestion distribution edge congestion figure edge congestion shortest path routing leaf-leaf communication max edge congestion number nodes max link congestion congestion normalized rank edges nodes nodes nodes nodes nodes nodes nodes nodes maximum edge congestion distribution edge congestion figure edge congestion shortest path routing clout model communication distribution heavier tail compared exponential distribution edges incident low degree nodes low degree vertices exponential graph connected low degree vertices edges incident low degree nodes absorb large amount congestion leading lower congestion edges incident high degree nodes increases degree distribution resulting slow increase congestion figure show congestion links power law graph varying numbers nodes notice higher numbers nodes distribution congestion uneven set graphs leaf-leaf communication model shown figure worst congestion consistently times worst congestion any-any model explicitly shown graph congestion edges plotted figure displays similar trend any-any model distribution uneven number nodes increases results clout model interesting resulting maximum congestion graph scaling worse figure shows maximum congestion scales worse total traffic graph grows roughly any-any model smaller absolute values graphs generated inetfor larger values plausible explanation increasing slope curve graph congestion edges model shown max edge congestion number nodes any-to-any leaf-to-leaf max edge congestion number nodes policy routing any-any leaf-leaf communication clout model figure maximum edge congestion policy-based routing hlss max edge congestion number nodes policy routing shortest-path routing max edge congestion number nodes policy routing shortest-path routing edge congestion synthetic graphs edge congestion real graphs figure comparison edge congestion shortest path policy based routing any-any model figure equally 
interesting compared figure leaf-leaf model figure visual inspection figures reveals unevenness congestion pronounced clout model communication summarize non-uniform traffic demand distribution internet exacerbate poor congestion scaling internet policy-based routing figure shows maximum edge congestion communication models policy based routing any-any leaf-leaf models shown figure maximum edge congestion scales identically shortest path routing compared figure surprisingly clout model congestion policy based routing scales compared shortest-path routing figure compares maximum congestion obtained policy routing shortest path routing notice curves overlapping policy routing slightly worse graph small graph grows larger observation explained policy routing disallows paths general force connections routed longer paths increase traffic network leading higher congestion smaller numbers nodes size graph grows shortest paths result constraints policy-based routing significant impact path lengths graph fact higher numbers nodes policy routing provide congestion properties albeit marginally shortest path routing shortest path routing picks paths high degree nodes fraction paths allowed policy routing involve peering edge case policy routing moves traffic hot-spots partially alleviating problem order verify observation artifact machine learning-based labeling algorithms plot curves alrs figure display trend policy routing starts worse shortest path marginally increases summarize policy routing worsen congestion internet graphs contrary common intuition suggest fact policy routing perform marginally shortest path routing discussion analytical simulation results shown power law nature internet graph maximum congestion network scale poorly mentioned section implies internet grows size uniform scaling capacities links internet graph moore law sustain increasing congestion graph results show high degree nodes typically core internet congested quickly time edges situation enhance scaling properties network change routing algorithm employed nodes alter macroscopic structure graph address issue section edge congestion avg degree nodes figure edge congestion versus average degree nodes incident edge any-any model shortest path routing congestion higher edges high average degree adding parallel network links section examine ways additional links network effect bad scaling maximum congestion specifically model link replaced multiple links pair nodes share traffic load ideally provide sufficient parallel links pair nodes total congestion edge divided equally parallel links worst case grows rate size network number parallel links pair nodes change network grows achieve goal notice change alter degree-structure graph alteration due increased connectivity adjacent nodes require edges nodes adjacent ways network incorporates concept parallel links power law structure graph considers adjacency ases link sprint instance modelled single edge real world sprint ases connected large number places world degree connectivity internet today order guide addition parallel edges adjacent nodes observe clear correlation average degree edge congestion figure plots congestion edge average degree nodes incident shortest path routing inet generated graph nodes form communication any-any figure shows edges incident high degree nodes higher congestion incident lower degree nodes suggests good choice number parallel links substituting edge graph depend degrees nodes edge connects examine ways adding parallel links based observation number links nodes function degrees nodes functions sum degrees nodes product degrees nodes maximum degrees minimum degrees results alternate methods alleviating congestion refer full version paper note routing based original degrees nodes max edge congestion number nodes sum degrees product degrees min degree max degree figure maximum relative congestion shortest path routing any-any model parallel links added graph sum product max functions functions compute maximum relative congestion maximum edges congestion edge divided number parallel links edge show simulation results maximum relative congestion scales shortest path routing power law graphs any-any model communication results shown figure notice surprisingly parallel links added functions maximum relative congestion graph scales linearly implies adding parallelism edges internetlike graphs simple functions ensure scaling link capacities internet moore law maintain uniform levels congestion network avoid potential hot-spots summary paper addressed question worst congestion internet-like graphs scales graph size combination analytical arguments simulations studies show maximum congestion scales poorly internet-like power law graphs simulation results show non-uniform demand distribution nodes exacerbates congestion scaling find surprisingly policy routing worsen congestion scaling power law graphs fact marginally compared shortest-path routing results show current trend growth internet locations network eventually perpetual hot-spots fortunately intuitively simple fix problem adding parallel links adjacent nodes graph simple functions degrees maximum congestion graph scale linearly case links graph grow capacity faster rate bgp tables oregon routeviews project http moat nlanr net data national laboratory applied network research routing data http moat nlanr net routing rawdata aiello chung random evolution massive graphs focs akella chawla kannan seshan scaling properties internet graph technical report cmu-cs- cmu pittsburgh pennsylvania albert barabasi topology evolving networks local events universality physical review letters aumann rabani log approximate min-cut max-flow theorem approximation algorithm siam journal computing barabasi albert emergence scaling random networks science fabrikant koutsoupias papadimitriou heuristically optimized trade-offs paradigm power laws internet icalp faloutsos faloutsos faloutsos power-law relationships internet topology proceedings sigcomm symposium communications architectures protocols gao inferring autonomous system relationships internet ieee acm transactions networking december gkantsidis saberi mihail conductance congestion power law graphs proceedings acm sigmetrics leighton introduction parallel algorithms architectures arrays trees hypercubes morgan kaufmann publishers leonardi on-line network routing online algorithms state art springer medina lakhina matta byers brite approach universal topology generation mascots mitchell machine learning mcgraw-hill companies okamura seymour multicommodity flows planar graphs journal combinatorial theory park lee effectiveness route-based packet filtering distributed dos attack prevention power-law internets proceedings sigcomm symposium communications architectures protocols san diego california august subramanian agarwal rexford katz characterizing internet hierarchy multiple vantage points proceedings ieee infocom june tangmunarunkit govindan jamin shenker willinger network topology generators degree-based structural proceedings sigcomm symposium communications architectures protocols pittsburgh pennsylvania august winick jamin inetinternet topology generator tech rep michigan technical report cse-tr- 
endpoint-based routing strategies improving internet performance resilience aditya akella cmu-cs- september school computer science carnegie mellon pittsburgh thesis committee srinivasan seshan chair bruce maggs hui zhang scott shenker berkeley submitted partial fulfillment requirements degree doctor philosophy copyright aditya akella research sponsored national science foundation grant nos cnsani- anithe army research office contract daad air force research laboratory grant funded generous grant ibm corporation views conclusions contained document author interpreted representing official policies expressed implied sponsoring institution government entity keywords internet routing border gateway protocol performance bottlenecks overlay networks route control congestion moore law internet topology abstract internet access speeds large enterprises educational institutions improved dramatically past years higher-speed connectivity ineffective providing end-users good download performance robustness service interruptions arises due prevalence constrained links spare capacity inside internet service provider isp networks dissertation investigate location latency traffic load characteristics network links limit internet performance well-connected end-networks importantly show end-networks employ clever internet route selection technique called multihoming route control avoid performance bottlenecks obtain internet performance internet-scale measurements conducted akamai content distribution infrastructure show multihoming isps intelligently scheduling transfers isps end-network potentially improve internet round-trip times rtts throughputs reliability compare internet performance reliability route control powerful route selection paradigms overlay routing show rtts transfer speeds multihoming overlay routing multihoming offer perfect resilience overlays show eliminate failures experienced singly-homed end-network describe design performance evaluation route control system deployed large multihomed enterprises show practice simple route control techniques offer web performance optimal performance multihoming finally investigate future internet techniques route control overlay routing provide good end-to-end performance face higher access speeds vastly traffic mix show structure internet power law degree structure isp level routing protocol bgp convert keys portions network persistent bottlenecks modifications isp-level interconnections guarantee good end-to-end performance future internet contributions thesis significantly advance state-of-the-art techniques improving internet performance resilience dissertation highlights important guidelines design inter-domain routing protocols peering architectures nanna amma chandu shuchi iii acknowledgments immensely fortunate pursued carnegie mellon carnegie mellon provided access minds computer science great resources research carnegie mellon takes exceptionally good care students felt home home years spent cmu fun-filled memorable fortunate srinivasan seshan adviser srini gave freedom work topics choice busy schedule shied spending time needed input attention research shaped constant interactions bruce maggs hui zhang anees shaikh bruce instrumental helping gain access akamai data formulating key sub-problems thesis hui helped immensely broaden scope research bringing network perspective anees offered great insight interpreting measurement results fleshing design route control system presented dissertation jeff pang arvind kannan great conducting key measurement experiments simulations analyzing results addition past interactions scott shenker richard karp ion stoica christos papadimitriou peter steenkiste ramesh sitaraman balachander krishnamurty significantly influenced approach research general finally close friends luis von ahn laura dabbish mahesh bandi bunny spicing graduate years contents introduction road-blocks efficient internet performance non-access bottlenecks internet routing protocol bgp problem approach integrated approach optimizing internet performance dissertation outline background approach isp traffic engineering overlay routing commercial route control products overview approach empirical evaluation wide-area internet bottlenecks measurement methodology isp hierarchy choosing traffic sources choosing probe destinations bottleneck identification tool bfind metrics reported results path properties locations bottlenecks bandwidth characterization bottlenecks latency characterization bottlenecks bottlenecks public exchange points measurement caveats summary observations implications critique measurement methodology isps provisioning route selection improved internet performance vii measurement-based analysis multihoming naive multihoming rtt performance measurement dataset measurement results -multihoming rtt performance measurement dataset measurement results -multihoming -multihoming data collection -multihoming improvements unrolling averages impact choice isps resilience path failures active measurements path availability path availability analysis summary observations implications comparison overlay routing multihoming route control terminology latency throughput performance comparing rtts throughputs -multihoming versus -overlays -multihoming versus -overlays -multihoming versus -overlays -multihoming versus -overlays unrolling averages reasons performance differences resilience path failures active measurements path availability path availability analysis measurement caveats summary observations implications practical multihoming route control strategies solution overview monitoring isp links choosing isp directing traffic selected isps implementation details performance monitoring algorithms viii switching isps nat-based inbound route control experimental evaluation experimental set-up experimental results additional design operational issues dns inbound route control common route control practices summary observations implications scaling congestion internet methodology problem statement simulation set-up analytical results experimental support simulation results shortest-path routing policy-based routing shortest path routing variations improving congestion scaling properties adding parallel network links networking modeling congestion scaling analysis caveats summary observation implications conclusions open problems thesis summary contributions properties wide-area bottlenecks benefits multihoming route control comparison overlay routing route control practice congestion scaling bottlenecks lessons longer term future work longer-term measurement analyses explaining diminishing returns global effects multihoming route control bgp models congestion scaling list figures evolution home access speeds show home internet access technologies specifically access speeds adopted show expected adoption dates higher speed home access mbps mbps bgp operation showing propagation bgp reachability routing information isps arrows show propagation routing announcements end-to-end internet flow typical internet flow traverse isps end-to-end overlay routing figure illustrates overlay routing scenario multihoming route control figure illustrates route control scenario end-network isp connections isp hierarchy figure illustrates tiers internet isp hierarchy locations planetlab sources connectivity properties sources destinations located europe shown inset size dots proportional number sites mapped location location connectivity destinations destination location identified planetlab source minimum delay destination table shows composition destination set operation bfind graph queueing delay shown left y-axis instantaneous udp rate shown y-axis bfind identifies hop bottleneck bfind identifies hop bottleneck potentially false positive topology bfind simulations topologies explained detail stands mbps row corresponds location bottleneck link close corresponds middle bfind interaction competing long-lived tcp flows figures plots bandwidth reported bfind topology settings competing long-lived tcp flows bottleneck hops constrained mbps relative prevalence intra-isp bottlenecks graph shows average number bottlenecks kind appearing inside isps classified path type graph shows total number links bottleneck kind appearing paths considered left bar shows average number links shows average number unique links graph shows relative fraction intra-isp bottlenecks links types left bar average path composition links bar relative prevalence peering bottlenecks graph shows average number bottlenecks kind appearing isps classified path type graph shows total number links bottleneck kind appearing 
paths considered left bar shows average number links shows average number unique links graph shows relative fraction peering bottlenecks types left bar average path composition links bar capacity bottleneck links graph corresponds bottlenecks isps graphs show distribution capacity bottlenecks peering links involving tier isps peering links involving tier isps show distributions bottleneck links tiers tiers small number relative prevalence bottlenecks latencies graph shows average number bottlenecks classes latencies classified occurring isps occurring inside isps graph shows actual number links bottleneck kind appearing paths graph shows relative fraction bottleneck links latency types left bar average path composition links bar bottlenecks paths exchange points table left shows relative prevalence bottleneck links exchange points figure shows distribution capacity bottleneck links exchange points multihoming figure shows route control set-up figure shows traditional multihoming set-up xii naive multihoming akamai servers connected isps city download objects customer origin servers order serve clients data set turnaround times averaged hour retrievals origin servers naive -multihoming figure shows -multihoming performance isps city isps ranked performance figure shows diminishing returns -multihoming city relative utilization isps cities boston york graphs show fraction time isps naive -multihoming solutions city utilized optimal schedule -multihoming akamai performance monitors city connected isps download objects -minute intervals servers belonging content providers -multihoming evaluation average benefits shown graph shows median percentile turnaround times isp multihoming relative usage isps optimal schedule shown testbed details cities distribution isp tiers measurement testbed listed geographic location shown area dot proportional number nodes region -multihoming benefits figure plots improvement web turnaround times -multihoming figure plots improvements throughput per-destination performance figures plot absolute improvements rtt throughput performance -multihoming relative -multihoming underlying distributions figure showing median percentile percentile difference source-destination pairs figure plots rtt figure plots throughput pessimistic estimate time day effects figures plotting impact time-of-day figure day-of-week pessimistic figure rtt performance times edt impact sub-optimal choices graph shows expected rtt performance metric random -multihoming option graph shows performance worst -multihoming option choice isps figures show rtt performance isp selection policies san francisco los angeles end-to-end failures distribution availability end-to-end paths multihoming isps -multihoming cases isps city based rtt performance xiii availability comparison comparison availability averaged paths originating cities single isp -multihoming isps chosen based round-trip time performance routing configurations figures show -multihoming -multihoming overlay configurations shown round-trip time performance average rtt performance -multihoming relative -overlay routing tabulated cities graph shows distribution number overlay hops -overlay paths direct path overlay hop benefits -overlays rtt -multihoming relative -overlays shown throughput pessimistic estimate -overlays relative -multihoming shown multihoming versus -overlays rtt -multihoming relative -overlays shown throughput pessimistic -overlays relative -multihoming round-trip time improvement round-trip time -multihoming relative -overlay routing function ofa shown show distribution number overlay hops -overlay paths throughput improvement throughput performance -multihoming relative -overlays cities shown table shows fraction measurements -overlay routing selected indirect end-to-end path case performance destination figure cdf difference rtts overlay path direct path paths measured city similarly figure plots cdf difference throughputs pessimistic estimate underlying distributions figure showing median percentile percentile difference source-destination pairs figure plots rtt figure plots throughput pessimistic estimate propagation congestion scatter plot rtt improvement x-axis propagation time improvement y-axis indirect overlay paths direct paths circuitousness routes figure plotting propagation delay indirect path y-axis multihoming path x-axis xiv availability comparison comparison availability averaged paths originating cities single isp -multihoming -overlays -overlays isps chosen based round-trip time performance impact overlay network size round-trip performance graph shows difference -overlays -multihoming overlay nodes added solution steps figure illustrates main operations enterprise route control system monitoring isp performance passive measurement scheme monitoring isp performance slidingwindow active measurement scheme testbed topology simple test-bed shown emulate route control scenario shown web server load profile average response time request function average client arrival rate server topology figure performance improvement performance metric passive measurement scheme ewma parameter history employed sampling interval graph shows performance individual isps unrolling averages ratio difference response times isp transfers relative passive measurement scheme average client arrival rate case requests route control work isps chosen passive measurement-based route control scheme destinations popularity levels impact history performance achieved relying historical samples varying degrees results passive measurement-based strategy sampling interval active passive measurement performance active measurementbased schemes passive measurement scheme sampling interval impact sampling interval performance sampling intervals passive measurement-based frequencycounts active measurement-based schemes dns responsiveness figure shows traffic volume time dns change left graph shows -day period end event focuses -hour period time dns update accuracy heuristics graph left shows accuracy simple stub identification algorithm graph shows error maximum congestion due machine-learning based edge-classification algorithm model pictorial view graph set simulation support analytical model figure shows fraction shortest path trees edge figure plots ratio degrees random shortest path tree degrees graph maximum edge congestion plotted function inetgenerated graphs figure plots functions aid comparison edge congestion shortest path routing any-any communication figure left shows maximum edge congestion figure shows distribution congestion links number links normalized case figure left plots worst congestion exponential graphs preferential connectivity trees edge congestion shortest path routing leaf-leaf communication figure left shows maximum edge congestion figure shows distribution congestion links normalized edge congestion shortest path routing clout model communication figure left shows maximum edge congestion figure shows distribution congestion links normalized policy-based routing maximum edge congestion policy-based routing hlss policy-based shortest path routing comparison edge congestion shortest path policy based routing any-any model tie-breaking rules shortest-path routing figure plots variations breaking ties shortest path routing degree congestion edge congestion versus average degree nodes incident edge any-any model shortest path routing congestion higher edges high average degree alleviating congestion maximum relative congestion shortest path routing any-any model parallel links added graph sum product max functions xvi list tables approaches optimizing internet performance table shows distinguishing features common approaches circumventing network-level performance bottlenecks overview approach key problems central dissertation show provide citations preliminary conference versions results bandwidth-probing performance bfind table shows configurations topology figure output obtained bfind comparison tcp flow bottleneck hop performance bfind presence similar bottlenecks table shows hops identified bfind bottleneck configurations figure time reach conclusion performance bfind presence slightly bottlenecks table shows hops identified bfind bottleneck configurations figure 
bandwidth hops path chosen slightly higher bfind validation results statistics comparison bfind pathload pipechar properties wide-area internet bottlenecks summary key observations wide-area bottlenecks rank performance ranks isps -multihoming solutions york order added incremental performance improvement availability router classes estimated availability routers links classified tier location border router link benefits multihoming route control summary key observations multihoming xvii throughput performance table shows tcp transfer performance -overlay routing relative -multihoming estimation functions shown fraction measurements -overlay routing selects indirect path city analysis overlay paths classification indirect paths offering improvement rtt performance overlay routing policy compliance breakdown percentile round trip time improvement indirect overlay routes routes conform common inter-domain policies routes valid inter-domain paths exited ases points direct bgp route bgp route multihoming route control overlay routing summary key comparison results characteristics delay traces performance refers delay path analysis performance overheads penalty defined case practical multihoming route control summary key observations route control implementation congestion scaling internet summary key observations scaling properties internet xviii chapter introduction past decade internet access speeds large organizations enterprises data centers universities improved tremendously years ago organizations end-users alike limited kbps network connection speeds technological breakthroughs fiber optic links coupled growing demand bandwidth newer applications fueled rapid improvements endpoint access speeds now-a-days organizations deploy high speed connections mbps ensure robust performance mission critical network applications end-user access speeds improved substantially time-period figure show evolution home access speeds united states market studies predict adoption mbps broadband home connections begin early year fact home users japan south korea enjoy impressive connection speeds order tens mbps access speeds limited internet experience end-users tightly coupled internet connection speeds kbps modem line expected provide inferior download speeds availability dsl link client opens multiple web connections parallel similarly web pages longer load data transfers longer complete mbps home dsl connection connection mbps office environment naturally leads improved access speeds future drastically improve internet experience end-users true lets suppose enterprise upgraded high-speed internet connection mbps mbps gbps informally refer end-networks high-speed internet access well-connected question translates internet access performance end-users well-connected organizations specifically observed download speeds resilience service interruptions improve proportionately higher speed connections offer better-than-reasonable performance resilience unclear future well-connected end-users end-networks bang buck matching performance higher access speeds henceforth figure evolution home access speeds show home internet access technologies specifically access speeds adopted show expected adoption dates higher speed home access mbps mbps context unambiguous term performance collectively refer internet download speeds response times internet transfers resilience service interruptions observed network endpoints connection speed network endpoint grows performance improve proportionately fact highly gbps uplink offer download speeds response times endpoint mbps link discuss arises due prevalence key performance road-blocks bottlenecks limit internet experience well-connected endpoints focus forthcoming discussion rest dissertation endnetworks enterprises universities web server hosting centers term endpoints collectively refer network entities observations proposals make end-networks dissertation extended individual end-hosts road-blocks efficient internet performance key bottlenecks prevent well-connected endpoint realizing performance high-speed access connections general bottlenecks broadly classified categories access non-access bottlenecks category includes performance bottlenecks control network endpoints simple ill-configured software stacks end-hosts internet transfer speeds response times resilience extent intrinsically depend software stacks employed end-hosts past studies identified impact receive buffer size setting endpoint transmission control protocol tcp stacks throughput achieved tcp connections small receive buffer sizes constrain amount data transmitter simultaneously relay receiver illustration older implementations tcp tcp reno resilient packet drops network deployments tcp sack result clients employing tcp reno observe poorer network performance sack clients traffic load network high important feature access bottlenecks administrative control endpoints easily overcome means simple local upgrades updating system software host machines careful configuration sufficiently high speed access links upto-date software perfect configuration performance well-connected well-managed endpoints limited non-access bottlenecks non-access bottlenecks non-access bottlenecks persist irrespective access speeds software upgrades network endpoints essentially bottlenecks arise inefficient design operation management wide-area internet key portions overcome bottlenecks requires coordinated network-wide upgradation management formidable task local improvements key non-access bottlenecks constrained widearea hot-spot links examples include failures critical network-wide services internet domain system dns factors dns failures tend preclude delay start internet transfers discuss factors focus bottlenecks impact ongoing internet transfers internet transfers share network resources raw link capacities router buffers millions flows network volume competing data traffic low major constraint performance data transfer raw capacity network links traverses assuming software limitations raw speeds access links lower links network non-access links performance data transfer limited primarily source destination connection speeds non-access links today carry hundreds megabits data traffic peak hours internet backbone providers non-access links employ variety mechanisms protect links traffic overload unpredictability traffic conflicting traffic management goals competing providers leave keys links network congested head room spare capacity additional traffic simple fix alleviating congestion hotspots add additional capacity approach economically viable selective local improvements link speeds simply push hotspots network locations words performance transfers initiated well-connected endpoints depends critically volume competing traffic non-access link traverse variation traffic volumes time non-access links running close-to-full capacity drive endpoint transfer speeds close force packet drops connections time-out fail general refer non-access links heavy traffic load limit internet performance well-connected endpoints wide-area bottleneck links context clear generic terms non-access bottlenecks wide-area bottlenecks refer wide-area bottleneck links order overcome wide-area bottlenecks obtain satisfactory internet performance endpoints require intrinsic support network traffic overload link network identify link hotspot divert endpoint traffic link manner completely transparent endpoint internet composed thousands links time links spare capacity carry diverted traffic seamless rerouting endpoint traffic plausible practice internet divert endpoint traffic hotspot network locations arise answer question ideally internet support seamless diversion traffic hotspots handled part internet routing protocol internet arises fundamental limitations routing protocol briefly overview internet routing protocol suite examine endpoints circumvent wide-area bottlenecks internet routing protocol bgp data traffic points network traverse routers links internet routing protocol suite determines exact sequence routers links traversed quick overview internet routing protocol internet routing overview internet routing infrastructure composed thousands routers links ownership infrastructure operational management responsibilities distributed independent administrative domains called internet figure bgp operation showing propagation bgp reachability routing information isps arrows show propagation routing announcements service providers isps autonomous systems ases 
inside domain isp runs intradomain routing protocol routers links determine traffic routed domain typically computing routes isps optimize usage routing infrastructure isp route traffic manner link network carries unduly large amount traffic practice commonly referred traffic engineering data traffic traverses multiple domains isps employ border gateway protocol bgp exchange traffic figure illustrates operation bgp isp wishes communicate isp owns internet address block bgp announces reachability address block owns neighbors neighbor turn announces information downstream appending domain number called autonomous system number asn announcement isp announcements propagate network receives announcements isp directly isp bgp path selection mechanisms stipulates prefer route fewer isps announcement route isp announces route downstream isp announcements receives isps number intermediate isps case prefers cost-effective route due commercial arrangements neighbors routing require pay case referred provider contrast customer routing boost revenue result prefers route reach announcements propagate isps manner eventually reaching isp final selection route made data traverse path mentioned domain isps employ traffic engineering mechanisms manage network bgp-based routing internet commonly referred policy routing due explicit support protocol commercial arrangements isps bgp characteristics notice isp-level route selected bgp completely agnostic existence non-access bottlenecks performance availability isp-level path primary goal bgp provide course-grained reachability information honoring economic considerations intermediate isps bgp favor policy-compliant paths fewer ases choice static reflect quality path manner requirement paths policy-compliant arbitrarily inflate resulting long circuitous routes bgp isp exposes believes single route destination neighbors endpoint single isp connection single path destination isp short information propagated isps bgp heavily filtered summarized property fact helps bgp scale thousands networks rise performance inefficiencies discussed problems bgp characteristics bgp imply performance availability problem arises isps path destination end-network live wait bgp selects alternate path destination past research studies shown process fact long time labovitz study re-convergence bgp show bgp minutes recompute propagate routes failure implies bgp lacks flexibility route endpoint traffic network hotspots failures timely effective manner past studies quantified impact rigidity bgp-based routing internet performance availability experienced endpoints feamster show endpoints relying bgp-based routing experience connectivity outages lasting minutes hours savage quantify sub-optimality endpoint transfers speeds web response times arising relying bgp-based routes authors show congestion heavy traffic load bgp paths avoided dynamically selecting alternate non-policy-compliant internet paths result substantially improved transfer speeds response times compared traditional internet routing tangmunarunkit spring highlight crucial inefficiency internet routing adhering traffic exchange policies isps forces paths pairs internet endpoints close times long direct as-the-bird-flies paths short past studies establish bgp routing significantly limits ability wellconnected end-networks obtain good internet performance resilience interruptions leads well-connected network endpoints employ special mechanisms work conjunction internet routing extract optimal performance high-speed internet connections problem approach dissertation complement studies inefficiencies internet performance availability investigation traffic load wide-area links study extent wide-area bottleneck links limit performance data transfers involving well-connected endpoints find significant fraction non-access links carry high volumes traffic leaving spare capacity mbps occasions turn places upper bound speeds transfers initiated well-connected endpoints attain bgp ineffective enabling quick recovery performance problems thesus investigate usefulness mechanisms work conjunction bgp overcome bottlenecks specifically seek answer central question mechanisms well-connected end-networks employ circumvent performance availability problems non-access portion internet improve internet experience mentioned issue partly addressed past research studies approaches require support isps terms cutting-edge routing policies traffic engineering mechanisms special purpose internet-wide infrastructures explicitly bypass bgp-determined routes divert end-network traffic heavily-loaded network hot-spots contrast focus mechanisms require special support network-wide infrastructure modifications bgp common routing policies study mechanisms simply deployed endpoints local networks enterprise access routers inside high-speed home dsl gateways seamlessly integrated existing wide-area internet infrastructure specific mechanism study called multihoming route control involves endnetworking buying internet connections multiple isps serving city located importantly end-network ability intelligently schedule transfers isp connections avoid performance glitches isps arise end-network control isps route traffic control isp carries traffic destination time isps bgp route packets destinations sense multihoming route control require modification current bgp protocol network infrastructure conduct extensive active passive measurements -node internet-wide testbed quantify performance benefits end-networks multihoming route control measurements compare multihoming route control past proposals requiring specialpurpose infrastructures show simple approach fact offers similar performance powerful approaches present implementation multihoming route control deployment multihomed enterprise settings show simple principles regularly monitoring isp performance minimally relying historical performance isps effective helping endpoints realize potential benefits multihoming practice investigate mechanisms multihoming route control effective future internet face growing end-user access speeds higher traffic loads shifting usage patterns study evolutionary patterns internet isp level interconnection show internet structure bgp-style routing render fundamentally incapable supporting good endpoint performance future light observation propose simple rules altering interconnections isps guarantee robust future endpoint performance integrated approach optimizing internet performance optimizing improving internet performance holy grail networking research community decades numerous proposals fine-tuning internet behavior bring internet performance reliability closer engineered systems cars telephone network researchers past approached internet performance optimization problem piece-meal fashion attacking specific facets coming interesting solutions key sub-problems examples past approaches abound studies routing pathologies intra inter-domain traffic engineering proposals modifying improving routing protocol behavior specifically bgp overlay routing contrast past approaches dissertation takes integrated approach problem identify primary poor endpoint performance propose evaluate simple mechanism endpoints control overcome performance glitches compare proposal past well-established approaches optimizing network performance show proposal extremely simple effective complex approaches finally future existing proposals multihoming scheme effective network grows size usage taking systemic view problem analyzing aspects lends observations mechanisms longer shelf life feel owing approach key lessons thesis encouraging richer hop connectivity enabling endpoint control routing performance leaving rest network simple untouched continue apply future internet architectures problem domains wireless home networking dissertation outline rest dissertation organized chapter past approaches optimizing end-to-end performance internet specifically discuss classes mechanisms isp-based third-party infrastructure-based end point-based put contributions dissertation perspective earlier approaches chapter present large-scale measurement study performance bottlenecks wide-area network present classification bottlenecks terms location latency discuss impact end-to-end performance building observations chapter show end-networks employ multihoming route control overcome bottlenecks improve internet performance investigate isps endpoints employ realize optimal performance improvements chapter contrast performance improvements route control past third-party infrastructure-based approaches specifically limited routing flexibility multihoming provide comparable benefits arbitrary flexibility past 
approaches chapter potential benefits route control realized practical deployment scenarios implement evaluate route control mechanisms outline important common route control practices chapter techniques route control continue provide good performance future network specifically investigate impact growth operational trends internet ability support good performance face growing end-user access speeds user applications finally chapter present conclusions discuss issues study chapter background approach optimizing improving internet performance availability hot topic research years proposals made improving endpoint network stacks tcp buffer-size tuning congestion control algorithms improved loss recovery mechanisms approaches improving application-level performance specifically performance internet web servers well-studied strategies accepting incoming connections improving web response time caching client characterization-based web server adaption focus dissertation non-access performance bottlenecks approaches optimizing internet performance face bottlenecks approaches considered research commercial worlds employed widely today general proposals classified broad categories isp-based mechanisms adopted isps cater traffic traversing networks examples include intra-domain inter-domain traffic engineering mechanisms special class mechanisms category includes approaches performance-aware wide-area internet routing special mechanisms require global coordination internet isps internet-wide infrastructure-based approaches involve deployment applicationlevel infrastructure isps infrastructure typically operated managed commercial third-party service provider examples include overlay network-based mechanisms multiple competing overlay service providers deploy individual overlay infrastructures main purpose overlay infrastructure explicitly divert subscriber traffic congested wide-area links unavailable routes end point-based mechanisms simplest require subscriber network buy internet connectivity isps serving city approaches require deployment special devices subscriber networks mechanisms require support isps special internetexample optimizes deploys fine-grained bgp-compliant deployment ease end-to-end manages optimization performance isp-based inter-domain single isp isp traffic engineering neighboring isps co-operation internet-wide overlay routing third-party provider thirdinfrastructure-based party deployment endpoint-based multihoming route endpoint endpoint deploys control unilaterally table approaches optimizing internet performance table shows distinguishing features common approaches circumventing network-level performance bottlenecks wide infrastructures require modification internet widearea protocol bgp examples include route control appliances distinguishing features approaches summarized table discuss approaches detail isp traffic engineering approaches optimizing performance isp networks commonly referred intra-domain traffic engineering long time arpanet employed adaptive routing network setting network routers network made routing choices based current state network arpanet routers maintained information current estimated delays routers forwarded packets path minimum estimated delay modifications made routing protocol incorporating routing metric based joint function hop counts network delays minimize traffic fluctuations due variations network delays key drawback load-sensitive approaches traffic engineering reliance availability fresh information network state compute network routes stale network state network routers avoid common set congested links leading oscillations congestion network links modern day approaches traffic engineering isp networks treat problem network management network routers simply compute routes based static link weights isp network management system turn sets parameters based network-wide view traffic topology precise static link weights set directly proportional distance routers inversely proportional capacity link routers static weights fine-tuned network management system based estimated network conditions directly minimize metrics maximum link utilization track network traffic isp estimates traffic traversing network general traffic matrix describes volume data transmitted pair routers isp network centrality traffic matrices traffic engineering today routers provide support measuring accurately state-of-the-art techniques traffic matrix estimation essentially derive underlying traffic matrix measurements link loads obtained simple network management protocol snmp isp routing configurations fewer routers links isp network router-pairs estimates traffic matrix obtained manner highly error-prone high variability traffic isp networks contributes inaccuracy traffic matrix estimates comprehensive survey traffic matrix estimation techniques related traffic engineering mechanisms found estimating traffic matrix isp employs estimates set links weights route traffic network optimize usage network links routers routing weights set satisfy performance requirements select subscribers isps typically configure link weights networks coarse time-scale large backbone isp schedule daily maintenance network midnight links weights computed re-optimized improve network congestion details intra-domain traffic engineering mechanisms proposals extensions found inter-domain traffic engineering similar techniques employed neighboring isps manage load links share peering links recently received attention research network operator community complete details key challenge inter-domain traffic engineering ensure effective inter-domain traffic management revealing internal network information neighboring networks isps hold internal routing mechanisms topology sacrosanct poorly configured traffic engineering mechanism reveal crucial hints internal policies isp neighbor intra-domain traffic engineering primarily dealt selecting paths based link metrics inter-domain traffic engineering isp commercial arrangements neighboring isps link metrics determine paths effective inter-domain traffic engineering made challenging fact internet wide-area routing protocol bgp convey explicit information quality paths existing approaches inter-domain traffic engineering explore minimal modifications bgp enable support inter-domain traffic engineering due constraints isps adopt latest proposals inter-domain traffic engineering importantly afore-mentioned isp-based mechanisms intraand inter-domain traffic engineering ineffective improving end-to-end internet performance endpoints due additional reasons approaches rely traffic matrix estimation mentioned earlier error-prone conducted daily time-scale techniques responsive perspective endpoints overcome unexpected performance availability problems figure end-to-end internet flow typical internet flow traverse isps end-to-end approaches targeted traffic confined single isp pairs neighboring isps practice traffic internet traverse multiple isps peering locations endto-end typical internet flow shown figure flow traverses multiple isps path distinct pairs neighboring isps commercial arrangements making coordinated traffic exchange isps challenging local performance optimizations performed individual isps improve global end-to-end performance internet traffic recent research studies proposed modifications bgp make cooperative traffic exchange multiple isps easier today nira system advocates incorporating support as-level source-routing bgp end-networks isps greater control exact sequence isps traversed data traffic turn feature makes easier configure inter-domain traffic engineering-friendly routing policies approaches nira require major bgp years widely adopted overlay routing mentioned chapter internet routing support good end-to-end performance resilience isp-based traffic engineering mechanisms effective mentioned previous section address inefficiencies guarantee good end-to-end internet performance researchers advocated deploying special purpose internet-wide infrastructures provide support explicitly diverting subscriber traffic highly congested overlay nodes flaky direct path indirect overlay path figure overlay routing figure illustrates overlay routing scenario network locations special-purpose infrastructures called overlays techniques broadly referred overlay routing mechanisms overlay routing third-party overlay service provider deploys large collection overlay nodes major cities isps internet overlay nodes regularly monitor performance availability paths internet destinations active probes icmp pings passive measurements existing data transfers nodes instantaneous performance availability information turn accessible subscribers overlay service subscriber employ information obtain internet performance subscriber default internet route destination determined bgp offer 
expected performance availability subscriber immediately route traffic alternate path overlay nodes shown figure subscriber effect hands traffic overlay network routes traffic select overlay nodes hop-by-hop manner destination notice route traversed subscriber traffic neighboring overlay nodes overlay path conform bgp policies overlay nodes forming application-level network stitch multiple bgp routes on-the-fly yield performing alternative paths subscribers notice overlays provide end-networks great deal flexibility selecting arbitrary paths internet famous research studies advocating overlay routing detour system resilient overlay network ron testbed detour study savage study impact inefficiencies wide-area routing end-to-end performance terms roundtrip time rtt loss rate throughput observations drawn active measurements public traceroute server nodes compare performance default internet bgp paths potential performance alternate overlay paths work shows large fraction bgp paths measured alternate overlay paths offering throughputs rtts loss rates andersen advocate deploying rons address problems bgp fault recovery times shown order tens minutes cases ron nodes regularly monitor availability paths information dynamically select direct indirect end-to-end paths ron mechanisms shown significantly improve availability end-to-end paths overlay nodes bring failure recovery times seconds addition commercial instantiations overlays improving web download performance proposed recently akamai sureroute regular intervals called sampling intervals akamai sureroute system replicates client data transfers multiple overlay paths systems selects overlay path offering fastest performance client employs path subsequent transfers involving client sampling interval sureroute offered resilience-enhancing service web content providers large enterprise customers natural concern overlays wide-spread deployment usage vast flexibility provided overlays result worse network-wide congestion oscillations traffic past theoretical studies highlighted examples scenarios allowing end-networks arbitrary flexibility routing substantially worsen average performance network internet-like scenarios researchers shown wide-spread deployment overlay routing necessarily result worse performance fact average end-user performance overlay routing significantly achieved traditional routing protocols summarize hurdles wide-spread deployment overlay networks end-networks today subscribe overlays optimizing internet performance end-networks employ overlays small important fraction transfers mission critical financial transactions discuss key drawback overlay-based approaches common feature overlay-based approaches path neighboring overlay nodes bgpcompliant end-to-end path overlay network arbitrarily violate commercial policies isps imagine overlay path consisting sequence isps overlay nodes isps assume isp customer isps larger isps wider global reach smaller regional isp connecting enables reach wide range internet destinations bgp routing policies dictate customer network provide transit traffic provider destined provider network interest customer paying providers provider transit traffic easy overlay path directly violates policy cases violation overlay service provider compensates isp loss revenue explicit payment turn increases subscription usage costs overlay client client network overlay regular high-volume web access importantly unclear high degree flexibility provided overlay networks overcome bgp-driven routes policies fact end network obtained improved internet performance end-networks make lesser routing flexibility achieve reasonable levels internet performance end-networks require support special-purpose infrastructure deployed wide-area internet dissertation direct answers questions explain shortly commercial route control products number vendors recently developed intelligent end-network routing appliances route control mechanisms contrast overlay-based mechanisms require exclusive infrastructure enable alternate routes routing appliances purely end point-based easier deploy advantage limits amount routing flexibility devices provide comparison overlay-based approaches basic premise approaches end-network internet connections multiple isps practice referred multihoming multiple isp connections commercial products multihomed end-network dynamically schedule internet traffic upstream isp links optimizing performance availability devices co-located end-networks edge routers shown figure products work probing performance end-network isp links destinations scheduling traffic isp offer performance availability destination route control appliances subscriber networks avoid performance availability problems isps paths dynamically routing alternate isps notice isp end-network bgp path destination explained chapter effect isp connections multihomed end-network paths destination route control products end-networks make clever choice isp link equivalently bgp path employ obtaining performance availability route control products provide routing flexibility traditional singly-homed bgp-based routing flexibility offered overlay networks dissertation compare relative trade-offs extents flexibility proverio flaky isp path att uunet route control applicance select isp destination switch att figure multihoming route control figure illustrates route control scenario end-network isp connections vided systems study effectively utilize modest amount flexibility provided route control effectively improve internet access performance optimizing performance availability web transactions primary design goal devices provide important benefits route control devices end-networks tune traffic scheduling policies obey specific bandwidth usage limits appliances typically provide subscribers knob trade-off improved performance lower bandwidth usage costs appliances targeted balancing load multiple medium low-speed isp connections multiple dsl links home optimize web download speeds specifically targeted improving responsiveness delay-sensitive internet applications voip detailed study alternate applications route control scope dissertation overview approach performance bottlenecks experienced well-connected endpoints driven word-of-mouth common perception wide-area performance problems confined boundaries neighboring isps internet peering locations isp sufficient incentive manage traffic locations peering points presumed carry high-levels traffic resulting inefficient end-to-end performance step performance bottlenecks current internet chapter step multihoming route control avoiding performance bottlenecks chapter step overlay routing versus multihoming route control chapter step practical multihoming route control strategies chapter step performance scaling future internet chapter table overview approach key problems central dissertation show provide citations preliminary conference versions results issue tackle dissertation investigate verity popular belief step figure specifically seek quantify levels traffic peering locations expose locations wide-area internet potentially limit performance well-connected endpoints location derive characteristics bottlenecks links latencies capacity explore techniques well-connected end-networks employ overcome performance problems subscriber networks beginning employ route control appliances purpose tangible benefits products subscriber networks rely word-of-mouth deciding employ mechanisms moderately source information subscribers accompanying set white papers outline distinguishing features products documents subscriber networks select products basis features supported subscribers turn appliances order understand relative merits situations impossible subscribers internet performance observe specific route control appliance improved exact improvements route control tightly coupled isps subscriber network connects end-networks connection cost cases service level agreements slas offered isps primary yard-sticks determining buy connectivity guidance subscriber networks selecting isps offer expected level performance charging reasonable connectivity fees work seek establish base-line expected performance resilience improvements multihoming route control mechanisms step figure aim investigate end-networks select isps realize potential improvements route control realize goal collect performance availability data selected nodes server infrastructure large content distribution network operated akamai technologies call collection nodes measurement testbed measurement samples obtained small time intervals week-long intervals time helping understand tangible benefits route control 
approach offers important advantages akamai servers deployed major cities world measurement study make observations improvements route control geographic regions world akamai server deployment style servers deployed isps major cities helps understand impact number exact choice isps expected performance improvements measurements span long periods time derive hourly diurnal patterns performance improvements route control information employed fine-tune operation route control appliances measurements contrast improvements route control overlay routing-based mechanisms step figure commercial overlay-based mechanisms offer end-networks viable option obtaining internet performance resilience comparison seeks understand clear benefits overlay-based mechanisms route control simply provide evaluate benefits overlay routing employ nodes testbed intermediate overlay hops overlay testbed size commercial overlay network larger overlay testbeds employed past research studies evaluate powerful form overlay routing combines first-hop route choices multihoming flexibility provided overlay routing hop isp routes enabled form overlay routing subsume routes enabled route control route control offer strictly inferior performance goal understand inferior route control comparison overlay routing multihoming route control present study effectiveness simple route control strategies step figure route control white papers outline techniques believes key effectiveness respective products implement techniques propose alternatives evaluation highlight important drawbacks existing approaches seek outline common practices design operation route control appliances primary goal implementation effort show simple route control schemes develop end-networks significantly improve internet performance practical deployment scenarios secondary goal show performance techniques close maximum benefits route control steps dissertation deal performance improvements internet today step figure asks good internet performance sustained future internet years time internet grow significantly size endpoint access speeds improve orders magnitude killer applications drastically alter traffic mix network goal understand internet fundamentally capable accommodating future case expect techniques proposed route control thesis related mechanisms continue remain effective extracting good internet performance future fundamental properties design evolution internet prevent happening specifically investigate internet interconnection topology routing protocols limit network ability accommodate key time identify guiding principles design evolution network improve ability support robust future performance chapter empirical evaluation wide-area internet bottlenecks widely believed poor internet performance arises primarily constraints edges access portions network narrow-band access links dial-up dsl limit ability applications tap plentiful bandwidth negligible queuing interior network access technology evolves enterprises end-users resources increase capacity internet connections upgrading access links end-networks today deploy access links speeds excess mbps positive impact performance employing higher access speeds insignificant parts network subsequently performance bottlenecks ultimately upgrades edges network simply shift existing bottlenecks hot-spots non-access wide-area portions internet optimize internet access experience end-users end-networks important understand location traffic load links wide-area internet chapter present study location characteristics bottleneck links wide-area internet noted chapter wide-area portion internet composed hundreds isps belonging tiers internet isp hierarchy isps attach peer geographic locations wide-area bottleneck lie inside isp network peering locations technical definition wide-area bottlenecks wide-area bottlenecks wide-area bottleneck link path wellconnected internet endpoints link isp intra-isp link boundary neighboring isps path peering link potentially constrain transfer speed unconstrained tcp flow endpoints unconstrained tcp connection characteristics suffer access bandwidth buffer size limitations sender receiver run sufficiently long period time average transfer speed flow equals average capacity path clarify instantaneous capacity network link raw bandwidth link current traffic volume link instantaneous capacity path minimum capacities links path average capacity simply time-average instantaneous capacity path primary objective devise methodology discovering classifying wide-area bottleneck links location internet isp hierarchy identify size expanse isp bottleneck links belong secondary objective derive important properties bottleneck links property latency bottleneck links typical bottlenecks short link confined city long cross-country links finally derive capacity bottleneck links main challenge characterizing internet bottlenecks measure paths representative typical routes internet avoiding biases due narrow view network probe sites require probes well-connected results based measurements geographically diverse probe sites located primarily high speed access internet measure paths sites carefully chosen set destinations including paths tierisps paths fraction tiertier- tierisps resulting paths total addition identify measure paths passing public internet exchange points order explore common perception public exchanges major source congestion internet challenge lies measuring bottleneck link reporting bandwidth location due control ends path unable leverage existing tools measure bandwidth develop tool bfind measures capacity bandwidth probing technique apply measurement methodology empirically determine locations estimated bandwidth delay non-access bottleneck links results show half paths measured non-access bottleneck link capacity mbps percentage observed paths bottlenecks grows paths destinations smaller isps surprisingly bottlenecks identified roughly equally split intra-isp links peering links isps find low-latency links isps significant probability constraining bandwidth paths public exchanges bottleneck link constrained link appeared exchange point half cases chapter outline measurement methodology details choice paths design validation measurement tool bfind discussed section section present measurement-based characterization wide-area bottleneck links finally section discuss caveats approach summarize key observations chapter analyze implications end-user performance figure isp hierarchy figure illustrates tiers internet isp hierarchy measurement methodology internet today composed interconnected collection autonomous systems ases ases roughly categorized carrier ases isps stub ases end-customer domains goal measure characteristics potential performance bottlenecks wellconnected end-nodes encounter control perform measurement address important issues choosing set sources measurement choosing set probe destinations developing tool identify characterize bottlenecks probed paths cases pay careful attention isps sources destinations connected clarify choice measurement probe sites sufficient diversity isps briefly discuss tier classification isps present details measurement probes destinations measurement isp hierarchy hierarchical classification isps ases tiers defined tier isp approximate indication size global reach isp isps tierof hierarchy sprint large isps upstream isps isps tierhave peering arrangements lower hierarchy tierisps including savvis time warner telecom large national isps peering agreements number isps tierisps tieralso peering relationships generally peer isps isps tiersuch southwestern bell turkish telecomm small regional isps customer isps peer similar small isps finally isps tierfor rockynet customers typically peering relationships tiers isp hierarchy illustrated choosing traffic sources stub ases internet varied size connectivity provider networks large stubs large universities commercial organizations high speed links isps stubs small businesses slower connection core measurements traffic flows set sources control set destinations random chosen measure typical internet paths interested measuring bottlenecks faced well-connected endpoints ensure sources measurements high-speed internet connections large commercial academic organizations endpoints addition ensure sources geographically diverse span isps belonging tiers ensures results biased repeated measurement small 
class bottlenecks links hosts participating planetlab project access large collection internet nodes meet requirements planetlab internet-wide testbed multiple high-end machines located geographically diverse locations machines time performed experiments october located large academic institutions research centers europe note traffic sources primarily universities research labs measure paths nodes measured paths chosen representative typical internet paths opposed paths internet initially chose machine planetlab sites initial candidate experiments generally true academic institutions research labs hosting planetlab machines well-connected upstream isps found machines low-speed local area networks planetlab sites operational outset experiments october identified drawback eliminated machines set sources experiments unique upstream isps locations remaining planetlab sites shown figure specifically figure shows sources connected diverse set isps belonging tiers isp hierarchy univ bologna lancaster univ cambridge source measurement tiertier- tiertier- total unique isps avg isps planetlab source first-hop connectivity planetlab sources figure locations planetlab sources connectivity properties sources destinations located europe shown inset size dots proportional number sites mapped location choosing probe destinations objectives choosing paths measure sources choose set network paths representative typical paths internet traffic explore common impression public network exchanges naps network access points significant bottlenecks choice network paths measure equivalent choosing set destinations wide-area targets probe tools describe rationale techniques choosing test destinations achieve objectives end-to-end data traffic internet flows stub networks measure typical paths select large number stub networks destinations number destinations needed characterize properties representative paths make measurements impractical key features routing structure internet choose smaller set destinations tests traffic originated stub network subsequently traverses multiple intermediate autonomous systems reaching destination stub network definitions hierarchy discussed earlier flows originated typical stub source networks enter tieror higher tier isp flow cross sequence multiple links isps higher-tier upstream isps uphill path end sequence flow cross single peering link peer isps traverse downhill path ases progressively lower tiers final destination stub form routing arising bgp policies referred valley-free routing refer portion path flow excludes links stub network end path access links stub networks transit path non-access bottlenecks lie transit path destination stub network specifically bottleneck flow lie isps uphill downhill portion transit path distinct isps portion transit path measuring paths sources wide variety isps provide representative view bottlenecks sources encounter due large number isps impractical measure paths sources isp networks reachability provided isps arises directly position hierarchy path pass tierisps lower tier isp test paths sources tierases tierisps lesser global reach test paths sources fraction tierisps chosen randomly measure smaller fraction tierand tierisps number isps chose tier presented figure addition choosing target choose target address tests isp choose ispa pick router hops server ispa net case confirm router inside manually inspecting dns router isps routers function network edge chi-edgeinet qwest net backbone slbb -nyc- sprintlink net routers function router inferred names routers adjacent addition double check addresses isp routers path ispa typically change subnet address close web server measure path sources addresses geographic location destinations shown figure destination location identified traffic source delay univ bologna univ cambridge destinations probed mapped closest source tiertier- tiertier- number tested total internet percentage tested composition destination set figure location connectivity destinations destination location identified planetlab source minimum delay destination table shows composition destination set public exchanges isps internet peer number locations world peering arrangements roughly categorized public exchanges naps original nsf exchanges private peering pair isps motivations deployment private peering avoid perceived congestion public exchanges part measurements interested exploring accuracy perception set destinations test paths exchanges select set well-known naps including worldcom mae-east mae-west maecentral sbc ameritech aads paix palo alto nap gather list small low-tier customers attached nap customers typically listed web sites naps customers low tier reasonable likelihood path customers source passes nap multihomed nap isp find small set addresses address block customers reachable traceroute complete bgp table dump oregon route server obtain address space information customers large set public traceroute servers traceroute sources isps trace paths servers addresses identified script automate finding accessing working servers nap select paths nap purpose router dns names determining factor specifically nap dns router path selected paths pick routers one-hop predecessor successor router identified nap collect addresses collection addresses routers potentially destinations measure paths passing naps ensure paths fact traverse nap run traceroutes planetlab sources predecessor successor addresses identified planetlab source record subset addresses traceroute path nap resulting collection addresses destination set planetlab source bottleneck identification tool bfind tool run sources measure bottleneck link selected paths discussed earlier bottleneck link link path bandwidth unconstrained tcp flow minimum tool report bandwidth latency location addresses endpoints bottleneck path describe tool present overview existing tools drawbacks exiting tools development tools estimate bandwidth characteristics internet paths continues active research area complete list tools bprobe nettimer pbm packet-pair mechanisms measure raw bottleneck capacity path tools clink pathchar pchar pipechar characterize hop-by-hop delay raw capacity loss properties internet paths observing transmission behavior sized packets set tools pathload focus capacity path tools require control endpoints measurement destinations routers direct control tools applicable notice link bottleneck necessarily imply link heavily utilized congested treno usies udp packets measure bulk transfer capacity operated single-ended mode sends hop-limited udp packets destination treno emulates tcp congestion control sequence numbers contained icmp error responses probes hop path turn capacity identify bottlenecks path treno consume icmp processing resources probe packet router probed progresses hop-by-hop result high-speed links treno highly intrusive describe design operation bottleneck identification tool bfind addresses drawbacks tools bfind design bfind design motivated tcp property gradually filling capacity based feedback network bfind obtains propagation delay hop destination bfind minimum non-negative measured delays hop estimate propagation delay hop minimum delay samples traceroutes step bfind starts process sends udp traffic low sending rate mbps destination trace process starts running concurrently udp process trace process repeatedly runs traceroutes destination hop-by-hop delays obtained traceroutes combined raw propagation delay information computed initially obtain rough estimates queue lengths path trace process infers queue hop potentially increasing consecutive measurements queuing delay hop greater maximum raw propagation delay hop information computed hop trace process constantly accessible udp process udp process information constantly adjust sending rate feedback trace process increase queues hop udp process increases rate kbps rate change 
occurs feedback event traceroute essentially bfind emulates increase behavior tcp albeit aggressively probing bandwidth hand trace process reports increased delay hop bfind flags hop potential bottleneck traceroutes continue monitoring queues addition udp process sending rate steady current events occur hop continues flagged bfind consecutive measurements trace process threshold number observations made hop hop flagged threshold number times total bfind run pre-defined maximum amount total time seconds trace process reports queue build-up hop implying increasing queues difference delay consecutive routers path negative delay hop assumed transient occurrence cases bfind quits identifies hop responsible tool quitting bottleneck case bfind quits providing reliable conclusion bottlenecks path fourth case bfind continues increase sending rate steady pace search bottleneck trace process observes queues hops source building quits immediately avoid flooding local network hops includes links source stub network limit maximum send rate bfind mbps make bfind occupy local area network capacity identify bottlenecks mbps capacity bfind quits due exceptional conditions report bottlenecks notice bfind identifies bottleneck link path estimates capacity bottleneck equals send rate tool quit identifying bottleneck reliably paths bottlenecks identified bfind outputs lower bound capacity notice respects operation bfind similar tcp vegas rate-based congestion control sending rate modification vegas reasons ensure bottleneck link experiences reasonable amount queuing order definitive conclusion bfind aggressive vegas feedback loop trace process slower vegas obvious drawback design bfind heavy-weight tool sends large amount data makes difficult find large number sites host experiments bfind suitable continuous monitoring bandwidth short duration measurements modifications design bfind addressed issue bfind operation figure illustrates bfind works figure bfind run planet scs nyu nyu -srp cst hcvlny net cable vision corp tieras bfind ramps transmission rate delay hop link at-bb -nyc- -oc appliedtheory net jfk -core atlas algx net begins increase bfind freezes sending rate delay hop increases persistently finally bfind identifies hop bottleneck mbps capacity link raw latency maximum queuing delay observed bottleneck link figure shows potential false-positive run planetlab lcs mit mit amsterdam ripe net ripe tierbfind observes delays hops path increasing short time-scale causing bfind freeze udp send rate delay hop increases steadily starting secs steady increase bfind conclude hop bottleneck similar delay send rate mbps time udp send rate function time hop hop hop hop hop delay send rate mbps time udp send rate function time hop hop hop hop hop figure operation bfind graph queueing delay shown left y-axis instantaneous udp rate shown y-axis bfind identifies hop bottleneck bfind identifies hop bottleneck potentially false positive hops congestion transient dip delay hop secs rule possibility false-positives analysis choices set thresholds bfind number false positives low derive threshold testing combinations yielding minimum estimation error notice false negatives occur bfind path explored free congestion run persistently overloaded times bfind runs secs secs false negatives bfind validation section present simulation experiments nsto address issues bottleneck estimation tool bfind presented section accurately quickly bfind estimate location bottlenecks capacity bottleneck links location path impact speed accuracy presence multiple bottlenecks affect detection bandwidth probing behavior bfind compare tcp flow bottleneck link bfind aggressive tcp bfind compete long-lived tcp cross traffic probing bandwidth bottleneck link bottleneck faced competing tcp flows faced bfind address issues port bfind nswe setup path topologies shown figure chose experiment complicated topologies bfind setting close middle hop hop hop setting single bottleneck setting close middle hop hop hop setting bottlenecks figure topology bfind simulations topologies explained detail stands mbps row corresponds location bottleneck link close corresponds middle probes single path result nodes links topology auxiliary figure path hops hop-by-hop delays observed traceroutes machine cmu amazon capacity bottleneck links path shown italics figure bottleneck path test probing behavior bfind vary location bottleneck link path close middle explained raw capacity mbps referred setting mbps referred setting shown italicized bold font figure location bottleneck link close hop bottleneck link location middle hop bottleneck location hop bottleneck figure pictorially summarizes experiments single bottleneck link path bottleneck locations bandwidth settings topology figure similar bottleneck links setting links identical capacity mbps setting identical capacity mbps location bottlenecks close hops chosen identical bottleneck links middle hops bottlenecks hops bottlenecks topology cross traffic neighboring routers cross traffic consists http sessions nseach configured maximum connections addition cross traffic includes constant rate udp flows default parameters set nscross traffic reverse path neighboring routers similar capacity bottleneck link location capacity mbps setting capacity mbps setting bfind time tcp bfind time tcp output bfind throughput output bfind throughput close middle table bandwidth-probing performance bfind table shows configurations topology figure output obtained bfind comparison tcp flow bottleneck hop capacity bottleneck link location capacity mbps setting capacity mbps setting bfind output time bfind output time close hops middle hops hops table performance bfind presence similar bottlenecks table shows hops identified bfind bottleneck configurations figure time reach conclusion average cross traffic hops similar table show performance bfind experiments figure show bfind correctly identifies bottleneck time detection bandwidth reported bfind addition report average throughput tcp connection bottleneck link tcp connection runs exact conditions cross traffic bfind results show bfind accurately determines bottleneck links capacity values capacity bottleneck link higher time bfind necessarily worse throughput probed bfind roughly similar achieved tcp connection capacity bottleneck link low bfind probes aggressively tcp capacity higher bfind probe aggressively table show results performance bfind presence similar bottlenecks path topology figure results show bfind identifies links bottleneck output non-deterministic investigate bfind ability detect bottlenecks multiple links exist path slightly modified topology figure identical bottlenecks path deliberately set slightly higher capacity setting capacity bottleneck link location capacity mbps setting capacity mbps setting bfind output time bfind output time close hops middle hops hops table performance bfind presence slightly bottlenecks table shows hops identified bfind bottleneck configurations figure bandwidth hops path chosen slightly higher bandwidth reported bfind number flows setting bfind output setting bfind output figure bfind interaction competing long-lived tcp flows figures plots bandwidth reported bfind topology settings competing long-lived tcp flows bottleneck hops constrained mbps bottleneck link hops cases slightly higher capacity mbps setting capacity link chosen mbps results experiments shown table cases bfind correctly identifies hop bottleneck link similar capacity constrained link hop time 
detection necessarily worse show results demonstrating interaction bfind competing long-lived tcp traffic simulations single bottleneck topology figure location mid bottleneck hop eliminated cross traffic hop started long-lived tcp flows routerand routersuch total bandwidth achieved tcp flows mbps point time started bfind router probe capacity bottleneck link hop notice setting bfind report capacity mbps raw capacity mbps setting report mbps figure plot bandwidth reported bfind setting function number tcp flows setting bandwidth reported bfind lower mbps indicating bfind undesirable interactions competing tcp traffic setting bandwidth bfind mbps destination node path length pathload report pipechar report bfind report cmu-pl mbps mbps mbps princeton-pl mbps mbps mbps ku-pl mbps mbps hop mbps hop pittsburgh-node mbps mbps hop mbps hop fnsi net mbps hop mbps hop net mbps hop mbps hop table bfind validation results statistics comparison bfind pathload pipechar long show bfind competes fairly long-lived tcp traffic bfind unfair rtt-proportional fairness sense wide-area tests present results limited set wide-area experiments evaluate bandwidth estimate bottleneck location accuracy bfind validate bandwidth estimate produced bfind compare pathload widelyused bandwidth measurement tool pathload estimates range bandwidth path nodes measurements end path control end-hosts validate bottleneck location estimation bfind compare pipechar operates similarly tools pathchar pchar pipechar outputs path characteristics node arbitrary node internet hop path pipechar computes raw capacity link estimate bandwidth link utilization hop identified bandwidth bottleneck link output pipechar compare link identified bfind compare bandwidth estimates output bfind pipechar experiments perform transfers machine located commercial data center chicago large collection destinations destinations nodes planetlab infrastructure control ends path probing destinations destinations random routers inside isps probing path destinations control destination end path total probe destinations sample results tests presented table machines belong planetlab infrastructure fourth machine located pittsburgh attached source host located chicago area data center hop number bottleneck found shown parentheses note bfind limits maximum sending rate identify bottlenecks high capacity table case secs maximum execution time insufficient bfind probe mbps rest results show bfind consistently outputs location bandwidth pathload pipechar performed initial cross-validation approach checking planetlab sources metro area attached upstream isp identify bottleneck links probing destination addresses selected section los angeles metro area found sources ucsd ucla ucsb isi identify similar bottlenecks paths destinations cases bottlenecks located access network calren paths identical access network metrics reported addition bandwidth latency measurements post-process bfind output report ownership location internet bottlenecks classify bottlenecks based ownership bottlenecks lie isps classify tier owning isp isps classify tiers isps end bottleneck identify isp owning endpoint link whois servers radb ripe routing registries classification based latency bottleneck links classify bottlenecks levels latency low latency medium high rough classification chose classes correspond links pop links connecting smaller cities larger pops long-haul links paths naps classify path categories bottleneck reported bfind bottleneck nap bottleneck interested non-access bottlenecks finally present cumulative distribution capacity bottlenecks category results period weekdays ran bfind source destination sites experiments conducted est weekdays tests identified large number non-access bottleneck links paths path properties describing properties bottleneck links present important characteristics measured paths figures summarize features paths planetlab paths probed bfind completed bottleneck found limit send rate reached paths tierpaths tierpaths tierpaths tiernormalized number bottleneck links tier links tier links tier links tier links paths tierpaths tierpaths tierpaths tiernormalized number links intra-isp bottlenecks intra-isp links paths tierpaths tierpaths tierpaths tierfraction link types relative proportions bottleneck links links figure relative prevalence intra-isp bottlenecks graph shows average number bottlenecks kind appearing inside isps classified path type graph shows total number links bottleneck kind appearing paths considered left bar shows average number links shows average number unique links graph shows relative fraction intra-isp bottlenecks links types left bar average path composition links bar sites classified paths isps tier y-axis plot normalized number links total number links encountered type divided total number paths class path class pair bars left bars graphs show average properties paths bars show average number unique links path class adds measurements number significantly actual link counts factor links sources destinations probed paths double-counted links bias measurements paths tierpaths tierpaths tierpaths tiernormalized number bottleneck links tier -tier tier -tier tier -tier tier -tier tier -tier tier -tier tier -tier tier -tier tier -tier tier -tier paths tierpaths tierpaths tierpaths tiernormalized number links bottlenecks peering links peering links paths tierpaths tierpaths tierpaths tierfraction link types relative proportions bottlenecks links figure relative prevalence peering bottlenecks graph shows average number bottlenecks kind appearing isps classified path type graph shows total number links bottleneck kind appearing paths considered left bar shows average number links shows average number unique links graph shows relative fraction peering bottlenecks types left bar average path composition links bar bottlenecks paths present information unique links describing average path properties note figure shows intra-isp links figure shows peering links characteristics entire paths evident examining figure shows average path planetlab site tierdestinations traversed links inside tierisps tierisp links anda tierlinks figure illustrates location peering links shows paths traversed tierto tierpeering links tierto tierlinks tierto tierlinks tierto tierlinks small number peering links total average path length paths tierisps sum bars hops similar bars tiertier- tierdestinations show breakdown paths clear trend total path length lower tier destinations longer tieraverage length hops tieris tieris tieris important feature number link types make typical paths class expected definition tiers greater diversity hops tiers paths lower tier destinations paths tierdestinations significant proportion types peering intra-isp links summarize find links involving tierisps intra-isp links peering links form significant fractions typical paths measured find typical paths fewer peering links intra-isp links locations bottlenecks figures describe types bottleneck links found paths destinations belonging tiers left bars graphs show probability identified bottleneck link type based observations figure bottleneck links paths tiernetworks consist links inside tierisps time tierlinks time tier links time bottlenecks tierisps cases figure peering links types account bottlenecks tierpaths time tierto tierlinks appearing types peering bottleneck links graphs approximately tierpaths measured bottleneck identify bottlenecks capacity greater mbps figures show breakdown links averaged type path intra-isp peering links comparing heights components left bars indication prevalence type bottleneck link left bar relative appearance paths bar figure appears lower-tier intra-isp links path bottlenecks 
greater proportion appearance paths figure shows tierlinks make bottlenecks tierdestinations account links paths note bars figure show number unique bottlenecks links observed set left bars unique bottlenecks paths tierdestinations figure notice significant difference proportion tierbottleneck links examination discovered planetlab sites connected internet tierisp isp links bottlenecks paths leaving planetlab site generally figure lower-tier intra-isp links bottlenecks frequently expect based appearance links paths similar examination figure reveals details properties bottlenecks peering links figure shows tierto tierpeering links bottlenecks frequently expected proportion paths peering links tiertier- tierisps bottlenecks frequently expected compare proportion tierto tierpeering bottlenecks proportion links path length paths tierand paths tierlooking figures observe additional properties bottleneck links total path lengths hops adding heights bars figures hops links isps bottlenecks paths equally split intra-isp links peering links comparing height bars figures suggests bottleneck link path equally interior isp isps number peering links traversed smaller likelihood bottleneck peering links higher fact bottleneck path equally lie inside isp isps surprising important trend percentage paths identified bottleneck link grows paths lower-tier destinations paths tierdestinations bottlenecks paths tiers percentages note paths tierappear fewer intra-isp bottlenecks paths tierthis peering links traversed tierpaths introduce greater constraint bandwidth summarize found wide-area bottlenecks roughly equally split intra-isp peering links find bottlenecks prevalent networks lower isp hierarchy bandwidth characterization bottlenecks previous section location relative prevalence observed bottleneck links section discuss properties bottlenecks specifically analyze bandwidth bottlenecks identified bfind figure illustrates distribution bandwidth bottleneck links observed parts network cdfs paths traversed mbps bandwidth recall bfind limited measuring bottlenecks mbps due hop network limitations figure shows bottleneck speeds observed intra-isp links tierand tierisp links clear advantage terms bottleneck bandwidth tierisp bottlenecks fact tierbottlenecks cumulative frequency estimate bottleneck bandwidth mbps tier tier tier tier cumulative frequency estimate bottleneck bandwidth mbps tier -tier tier -tier tier -tier tier -tier intra-isp tierpeering cumulative frequency estimate bottleneck bandwidth mbps tier -tier tier -tier tier -tier lower tier peering figure capacity bottleneck links graph corresponds bottlenecks isps graphs show distribution capacity bottlenecks peering links involving tier isps peering links involving tier isps show distributions bottleneck links tiers tiers small number identified offer higher capacity tierbottlenecks surprising result links tierisps hand exhibit limited bandwidth distribution expected figures distribution bottleneck bandwidth peering links tierto tierpeering links constrained indicating links largest network providers provisioned compared links lower-tier networks find surprisingly tierand tierlinks exhibit similar characteristics peering links tiernetworks figure peering links tierand tierare significantly tierto tierlinks figure bottleneck peering links involving networks low hierarchy provide significantly capacity expected illustrated bandwidth distributions tierto tierand tierto tierlinks summary bottlenecks involving tierisps fairly well-provisioned highest capacity found bottlenecks involving tierisps similar bandwidths involving tierisps paths tierpaths tierpaths tierpaths tiernormalized number bottleneck links high lat peering high lat intra-isp med lat peering med lat intra-isp low lat peering low lat intra-isp paths tierpaths tierpaths tierpaths tiernormalized number links bottleneck links links paths tierpaths tierpaths tierpaths tierfraction link types relative proportions bottlenecks links figure relative prevalence bottlenecks latencies graph shows average number bottlenecks classes latencies classified occurring isps occurring inside isps graph shows actual number links bottleneck kind appearing paths graph shows relative fraction bottleneck links latency types left bar average path composition links bar latency characterization bottlenecks section analyze latency bottlenecks explore correlation high-latency links relative likelihood bottlenecks figure similar figures figure shows latency characteristics paths paths tierdestinations average low-latency intra-isp low latency peering medium latency intra-isp medium latency peering high latency intra-isp high latency peering links general path types high proportion low-latency hops intra-isp peering high-latency intra-isp hops indicative single long-haul link average paths measured high latency peering links occur practice planetlab sites isp pop city result link site isp characterized peering link latency exceeds figure illustrate prevalence bottlenecks latency observe high-latency peering links bottlenecks appearance paths observed paths tierdestinations links bottlenecks account links suggests high-latency peering link encountered path bottleneck high latency intra-isp links hand overly bottlenecks bottlenecks hops paths tierin general figure suggests peering links higher likelihood bottlenecks consistent earlier results holds low medium high-latency peering links paths medium latency peering links account significant proportion bottlenecks types paths low-latency peering links paths lower tiers tierand tierhave high likelihood bottlenecks compared paths tierand tierdestinations recall figures lower-tier peering bottlenecks bandwidth summarize find high-latency intra-isp links overly bottlenecks opposite true high-latency peering links find peering links higher likelihood appearing bottlenecks wide-area paths bottlenecks public exchange points present study bottlenecks paths public exchanges figure tested paths public exchange points measured paths bottleneck link bottlenecks exchange point contrast expectation exchange point bottlenecks identified paths interesting probability bottleneck link located exchange contrast figures show type link intra-isp peering responsible larger percentage bottlenecks paths exchange points paths non-access bottlenecks bottlenecks exchange point cumulative frequency estimate bottleneck bandwidth mbps nap links relative prevalence bandwidth distribution figure bottlenecks paths exchange points table left shows relative prevalence bottleneck links exchange points figure shows distribution capacity bottleneck links exchange points measurement caveats summary observations implications key results study summarized table study yields number interesting unexpected findings characteristics wide-area bottleneck links find substantial number bottleneck links isps bottlenecks found located inside isp networks conventional wisdom wide-area bottlenecks confined peering locations economic incentive isps carefully manage load links share neighbors addition observed low latency links isps constrain bandwidth small significant probability observations provide guidance issues choosing access isp optimizing routes network discuss issues context empirical findings discuss caveats measurement methodology critique measurement methodology describe shortcomings approach approximate measurement typical paths choose representative set network paths figure bottlenecks tiers paths tierdestinations comparable bottlenecks exchange points respect non-access bottlenecks equally links isps peering links isps likelihood existence bottleneck increases paths lower tier isps internal links lower tier isps bottlenecks greater frequency presence typical paths high-latency peering links bottlenecks paths high-latency intra-isp links hand overly bottlenecks interior peering bottlenecks tierand tierisps exhibit similar capacity hen bottleneck found paths public internet exchange likelihood bottleneck lying exchange paths high proportion low-latency links interior peering roughly high-latency interior link table properties wide-area internet bottlenecks summary key observations wide-area bottlenecks set paths exhaustive diverse location network connectivity test nodes usa-centric international sources destinations measure international network connectivity route significant impact 
measurements internet route frequently difficult bfind saturate path detect bottleneck similarly multipath routing bfind udp probe traffic traceroutes paths network result bfind detect queuing delays saturating network traffic situations occurred traceroutes tested path reveal multiple routes continuous sampling path traceroute bfind test observe routing problems occurring frequently consistent recent results showing internet paths tend stable hour timescale processing time routers generate traceroute icmp responses impact measurement queuing delay bottlenecks network researchers noted icmp error processing typically router slow processing path takes longer packet forwarding addition routers pace icmp processing order avoid overwhelmed delays reported traceroute artificially inflated recent work shown slow path fast path differences affect traffic measurement tools practice typically observed icmp processing delays order timescales accurate bottleneck detection address allocation skew results rely address reported routers response traceroute probes determine ownership peering arrangements router owned isp allocated address peer isp address space make configuration convenient situations link classification erroneously identify incorrect link hop peering link isps common point-to-point links private peering situations separate address allocations public exchanges eliminate problem reduce occurrence problem significantly finally note results represent empirical snapshot non-access internet bottlenecks focus collecting observations large number paths taking repeated measurements paths extended period approach wider view characteristics locations bottlenecks judge stable persistent locations isps provisioning measurements show clear performance advantage tierisp results show small regional isps tierproviders low-speed connectivity upstream isp irrespective isp size addition networks exhibit performance bottlenecks considered reflection impact economics network provisioning assume isps lower hierarchy inclined over-provision networks typical customer traffic volume require result clear disadvantage tierisp high-speed connectivity trade-offs tierand tiernetworks clear paths tierdestinations larger percentage bottleneck links tierpaths observed tierand tierbottlenecks show similar characteristics terms capacity tierbottlenecks intra-as peering links performing slightly cases explained conjecture tierases virtue higher degree reachability carry larger volume traffic relative capacity compared tierases extending hypothesis conclude stub network desires wide-spread connectivity isp choosing tierisp beneficial choice economically terms performance assuming connectivity tierisps expensive route selection improved internet performance measurements show large fraction internet paths measurements suffer performance bottlenecks internet rich topology numerous alternate paths reasonable amount bandwidth exist arbitrary endpoints remaining paths measured capacity mbps true non-access links irrespective location latency observations chapter naturally lead key question avoid wide-area bottlenecks improve internet performance leveraging existing routing protocols considerable work load-sensitive routing traffic extend ases address question chapters chapter measurement-based analysis multihoming internet constituted hundreds distinct isps large cities world tens isps compete provide internet connectivity options home users businesses alike pricing offered connectivity speeds isps differ crucial aspect performance connectivity provided isps parts internet vary substantially time destination involved choice isp due variations traffic volumes networks neighboring isps networks due traffic engineering isps differ performance offer internet destinations time similarly depending isps internet destinations connected isp versus communicate specific destination mentioned chapter end-network enterprise content provider buys internet connectivity single isp restricted paths provided isp internet destinations general isp bgp path destination isp networks upstream face performance bottlenecks availability problems end-network receive poor download speed response times stay disconnected key internet destinations extended periods time end-network subscribes isps approach popularly referred multihoming enjoys modest improvement number routes destination isp bgp path yielding distinct paths destination end-network intelligently switch isps based time day internet destination best-performing isp transfer approach internet connectivity significantly improve internet performance reliability subscriber networks general refer approach multihoming route control illustrated figure technical definition multihoming route control technique end-network buys connections multiple isps intelligently schedules traffic isp connections improve internet transfer speeds response times reliability multihoming traditionally employed large end-networks achieve coarse-grained route control primary-backup mode figure multihoming figure shows route control set-up figure shows traditional multihoming set-up resilience internet service interruptions set-up multiple isp connections employed primary-backup mode traffic moved isp link failure primary link figure advent expected growth route control devices promises subscribers leverage benefits multihoming route control products leveraged optimize web performance transfer speeds bandwidth availability fine time-scales multiple isp links marking statements tangible benefits end-networks expect products services chapter goal quantify extent subscriber end-networks benefit employing multihoming route control mechanisms focus improvements internet performance reliability conceptually approach network subscriber major metropolitan area evaluate relative benefits choosing upstream isps options assume subscriber control end-toend paths isps provide first-hop connectivity internet subscriber traffic scheduled isps collect analyze datasets step-by-step approach quantify performance benefits route control evaluate improvements internet round-trip time rtt performance form multihoming subscriber coarse-grained control isp links data transmission subscriber single isp traffic hour period refer naive multihoming illustrate rest thesis terms multihoming route control multihoming route control interchangeably improvements rtt performance per-connection control traffic set-up subscriber connections isps refer -multihoming finally analyze general notion -multihoming subscriber multihomed isps city establish baseline assume subscriber employ isps switch performing isp instant evaluating performance increased provide insight incremental benefit additional isps quantify rtt throughput improvements -multihoming addition analyze impact choice isps impact time day day week benefits -multihoming quantify reliability benefits -multihoming collect datasets dataset quantifies availability provided multihoming based active probe measurements dataset show multihoming improves availability internet paths estimates availability internet routers data sets comprise measurements conducted servers monitoring nodes deployed akamai large content distribution service provider servers monitors attached diverse set isps nodes connected single isp multiple akamai servers located major metropolitan areas network performance data collected akamai nodes compare performance isps perspectives multihomed subscribers metropolitan areas order compute potential improvements multihoming route control datasets make key assumptions chapter end-network perfect information performance availability routes isps end-network switch candidate isps destination desired end-network easily control isp link traversed packets destined network refer inbound control key observation measurements average multihoming considerably improve performance reliability end-networks terms performance -multihoming situation rtts improved average metro areas study improvements throughput performance average find strong evidence diminishing incremental performance benefits isps added observe increasing added performance reliability comparing optimal multihoming solution random choice isps find random selection degrades rtt performance suggests careful choice isps key achieving potential benefits multihoming chapter outline illustrate performance improvements naive multihoming section section illustrate improvements per-connection control traffic isp connections -multihoming section study improvements due -multihoming present reliability analysis section finally summarize observations study discuss implications section naive 
multihoming rtt performance section study improvements internet rtt performance subscribers employ naive multihoming ideally realize optimal benefits route control subscriber exercise per-flow control isp link per-byte control theory form control poor interactions current tcp implementations contrast naive multihoming subscriber traffic single isp connection interval time hours irrespective destination end interval subscriber decide isp link upcoming interval measurement dataset analysis naive multihoming passive measurement data collected server nodes deployed akamai cities important feature data collection points connected large variety isps multiple metropolitan areas collection points located connected isp akamai servers single metro area stand-ins multihomed subscriber term multihoming emulation refer procedure dataset employ average http turnaround times requests made akamai servers back origin content provider servers figure requests typically initiated akamai server valid object cached retrieve origin server turn-around time http requests time transfer byte request akamai node receipt byte response origin server turnaround time offers reasonable estimate network delay customer content providers cdn large web servers expect servers well-provisioned observed turnaround time constituted network delay delay due web server turnaround times measure averaged hour requests origin content providers collected data hour five-day periods monday january friday january monday january friday january inclusive cdn servers metro area isp origin servers isp isp isp figure naive multihoming akamai servers connected isps city download objects customer origin servers order serve clients data set turnaround times averaged hour retrievals origin servers measurement results compute performance improvements naive multihoming hour compare average turnaround time achieved isp city isp candidate multihoming option subset isps average ratio hours report minimum normalized performance metric minimum candidate options formally compute performance benefits naive multihoming option consisting isps denoted performance -multihoming option city relative performance isps denotes average turnaround time performance isps set hour average turnaround time performance hour carriers sum numerator hours isps average turnaround time statistics logged data set counts number instances small fraction hours average turnaround time data unavailable networks normalized performance metric rank atlanta boston chicago dallas los angeles york orlando san francisco seattle washington normalized performance metric number providers atlanta boston chicago dallas los angeles york orlando san francisco seattle washington ranks isps naive -multihoming relative benefits figure naive -multihoming figure shows -multihoming performance isps city isps ranked performance figure shows diminishing returns -multihoming city figure plot performance metric isps city ranks isp rank city graph shows week data week similar notice cities isps give significantly performance isp seattle times performance isp cities isps provide similar performance figure apparent cities excess isps san francisco evaluating options -multihoming determine naive multihoming option computationally expensive reduce amount computation evaluating -multihoming options performance top isps city chosen based -multihoming performance negligible impact results analysis showed performance top isps virtually indistinguishable performance isps city results omitted figure show potential performance benefits naive -multihoming week data week results similar notice significantly performance -multihoming locations cities performance benefit substantial due single isp providing performance time los angeles benefit naive -multihoming marginally smaller values cities table shows order isps added -multihoming solution york increasing values isp show -multihoming rank performance notice -multihoming solution necessarily comprise -multihoming options isp rank isps added based contribution -multihoming performance isps employed optimal schedule naive multihoming interested isp contribution performance isp rank -multihoming -multihoming performance performance isp isp isp isp isp isp isp isp table rank performance ranks isps -multihoming solutions york order added incremental performance improvement multihoming factor isp usage isp isp isp isp isp isp isp isp multihoming factor isp usage isp isp isp isp isp isp isp isp boston york figure relative utilization isps cities boston york graphs show fraction time isps naive -multihoming solutions city utilized optimal schedule improvement proportional frequency optimal schedule results cities boston york illustrated figure results show contribution performance proportional usage isp york significant fraction time -multihoming solution figure marginal benefit adding isp -multihoming solution figure isp belonging -multihoming solution utilized small fraction time optimal schedule contributes significantly improving performance isp smaller fraction time isp naive -multihoming solution boston figure contribution isp benefit due -multihoming larger isp summarize naive multihoming substantially improve turnaround time performance subscriber networks find contribution isp improvement proportional optimal schedule finally set isps necessarily include individual isps explore issue section -multihoming rtt performance previous section illustrated naive multihoming improve average rtt performance subscriber network illustrate rtt benefits multihoming analysis highlight maximum performance improvements due multihoming arises key limitations dataset rtt performance data averaged content providers duration hour finer-grained control isp links improve rtt performance multihoming improve transfer speeds significantly provide quick failover datasets analyze benefits multihoming subsequent sections analyze active measurement data collected selected akamai server monitoring nodes address drawbacks section setting end-network isp connections illustrate rtt benefits intelligently controlling isps finer time granularity order minutes refer -multihoming measurement dataset analyze -multihoming collect rtt performance statistics geographically distributed akamai monitoring nodes monitoring nodes located major cities multiple nodes city attached upstream isps shown figure minutes nodes download designated objects directly large number content providers akamai customers attempted download performance monitor logs number statistics including http response code turnaround time request successful size object downloaded total response time errors unsuccessful focus turnaround time defined time transfer byte request akamai node receipt byte response origin server turnaround time offers reasonable estimate network delay collected statistics performance monitors downloads made content providers customers akamai data collected thursday january sunday january inclusive content providers top customers akamai akamai network serves largest number bytes perf monitor metro area isp isp selected content providers figure -multihoming akamai performance monitors city connected isps download objects -minute intervals servers belonging content providers measurement results -multihoming measurements dataset compare performance achieved isp link download relative single isp downloads average ratio downloads content providers report normalized performance metric careful compare transactions performance monitors successfully downloaded object roughly time select cities performance monitors giving locations atlanta chicago dallas york rest cities performance monitor monitor nodes cities measure benefits -multihoming employing respective isps formally computation expressed performance isp relative -multihoming denotes turnaround time transfer initiated time monitor node attached isp retrieve object content provider similarly isps turnaround time transfer city time content provider sum numerator pairs transfer 
logged time atlanta chicago dallas york performance relative -multihoming isp isp atlanta chicago dallas york turn-around time isp -multihoming isp pct pct pct potential benefit variability benefits atlanta chicago dallas york isp usage isp isp relative usage isps figure -multihoming evaluation average benefits shown graph shows median percentile turnaround times isp -multihoming relative usage isps optimal schedule shown content provider isps function simply counts total number pairs notice optimal occurs isps consistently denotes maximum improvement performance multihoming isps -multihoming compared performance isp results performance benefits -multihoming shown figure isps isps cities tierisps cities -multihoming offers performance benefits albeit varying degrees chicago isp optimal performance cities minimum performance benefit -multihoming average figure illustrates absolute rtt improvement median percentile turnaround time note -multihoming uniformly improves maximum turnaround times effect median minimum performance extent improvement varies cities figure shows fraction time isps performance chicago time isps cities roughly equally optimal schedule summarize -multihoming showed fine-grained control isp connections result significant improvements subscriber network isp connections equally optimal schedule traffic -multihoming previous sections provided examples benefits multiple isp connections due limitations datasets number general questions remain unanswered multihoming improve transfers speeds performance improvements depend destination time-of-day day-of-week impact exact choice number isps subscriber performance section address questions comprehensive active measurements rtt throughput performance large testbed consisting nodes belonging server infrastructure akamai cdn similar methodology emulate multihoming scenario selecting nodes metropolitan area singly-homed isp collectively stand-in multihomed network nodes testbed span cities continental averaging nodes city connected commercial isps sizes nodes chosen avoid multiple servers attached isp city list cities tiers isps shown figure tiers isps derived work geographic distribution testbed nodes illustrated figure emulate multihomed networks metropolitan areas isps atlanta bay area boston chicago dallas los angeles york seattle washington describe data collection methodology present key measurement observations order present improvements rtt throughput performance -multihoming explore improvements due multihoming skewed destinations time day day week finally explore impact suboptimal choice isps observed subscriber performance city isps tier atlanta bay area boston chicago columbus dallas denver des moines houston los angeles miami minneapolis york seattle louis tampa washington testbed isps node locations figure testbed details cities distribution isp tiers measurement testbed listed geographic location shown area dot proportional number nodes region data collection draw observations datasets collected testbed data set consists active http downloads small objects measure turnaround times pairs nodes minutes collect turnaround time samples pairs nodes testbed including city data set throughput measurements active downloads objects set nodepairs downloads occur minutes node-pairs throughput simply size transfer divided time receipt bytes response data server source notice reflect steady-state tcp throughput path testbed nodes part akamai production infrastructure limit frequencies all-pairs measurements collected ensure active probes pairs nodes observe similar network conditions scheduled occur interval round-trip time data set minute interval throughput data set ensure individual node involved transfer time probes contend bandwidth source destination network transfers interfere internet testbed nodes located routes probe observations -centric round-trip time data set collected thursday december wednesday december throughput measurements collected thursday tuesday days inclusive -multihoming improvements understand performance benefits -multihoming adopt similar methodology section download compare turnaround time achieved isp city isp candidate multihoming option average ratio transfers testbed machines report minimum normalized performance metric minimum multihoming options compare transactions simultaneous successful transfers isps formally denotes turnaround time transfer testbed node time isps city -multihoming option turnaround time isps set compute rtt performance benefit option normalized performance number providers atlanta bay area boston chicago dallas los angeles york seattle washington normalized performance number providers atlanta bay area boston chicago dallas los angeles york seattle washington turnaround time throughput figure -multihoming benefits figure plots improvement web turnaround times multihoming figure plots improvements throughput sum times transfers occur isps city node number time instances compute throughput benefits similar fashion slight difference definition rtt throughput metrics arises fact interested multihoming provide lower rtts higher transfers speeds figure plot normalized rtt throughput benefits -multihoming function number isps key facts apparent figure average rtt improves dramatically subscriber set isps relative single isp normalized performance metric lowered reflecting average improvement rtts intuitively occurs well-chosen isp potentially double diversity paths destinations improved choice paths helps end networks avoid performance problems single isp paths strong evidence diminishing returns isps marginal benefits additional isps small intuitively occurs fourth isp provide additional diversity well-chosen set isps terms throughput multihoming improves performance relative single isp figure notice diminishing returns performance isps frac destinations diff difference turnaround times atlanta bay area boston chicago dallas los angeles york seattle washington frac destinations diff difference throughputs mbps atlanta bay area boston chicago dallas los angeles york seattle washington turnaround time throughput figure per-destination performance figures plot absolute improvements rtt throughput performance -multihoming relative -multihoming unrolling averages presented averages performance improvements multihoming route control section present underlying distributions performance improvements goal understand averages skewed destinations source city measurement samples multihoming offers significantly performance single isp time-of-day day-of-week effects performance destination figure show distribution average difference -multihoming path path single isp point represents destination cities illustrate subscriber seattle -multihoming improves average rtt destination destinations destinations los angeles improvement due multihoming dramatic destinations improvement average rtt due multihoming key point notice cities exist destinations multihoming offer significantly improved rtt performance figure distribution average throughput difference multihoming path single isp throughput difference mbps destinations note destinations difference excess mbps rtt observations imply transfer speeds destinations substantially higher subscriber multihomed versus statistics figures plot average median percentiles difference rtt throughput -multihoming -multihoming figure median rtt difference fairly small median rtt differences percentile difference higher roughly greater percentile throughput differences figure significant mbps time confraction paths difference difference turnaround times percentile median percentile fraction paths difference difference throughputs mbps percentile median percentile turnaround time throughput figure underlying distributions figure showing median percentile percentile difference source-destination pairs figure plots rtt figure plots throughput pessimistic estimate fraction paths difference difference turnaround times morning noon afternoon evening weekends nights fraction difference turnaround times monday tuesday thursday friday weekend time-of-day effects day-of-week effects figure time day effects figures plotting impact time-of-day figure day-of-week pessimistic figure rtt performance times edt sidering median 
throughput differences significant fraction greater mbps observations suggest multihoming improves performance transfers modest amounts performance small significant fraction improved significantly carefully scheduling traffic isp links time-of-day day-of-week effects effects hourly daily network usage patterns relative performance -multihoming -multihoming expected -multihoming perform worse peak periods figure examine time-of-day effects average difference round-trip times notice rtt performance improvement show correlation time day improvement due careful route selection minimal evenings weekends differences pronounced remaining time-periods examine daily patterns determine differences greater days week figure correlation performance improvements days week significant expected normalized performance number providers atlanta bay area boston chicago dallas los angeles york seattle washington normalized performance number providers atlanta bay area boston chicago dallas los angeles york seattle washington performance random choice performance poor choice figure impact sub-optimal choices graph shows expected rtt performance metric random -multihoming option graph shows performance worst -multihoming option normalized performance number providers optimal random worst top normalized performance number providers optimal random worst top san francisco los angeles figure choice isps figures show rtt performance isp selection policies san francisco los angeles observe improvements inferior weekends improvements days week substantially impact choice isps figure illustrate impact choosing sub-optimal set isps -multihoming solution assume choice isps subscriber isp set transfers comparing figures rtt performance metric due random choice isps higher chicago difference optimal random choices isps substantial higher values figure show performance worst -multihoming option poor choice upstream isps result performance bad optimal choice compare chicago figures multihoming offers potential significant performance benefits crucial carefully choose set isps finally explore relative rtt performance strategies selecting isps figure compares rtt performance metric optimal random worst-case choice multihoming isps subscriber san francisco addition show rtt performance metric case subscriber multihomes top individual isps terms average rtt performance selecting top individual isps perform random choice similar rtt performance optimal choice informed selection isps simply choosing top yield rtt performance average figure show similar set results los angeles figure case choosing top isps yields identical rtt performance optimal choice isps summary find -multihoming substantially improve rtt throughput performance subscriber networks additional benefit employing isp connections isps chosen carefully realize potential benefits view good heuristic subscriber network select top individual isps serving city resilience path failures end networks employing single isp connection paths provided isps maintain connectivity internet destinations result failures inside isps networks inevitably result connectivity disruptions end networks past studies shown failures minutes severely impact end-user internet access experience end-networks vastly improve resilience service interruptions relying multihoming route control monitoring availability paths isps cleverly scheduling traffic isps paths end-network substantially reduce connectivity outages section analyze distinct datasets collected testbed section figure quantify improvements resilience multiple isp connections focus special case subscriber employs fewer isps multihoming active measurements path availability approach perform two-way icmp pings nodes testbed figure ping samples collected node-pairs day period january january probes minute timeout response received ping deemed lost path considered failed consecutive pings minute source destination lost measurements derive failure epochs path epoch begins fraction paths availability availability percentage multihoming -multihoming -multihoming figure end-to-end failures distribution availability end-to-end paths multihoming isps -multihoming cases isps city based rtt performance failed probe times ends successful reply subsequent probe epochs periods time route source destination failed method deriving failure epochs limitations firstly wait consecutive losses detect failures minutes result analysis characterize ability multihoming avoid short failures ping packets dropped due congestion path failure measurements easily determine losses due failures due congestion finally destination reply icmp echo reply messages causing record loss mitigate factor eliminate paths fraction lost probes analysis due reasons path failures identify considered over-estimate number failures lasting minutes longer failure epochs end-to-end path compute availability defined length failure epoch path length measurement interval days total sum failure epochs considered observed downtime path figure show cdf availability paths measured multihoming multihoming employed paths availability shown figure fewer thana paths availability route control multihoming significantly improves availability end-to-end paths shown -multihoming availability distributions -multihoming combinations isps providing rtt performance city route control isps paths originating cities studied availability minimum availability paths higher multihoming paths cities respective destinations experience observable failures day period availability isps availability improved slightly path availability analysis vast majority paths fail short measurement period approach statistics derived previous long-term measurements ascertain availability feamster collected failure data active probes nodes ron testbed approximately seconds months consecutive probes path lost traceroute triggered identify failure appeared router reachable traceroute long lasted routers traceroute data labeled number classified border internal routers subset measurements paths non-dsl nodes collected june march infer failure rates testbed approach drawbacks discuss obtain view longer-term availability benefits route control direct measurements testbed estimate availabilities router classes fraction time correctly forward packets classify routers ron testbed traceroutes tier method role border internal router note inference failure location based router location actual failure link router attached responding router availability estimate computed total time failures attributed routers classa observed total number routers classa observed path day estimate availability router attached link classa words fraction time unavailable aggregate failure time attributed router classa divided total time expect observe router classa path estimates router classes shown table apply availability statistics derived ron data set identified classified routers paths nodes testbed performed traceroute measurements approximately minutes nodes cdn testbed december dec analysis observed path pair nodes dataset included single successful traceroute day assumed active probes route day tier location availability internal border internal border internal border internal border internal border table availability router classes estimated availability routers links classified tier location border router link cases path time router availabilities estimated ron data set estimate availability routes testbed multihoming estimating simultaneous failure probability multiple paths important identify routers shared paths failures paths accurately correlated determining router aliases difficult paths testbed conservatively assumed routers end paths destination identical belonged sequence ases router-level paths destined common node map ases assume routers common reality routers failures routers correlated heuristic identify identical routers paths originating source node assume failures independent aspects approach introduce biases analysis routes ron testbed paths representative routes testbed ensure similarity paths well-connected ron nodes good fraction ron nodes belong home dsl 
users addition observed availabilities router classes ron dataset vary substantially months difference time frames impacted results routers links ron data set fail frequently bias availability router type traceroutes initiated failure detected accurately estimate failure rates individual routers questionable assign failures reachable router traceroute unknown found isps block responses udp probe packets alias resolution tools ally chicago wash los angeles york bay area seattle average availability percentage city multihoming -multihoming figure availability comparison comparison availability averaged paths originating cities single isp -multihoming isps chosen based round-trip time performance router path failed availabilities estimate failures observed router type figure compares average availability multihoming route control paths originating cities destinations testbed expected active measurements average availability paths testbed high direct paths -multihoming improves average availability cities hours availability year availability primarily upper bounded availability routers links immediately destination shared paths converge summary route control improve availability end-networks addition performance failures fully eliminated availability offered route control good practical purposes summary observations implications chapter studied potential improvements internet performance reliability multihoming key observations study outlined table study establishes multihoming route control significantly improve internet rtts throughputs reliability end networks isp connections marginal benefit employing additional isps minimal important make informed choice isps realize potential benefits multihoming good strategy end network multihome top individual isps serving city evaluation multihoming route control assumed network destinations singly-homed restriction observed significant performance improvements cases destination network multihomed destination multihomed source network administratively related branch offices parent organization cases performance experienced end multihoming route control lower internet rtts relative single isp addition multihoming yield higher transfer speeds measurements show substantial fractions transfers major cities internet destinations experience improvement rtts mbps improvement transfer speeds route control terms reliability observe multihoming isps eliminates failures experienced singly-homed network strong evidence diminishing returns improvements internet performance marginal isp connections careful choice isps important realize potential benefits multihoming route control poor uninformed choice isps yield rtts double rtts optimal choice cities study employing top individual isps multihoming roughly performance improvements employing set isps table benefits multihoming route control summary key observations multihoming communicating order heavily optimized co-ordinating choices isps ends connect ends connected set tierisp network paths hops long coordinating choice routes ends decided isp connection data transfer transfer traverse single isp domain avoiding inter-domain policies taking shortest-ip-hop route notice internet routing isp subscriber bgp path destination employing multihoming choosing good set isps end-network enjoys slightly richer selection bgp routes destination route isp destination choose informed manner effect observations chapter shown routing flexibility end-networks improved moderate amounts multihoming route control internet performance reliability significantly improved contributions measurement study multihoming simply summarized improving routing flexibility endpoints moderate amounts internet performance reliability vastly improved chapter flexibility sufficient enabling routing flexibility end-networks overlay networks result superior performance reliability chapter comparison overlay routing multihoming route control typical model enterprise internet access today enterprise buy internet connectivity isp route traffic isp model isp determines enterprise data routed internet destination involved connected isp enterprise isp employs border gateway protocol bgp route traffic destination past analyses bgp highlighted inefficiencies functioning routes enabled bgp yield sub-optimal rtts transfer speeds failures bgp resulting events router malfunction require unacceptably long reconvergence stabilization times aptly limitations conventional internet routing based border gateway protocol bgp held responsible failures poor performance end-to-end internet transfers number studies shown underlying connectivity internet capable providing greater performance resilience endpoints receive studies detour ron demonstrated overlay routing bypass bgp policy-driven routing enables quicker reaction failures improved end-to-end performance approach endpoints route traffic intermediate overlay nodes deployed internet helps endpoints bypass default routes determined bgp avoid performance availability problems routes chapter question overlay routing required make underlying connectivity intelligent selection bgp routes endpoint sufficient specifically chapter compare contrast overlay routing multihoming route control noted previous chapter multihoming route control enables end-networks intelligently control bgp paths provided multiple isps multihoming require improvements underlying bgp protocol goal answer question benefit terms internet performance resilience overlay routing provide multihoming route control benefit small bgp path selection based multihoming inferior held good end-to-end performance reliability achievable operating completely standard internet routing hand overlays yield significantly performance reliability characteristics conclude bgp fundamentally limited situation important develop alternate bypass architectures overlay routing invent wide-area routing protocols extensive active downloads traceroutes akamai cdn servers testbed earlier section compare multihoming route control overlay routing terms key metrics round-trip delay throughput availability measurement results suggest route control employed multihoming offer performance similar overlays terms round-trip delay throughput average round-trip times achieved bgp paths selected ideal route control mechanism isps overlay paths selected ideal overlay routing scheme multihomed isps similarly throughput overlay paths bgp paths show marginal difference rtt performance attributed overlay routing ability select shorter paths difference reduced isps implement cooperative peering policies comparison end-to-end path availability provided approach shows multihoming route control overlay routing significantly improve availability end-to-end paths chapter outline section chapter provide overview approach comparing overlay routing route control section analyze rtt throughput performance differences route control overlay routing reasons differences section contrast end-to-end availability offered schemes section summarizes observations chapter discusses implications results presents limitations study terminology objective understand modest flexibility multihoming coupled route control offer end-to-end performance resilience similar overlay routing order answer question evaluate idealized form multihoming route control driven key assumptions outlined chapter perfect information isp performance lowoverhead shifting traffic isps mechanisms inbound route control ensure fair comparison study similarly agile form overlay routing endpoint timely accurate knowledge performing end-to-end overlay paths frequent active probing overlay link makes select switch overlay path instant size overlay network small nodes frequent probing infeasible larger overlays compare overlay routing route control respect degree flexibility paths end-network general flexibility represented number isps technique end-network route control notion multihoming chapter evaluate performance reliability end-to-end candidate paths induced combination isps overlay routing introduce similar notion -overlays number isps endpoint end-to-end overlay path words simply overlay routing presence isp connections comparing -multihoming -overlays report results based combination isps performance rtt throughput destinations figure illustrates route control overlay configurations clarify terminology chapter shows case conventional bgp routing single default isp -multihoming figure depicts endpoint route control isps -multihoming overlay routing single first-hop 
isp -overlay shown figure figure shows case additional first-hop flexibility -overlay routing configuration comparing overlay routing route control seek answer key questions fraction end-to-end paths overlay routing outperform multihoming route control terms rtt throughput cases extent performance difference reasons performance differences overlay paths violate inter-domain routing policies achieve good end-to-end performance route control achieve path availability rates comparable overlay routing latency throughput performance present results latency throughput performance benefits route control compared overlay routing provide details rtt throughput comparison techniques present key results order compare -multihoming -overlays similar analysis compare benefits -overlay routing relative default paths single isp compare multihoming -overlay routing quantify benefit endsystems greater flexibility choice bgp routes multihoming relative power -overlays contrast -multihoming -overlay routing understand additional benefits gained allowing end-systems arbitrary control end-to-end paths relative multihoming finally examine underlying reasons performance differences end-network isp bgp direct paths -multihomed network route controller single isp bgp routing multihoming isps -multihoming -multihoming overlay paths overlay paths -multihomed overlay routing single isp overlay routing overlay routing -overlay multihoming -overlay figure routing configurations figures show -multihoming -multihoming overlay configurations shown comparing rtts throughputs comparison overlays multihoming based observations drawn rtt throughput datasets earlier section rtt comparison rtt data set minute measurement interval build weighted graph testbed nodes edge weights rtts measured node-pairs floyd algorithm compute shortest paths node-pairs estimate rtt performance -multihoming destination computing minimum rtt estimates direct paths isps city destination node rtt measurements akamai cdn nodes representing isps destination node estimate performance -overlay routing compute shortest paths isps destination node choose minimum rtts paths note prune direct overlay edge graph performing shortest path computation result shortest overlay path nodes direct path chosen bgp comparison limited direct versus indirect paths direct overlay paths contrast comparison past studies direct path indirect path throughput comparison throughput similarly construct weighted directed graph testbed nodes minutes object download frequency edge weights throughputs transfers throughput simply transfer size divided completion time compute throughput performance -multihoming -overlay routing similar rtt performance computation notice computing overlay throughput performance non-trivial complicated problem estimating end-to-end throughput tcp transfer indirect overlay paths approach round-trip time throughput measurements individual overlay hops compute underlying loss rates standard model tcp throughput paths measure observe loss causing transfers remain slow-start phases small connection latency model developed original model tcp throughput accurately characterize short flows lossless transfers model throughput data set measure loss rate median percentile loss rates paths measured sum round-trip times combination loss rates individual hops end-to-end round-trip time loss rate estimates employ model compute end-to-end overlay throughput transfers combine loss rates individual links follow approach combination estimation functions optimistic throughput estimate maximum observed loss individual overlay hop overlay path estimate end-to-end overlay loss rate assumes typical maximum segment size mss transfers bytes initial congestion window size segments initial delayed ack timeout transfer city -multihoming -overlay atlanta bay area boston chicago dallas los angeles york seattle wash average fraction overlay paths hops number overlay hops atlanta bay area boston chicago dallas los angeles york seattle washington -multihoming rtt -overlay path length relative -overlays figure round-trip time performance average rtt performance -multihoming relative -overlay routing tabulated cities graph shows distribution number overlay hops -overlay paths direct path overlay hop tcp sender primarily responsible observed losses pessimistic combination compute end-to-end loss rate sum individual overlay hop loss rates assuming losses link due independent background traffic network due complexity computing arbitrary length throughput-maximizing overlay paths indirect paths comprised overlay hops throughput comparison -multihoming versus -overlays compare performance overlay routing default routes single isp -overlay -multihoming goal confirm observations past overlay routing studies note case -overlays overlay path source node traverse intermediate node including nodes located city source round-trip time performance figure shows rtt performance -multihoming relative -overlay routing performance metric y-axis reflects relative rtt end-to-end loss rate overlay links independent loss rates negligible measurements ignore city pessimistic estimate optimistic estimate throughput metric fraction throughput metric fraction indirect paths indirect paths atlanta bay area boston chicago dallas los angeles york seattle wash average table throughput performance table shows tcp transfer performance -overlay routing relative -multihoming estimation functions shown fraction measurements -overlay routing selects indirect path city -multihoming versus rtt -overlays averaged samples destinations difference metric represents relative advantage -overlay routing -multihoming notice overlay path direct bgp path performance overlays good direct bgp path table overlay routing improve rtts compared direct bgp routes single isp average improvement observations similar show distribution overlay path lengths figure direct bgp path corresponds single overlay hop notice cities overlay path hops measurements majority rtt performance gains overlay networks realized requiring single intermediate hop average path -overlays coincides direct bgp path measurements average y-axis cities throughput performance table show throughput performance -overlays relative -multihoming pessimistic optimistic estimates -overlays achieve higher throughput -multihoming pessimistic estimate optimistic throughput estimate -overlays achieve throughput table show fraction times indirect overlay path obtains throughput direct path throughput estimation function pessimistic throughput estimate average -overlay routing benefits employing indirect path cases optimistic estimate fraction -multihoming relative k-overlays number providers atlanta bay area boston chicago dallas los angeles york seattle washington k-overlays relative -multihoming number providers atlanta bay area boston chicago dallas los angeles york seattle washington relative rtts throughput pessimistic figure benefits -overlays rtt -multihoming relative -overlays shown throughput pessimistic estimate -overlays relative -multihoming shown summarize -overlays offer significantly round-trip time performance -multihoming throughput benefits lower significant large fraction measurements indirect -overlay paths offer rtt performance direct -multihoming paths -multihoming versus -overlays section compare flexibility offered multihoming route control combination overlay routing default routes single isp -overlays -multihoming figure show rtt performance -multihoming relative -overlays function notice -overlay routing achieves rtt performance multihoming notice rtt performance -overlay routing -overlay routing figure similarly compares throughput performance -overlays relative -multihoming pessimistic estimate overlay routing -multihoming -overlay routing benefit marginal cities rtt throughput summary -multihoming -overlay routing offer performance multihoming terms rtt throughput addition -overlay routing achieves significantly performance compared -overlay routing -multihoming versus -overlays sections provide head-to-head comparison multihoming overlay routing section endpoints flexibility multihoming route control compare resulting performance -overlays figure plot performance -multihoming relative -overlay routing compute average ratio 
rtt throughput destination achieved k-multihoming relative -overlay number providers atlanta bay area boston chicago dallas los angeles york seattle washington k-multihoming relative -overlay number providers atlanta bay area boston chicago dallas los angeles york seattle washington relative rtts throughput pessimistic figure multihoming versus -overlays rtt -multihoming relative -overlays shown throughput pessimistic -overlays relative -multihoming technique average paths city destinations cities time instants valid measurement isps city note cities -multihoming isps rtt throughput cities hold fourth isps simply switched difference throughput performance comparison rtt shown figure performance advantage -overlays cities fact cities bay area chicago -multihoming marginally overlay routing number isps increased multihoming provide shorter round-trip times overlays figure shows relative benefits pessimistic throughput estimate multihoming throughput -overlays cities results similar optimistic computation omitted brevity summary performance advantages -overlays vastly reduced eliminated endpoint allowed greater flexibility choice bgp paths multihoming route control implies multihoming hop essential overcome occasional problems access isp -multihoming versus -overlays previous section evaluated -overlay routing overlay paths start single isp source city section overlays additional flexibility permitting initially route isps source city specifically compare performance benefits -multihoming -overlay routing cities average time instants valid measurement isps cases due limitations data collection infrastructure failed download attempts k-multihoming relative k-overlay number providers atlanta bay area boston chicago dallas los angeles york seattle washington fraction overlay paths hops number overlay hops atlanta bay area boston chicago dallas los angeles york seattle washington relative rtts -overlay path length figure round-trip time improvement round-trip time -multihoming relative -overlay routing function shown show distribution number overlay hops -overlay paths case -overlays overlay path originating source node traverse intermediate nodes including located city source notice performance -overlays good -multihoming overlays direct bgp path question advantage overlays provide multihoming employed source round-trip time performance figure shows improvement rtt -multihoming relative -overlays values average overlays provide rtt performance multihoming solution cities study performance gap multihoming overlays significant figure shows distribution number overlay hops paths selected -overlay routing optimized rtt overlay path coincides -multihoming bgp path cases average cities average -axis recall fraction -overlay routing figure isps links choose overlay routing selects higher fraction direct bgp paths opposed choosing greater number indirect paths afforded multihoming throughput performance figure shows throughput performance -multihoming relative -overlays pessimistic throughput estimation function figure multihoming achieves throughput performance overlays performance improves cities throughput performance -multihoming overlay routing figure show fraction measurements indirect -overlay path offers performance direct -multihoming path pessimistic throughput estimate average fraction notice lower percentage -overlays table summarize employed conjunction multihoming overlay routing offers marginal benefits employing multihoming addition -overlay routing selects larger fraction k-multihoming relative k-overlay number providers atlanta bay area boston chicago dallas los angeles york seattle washington city fraction indirect paths atlanta bay area boston chicago dallas los angeles york seattle wash average throughput improvement fraction indirect pessimistic estimate paths -overlay routing figure throughput improvement throughput performance -multihoming relative -overlays cities shown table shows fraction measurements -overlay routing selected indirect end-to-end path case direct bgp-based end-to-end paths compared -overlay routing unrolling averages presented averages performance differences forms overlay routing multihoming route control section focusing -overlays -multihoming present underlying distributions performance differences paths measure goal section understand averages skewed destinations source city measurement samples overlays offer significantly performance multihoming time-of-day day-of-week effects performance destination figure show distribution average difference -multihoming path -overlay path destination nodes testbed origin cities point represents destination cities average rtt differences destinations notice cities difference greater destinations figure distribution average throughput difference -multihoming path -overlay path pessimistic estimate throughput throughput difference mbps destinations note frac destinations diff difference turnaround times atlanta bay area boston chicago dallas los angeles york seattle washington frac destinations diff difference throughputs mbps atlanta bay area boston chicago dallas los angeles york seattle washington difference difference round-trip times throughputs pessimistic figure performance destination figure cdf difference rtts overlay path direct path paths measured city similarly figure plots cdf difference throughputs pessimistic estimate fraction paths difference difference turnaround times percentile median percentile fraction paths difference difference throughputs mbps percentile median percentile round-trip time throughput pessimistic figure underlying distributions figure showing median percentile percentile difference source-destination pairs figure plots rtt figure plots throughput pessimistic estimate destinations difference excess mbps recall figure differences result average relative performance advantage overlays versus statistics figures plot average median percentiles difference rtt pessimistic throughput -multihoming option -overlay paths cities figure median rtt difference fairly small median rtt differences percentile difference marginally higher roughly greater median throughput differences figure small kbps time upper range throughput difference percentile difference significant fraction greater mbps results suggest absolute round-trip throughput differences multihoming overlay routing small part small fraction cases differences significant throughput time-of-day day-of-week effects effects daily weekly network usage patterns relative performance -multihoming -overlays expected route control perform worse peak periods overlay paths greater freedom avoid congested parts network discernible time-of-day effects paths originating specific city terms rtt throughput performance similarly examine weekly patterns determine differences greater days week significant differences rtt throughput omit results brevity lack time-of-day effect relative performance isp network operators patterns account performing traffic engineering summary -overlays offer significantly performance relative -multihoming small fraction transfers city observed dependence time day day week performance gap overlays multihoming reasons performance differences identify performance differences -multihoming overlay routing focus rtt performance case indirect paths primarily improve propagation delay select congested routes direct paths focus best-performing indirect paths violate common inter-domain peering policies propagation delay congestion improvement section understand modest advantage observe overlay routing due primarily ability find shorter lower propagation delay paths bgp policy routing gains avoid congestion network pairwise instantaneous rtt measurements collect include queuing delay component addition base propagation delay performance improvements due primarily routing congestion expect difference propagation delay indirect direct path small similarly propagation difference large attribute performance gain efficiency overlay routing compared bgp choosing shorter end-to-end paths measurements estimate propagation delay path percentile rtt samples path figure show scatter plot rtt improvement x-axis propagation time difference y-axis offered overlay path relative multihoming path graph shows measurements indirect overlay paths offer diff propagation time difference round-trip time figure propagation congestion scatter plot rtt improvement x-axis 
propagation time improvement y-axis indirect overlay paths direct paths improved rtt direct path points line represent cases rtt improvement difference propagation delay points line paths rtt improvement primarily due propagation time paths large rtt improvement points clustered closer line suggesting large improvements due primarily routing congestion found points lie line closer line indicating majority round-trip improvements arise reduction propagation delay contrast savage observe avoiding congestion ability find shorter paths equally responsible improvements overlay routing difference observations due fact internet paths provisioned congested today years ago circuitous contributing inflation end-to-end paths detailed accounts path inflation investigate relative contributions propagation delay congestion improvements focus closely cases indirect overlay paths offer significant improvement direct paths visually points lying line figure table present classification indirect overlay paths offering rtt improvement recall measurement indirect -overlay paths lower rtt direct path section figure paths improved delay table row half lower delay overlay paths propagation delay improvement relative direct paths rtt improvement visually points lie lines figure paths significant improvement performance ability overlay avoid congested links viewed terms overlay paths table column paths form small fraction overlay paths finally propagation delay indirect overlay path versus total fraction lower delay overlay paths fraction fraction lower delay paths overlay paths indirect paths improvement prop delay improvement improvement improvement table analysis overlay paths classification indirect paths offering improvement rtt performance indirect path propagation direct path propagation figure circuitousness routes figure plotting propagation delay indirect path y-axis multihoming path x-axis multihoming path idea ability system avoid overly circuitous paths arising policy routing figure shows scatter plot propagation delay direct path city x-axis propagation delay indirect path y-axis points line cases overlay routing finds shorter paths conventional bgp routing vice versa consistent earlier results majority points lie line overlays find lower propagation delay paths cases direct path shorter line difference generally small summary vast majority rtt performance improvements overlay routing arise ability find shorter end-to-end paths compared direct bgp paths significant improvements stem ability overlay routing avoid congested isp links inter-domain peering policy compliance understand performance gap overlay routes direct bgp routes categorize overlay routes compliance common inter-domain peering policies inter-domain peering policies typically represent business arrangements isps end-to-end overlay paths adhere policies quantify performance gain attributed ignoring isps typically obey key inter-domain policies valley-free routing isps generally provide transit providers peers represents cost prefer customer routing economically preferable isp route traffic customers providers peers peers providers addition spring observed isps obey common peering policies early exit isps offload traffic peers quickly peering point closest source late exit isps cooperatively carry traffic peering points closer destination bgp path selection impacted fact routes shortest hop count section focus indirect overlay paths virtual hop provide end-to-end round-trip time performance direct bgp paths characterize routes identified level paths traceroutes performed testbed period rtt measurements turnaround time measurement matched traceroute occurred minutes traceroutes analysis map addresses traceroute data numbers commercial tool bgp tables multiple vantage points extract origin prefix issue deriving path traceroutes router-level paths actual bgp path due appearance extra number internet exchange point sibling analysis omit improvements overlay routing overlays choosing higher bandwidth paths aspect difficult quantify leave open problem ases identified peers siblings case provide transit traffic administered entity classified peers siblings appeared provide transit direct bgp paths traceroutes manually adjusted pairings related improved overlay paths imprv paths rtt imprv rtt imprv avg avg violates inter-domain policy valley-free routing prefer customer valid inter-domain path as-level path earlier exit similar exits exit diff as-level path longer bgp path len bgp path shorter bgp path unknown table overlay routing policy compliance breakdown percentile round trip time improvement indirect overlay routes routes conform common inter-domain policies routes valid inter-domain paths exited ases points direct bgp route bgp route exchange point ases combine sibling ases identify ascertain policy compliance indirect overlay paths relationships generated authors period measurements as-level overlay path construction ignore ases intermediate overlay nodes non-transit hops connect overlay path segments overlay path source destination composed as-level segments intermediate node located time spent short isp path intermediate ases significant factor end-to-end round-trip difference avoid penalizing overlay paths policy violations artifacts intermediate hop belongs hierarchy table classifies indirect overlay paths policy conformance expected majority indirect paths violated valley-free routing prefer customer policies large fraction overlay paths appeared policy compliant sub-categorize fraction paths examining as-level overlay paths identical as-level direct bgp path overlay path identical characterize exiting earlier direct path remained direct path characterized exiting remained longer rest indirect paths similar direct bgp paths identical as-level overlay paths exited similar direct bgp path suggests cooperation isps terms late exit policies improve performance bgp routes close gap multihoming overlays note as-level overlay paths differed majority length direct path chosen bgp summarize achieving rtt performance direct bgp paths indirect overlay paths violate common inter-domain routing policies observe fraction policycompliant overlay paths realized bgp isps employed cooperative peering policies late exit resilience path failures bgp policy-based routing architecture masks great deal topology path availability information end-networks order respect commercial relationships limit impact local neighboring downstream ases design advantages adversely affect ability end-networks react quickly service interruptions notifications bgp standard mechanisms delayed tens minutes networks employing multihoming route control mitigate problem monitoring paths isp links switching alternate isp failures occur overlay networks provide ability quickly detect route failures frequently probing paths overlay nodes section perform separate preliminary analyses resilience datasets earlier section assess ability mechanisms withstand end-to-end path failures improve availability internet paths chapter approach evaluates availability provided route control based active probe measurements testbed compute end-to-end path availability route control overlays estimated availabilities routers paths aim answer questions multihoming route control similar overlay routing improving end-to-end fault tolerance resilience multihoming reasonable mask failures experienced end network active measurements path availability evaluated ability multihoming improve path availability earlier section noted isps significantly improve availability internet paths chicago wash los angeles york bay area seattle average availability percentage city multihoming -multihoming -overlay -overlay figure availability comparison comparison availability averaged paths originating cities single isp -multihoming -overlays -overlays isps chosen based round-trip time performance paths originating cities studied availability -multihoming employed minimum availability paths 
higher multihoming analysis overlay routing find circumvent failures route control avoid results omitted brevity results marginal improvement route control offers good availability path availability analysis figure compare average availability overlays route control paths originating cities destinations testbed based router failure data presented earlier section overlay routing calculate availability paths overlay hop matter intermediate hops assume path intermediate hops ideal overlay practically unlimited number path choices avoid large number failures middle network earlier availability paths testbed high multihoming improves average availability cities cases overlays slightly higher availability -overlay arbitrary flexibility choosing intermediate hops routers common average overlay paths compared -multihoming case note -overlay path single isp vulnerable access link failures multihoming employed low availability -overlay chicago due chosen isp based rtt performance tier network internal routers lower availability paths exiting isp hops common high chance correlated failures finally -overlay makes routes slightly -overlay excluding chicago router shared paths approaching destination failures router impact overlay paths summary note greater flexibility overlays route control -multihoming achieve estimated availability hours year -overlay measurement caveats summary observations implications section summarize observations made measurements highlight fundamental trade-offs overlay routing multihoming route control difficult assess comment limitations study key observations summarized table expected results show overlay routing provide improved latency throughput reliability multihoming route control difference systems insignificant practical purposes fact multihoming offers lesser flexibility routing overlays multihoming require third-party deployment purely endpoint based mechanism found overlay routing performance gains arise primarily ability find routes physically shorter shorter propagation delay addition reliability advantages stem disposal superset routes standard routing surprise results past studies overlay routing shown advantage large found careful additional routes multihoming end-network significantly reduce advantage overlays performance similar question remains overlays multihoming choice answer factors cost deployment issues future upgrades bgp routing discuss issues addition outline key constraints imposed comparison study cost operation difficult cost implementing route control overlays evaluation case multihoming stub network pay connectivity set isps note isps charge amounts solution cost-effective choice case overlays envision overlay service offerings similar akamai sureroute users overlays multiple hop choices -overlay routing analysis add cost subscribing overlay service base cost isp multihoming overlay single isp -overlays eliminate additional cost analysis shows performance gain reduced significantly isps charge usage cost employing multiple isp connections case -overlays higher lower cost multiple connections case -multihoming overlay routing significantly performs bgp paths single isp improving routing flexibility endpoint allowing isp connections significantly reduces gap bgp-based routing overlay routing rtts multihoming isps employing combination overlay routing multihoming throughput differences marginal overlay path offers higher transfers speeds multihoming path notice multihoming offers similar performance overlay routing implies multihoming hop absolutely essential overcome occasional problems access isp primary reason ability overlay routing offer performance multihoming albeit marginally ability overlays circumvent congestion isp paths multihoming avoid superiority overlay routing reduced isps employed cooperative peering policies cold potato routing multihoming route control offer perfect availability overlay routing multihoming eliminate failures observed singly-homed end networks table multihoming route control overlay routing summary key comparison results deployment operational overhead overlays multihoming unique set deployment performance challenges measurements highlight issues ease deployment routing table expansion routing policy violations ease employment overlay routing requires third-party deploy potentially large overlay network infrastructure building overlays sufficient size distribution achieve significantly improved round-trip throughput performance challenging terms infrastructure bandwidth cost management complexity hand multihoming single endpoint based solution easier deploy end-network perspective routing table expansion due multihoming important overhead multihoming study resulting increase number routing table entries backbone routers isps charge multihomed customers appropriately increased overhead network core making multihoming desirable problem occurs stub network announces address range isps isps limit small advertised address blocks approach makes sense large medium sized stub networks difficult smaller smaller networks techniques based network address translation nat avoid issues routing announcements make intelligent multiple upstream isps discussed chapter violation policies overlay paths concerns overlay routing raises circumvention routing policies instituted intermediate ases commercial endpoint route data well-provisioned academic internet backbone overlay hop nearby individual overlay hop violate policies nearby node allowed transmit data internet end-to-end policy violated analysis quantifies number routing policy violations impact internet routing polices related commercial relationships service providers reasonable expect presence overlay node isp network implies overlay provider isp form business agreement relationship require overlay provider pay additional expenses isp incurs providing transit overlay traffic network providers compensated policy violations limiting negative impact overlay routing future bgp discussed important issues overlays route control today environment considered bgp improve standard internet routing performance relative overlays impact performance availability-based route selection edge network transit ases perform similar route control future exposing superior set paths end networks future direction development protocols as-level source-routing nira stub networks greater control routes limitations comparison finally discussion constraints imposed comparison study observations constrained factors size testbed improvement multihoming number overlay nodes performance difference figure impact overlay network size round-trip performance graph shows difference -overlays -multihoming overlay nodes added coarse granularity performance samples limited analysis resilience discuss issues detail testbed size figure compare average rtt performance -multihoming -overlays function number intermediate overlay nodes graph shows rtt difference -overlay path direct indirect -multihoming path averaged measurements nodes added one-by-one randomly overlay network heuristic adding nodes yield results size overlay increased performance -overlays relative multihoming relative improvement marginal discernible knee graph additional overlay nodes alter observations study favor overlay routing key point notice measurements allowing endpoints flexibility select overlay paths nodes end offer additional benefit choice paths widen gap overlay routing route control higher require larger geographically diverse overlay deployment large overlays suffer key drawbacks expensive deploy manage subscribe incur enormous overhead tracking performance overlay paths number paths probe scales quadratically overlay size practical techniques lowering measurement overhead larger overlays developed granularity performance samples performance samples collected fairly coarse timescales minutes intervals round-trip time minutes throughput result results capture fine-grained performance paths effect overlay routing multihoming route control results capture observable performance differences path selection techniques key reasons conclusions based data collected continuously week-long period fairly large set paths zhang observed steadiness roundtrip time throughput performance order minutes show chapter round-trip times paths testbed intervals minutes expect higher sampling frequency yield significantly 
repair failure detection reliability analysis compare relative ability overlay routing multihoming avoid bgp convergence problems peering link failure affect routing peer isps bgp re-converges multihoming configurations avoid routing failures leave comparison future work key observations comparison study simply summarized circumvent bgp routing achieve good end-to-end resilience performance goals simply realized enabling moderately higher route selection flexibility end networks purely endpoint based mechanisms considered potential benefits multihoming route control studied ideal form multihoming driven simplifying assumptions chapter assumptions overcome practical deployment scenario preserving performance benefits multihoming route control chapter practical multihoming route control strategies past years multihoming increasingly leveraged improving wide-area network performance lowering bandwidth costs optimizing upstream links ensuring resilience service interruptions number products provide route control capabilities large enterprise customers public number advertise address prefixes upstream isps bgp smaller multihomed organizations bgp products variety mechanisms policies route control exact mechanisms employed quantitative benefits mechanisms chapter studied potential performance benefits multihoming route control mechanisms showed performance potentially improve terms rtt terms throughput multiple upstream isps employed chapter showed performance benefits multihoming comparable techniques overlay routing greater routing flexibility end-networks case evaluated ideal form multihoming end-network perfect information performance isps time change routes arbitrarily chapter goal understand benefits realized practical multihoming scenario specifically address question benefits multihoming route control realized practical deployment situations exact mechanisms end-networks employ explore design alternatives realize performance benefits multihoming practice focus enterprise networks multiple isp connections focus primarily mechanisms inbound route control enterprises interested optimizing network performance clients download content internet sink data discuss chapter mechanisms extended multihomed content provider networks source data sink develop variety active passive measurement strategies multihomed enterprises estimate instantaneous performance isp links pick isp transfer evaluate strategies context nat-based implementation control inbound isp link enterprise connections address number practical issues usefulness past history guide choice isp link effects sampling frequency measurement accuracy overhead managing performance information potentially large set target destinations evaluate policies client workloads emulated wide-area network delay characteristics based large set real network delay measurements evaluation proposed schemes -multihomed enterprise network shows active passive measurement-based techniques equally effective extracting performance benefits multiple isps schemes offer improvement web response times web request completion times compared single isp deciding isp select transfer show current sample performance destination isp good estimator near-term performance destination show overhead collecting managing performance information destinations negligible finally conduct initial study mechanisms control isp link external internet clients initiate connections servers hosted enterprise chapter outline section describe enterprise multihoming solution strategies estimating isp performance route control mechanisms section describes implementation detail section discuss experimental set-up results evaluation solution section discusses additional route control design operational issues section summarize common techniques employed commercial route control products related research studies finally section summarizes observations chapter solution overview order realize performance benefits multihoming practice route control solution requires key functions illustrated figure monitoring isp links choosing isp link instant directing traffic isp links discuss functional design discuss actual implementation details section monitoring isp links selecting isp link direct transfer crucial realizing performance benefits multihoming enterprise network perspective choice isp depends time-varying performance isp links destination accessed issues monitoring performance isp links monitor enterprise isp isp isp regularly monitor performance isp links direct traffic isp choose provider isp figure solution steps figure illustrates main operations enterprise route control system enterprise ideally monitor performance content provider sites isp links infeasible large enterprises access content sources simple solution monitor important destinations basis volume requests made enterprise top frequently accessed destinations ensure significant fraction flows experience good performance question monitor common approaches active monitoring passive monitoring active monitoring multihomed enterprise performs out-of-band measurements performance selected destinations isp links measurements simple pings involving icmp echo request tcp syn packets destinations passive measurement mechanisms rely observing performance ongoing transfers in-band destinations observations samples estimating performance isp link order ensure samples isps forcibly direct transfers isps important issue monitoring performance time interval monitoring long interval performance samples implies stale information estimate isp performance result suboptimal choice isp link destination smaller time intervals address issue negative impact active monitoring frequent measurements give rise excessive measurement wasted bandwidth processing overhead destinations interpret traffic security threat passive monitoring frequent sampling connections directed sub-optimal isps obtaining fresh performance samples careful choice interval size important choosing isp component select isp choice made per-destination basis fine time-scales important question historical data isp performance destination determining isp historical performance isp link destination tracked keeping smoothed time-weighted estimate performance exponentially-weighted moving average ewma performance isp reach destination time obtained active passive measurement previous performance sample time ewma metric time constant smaller attaches weight historical samples implies reliance history time isp performance calculated chosen transfer history employed recent performance sample evaluate isps select directing traffic selected isps isp transfer identified traffic destination directed chosen link controlling outbound direction traffic easy well-studied focus inbound route control mechanism inbound control refers selecting isp incoming interface receive data enterprise network primary mechanisms route advertisements addresses connections discuss controls implemented enterprise address block advertise address ranges upstream isps site multihomed isps owns address block site announces parts address block isps distinct sub-block isp depending isp links considered superior traffic destination site source address address block ensures incoming packets connection arrive isp link cases enterprise simply assigned address block upstream isp send outbound packets desired isp ensure isp forwards packets ensuring connection address lies heart route control techniques employed handling connections initiated enterprise connections accepted site external clients discussed initiated connections handling connections initiated enterprise site amounts ensuring remote content provider transmits data enterprise ultimately receives chosen isp inbound control achieved edge router translate source addresses connections initiated network belonging chosen isp address block block simple nat-like mechanisms ensures replies destination arrive isp accepted connections inbound route control connections accepted site enterprise hosts internet servers accessed case inbound control amounts controlling path isp link client forced send request acknowledgment packets web server easy predicting client arrivals forcing server address generally techniques based dns deploying multiple versions web pages achieve inbound control externally initiated connection enterprise version base web page isp link hyperlinks embedded objects page constructed addresses isp arriving clients base 
html page subsequent requests embedded objects arrive selected isp hand essential function dns-based technique provide address interface arriving client preliminary study effectiveness approach discussed section focus rest paper case enterprise-initiated connections implementation details implement multihoming route control functions simple open source web proxy called tinyproxy tinyproxy transparent non-caching forward web proxy manages performance web requests made clients moderate-sized multihomed enterprises present details implementation basic multihoming components tinyproxy sake simplicity assume proxy deployed multihomed end-network isp links fact enterprise route control products enforce outbound route control transmitting packets destination isp traffic destination received performance monitoring algorithms implement active passive measurement mechanisms section monitoring performance upstream isp links passive measurement passive measurement module tracks performance destinations interest sampling isp links web requests initiated clients enterprise basic idea requests sample isp performance destination performance estimate isp older predefined sampling interval module current performance estimates links connection directed link destination module maintains performance hash table keyed destination address domain destination hash table entry holds current estimates performance destination isps timestamp indicating time instant performance destination isp measured updating ewma estimate historical performance notice explicit control hash table maintains performance samples destinations including rarely accessed high overhead measurement connections popular destinations obtaining performance samples maintaining explicit ttls entry flush destinations accessed long period time guarantee manageable measurement overhead ttls require maintaining separate timer entry additional overhead view limit performance sampling connections destined popular sites popularity measured terms aggregate client request counts achieve manner hash entry holds number accesses made destination receiving connection request destination update access count destination exponentially weighted moving average ewma ewma weight chosen access count destination reset accessed long time hour hard threshold monitor performance destinations total number requests exceeds threshold achieve live entries table access counts exceed threshold naive hash table implementation tracking frequency counts elements identifying popular destinations manner hash table sizea time ways tracking top destinations iceberg queries sample-and-hold incur overhead survey related approaches stick approach simplicity implementation show overhead popular hash entries implementation negligible note destination popular isp prev sample dest samp int set isp test initiate connection destination srcip isp test wait destination respond obtain performance sample initiate connection destination srcip defaultip relay connection update destination hash entry incoming connection time isps ips announced isp test represents isp test destination samp int sampling interval defaultip isp addresses noyes figure monitoring isp performance passive measurement scheme approach necessarily limit actual number popular destinations case large number destinations accessed figure shows basic operation passive monitoring scheme enterprise client initiates connection scheme checks destination entry performance hash table labeled popular connection simply relayed isp link chosen random load-balancing fashion entry destination passive scheme scans measurement timestamps isps elapsed time measurement links exceeds predefined sampling interval current connection sample destination isp links order obtain measurement sample isp link passive approach initiates connection destination source address set response return link sampled measures turn-around time connection time transmission byte client http request receipt byte samp int seconds sample elements probe unique destinations incoming connection enqueue destination queue size dequeue active measurement thread figure monitoring isp performance slidingwindow active measurement scheme http response destination passive scheme observed turn-around time performance sample destination entry hash table updated ewma method section remainder web request proceeds proxy relaying data appropriately isp links current measurements sampling interval proxy initiates connection link destination setting source address appropriately action discussed section active measurement similar passive measurement active measurement scheme maintains hash table performance estimates candidate destinations isps active measurement techniques identify destinations monitored frequencycounts passive measurement mechanism scheme track number client requests directed destination seconds sampling interval initiate active probes destinations number requests exceeds fixed threshold slidingwindow scheme maintains window size recently accessed destinations figure window implemented fixed size fifo queue destinations newly initiated connections inserted number elements exceeda oldest window removed everya seconds sampling interval active measurement thread scans window chooses elements random discarding duplicate destinations subset active-measurement scheme measures performance remaining destinations isps active measurements schemes respective advantages disadvantages schemes effectively sample performance destinations accessed relative key differences frequencycounts deterministic works precise set popular destinations slidingwindow hand miss popular destinations sample unpopular destinations frequencycounts simplest form easily track short-term shifts popularity destinations temporarily-popular destinations receive requests exceed threshold force performance sampling slidingwindow hand effectively track small shifts underlying popularity distribution destinations probe operation destination selected active probing active measurement scheme sends probes source addresses isps waits destination respond found large fraction popular web sites filter icmp echo request packets employ tcp-based probing mechanism specifically send tcp syn packet ack bit set port wait rst packet destination elapsed time sample turn-around time performance found sites respond promptly syn ackpackets response received update performance estimates destination isp measurement timestamp update performance estimate ewma response received destination entry performance hash table large positive current measurement sample performance switching isps updating isp entries destination performance hash switch isp offers rtt performance current isp hash entries updated everya seconds passive active measurement schemes choice isp destination frequency nat-based inbound route control inbound route control mechanism based manipulating nat tables web proxy reflect current choice isp iptablespacket filtering facility linux kernel install update nat tables proxy nat rules associate destination addresses isp link source address packets directed destination table translated address announced chosen isp suppose isp selected transfers involving destination addresses announced link isp insert nat rule destination matches packets source defaultip destination translates source address packets notice nat rule blindly translates source packets destined measure performance isp assuming address announced link isp nat translates source address probing isp isp considered destination problem implementation simply construct nat rule translate packets specific source address case defaultip measurement packets belong probes active measurement client connections passive measurement source address isp measured experimental evaluation section describe experimental evaluation design alternatives proposed section include performance passive versus active monitoring schemes sensitivity measurement sampling intervals overhead managing performance information large set destinations focus understanding benefits scheme offers including set parameters result maximum advantage experimental set-up describe testbed setup discuss emulate realistic wide-area network delays discuss key characteristics delay traces employ emulation finally discuss performance metrics compare proposed schemes testbed 
topology simple testbed topology shown figure goal emulate moderatelysized enterprise isp connections client population shown figure node topology runs simple lightweight web server network interface configured aliases alias represents instance web server popular popular enterprise route controller isp isp isp destinations accessed enterprise multihomed enterprise cpd time delay delay client client client client client client testbed topology figure testbed topology simple test-bed shown emulate route control scenario shown node runs instances clients parallel clients make requests web sites inter-arrival times requests single client poisson-distributed seconds notice inter-arrival rate translates average request rate requests server client request destination sampled set zipf distribution exponent evaluation set parameters monitoring schemes passive active average rank destinations probed meaning explicitly track top popular sites experiment object sizes requested client drawn pareto distribution exponent size node topology runs tinyproxy configured internal interface proxy listens connections clients emulated enterprise interface aliases representing addresses announced isp links node delay element running waspnet loadable kernel module providing emulation wide-area network characteristics linux platform modify waspnet enforce packet delays drops bandwidth limits pera source destination ipa pair basis modify support trace-based network delay emulation illustrated figure order recreate realistic network delays clients servers testbed collect set wide area delay measurements akamai content distribution network pick akamai server machines chicago attached unique isp run pings regular intervals akamai servers located cities attached variety isps measurements one-day period dec measurement akamai machines chicago collectively act stand-in multihomed network isp connections akamai servers probed represent destinations contacted end-nodes multihomed network series delay samples akamai sources destination servers inputs waspnet module emulate delays isp links compressing time time-consuming emulate entire day worth delays multiple times test tune parameters proposed scheme work-around choose smaller portion delay traces hours quick analysis delay traces collected shows variation delays probed paths -hour timescale goal understand effective proposals wide range operating conditions important test schemes handle frequent performance underlying network paths mind compress -hour delay traces factor -hour delay traces real inputs waspnet delay module -hour traces performance underlying paths occur roughly times compared full -hour trace characteristics -hour delay traces collected nodes chicago shown table column delay traces emulation ensure delays observed chicago source nodes significantly typical delays experienced well-connected multihomed network located chicago nyc trace trace trace time performance standard deviation time extent performance change standard deviation extent change time performance table characteristics delay traces performance refers delay path major metropolitan area collect similar traces source nodes located cities york los angeles traces collected march statistics traces shown columns table statistics show chicago-based traces experiments roughly characteristics collected cities comparison metric evaluate benefit proposed route control schemes compare response time transfers scheme transfer response time isps employed transfer total number transfers chapter call performance metric normalized response time route control mechanism closera performance scheme computation response times employing isp time terms denominator computed offline manner forcing transfers isps selecting isp offering response time experimental results perform experiments emulab testbed mhz pentium iii machines ram running red hat describe select client workloads response time packet average client arrival rate requests load server figure web server load profile average response time request function average client arrival rate server topology figure evaluation move evaluation route control strategies selecting client workloads figure show average response time client requests completion time request divided size request function average arrival rate clients server requests response time quickly degrades arrival rate requests point increases marginally request rate select points load curve highlighted arrival rates requests evaluate proposed schemes workloads workloads represent stress levels server ensuring overloaded high variability response times overload regimes impact accuracy comparison proposed schemes remainder section focus addressing questions extent route control schemes improve performance multihomed site relative single isp employing historical samples estimating future isp performance active passive measurement schemes compare terms performance improvement offer active measurement schemes slidingwindow frequencycounts works time intervals samples isp performance collected overheads proposed mechanisms incur aggregate performance improvement passive measurement-based schemes shown figure set ewma parameter current measurement samples estimate isp performance select sampling interval figure plots normalized response time metric average client arrival rate requests isp isp isp passive history interval figure performance improvement performance metric passive measurement scheme ewma parameter history employed sampling interval graph shows performance individual isps fraction improvements ratio response times ratio response times fraction improvements difference response times difference response times ratio response times difference response times figure unrolling averages ratio difference response times isp transfers relative passive measurement scheme average client arrival rate case requests performance client workloads addition show performance isps individually performance improvement relative single isp significant heavy workloads end graph light workloads left end graph performance optimal results sampling intervals similar omitted brevity performance improvements active measurement-based schemes similar discussed improvements route control figures illustrate distribution response time improvements offered passive measurement scheme fora sampling interval relative singly-home isp figure isp figure plots cdf ratio response time isp isp isp opt-isp opt-isp opt-isp provider time optimal choice high popularity dest isp chosen high popularity dest isp chosen medium popularity dest isp chosen low popularity dest figure route control work isps chosen passive measurement-based route control scheme destinations popularity levels isp response time passive measurement scheme transfers results specific instance client arrival rate requests server figure similarly plots difference response times client workload notice figure passive measurement scheme improves response time performance transfers figure shows route control scheme improves response times factors large small fraction transfers relative singly-homed similarly figure shows scheme improve response times transfers notice passive measurement-based scheme ends offering sub-optimal performance transfers figure illustrates operation passive measurement-based scheme figure show isps time transfers destinations popular destination moderately popular destination popular destination recall passive measurement-based scheme explicitly tracks performance popular destinations sampling interval client arrival rate requests figure note route popular destination made average moderate popular destinations intervals passive scheme number route depends popularity destinations popular destination higher frequency route figure shows optimal choice isps popular destination function time determined underlying delay traces comparing isps selected scheme cases scheme makes sub-optimal choice employing history estimate performance figure plots performance passive measurement scheme values parametera 
correspond assigning weight current measurement normalized response time metric average client arrival rate requests isp history passive weight passive weight passive weight figure impact history performance achieved relying historical samples varying degrees results passive measurement-based strategy sampling interval normalized response time metric average client arrival rate requests passive sliding windows frequency counts figure active passive measurement performance active measurement-based schemes passive measurement scheme sampling interval sample remaining weight past samples show results sampling interval performance interval sizes similar figure plots performance history employed performance isp notice performance employing history uniformly inferior situations relative employing history fact historical samples serve bring performance close single isp results show estimate isp performance current performance sample estimate near-term performance active passive measurement figure compare performance active measurement based techniques slidingwindow frequencycounts passive measurement approach earlier results showed history improving performance henceforth present results history employed show performance schemes schemes sampling interval note active measurement schemes offer comparable performance workloads selected bring underlying trade-offs schemes figure shows active measurement-based schemes offer normalized response time metric sampling interval seconds rate rate rate rate rate normalized response time metric sampling interval seconds rate rate rate rate rate passive measurement frequencycounts figure impact sampling interval performance sampling intervals passive measurement-based frequencycounts active measurement-based schemes performance passive measurement scheme moderate improvements light workloads slight improvement heavier workloads expected passive scheme existing transfers obtain samples performance potentially sub-optimal isp links frequency performance monitoring figure shows impact measurement frequency aggregate performance passive measurement scheme figure frequencycounts active measurement scheme figure figure notice longer sampling intervals surprisingly offer slightly performance passive measurement understand curve client arrival rate requests client arrival rate requests implies average connections made clients seconds sampling interval order obtain samples fraction destinations isps passive measurement scheme force connections isp links leaves fraction employed measurement routed optimal isp assuming passive measurement yields accurate estimate performance asa increases fraction connections routed optimal path increase resulting marginal improvement performance explains slight downward trend figure time infrequent sampling large values negative impact performance figure plots performance frequencycounts scheme function sampling interval sampling interval suffers performance penalty relative smaller intervals case frequencycounts aggressive sampling interval negative impact connections employed measurement expected routed optimal isps passive active active freqcount slidingwin total performance penalty penalty inaccurate estimation penalty measurement nat table analysis performance overheads penalty defined case performance due increased probing overheads proxy analysis overheads performance results show passive active measurement optimal performance specifically active measurement-based approaches key factors contribute gap accuracy measurement techniques correspondingly accuracy isp choices overhead conducting measurement software overhead making frequent updates nat table enforcing nat rules outgoing packets section analyze contribution factors performance proposed schemes quantify overhead implementation compare performance due choices made route control proxy performance isp choices made offline manner connection recall order compute performance metric evaluated response time isp transfer offline isp link connection independent route control mechanisms terms denominator equation combine offline response time values decisions made proxy estimate performance penalty due incorrect choices independent software overheads difference resulting performance metric performance penalty including overheads implementation show penalties proposed schemes obtained stated table row client arrival rate requests sampling rate table numbers routes change frequently sampling interval everya seconds performance history equivalent sampling updating seconds row show actual performance penalties suffered schemes implementation taking overheads account figure notice large portion penalty contributed inaccuracies measurement isp selection rows identical measurement software overheads result performance penalty difference rows shown row mentioned earlier active measurement-based techniques offer performance results show measurement route control overhead active measurement schemes small suggests commercial route control products prefer employing active measurement-based route control schemes passive schemes additional design operational issues route control mechanisms presented attempt understanding extract good performance multiple isp connections practice number ways improved address important issues isp costs joint optimization performance reliability briefly discuss potential improvements issues handling lost probes implementation active probing schemes send probe collecting performance sample isp link destination pair lost probes due transient congestion timeouts misinterpreted poor performance isp path destination unwanted isp choice destination prevent sending short burst probes isp link destination pair performance reported probes estimate quality isp link weighting account observed losses hybrid passive active measurements accuracy passive measurement improved sending active probes immediately failed passive probe observed connection ends unexpectedly increases confidence failed connection due problem isp link opposed transient effect implementation paths popular destinations explicitly monitored active passive schemes result rely passive observations transfers unpopular destination ensure quick fail-over proxy observes failures connections unpopular destination immediately switch destination default isp remaining isps future transfers balancing performance resilience key function route control products respond quickly isp failures findings study long sampling interval significant performance improvements long interval slows endnetwork reaction path failures smaller sampling intervals offer resilience sampling interval active measurement works cases providing low overhead good performance figure ensuring failover time minute isp pricing structures study ignore issues relating cost isp links isp connections pricing policies charge flat price committed rate purely usage-based pricing charge differently depending destination on-net off-net formal discussion techniques optimizing isp usage costs performance found explicitly optimize bandwidth costs evaluation active passive monitoring utility history central general schemes optimize cost performance algorithms long-lived tcp flows route control schemes update nat entry destination midst ongoing transfer involving destination transfer fail due change source address observe failed connections experiments flows short effect pronounced impact performance long-lived flows address problem delaying updates nat table ongoing large transfers complete increases complexity implementation involves identifying flow lengths checking existence long-lived flows time update force short flows destination traverse sub-optimal isps nat update delayed impact routing table sizes announcing small non-aggregateable address sub-blocks upstream isps section affect size routing tables core network problem overcome multihomed end-networks obtain provider-assigned addresses buying single individual address block end-network simply acquires equal-sized independent address blocks isps address blocks aggregated isps global effects route control important issue potential impact interactions enterprises deploying route control mechanisms effect marginal benefits route control solutions network recent simulation-based study problem qiu shown impact multiple end-networks employing route control single multihoming user minimal equilibrium interactions similarly impact equilibrium singly-homed users negligible positive observations issues 
end-networks reach equilibrium stable equilibrium remain open externally-initiated connections implementation primarily considered handling connections initiated enterprise common current enterprise applications contact content providers route control product handle connections clients enable optimized access servers hosted enterprise network recently route control device vendors introduced features domain system dns resolution requests means direct inbound client traffic desired link describe preliminary measurements usefulness dns-based approaches externally-initiated connections detailed description found dns inbound route control destination address remote client determines isp link connection request responding address client makes request resolve service service inbound link selected key idea dns-based route control similar dns server selection mechanism content distribution networks dns convenient transparent mechanism unclear respond quickly dynamic route control responses resolution requests time-to-live ttl determines long response cached client local server ideally setting ttl small force external clients resolve address frequently providing fast responsiveness practice complicated behavior wide variety applications dns servers deployed internet applications perform internal dns caching adhere expected behavior older implementations dns software reported ignore low ttl values artifacts make difficult predict quickly clients respond communicated dns responses order quantify responsiveness dns practice perform simple analysis client behavior response dns large web event collect logs set web caches served requests content related summer sporting event global audience event request rate high authoritative servers directed clients set caches min ttl event servers updated direct clients lower capacity origin servers ideally traffic caches subside min figure shows aggregate request volume caches time dns change requests gathered -minute intervals one-hour period dns change requests unique client addresses unique subnets number subnets computed clustering client addresses bgp tables obtained figure shows part trace clear peak occurring day event period constant sustained traffic finally sharp drop-off time dns updated figure focuses time date time total request volume date time total request volume -day trace -hour portion figure dns responsiveness figure shows traffic volume time dns change left graph shows -day period end event focuses -hour period time dns update dns update solid line denotes time update dashed line time min ttl expires times request volume decreases remaining traffic decays slowly period hours analysis definitive suggest dns coarse-grained mechanism controlling traffic common route control practices focus chapter improving internet performance enterprise networks route control research studies products considered benefits multihoming route control guo conduct trace-driven experiments evaluate design options commercial multihoming device evaluate ability algorithms balance load multiple broadband-class links provide service similar single higher-bandwidth link authors find effectiveness hash-based link selection hashing packet header fields balancing load comparable load-based selection addition results show managing load connection-level granularity slightly effective per-packet load balancing andersen similarly mechanisms improving reliability web access dsl clients number vendors recently developed dedicated networking appliances software stacks optimizing multihomed connectivity enterprises settings bgp products techniques similar evaluate study focus geared balancing load managing bandwidth costs multiple isp links optimizing performance nat-based control inbound traffic dns influence links external client-initiated connections ensure tracking sessions policy-based routing isp link directions class products services targeted settings bgp employed large data centers campuses products focus outbound control routes suited content providers primarily source data details algorithms commercial products monitor link performance availability generally proprietary information specific mechanisms parameter settings review general approaches enterprise route control products products employ icmp ping tcp active probes continuously monitor health isp links enabling rapid response failure cases hybrid passive active monitoring track link performance connection previously unseen destination initiated enterprise client active probes candidate links sample performance destination connections destinations hand monitored passively update performance samples approach active probing monitoring link availability passive monitoring performance sampling products static rules dictate link reach destinations networks finally products recent research studies suggested race -based isp performance measurements syn packets enterprise clients initiate connections replicated route control device upstream isps source nat link syn-ack arrives server remainder connection route control device sends rst packets slower paths server terminate in-progress connection establishment state choice link cached time subsequent connections arrive short time period trigger race link failure detected easy extend active passive probing techniques presented chapter incorporate race -based performance optimization approach enhance performance improvements route control techniques discussed dissertation summary observations implications goal chapter experimentally evaluate variety practical mechanisms policies realizing performance benefits isp multihoming focused scenario multihomed enterprises leverage multiple isps improve response time performance clients downloading content internet web servers real linux-based route control implementation emulated wide-area network testbed evaluated design alternatives included performance passive versus active monitoring schemes sensitivity measurement sampling intervals techniques manage performance information large set destinations key findings evaluation -multihoming scenario summarized table evaluation shows active passive measurement-based route control schemes offer significant performance benefits practice compared single best-performing isp performance schemes optimal benefits light moderate client workloads performance active measurement schemes experiments show historical performance choose isp link current measurement sample good estimate showed performance penalty collecting managing performance data destinations negligible summarize key contribution route control implementation shows benefits multihoming route control realized practice simple mechanisms active passive probing nat effect showed increasing internet routing flexibility end-networks modest amounts purely end network-based mechanisms substantially improves internet performance shown multihoming route control effectively improve internet performance endpoints network today endpoints employ higher-speed access links internet grows size volume traffic application mix network change drastically observe today important question techniques multihoming route control effective future internet address issue chapter route control schemes describe significantly improve client web response times multihomed site experiments performance proposed route control mechanisms optimal benefits average relying historical samples monitor performance isps ewma detrimental performance current measurement sample good estimator near-term performance isp link passive active measurement-based schemes performance single isp connections approach offers substantially performance light moderate client workloads overhead introduced aggressive performance sampling slightly reduce performance benefit route control schemes sampling interval minute hand offer good performance-overhead trade-offs overhead measurements active measurement schemes frequent updates nat table negligible performance penalties arise inaccuracies measurement estimation techniques dns effective mechanism achieve inbound control requests externally initiated connections table practical multihoming route control summary key observations route control implementation chapter scaling congestion internet internet grows size day time progresses end-hosts added edge network correspondingly accommodate end-hosts isps 
add routers links history shown addition links maintains macroscopic properties internet interconnection isps internet continues follow power law graph structure addition end-hosts time places greater load network fortunately improvement network technology operates time period expect network links edge core network improve similar performance factor typically follow similar moore law-like technology trends due topology network behavior internet routing increase load links network result speed key centrally located hot-spot links network improve quickly true key parts network eventually emerge persistent bottlenecks circumstances routing-based mechanisms longer employed end-networks improve performance route control multihoming paths traverse links tierisps due global reach isps similarly placements overlay nodes overlay paths traverse tiernetworks likelihood happening lower compared route control links belonging backbone carriers emerge hot-spots approach end-networks overcome inevitable hot-spots network poor scaling properties situation drastically adjust internet routing behavior change structure network interconnections isps ensure good future performance hand worst congestion scales network size expect network continue operate routing-based mechanisms continue effective improving endpoint performance chapter perform preliminary study scaling properties internet realistic theoretical models network evolution inter-domain routing seek answer question maximum congestion internet scale network size analysis focuses internet as-level interconnection model network evolution based preferential connectivity simple model traffic unit amount flow pair nodes routed shortest path employ simple combinatorial probabilistic arguments give bounds maximum congestion as-level graph conduct simulations congestion links network based real synthetically generated as-level topologies synthetic traffic matrices simulations investigate impact key factors worst congestion network variants inter-domain routing algorithm alternate traffic matrices finally alternate topologies as-level interconnection key result chapter maximum congestion internet-like graphs scales poorly growing size graph specifically maximum congestion shortest path routing uniform traffic matrices worse exponent depending degree skew power law degree distribution graph simulations show policy routing graph results roughly maximum congestion shortest path routing worse alternate non-uniform traffic models considered congestion scaling properties power law graphs worsen substantially show terms maximum congestion power law trees considerably worse power law graphs contrast graphs exponential degree distribution good congestion properties discuss simple guidelines change isp-level interconnections result dramatic improvement congestion scaling properties internet-like graphs show parallel links added adjacent nodes ases network simple functions degrees number neighboring ases minimum degrees maximum congestion resulting graph scales linearly heuristic adding edges reflects desired amount peering neighboring ases internet order guarantee good congestion scaling properties chapter outline section formalize analytical approach discuss simulation set-up analysis presented section section presents results simulations section discuss implications results network design present mechanisms alleviate poor congestion scaling internet graph section survey past work modeling internet results deriving congestion scaling properties general disagreement power law correctly models degree distribution internet graph widely agreed distribution heavy-tailed main results specifically simulation results focus power law distributions hold equally heavy-tailed distributions weibull graphs finally section summarize key observations chapter present caveats approach methodology give precise formulation problem laying key questions seek address analysis describe simulation set-up corroborating extending analytical arguments problem statement unweighted graph representing internet as-level graph denote total degree vertex key aspects pertaining graph degree distribution graph routing algorithm nodes graph communicate traffic demand matrix determining amount traffic pairs nodes graphs give precise definitions aspects turn concerned graphs power law degree distribution defined definition unweighted graph power law degree distribution exponent integers number nodes proportional similarly graphs exponential degree distribution number nodesa proportional integers henceforth refer graphs power law graphs exponential graphs denote routing scheme graph representing path routing traffic nodesa routing schemes shortest path routing scheme route nodes shortest path nodes graph reflects route selection bgp prefers paths number ases multiple shortest paths maximum degree nodes paths pick highest maximum degree tie-breaking rule reflective typical policies employed internet higher degree nodes typically larger well-provisioned providers lower degree nodes general primary connection disagreement power law correctly models degree distribution as-level graph widely agreed distribution heavy-tailed main results specifically simulation results focus power law distributions hold equally heavy-tailed distributions weibull stub networks section alternate tie-breaking schemes random choice favoring lower degree nodes show tie-breaking rule affect results policy routing scheme traffic nodes routed bgppolicy classify edges peering edges customer-provider edges ases provider commercial relations isps give rise valley-free routing path sequence customer provider edges peering edge provider customer edges key difference policy routing shortest path routing case restricted choosing multiple shortest path routes compliant valley-free routing goal studying forms routing understand commercial policies isps significantly change observations network congestion traffic vector vector non-negative terms term signifying amount traffic nodes anda congestion edge due traffic vector routing scheme sum total amount traffic edge define edge congestion due traffic vector routing scheme maximum congestion edge graph edge-congestiona goal quantify congestion graph power law degree distribution shortest path policy routing schemes due traffic vectors specifically traffic vectors any-any corresponds traffic vector unit traffic pair ases simplistic model amenable analysis baseline comparison complex traffic vectors leaf-leaf order define model classify nodes graph stubs carriers stubs nodes customers words directing customer-provider edges graph customer provider peering edges considered bi-directed edges vertices incoming edges ases customers called stubs leaves graph model unit traffic pair stubs graph sources sinks traffic clout model approximates fact well-placed sources sources high degree connected high degree neighbors transmit larger amounts traffic sources case stubs average degree neighbors increasing function previous case traffic nodes stubs function stubsa sophisticated traffic vectors admittedly choice models internet routing internet traffic matrices unrealistic model real phenomena popularity ases make claims realism models analysis reasons simplicity lack realistic internet-wide traffic traces simulation set-up simulations serve purposes corroborate theoretical results characterize congestion realistic network models considered analysis simulations run sets graphs set graphs maps internet topology collected month intervals nov april number nodes graph set maximum april set set graphs synthetic power law graphs generated inetin set generate graphs sizes varying nodes mentioned earlier order implement leaf-leaf clout models communication identify stubs network note degree greater additionally order implement policy routing classify edges peering nonpeering edges real graphs employ relationship inference algorithms gao label edges graphs peering customer-provider edges algorithms global bgp tables infer relationships nodes relationships identify stubs nodes providers node henceforth refer real graphs accurately labeled real graphs alrs labeling 
edges identifying stubs synthetic graphs inet tricky bgp information refer synthetic graphs labeled algorithms heuristically labeled synthetic graphs hlss algorithms classifying nodes key implementing leaf-to-leaf communication edges key implementing policy routing synthetic graphs discuss stub identification identify stubs synthetic graphs edge assign provider notice explicitly identify peering edges edges nodes identical degree bidirectional identify stubs graphs labeled simulations metric interest generate graphs nodes varying random seed inet graph generator report average metric graphs error rate false positives false negatives max edge congestion number nodes real labels learned labels accuracy stub identification accuracy edge labeling figure accuracy heuristics graph left shows accuracy simple stub identification algorithm graph shows error maximum congestion due machine-learning based edge-classification algorithm test accuracy stub-identification algorithm real graphs comparing labels produced algorithm true labels alrs compute fraction false positives false negatives accuracy results shown figure note simple algorithm low error rate notice inference algorithms gao error intrinsically labels alrs inaccurate edge classification simply edges graph customer-provider edges purposes edge classification specifically results significant error maximum congestion real graphs employing policy routing results omitted brevity order improve accuracy labeling edges resort machine learning algorithms coming good machine learning algorithm classification challenging task huge bias customer-provider edges graphs roughly edges customer-provider edges -nearest neighbor algorithm classifying edges peering non-peering edge unlabeled graph classified peering edge edges similar labeled graph peering edges similarity edges judged based degrees respective end points neighboring vertices measure accuracy procedure applying real graphs comparing classification true labels machine learning algorithm accuracy peering edges accuracy customer-provider edges purposes computing worst congestion graph low accuracy labeling fact shown figure labeling real graphs algorithm results error worst congestion false positives nodes identified stubs algorithm stubs alr false negatives stubs alr identifies stubs algorithm employing policy routing comparison congestion computed alrs importantly trends congestion growth identical cases topologies addition power law graphs study congestion power law trees exponential topologies comparison power law graphs insight significance density edges graph model interesting generative models power law topologies result exponential distributions fringe cases power law tree topologies evolve preferential connectivity model generate exponential topologies modify inetto generate exponential degree distribution add edges inet usual exponent exponential graphs nodes chosen total number edges exponential graph close power law graph nodes note due lack real data exponential graphs good labeling edges nodes perform experiments policy routing leaf-leaf clout traffic models analytical results section show expected maximum edge congestion power law graph specifically congestion edge highest degree nodes grows route unit flow pairs vertices shortest path preferential connectivity generative model barabasi model fixed constant parameter model starts complete graph nodes set nodes called core graph graphs grows time-steps graph time denoted time stepa node added network node picks nodes random connects vertexa probability picked degree vertex timea total degree nodes timea end steps process generate power law degree distribution easy resulting power law graph matter power law graph maximum node degree order show lower bound congestion power law graph plan roughly edge highest degree nodes core call edge vertex graph shortest path tree rooted vertex show expectation trees edge trees expected number nodes subtree rooted edge lower bound routes connection precisely defined shortest path trees congestion edge sum congestions edge shortest path trees shortest path trees congestion employ heuristic hill-climbing estimate exponent minimizes error number edges edge total congestion edge note necessarily congested edge graph maximum congestion worse theorem theorem expected maximum edge congestion power law graph exponent grows route unit flow pairs vertices shortest path distance nodes refers number hops shortest path nodes make technical assumptions assume highest degree nodes graph small numbers assume node graph number nodes distance ofa number nodes distance words centrally graph small refers distance lesser half nodes assumptions justified experimental evidence prior analysis preferential connectivity generative model begin technical lemma lemma maximum integer vertices lie distance nodes lie distance node core graph node core nodes lie distance proof prove nodes lie distance vertices core neighbors nodes lie distance vertex core graph begin showing nodes lie distance extend nodes distance levela denote set nodes distance remove graph vertices level higher remaining graph vertices definition assume vertices level nodes levels implying nodes lie distance number nodes level nodes level residual graph connected nodes level number size neighbor set level case nodes level highest degree nodes graph case minimum degree node level size neighborhood level total degree nodes level figure model pictorial view graph set quantity assumption constant fraction apply technique compute number nodes level number nodes level distance defined lemma denote set nodes distance node core graph figure lemma proof theorem parts shows trees toa edge lemma expected number shortest path trees nodes edge proof tree node essentially breadth tree starting level tree edge contained tree hand nodes depths tree closer loss generality case shortest path froma break ties favor paths high degree nodes path implies contained tree trees correspond equidistant show nodes equidistant implies result observe pick random node graph conditioned fact node lies distance constant probability node lies distance argument congruent lemma show number nodes distance constant fraction number nodes distance nodes distance number lemma lie nodea picked set distance argument probability node lies distance constant nodes set distance prove treea high congestion lemma leta shortest path tree edge expected congestion edge tree proof loss generality closer show degree ina implies result level denote set nodes distance tree distance neighbors lie levels tree note assumption number nodes lying levels tree number nodes distance greater number definition denote set nodes lie levels tree arrived graph step note nodes level higher set constant fraction nodes lie levels tree observe probability node entering graph time step attaches roughly probability increases graph larger larger related removing quarter nodes entering graph consideration fact nodes attach nodes arriving conclude number neighbors arrive step total degree neighbors lie levels tree observation previous paragraph neighbors lie set note node entered graph size graph varied nodes probability node attached varied node roughly equally attach factor degree tree number neighbors lie levels fact constant fraction nodes lie levels tree constant fraction neighbors lie levels tree expectation result fact degree 
fraction nodes number nodes fraction nodes equidistant nodes ratio shortest path tree degree original degree number nodes node node figure simulation support analytical model figure shows fraction shortest path trees edge figure plots ratio degrees random shortest path tree degrees graph max edge congestion number nodes max link congestion figure maximum edge congestion plotted function inetgenerated graphs figure plots functions aid comparison experimental support section report experimental results show theoretical results obtained hold preferential connectivity model internet-like graphs generated inetunfortunately graphs generated inethave values ofa consistent observed properties internet graph decreases time discuss detail subsequent section order validate theoretical results observe asymptotic behavior congestion fixed ofa modify inetcode fixed ofa recalculating reported average multiple runs simulation random seeds generating graphs figure plots fraction nodes equidistant note fraction lies consistent result lemma constant fraction trees case edge figure compares degrees highest degree nodes graph degrees shortest path tree max edge congestion number nodes power law tree exponential congestion normalized rank edges nodes nodes nodes nodes nodes nodes nodes nodes maximum edge congestion distribution edge congestion figure edge congestion shortest path routing any-any communication figure left shows maximum edge congestion figure shows distribution congestion links number links normalized case figure left plots worst congestion exponential graphs preferential connectivity trees random nodea find ratio degrees consistently similarly ratio degrees increasing consistent findings lemma finally plot maximum congestion graphs generated inetas function number nodes graph figure note maximum congestion scales roughly corroborates finding theorem simulation results section present results simulation study inet-generated graphs henceforth graphs generated inet alter inet chooses depend show results shortest-path routing policy-based routing cases present results any-any communication model leaf-leaf model finally clout model shortest-path routing figure shows maximum congestion power law graphs generated inetas function number nodes any-any model communication trend graph clear maximum congestion internet-like power law graphs scales worse notice slope maximum congestion curve slightly increasing explained mentioned earlier inetchooses exponent power law degree distribution function number nodes notice absolute empirically determined constants number ases internet november max edge congestion number nodes power law tree congestion normalized rank edges nodes nodes nodes nodes nodes nodes nodes nodes maximum edge congestion distribution edge congestion figure edge congestion shortest path routing leaf-leaf communication figure left shows maximum edge congestion figure shows distribution congestion links normalized decreases increases lower bound suggests slope function log-log plot steadily increase fact point expect curve scale roughly worst rate growth congestion figure shows maximum congestion power law trees exponential graphs power law trees generate exponent increasing number nodes tree exponents significantly higher power law graphs notice edge congestion power law trees grows faster compared graphs expected trees fewer edges lower bound maximum congestion holds equally trees satisfying power law degree distributions predicts slope curve trees consistent graph hand notice edge congestion exponential graphs smaller compared power law graphs fact edge congestion exponential graphs approximately linear growth explained intuitively recall choose exponent exponential distribution match total number edges -node power law graph power law distribution heavier tail compared exponential distribution edges incident low degree nodes low degree vertices exponential graph connected low degree vertices edges incident low degree nodes absorb large amount congestion leading lower congestion edges incident high degree nodes increases degree distribution resulting slow increase congestion figure show congestion links power law graph notice higher numbers nodes distribution congestion uneven set graphs leaf-leaf communication model shown figure worst congestion consistently abouta times worst congestion any-any model explice max edge congestion number nodes max link congestion congestion normalized rank edges nodes nodes nodes nodes nodes nodes nodes nodes maximum edge congestion distribution edge congestion figure edge congestion shortest path routing clout model communication figure left shows maximum edge congestion figure shows distribution congestion links normalized itly shown graph congestion edges plotted figure displays similar trend any-any model distribution uneven number nodes increases results clout model interesting resulting maximum congestion graph scaling worse figure shows maximum congestion scales worse total traffic graph grows roughly any-any model smaller absolute values graphs generated inetfor larger values reason increasing slope curve graph congestion edges model shown figure equally interesting compared figure leaf-leaf model figure unevenness congestion pronounced clout model communication words nonuniform traffic demand distribution exacerbate poor congestion scaling internet-like graphs policy-based routing figure shows maximum edge congestion communication models policy based routing any-any leaf-leaf models shown figure maximum edge congestion scales identically shortest path routing compared figure surprisingly clout model figure congestion policy based routing scales compared shortest-path routing figure compares maximum congestion obtained policy routing shortest path routing notice curves overlapping policy routing slightly worse graph small graph grows larger observation explained policy routing disallows paths general force connections routed longer paths increase traffic max edge congestion number nodes any-to-any leaf-to-leaf max edge congestion number nodes policy routing any-any leaf-leaf communication clout model figure policy-based routing maximum edge congestion policy-based routing hlss max edge congestion number nodes policy routing shortest-path routing max edge congestion number nodes policy routing shortest-path routing edge congestion synthetic graphs edge congestion real graphs figure policy-based shortest path routing comparison edge congestion shortest path policy based routing any-any model network leading higher congestion smaller graph size size graph grows shortest paths result constraints policy-based routing significant impact path lengths graph fact higher numbers nodes policy routing provide congestion properties albeit marginally shortest path routing shortest path routing picks paths high degree nodes fraction paths allowed policy routing involve peering edge case policy routing moves traffic hot-spots partially alleviating problem reason congestion scaling clout model policy-routing opposed shortest-path routing order verify observation artifact machine learning-based labeling algorithms plot curves alrs figure display trend policy routing starts worse shortest path marginally increases summarize policy routing worsen congestion internet-like graphs contrary common intuition suggest fact policy routing perform marginally max edge congestion number nodes preferring higher degrees preferring lower degrees random shortest paths figure tie-breaking rules shortest-path routing figure plots variations breaking ties shortest path routing shortest path routing shortest path routing variations mentioned section shortest path routing scheme multiple shortest paths nodes pick path higher degree nodes route flow poor congestion properties power law 
graphs result tie breaking rule alternate rule favors low degree nodes perform alleviating congestion high degree nodes order confirm results robust tie-breaking rules performed experiments variants tiebreaking rule favoring paths lower degree nodes choosing random shortest path choice experiments set constant inet compare resulting relations maximum edge congestion number nodes figure depicts noticeable difference types tie-breaking methods holds true leaf-leaf clout models traffic results omitted brevity vertex pairs multiple shortest paths conclude scheme breaking ties favoring paths higher degree nodes skew results improving congestion scaling properties analytical simulation results shown maximum congestion internet-like power law graphs scales poorly graph size results show edges high degree nodes typically peering edges backbone carriers internet core congested quickly time edges situation enhance scaling properties network change routing algorithm employed ases internet bgp-style routing alter intercone edge congestion avg degree nodes figure degree congestion edge congestion versus average degree nodes incident edge any-any model shortest path routing congestion higher edges high average degree nection address issue altering structure internet graph specifically focus mechanisms increasing parallelism edges neighboring nodes internet as-graph adding parallel network links examine ways additional links network effect bad scaling maximum congestion specifically model link replaced multiple links pair nodes share traffic load ideally provide sufficient parallel links pair nodes total congestion edge divided equally parallel links worst case grows rate size network number parallel links pair nodes change network grows achieve goal notice change alter degree-structure graph alteration due increased connectivity adjacent nodes words require edges nodes adjacent fact network level incorporates concept parallel links power law structure graph considers adjacency ases link sprint instance modeled single edge real world sprint ases connected large number places world degree connectivity internet today order guide addition parallel edges adjacent nodes observe clear correlation average degree edge congestion figure plots congestion edge average degree nodes incident show results shortest path routing inet generated graph nodes any-any results alternate methods alleviating congestion refer note routing based original degrees nodes max edge congestion number nodes sum degrees product degrees min degree max degree figure alleviating congestion maximum relative congestion shortest path routing any-any model parallel links added graph sum product max functions communication figure shows edges incident high degree nodes higher congestion incident lower degree nodes suggests good choice number parallel links substituting edge graph depend degrees nodes edge connects examine ways adding parallel links based observation number links nodes function degrees nodes functions sum degrees nodes product degrees nodes maximum degrees minimum degrees compute maximum relative congestion functions maximum edges congestion edge divided number parallel links edge maximum congestion internet graphs models adding edges shown figure notice surprisingly parallel links added functions maximum relative congestion graph scales linearly implies adding parallelism edges internet-like graphs simple functions ensure uniform scaling link capacities based moore law-like technology trends maintain uniform levels congestion network avoid persistent hot-spots networking modeling congestion scaling theoretical studies aimed studying properties large-scale internetlike graphs analyzing congestion scaling properties general graphs section present overview studies studies aiming characterize properties internet-like graphs class proposed models graph evolution result power law degree distribution notable examples include power law random graph model aiello bi-criteria optimization model fabrikant preferential connectivity model barabasi albert class studies category aimed analyzing properties power law graphs based inferences drawn measurements real data primary application class studies construct realistic generators internet-like graphs problem characterizing congestion graphs specifically designing routing schemes minimize congestion studied widely approximation online algorithms worst congestion graph inversely related maximum concurrent flow achieved graph obeying unit edge capacities turn related quantity called cut ratio graph aumann characterize relationship maximum concurrent flow cut ratio maximum concurrent flow achieved graph factor cut ratio number nodes okamura give bounds cut ratio special graphs algorithmic approaches problem survey multi-commodity flow relaxation problem find fractional routing good congestion properties demand pairs nodes split multiple paths fairly good approximation factors achieved problem proposed routing schemes distributed involve lot book-keeping require solving large linear programs makes impractical wide-area internet routing work shares similar goals gksanditis arguments max-flow min-cut theory paper shows graphs obeying power law degree distribution good expansion properties routing witha congestion close optimal achieved regular expanders follow-up paper mihail prove similar results expansion properties graphs generated preferential connectivity model results presented chapter contrast contemporary papers focus specifically commonly-used routing algorithms policy routing shortest path routing show power law graphs exhibit poor scaling properties respect routing algorithms analysis caveats summary observation implications chapter addressed question worst congestion internet-like graphs specifically as-level scales graph size key observations shown table combination analytical arguments simulation experiments showed maximum congestion scales poorly internet-like power law graphs simulation results showed non-uniform demand distribution nodes exacerbates congestion scaling found surprisingly policy routing adjacent ases worsen congestion scaling power law graphs fact marginally compared shortest-path routing note current trend growth internet locations expected maximum congestion internet-like preferential attachment power law graphs unit traffic demands shortest path routing scales number nodes graph non-uniform traffic matrices considered congestion scaling properties worsen significantly policy routing results similar marginally congestion shortest pathbased routing poor congestion scaling properties internet graph fixed simple heuristics alter topology network adding parallel edges adjacent nodes proportion minimum degrees result linear scaling congestion table congestion scaling internet summary key observations scaling properties internet network eventually perpetual hot-spots fortunately intuitively simple fix problem adding parallel links adjacent nodes ases graph simple functions degrees maximum congestion graph scale linearly case capacity links graph grow faster rate fact natural evolution link capacities moore law sufficient accommodate growing traffic demand network discuss important caveats analysis simulations analysis caveats mention results presented chapter hold general power law graphs results simulation-based analytical meant graphs representing internet connectivity level results apply power law random graphs note preferential connectivity model yield graphs similar degree distribution as-level graph clear model accurately captures as-level connectivity dynamics economic considerations peering simulations measured as-level graphs show key observations hold existing graph current dynamics connectivity ases continues hold future expect results hold future as-level graphs analysis extend router-level graphs analyzing router-level topology harder compared as-level graph due reasons topology internet router-level graph existing maps internet router-level 
topology rocketfuel maps considered incomplete ip-level routing modeled easily shortest path routing simple inter-domain policy-based routing require knowledge traffic engineering employed ases internet finally researchers power law graphs resulting probabilistic models power law random graph models approximate router-level connectivity recent work shown models error-prone explicitly technological economic constraints trade-offs router interconnections graphs arising trade-offs referred heuristically optimal topologies analytically-tractable models generating topologies analysis router-level interconnection challenging open problem key results study congestion scaling internet graph simply summarized congestion edges internet graph scale poorly growing size network result end-networks employ routing-based mechanisms route control extract good performance future network simple heuristics adding parallel edges adjacent vertices graph significantly improve congestion scaling properties chapter conclusions open problems chapter outline contributions thesis present questions future consideration thesis summary dissertation sought answer central question routing-based mechanisms well-connected end-networks employ improve internet access experience specifically interested understanding end-networks today required special support internet routing protocol suite routing infrastructure obtain performance answer question short sufficient end-networks simply make clever small number routes destination determined internet routing protocol achieve performance manner end-networks require current routing protocol support special-purpose infrastructures rely purely end point-based mechanisms contributions dissertation makes important contributions foremost contributions analysis benefits multihoming route control implementation evaluation simple practical route control system addition present first-ever characterization performance bottlenecks inside isp networks study impact growth congestion bottlenecks future end-to-end performance present overview contributions properties wide-area bottlenecks key challenge optimizing internet performance well-connected end-networks identify heavily-loaded network links constrain performance years common knowledge wide-area bottleneck links limited folklore bottlenecks widely believed confined edges internet domains peering links link utilization supposedly high dissertation conducted quantitative study characteristics typical wide-area bottleneck links probed large number paths well-connected machines located universities routers inside carrier isps developed suite tools automatically identify characterize bottleneck links paths tools found bottleneck links low bandwidth prevalent wide-area internet inside small regional providers deduced significant correlations likelihood wide-area links appearing bottlenecks latencies links finally observed contrary popular perception wide-area bottlenecks evenly split peering intra-domain links benefits multihoming route control comparison overlay routing constrained bottlenecks exist wide-area internet internet rich topology makes route past studies circumventing wide-area performance bottlenecks advocated overlay routing approach end-points route traffic intermediate overlay nodes deployed internet helps end-points bypass default routes determined internet routing protocol bgp avoid bottlenecks routes contrast believed simpler approach called multihoming route control offer similar performance improvements overlay routing strategy end-network buys connectivity isps intelligently schedules traffic isps idea multihoming route control introduced years ago commercial products routescience sockeye true extent benefits products dissertation quantified potential benefits multihoming route control improving web download performance internet end-points resilience service interruptions internet-scale experiments conducted collaboration akamai technologies showed multihoming isps intelligently scheduling transfers isps end-network potentially improve internet response times transfer speeds availability relative single isp connection showed employing isp connections offers additional benefit isps carefully selected order realize maximum improvements multihoming route control bgp routing-compliant provide route selection flexibility overlay routing internet-scale measurement showed seemingly limited flexibility multihoming route control offers marginally inferior internet performance overlay routing transfer speeds multihoming isps inferior relative overlay routing observation suggests definite hope extracting good performance bgp protocol unnecessary replace bgp protocol altogether route control practice extended work potential benefits route control implementing evaluating multihomed route control system showed practice route control products employ simple design operational principles extract nearly-optimal internet performance multihoming trace-driven emulations enterprise network isp connections showed proposed schemes improve web performance multihomed end-networks compared single isp web performance proposals performance exposed important flaws design current route control appliances showed conventional practice employing historical measurement samples monitor predict isp performance fact result sub-optimal performance congestion scaling bottlenecks observations multihoming showed today routing protocols topology support good internet performance time internet grow size traffic volumes increase time isps upgrade network link capacities accommodate growing traffic load thesis observed improvement link speeds future internet topology routing fact load links network increase faster rate links evolve persistent bottlenecks turn significantly limit future internet performance specifically analyzed simple model routing topology internet autonomous system level as-level showed congestion key links network grow poorly number ases result implies carefully alter internet topology routing guarantee good end-to-end performance future network end large-scale simulations showed small fixes internet as-level interconnections drastically reduce congestion network observed adding parallel edges adjacent ases proportion minimum degrees ensure good internet performance lessons longer term measurement benefits multihoming route control established efficacy technique current internet time key observations study multihoming continue applicable future internet architectures dissertation argues richer first-hop connectivity network end-points irrespective redesign internet future basic principle offer advantages endpoints freedom route traffic isp choice ability optimize specific performance metrics relying isps provide knobs work shows end-to-end performance optimization coupled optimizing behavior routing protocol research problem progress parallel development tools endpoint route control lesson learn nice internet routing protocol performance aware perspective optimizing end-to-end performance protocol provide reasonable choice routes select current bgp protocol effective supporting interface choosing routes bgp suffers pathologies lack security unpredictability slow reconvergence addressed separately quest wide-area routing protocol future future work discuss key issues left open dissertation applicable outline approaches address longer-term measurement analyses study wide-area internet bottlenecks relied measurements collected short timescales derive likelihood links types appearing bottlenecks natural extension investigate persistence bottlenecks time-scales congestion wide-area bottlenecks change similarly observations benefits route control based data collected week-long period complement observations analyses isp performance longer time-scales months year understand choice set isps multihoming change long time periods impact subscriber performance subscription cost explaining diminishing returns section showed benefit multihoming isps informally explained fact fourth isp add limited amount diversity provided well-chosen isps diminishing returns explained formally analyzing hierarchical nature isp interconnections explained section isp hierarchy composed tiers highest tier consists isps vast global reach implies typical end-to-end paths traverse tierisps high likelihood implication paths distinct isps tiers random internet destinations merge tiernetwork greater degree overlap terms number routers isps lesser benefit employing multiple isps model likelihood end-to-end paths overlap extend model explain diminishing returns multihoming global effects multihoming route control mentioned section qiu study interactions multiple route control agents equilibrium authors conclude impact individual route control actions 
global rtt performance minimal assuming equilibrium exists work leaves issues open consideration route controlled traffic attain equilibrium dynamics interactions route control agents converging equilibrium widespread deployment route control result adverse interactions isp traffic engineering making traffic load due single end-network vastly unpredictable isps alter pricing structures response route control order smooth traffic attract customers unclear diminishes benefits route control identified study finally route control widely adopted open debate strategy end-network stay connected single isp adopt route control mention potential negative effects wide-spread deployment route control traffic fluctuations mitigated extent employing third-party route control services internap model third-party providers servicing large metropolitan area buys high-capacity uplinks large isps end-customers buy connectivity service third-party provider hand traffic service provider turn selects uplinks send making choice isp send service provider optimize goals load-balancing isp uplinks minimizing traffic fluctuations single isp link perspective isps approach allowing individual route control endpoints ensures multihomed traffic aggregate metropolitan area behaves predictable smooth fashion comparison overlay service providers route control providers run risk violation policies result easier deploy services cheaper subscribe comparison overlays time comparison endpoint control third-party route control approach limits flexibility endpoints endpoints longer optimize specific performance goals throughput opposed latency endpoints coordinate isp route selection remote destinations common ends branch offices single parent organization allowing party service provider control routing offer inferior performance allowing endpoints full control bgp dissertations showed bgp routes support good performance internet today observed section cooperative inter-domain traffic exchange isps reduce differences route control overlay routing approaches encouraging cooperation neighboring isps ensuring isps reveal internal structure neighbors approaches work pairs neighboring isps interesting open issue understand techniques extended end-to-end paths functional bgp require bgp completely eliminate differences overlay routing bgp-based path selection models congestion scaling analysis scaling congestion internet graph limited interconnections isps unclear isp interconnection graph evolve maintain power law structure large isps acquire merge small large isps future internet isps belong kinds large isps operate backbones current tierisps small isps current tierisps catering home dsl connections interesting study scaling properties alternate interconnections stated section analysis congestion scaling extend internet router-level graph develop simple approximations router-level topology investigate congestion scaling analysis simulations analysis neglects impact technologies content distribution networks cdns serving data locations close end-clients cdns contribute alleviating traffic load key non-access internet links effect modeled analysis forcing path lengths upper-bound small constant bibliography aiello chung random evolution massive graphs proc annual symposium foundations computer science pages akamai technologies content distribution service http akamai akamai technologies edgescape http akamai html services edgescape html akamai technologies sureroute http akamai html services sureroute failover html june akella chawla kannan seshan scaling properties internet graph proc twenty annual acm symposium principles distributed computing boston july akella chawla kannan seshan scaling properties internet graph technical report cmu-cs- cmu pittsburgh pennsylvania akella maggs seshan shaikh sitaraman measurement-based analysis multihoming proc acm sigcomm karlsruhe germany august akella pang maggs seshan shaikh comparison overlay routing multihoming route control proc acm sigcomm portland august akella seshan shaikh empirical evaluation wide-area internet bottlenecks internet measurement conference miami november akella seshan shaikh multihoming performance benefits experimental evaluation practical enterprise strategies proc usenix annual technical conference boston june akella seshan shenker stoica exploring congestion control technical report cmu-cs- cmu pittsburgh pennsylvania june albert barabasi topology evolving networks local events universality physical review letters amini shaikh schulzrinne issues inferring internet topological attributes proceedings spie itcom august andersen balakrishnan kaashoek morris resilient overlay networks proc symposium operating system principles banff canada october andersen balakrishnan kaashoek rao improving web availability clients monet proc networked systems design implementation applegate cohen making intra-domain routing robust changing uncertain traffic demands understanding fundamental tradeoffs proceedings acm sigcomm pittsburgh august aumann rabani approximate min-cut max-flow theorem approximation algorithm siam journal computing awduche chiu elwalid widjaja xiao overview principles internet traffic engineering internet engineering task force rfc fortz rexford thorup traffic engineering traditional routing protocols ieee communications magazine october babcock babu datar motwani widom models issues data stream systems proceedings acm symposium principles database systems pods madison june barabasi albert emergence scaling random networks science bbc news edition full speed ahead japan broadband http news bbc technology stm bgp tables oregon routeviews project http moat nlanr net data bornstein sureroute performance subscription july personal communication brakmo malley peterson tcp vegas techniques congestion detection avoidance proc acm sigcomm august brecht pariag gammo accept strategies improving web server performance proc usenix annual technical conference june caida cooperative association internet data analysis caida tools http caida tools caida tools skitter http caida tools measurement skitter cardwell savage anderson modeling tcp latency proc ieee infocom tel aviv israel march carter crovella measuring bottleneck link speed packet-switched networks performance evaluation october cormen leiserson rivest introduction algorithms mit press chapter downey pathchar estimate internet link characteristics proceedings acm sigcomm cambridge august emulab network emulation testbed http emulab net estan varghese directions traffic measurement accounting proc acm sigcomm pittsburgh august networks big-ip link controller http products bigip linkcontroller fabrikant koutsoupias papadimitriou heuristically optimized trade-offs paradigm power laws internet icalp pages faloutsos faloutsos faloutsos power-law relationships internet topology proc acm sigcomm august fang shivakumar garcia-molina motwani ullman computing iceberg queries efficiently internaational conference large databases vldb york august feamster andersen balakrishnan kaashoek measuring effects internet path faults reactive routing proc acm sigmetrics june feamster borkenhagen rexford guidelines interdomain traffic engineering acm sigcomm computer communication review october fenner flaxman frieze high degree vertices eigenvalues preferential attachment aph random pages gao inferring autonomous system relationships internet ieee acm transactions networking december gao wang extent path inflation routing policies proc ieee globecom pages gkantsidis saberi mihail conductance congestion power law graphs proc acm sigmetrics goldenberg qiu xie yang zhang optimizing cost performance multihoming proc acm sigcomm portland govindan paxson estimating router icmp generation delays proc passive active measurement workshop pam fort collins gunnar johansson telkamp traffic matrix estimation large backbone comparison real data internet measurement conference imc taormina italy october guo chen chiueh experiences building multihoming load balancing system proceedings ieee infocom hong kong march guojun yang crowley agarwal network characterization service ncs proc ieee international symposium high performance distributed computing 
hpdc san francisco august mao steenkiste wang locating internet bottlenecks algorithms measurements implications proc acm sigcomm portland august hyun broido claffy traceroute bgp path incongruities technical report caida california san diego http caida outreach papers asp ietf traffic engineering working group http ietf html charters tewg-charter html internap network services flow control platform http internap iyengar challenger improving web server performance caching dynamic data usenix symposium internet technologies systems jacobson pathchar tool infer characteristics internet paths ftp lbl gov pathchar jain dovrolis pathload measurement tool end-to-end bandwidth proc passive active measurement workshop pam fort collins march jeffrey semke jamshid mahdavi matthew mathis automatic tcp buffer tuning acm sigcomm computer communication review october khanna zinky revised arpanet routing metric proc acm sigcomm pages austin september koutsoupias papadimitriou worst-case equilibria lecture notes computer science krishnamurthy wang network-aware clustering web clients proceedings acm sigcomm stockholm sweden august krishnamurthy wills improving web performance client characterization driven server adaptation proc international world wide web conference labovitz ahuja bose jahanian delayed internet routing convergence ieee acm transactions networking june lai baker nettimer tool measuring bottleneck link bandwidth proc usenix symposium internet technologies systems march leighton introduction parallel algorithms architectures arrays trees hypercubes morgan kaufmann publishers leonardi on-line network routing online algorithms state art pages springer alderson willinger doyle first-principles approach understanding internet router-level topology proc acm sigcomm mah pchar tool measuring internet path characteristics http employees bmah software pchar june mahajan wetherall anderson negotiation-based routing neighboring isps proc networked systems design implementation mao rexford wang katz accurate as-level traceroute tool proc acm sigcomm karlsruhe germany august mathis mahdavi diagnosing internet congestion transport layer performance tool proc inet montreal canada june mathis mahdavi floyd romanow tcp selective acknowledgement options request comments internet engineering task force october mcquillan richer rosen routing algorithm arpanet ieee transactions communications medina lakhina matta byers brite approach universal topology generation mascots mihail papadimitriou saberi connectivity properties internet topology focs pages mitchell machine learning mcgraw-hill companies morissey route optimizers mapping route network computing december http nwc showitem jhtml docid nahum rosu seshan almeida effects wide-area conditions server performance proc acm sigmetrics cambridge june national laboratory applied network research routing data http moat nlanr net routing rawdata nortel networks alteon link optimizer http nortelnetworks products alteon optimizer norton internet service providers peering proceedings nanog albuquerque june nsnetwork simulator http isi nsnam okamura seymour multicommodity flows planar graphs journal combinatorial theory padhye firoiu towsley kurose modeling tcp throughput simple model empirical validation proc acm sigcomm pages vancouver canada september padhye floyd identifying tcp behavior web servers proc acm sigcomm august pang akella krishnamurty seshan shaikh responsiveness dns-based network control internet measurement conference imc taormina italy october park lee effectiveness route-based packet filtering distributed dos attack prevention power-law internets proc acm sigcomm san diego california august paxson end-to-end internet packet dynamics proc acm sigcomm pages september planetlab http planet-lab qiu yang zhang shenker selfish routing internet-like enviroments proc acm sigcomm karlsruhe germany quoitin uhlig pelsser swinnen bonaventure interdomain traffic engineering bgp ieee communications magazine radb whois server whois radb net radware peer director http radware content products rainfinity overview rainconnect http rainfinity products overview pdf rether networks internet service management device http rether ismd htm ripe whois service whois ripe net roughan thorup zhang traffic engineering estimated traffic matrices internet measurement conference miami november roughgarden tardos bad selfish routing ieee symposium foundations computer science pages routescience technologies pathcontrol http routescience products savage collins hoffman snell anderson end-to-end effects internet path selection proceedings acm sigcomm boston september savage detour case informed internet routing transport ieee micro semke mahdavi mathis automatic tcp buffer tuning http psc networking projects auto shaikh tewari agrawal effectiveness dns-based server selection proceedings ieee infocom anchorage april sockeye networks http sockeye spring mahajan anderson quantifying internet path inflation proc acm sigcomm august spring mahajan wetherall measuring isp topologies rocketfuel proc acm sigcomm pittsburgh august stewart bgp inter-domain routing internet addison-wesley stonesoft multi-link technology http stonesoft files products stonegate multi-link technology whitepaper pdf october subramanian agarwal rexford katz characterizing internet hierarchy multiple vantage points proceedings ieee infocom june tangmunarunkit govindan jamin shenker willinger network topology generators degree-based structural proc acm sigcomm pittsburgh pennsylvania august tangmunarunkit govindan shenker internet path inflation due policy routing spie itcom august tao fei gao guerin kurose towsley zhang exploring performance benefits end-to-end path switching international conference network protocols november tinyproxy http tinyproxy sourceforge net november traceroute maintained thomas kernen http traceroute oregon routeviews project http routeviews winick jamin inetinternet topology generator technical report michigan technical report cse-tr- yahoo http bbapply yang nira internet routing architecture proc acm sigcomm workshop future directions network architecture fdna august zhang duffield paxson shenker constancy internet path properties proc acm sigcomm internet measurement workshop imw november zhang paxson shenker stationarity internet path properties routing loss throughput technical report icsi center internet research zhang roughan lund donoho information-theoretic approach traffic matrix estimation proceedings acm sigcomm pittsburgh august 
aditya akella aditya cmu game-theoretic analysis tcp aditya akella richard karp christos papadimitriou srinivasan seshan scott shenker cmu icsi berkeley aditya akella aditya cmu network collapse behavior caused network collapse internet aditya akella aditya cmu salvation socially responsible congestion control implemented end-points credit saving internet internet aditya akella aditya cmu salvation network survive greedy intelligent behavior internet aditya akella aditya cmu bother greed bad today internet stable end-points consciously social hard modify end-hosts greedy mechanism rely end-point behavior efficient operation mechanisms monitor dissuade aggressive behavior aditya akella aditya cmu outline tcp game results tcp game mechanisms nash equilibrium aditya akella aditya cmu tcp game tcp game flows attempt maximize application throughput flows modify aimd parameters provide reliability nash equilibrium flow gain throughput unilaterally changing parameter choice aditya akella aditya cmu tcp game analyze simplified version game parameters nash equilibrium efficiency nash equilibrium link goodput per-flow loss rate study symmetric nash equilibria aditya akella aditya cmu factors affecting nash equilibrium end-points show greed adjusting factor factors part environment end-point loss recovery mechanism reno sack primitive modern depends tcp implementation loss assignment routers bursty loss assignment randomized uniform losses congestion control parameters flows flows allowed vary parameters complete control end-point aditya akella aditya cmu outline tcp game results tcp game mechanisms nash equilibrium aditya akella aditya cmu results road-map fifo droptail buffers wide-spread today internet efficiency nash equilibrium tahoe reno sack-style loss recovery discuss red buffers briefly put results aditya akella aditya cmu fifo droptail buffering droptail buffers punish bursty behavior unintentionally observed designers red aqm flows bursty transmission incur losses proportional burstiness aimd flows incur losses bursts size parameter aditya akella aditya cmu results fifo droptail buffers sample greedy flows don gain large flows observe burst losses reno severe reaction time-outs kicks reno-style loss recovery flows vary keeping per-flow loss rate link goodput flow aditya akella aditya cmu results fifo droptail buffers sample greedy flows gain burst losses per-flow loss rate link goodput reno-style loss recovery flows vary keeping flow aditya akella aditya cmu results fifo droptail buffers sample nash equilibrium efficient goodput high loss rate low greedy behavior work unfair aiad per-flow loss rate link goodput reno-style loss recovery flows vary aditya akella aditya cmu red buffering red buffers spread losses uniformly flows identical loss -age flows irrespective parameters greater greed flows small increase loss rate bursty flows experience burst losses unlike droptail buffers aditya akella aditya cmu results red buffers sample aggression good tcp sack high loss rate doesn affect goodput red greater aggression minor increase loss rate per-flow loss rate link goodput sack-style loss recovery flows vary flow aditya akella aditya cmu results red buffers sample nash equilibrium inefficient parameter setting aggressive loss rate high potential congestion collapse sack-style loss recovery flows vary per-flow loss rate link goodput aditya akella aditya cmu results tcp game summary high inefficient efficient unfair reno high inefficient high inefficient tahoe reddroptail sack high inefficient high inefficient aditya akella aditya cmu discussion question selfish congestion control endanger network efficiency common intuition flows gain aggressive answer necessarily true traditional setting reno end-points droptail routers network operates fine selfish behavior selfish behavior detrimental modern loss recovery queue management schemes aditya akella aditya cmu outline tcp game results tcp game mechanisms nash equilibrium aditya akella aditya cmu mechanisms nash equilibrium mechanisms explicitly counter aggressive behavior hot topic past fair queuing discourages aggressive behavior per-flow state red-pd afd explored lighter mechanisms aim ensure fair bandwidth allocation requirement stringent preferential dropping needed ensure reasonable nash equilibrium aditya akella aditya cmu choke simple stateless scheme small modification red loss rategoodput flow choke simple stateless amount punishment aggressive flows makes marginal advantage greed insignificant sack flows varying aditya akella aditya cmu choke cont loss rategoodput flow nash equilibrium cases impossible ensure fair queuing choke encourages makes aggressive risky choice sack flows nash equilibrium aditya akella aditya cmu summary greedy congestion control lead inefficient operation traditional reno host-droptail router setting greedy behavior bad situations fortunately ensure desirable nash equilibrium simple stateless mechanisms aditya akella aditya cmu back-up back-up back-up back-up aditya akella aditya cmu choke choke worked enforces high drop rate underutilization low levels multiplexing choke fixes problem aditya akella aditya cmu choke algorithm incoming packet pick packets random queue packets flow constants packets dropped drop packets red drop drop red aditya akella aditya cmu aimd analysis generic meets eye conclusions hold congestion control schemes burstiness property probing widely employed aditya akella aditya cmu change loss recovery historical evaluation difficult change bilateral protocol support implementation design decisions influenced system requirements 
detecting ddos attacks isp networks aditya akella ashwin bharambe mike reiter srinivasan seshan carnegie mellon abstract past solutions detecting denial service attacks identifying perpetrators targeted end-node victims attention problem isp perspective paper explores key challenges involved helping isp network detect attacks attacks external sites isp network propose detection mechanism router detects traffic anamolies profiles normal traffic constructed stream sampling algorithms addition isp routers exchange information increase confidence detection decisions initial results show individual router profiles capture key characteristics traffic effectively identify anomalies low false positive false negative rates profile construction extremely efficient supporting multi-gigabit speeds incremental deployment techniques signficantly impact effectiveness distributed reinforced decision making introduction distributed denial service ddos attacks increasingly frequent disturbance today internet recent research efforts explored designing mechanisms detecting attacks identifying perpetrators solutions aimed aiding end-node victims attack work problem point view internet service provider isp specifically design mechanisms isps quickly efficiently answer questions isp backbone ddos attack isp network carrying useless traffic traffic malicious traffic today bgp-driven internet large ases peer ases multiple pops points presence packet destination hands packet ases hot potato routing shortest route destination due factors packets destination traverse diverse disjoint paths dispersion makes hard detect ddos traffic single point necessitating distributed approach problem approach problem relies routers isp identifying traffic pattern violations achieved building traffic profiles stream sampling algorithms extremely small memory footprint sampling long time windows normal traffic profiles created current traffic profiles constructed smaller time windows current profile corroborate attack traffic aimed destination ultimately dropped destination normal router suspicious key challenge approach making robust ensure profiles detailed malicious attackers disguise attack traffic normal traffic avoid detecting normal variations traffic patterns including unusual flash crowds attacks finally profiles collected efficiently creating opportunities attack initial results stream-sampling schemes build profiles show profile normal traffic accurately identify anomalies low false-positive falsenegative rates locally router consume low per-packet computation memory high router speeds rely mechanism small traffic perturbations isp traffic trigger false positives approach made robust routers communicate suspicions routers backbone routers aggregate suspicions received routers deciding traffic aggregate belongs attack attacker circumvent mechanism successfully guise traffic fit normal profile large number routers attacker takes paths isp network sends large amount traffic easily caught choosing set statistics constitute normal profiles ensure approach mimicking profiles extremely hard describe approach greater detail section present discussion section profile-based ddos detection infeasible traffic statistics single destination backbone router traffic profile collected overhead detect intruders point time high-traffic destinations considered attack router track destinations traffic occupies greater fraction capacity outgoing link sample-and-hold algorithm call destinations popular destinations list unpopular traffic profiles router basically set fingerprints traffic popular destinations effective choice fingerprints key characterizing traffic streams computing arbitrary fingerprints require excessive memory computation identified fingerprints efficiently computed stream sampling algorithms total number bytes destination number prefixes sourcing traffic destination motivation set fingerprints characterizes source-subnet distribution catch random source spoofing attacker approximation flow-length distribution traffic destination sample specific points flow-length distribution keeping track number source addresses send fraction total traffic destination values sample-and-hold zeroeth moment computation algorithms computing fingerprints statistic computed sampling small interval time minute reflect typical day-of-week hour-of-day traffic patterns routers construct per-hour per-weekday normal traffic profiles averaging statistics hourly periods algorithm router statistics hand router algorithm popular destination number bytes destination baseprofile statistic current sampling interval continue step stop fingerprint denote computed current sampling interval denote standard deviation values fingerprint jvi flag flag parameter algorithm conf denote confidence router suspects attack set conf flag assigns weights fingerprint depending extent fingerprint contributes errors false-positive negatives err err sum false positive negative rates isp perform measurements determine configure routers packet perform operations run sample-and-hold probabilistically sample large-volume destinations requiring hash-table lookup update byte operation packet sampled update statistics destination counting statistic apply algorithm involving hash-table lookup update byte operations assume memory operations performed sram profile computation consumes cpu cycles support high data rates slightly mechanism destinations unpopular suddenly popular infeasible in-core traffic statistics destinations store base profiles disk computing statistics randomly sampled packets time router finds destination popular list pages base profile disk profile exists fingerprints flagged computes flags conf stated distributed detection destination conf router sends conf dest pair neighbors receiving information obtained base profile message neighbors discard duplicates compute aggregate aggr conf values received destination forward non-duplicates neighbors destination aggr exceeds pre-defined threshold router concludes destination attack consensus stage helps reduce errors identification attacks messages special low-bandwidth out-of-band icmp messages routers messages neighbors authenticated ttl timed periodically minute refreshed preliminary results provide set results local profile construction attack detection functionality traffic generated popular attack tools liketfnand trin traffic traces abilene backbone routers nsvarying number spoofed bytes source ips attack rate destinations levels popularity results show profiles generated sampling schemes stable accurate time hour periods fingerprinting schemes low false positive rate unpopular destinations popular destinations addition unpopular destinations irrespective number spoofed octets rate high attack traffic false negative rate close popular destinations false negative rate low-rate significant attacks improves rapidly rate attack increased uniformly true varying number spoofed source octets results fingerprinting algorithms encouraging experimentally analyze consensus algorithm discussion schemes detect subtle irregular traffic patterns obvious volume subnet count fingerprints provide valuable information distinguish flash crowd ddos attack hard attacker aiming orchestrate ddos attack single machine isp infrastructure circumvent mechanism fingerprints router track details flow-length distribution traffic due source subnets attacker arbitrarily spoofed source addresses attack packets makes detection trace-back simpler attacker spoofs small number source ips orchestrates heavy attack attack detected routers attack traffic significantly impacts normal operation isp network albeit low confidence consensus algorithm helps improve detection accuracy notice attacker train normal traffic profiles time identify attack traffic legitimate investigating balance reacting persistent traffic susceptible form attack randomization measurement intervals minute helps ensure attacker escape detection spreading attack traffic consecutive intervals avoid detection interval investigating important questions addressed include identifying attacks avoid measure profiles measuring exact space computation requirements modern router architectures measuring convergence effectiveness consensus algorithm partial incremental deployment issues identifying subset routers provide detection impact partial deployment consensus algorithms finally plan validate algorithms running real attack datasets alon matias szegedy space complexity approximating frequency 
moments proceedings stoc estan varghese directions traffic measurement accounting proc sigcomm floyd bellovin ioannidis kompella mahajan paxson pushback messages controlling aggregates network draft-floyd-pushbackmessages- txt gibbons tirthapura estimating simple functions unions data streams proc spaa jung krishnamurthy rabinovich flash crowds denial service attacks characterization implications cdns web sites proceedings conference honolulu 
aditya akella aditya cmu game-theoretic analysis tcp aditya akella richard karp christos papadimitriou srinivasan seshan scott shenker cmu icsi berkeley aditya akella aditya cmu network collapse behavior caused network collapse internet aditya akella aditya cmu salvation socially responsible congestion control implemented end-points credit saving internet internet aditya akella aditya cmu salvation network survive greedy intelligent behavior internet aditya akella aditya cmu bother greed bad today internet stable end-points consciously social hard modify end-hosts greedy mechanism rely end-point behavior efficient operation mechanisms monitor dissuade aggressive behavior aditya akella aditya cmu outline tcp game results tcp game mechanisms nash equilibrium aditya akella aditya cmu tcp game tcp game flows attempt maximize application throughput flows modify aimd parameters provide reliability nash equilibrium flow gain throughput unilaterally changing parameter choice aditya akella aditya cmu tcp game analyze simplified version game parameters nash equilibrium efficiency nash equilibrium link goodput per-flow loss rate study symmetric nash equilibria aditya akella aditya cmu factors affecting nash equilibrium end-points show greed adjusting factor factors part environment end-point loss recovery mechanism reno sack primitive modern depends tcp implementation loss assignment routers bursty loss assignment randomized uniform losses congestion control parameters flows flows allowed vary parameters complete control end-point aditya akella aditya cmu outline tcp game results tcp game mechanisms nash equilibrium aditya akella aditya cmu results road-map fifo droptail buffers wide-spread today internet efficiency nash equilibrium tahoe reno sack-style loss recovery discuss red buffers briefly put results aditya akella aditya cmu fifo droptail buffering droptail buffers punish bursty behavior unintentionally observed designers red aqm flows bursty transmission incur losses proportional burstiness aimd flows incur losses bursts size parameter aditya akella aditya cmu results fifo droptail buffers sample greedy flows don gain large flows observe burst losses reno severe reaction time-outs kicks reno-style loss recovery flows vary keeping per-flow loss rate link goodput flow aditya akella aditya cmu results fifo droptail buffers sample greedy flows gain burst losses per-flow loss rate link goodput reno-style loss recovery flows vary keeping flow aditya akella aditya cmu results fifo droptail buffers sample nash equilibrium efficient goodput high loss rate low greedy behavior work unfair aiad per-flow loss rate link goodput reno-style loss recovery flows vary aditya akella aditya cmu red buffering red buffers spread losses uniformly flows identical loss -age flows irrespective parameters greater greed flows small increase loss rate bursty flows experience burst losses unlike droptail buffers aditya akella aditya cmu results red buffers sample aggression good tcp sack high loss rate doesn affect goodput red greater aggression minor increase loss rate per-flow loss rate link goodput sack-style loss recovery flows vary flow aditya akella aditya cmu results red buffers sample nash equilibrium inefficient parameter setting aggressive loss rate high potential congestion collapse sack-style loss recovery flows vary per-flow loss rate link goodput aditya akella aditya cmu results tcp game summary high inefficient efficient unfair reno high inefficient high inefficient tahoe reddroptail sack high inefficient high inefficient aditya akella aditya cmu discussion question selfish congestion control endanger network efficiency common intuition flows gain aggressive answer necessarily true traditional setting reno end-points droptail routers network operates fine selfish behavior selfish behavior detrimental modern loss recovery queue management schemes aditya akella aditya cmu outline tcp game results tcp game mechanisms nash equilibrium aditya akella aditya cmu mechanisms nash equilibrium mechanisms explicitly counter aggressive behavior hot topic past fair queuing discourages aggressive behavior per-flow state red-pd afd explored lighter mechanisms aim ensure fair bandwidth allocation requirement stringent preferential dropping needed ensure reasonable nash equilibrium aditya akella aditya cmu choke simple stateless scheme small modification red loss rategoodput flow choke simple stateless amount punishment aggressive flows makes marginal advantage greed insignificant sack flows varying aditya akella aditya cmu choke cont loss rategoodput flow nash equilibrium cases impossible ensure fair queuing choke encourages makes aggressive risky choice sack flows nash equilibrium aditya akella aditya cmu summary greedy congestion control lead inefficient operation traditional reno host-droptail router setting greedy behavior bad situations fortunately ensure desirable nash equilibrium simple stateless mechanisms aditya akella aditya cmu back-up back-up back-up back-up aditya akella aditya cmu choke choke worked enforces high drop rate underutilization low levels multiplexing choke fixes problem aditya akella aditya cmu choke algorithm incoming packet pick packets random queue packets flow constants packets dropped drop packets red drop drop red aditya akella aditya cmu aimd analysis generic meets eye conclusions hold congestion control schemes burstiness property probing widely employed aditya akella aditya cmu change loss recovery historical evaluation difficult change bilateral protocol support implementation design decisions influenced system requirements 
cookies trust-boundaries cat accurate deployable flood protection martin casado aditya akella pei cao niels provos scott shenker casado cao stanford aditya cmu niels google shenker icsi berkeley abstract packet floods targeting victim incoming bandwidth notoriously difficult defend number solutions proposed network capabilities thirdparty traffic scrubbing overlay-based protection suffer drawbacks limit applicability practice propose cat network-based flood protection scheme cat flows performa three-way handshake in-network element obtain permission send data three-way handshake dissuades source spoofing establishes unique handle flow revocation receiver cat offers protection qualities network capabilities require major architectural background motivation denial-of-service dos packet flooding remains problem internet today receiver centric solutions generally ineffective flooding resource exhausted victim control forms resource consumption dos outgoing bandwidth exhaustion computational complexity attacks treated local resource management issue dealt victim resource scheduling admission control schemes industry internet research community proposed deployed number solutions made great strides offering protection flooding describe traffic filtering victim isps variety statistical machine learning techniques infer attack traffic input victims pushback arbor networks location filtering performed tierisp pushed isps close sources pushed points upstream local bottleneck link victim general schemes provide trade-off rate false positives degree sensitivity low-bandwidth attacks traffic filtering source schemes suggest filtering packet floods close source aitf firebreak schemes adopted involve isp damaging action customers behalf victim economic trust relationship overlays overlaysolutions cdns mayday sos filter packet floods large set nodes distributed edges network aggregate bandwidth offered overlay nodes high presenceof high-bandwidth overlay vet traffic back-end server public address remains vulnerable network capabilities departure filteringbased approaches network capability schemes siff tva require recipients mark wanted legitimate traffic unforgeable capabilities schemes guarantee legitimate traffic receives priorityover illegitimate traffic existing proposals requirechanges clients servers upgrades routers honor capabilities protect legitimate traffic result provide tangible near-term benefits party traffic scrubbing approach company peers number large isps sinks traffic protected servers company offer dos prevention services web-servers protection connection floods performing tcp handshake network flood detection statistical techniques mentioned per-flow rate limiting prolexic approach difficult web sites control decisions legitimacy traffic generally company offering protection handles detection malicious traffic good argument support position sruti workshop steps reducing unwanted traffic internetusenix association enforcement paper propose cat approach protecting public web servers bandwidth floods goal cat offer protection guarantees capabilities practical adoption story implies major architecturalchanges backwards compatibility existing clients incremental deployment path cat achieves goal combinations techniques flow cookies stateless backwardcompatible capability mechanism offloads connection-setup filtering in-network elements requiring per-flow state filtering trust boundaries existing commercial relationships isps leveraged identify viable locations filtering term furthest set isps web server economic relationship trust boundary argue trust boundary natural location filtering flows cat protected server perform handshake middlebox server trust boundary successful completion handshake provide sender valid flow cookie sender communicate receiver lifetime cookie receiver revokes cookie revocations performed middlebox trust boundary sections present overview cat discuss flow cookies detail mechanism dynamically detecting trust boundary present analysis bgp data determine properties existing trust boundaries finally present related work conclude overview cat cat designed guiding principles filtering mechanisms accurate effective decisions permit flows made devices services reliably determine origin traffic destination wishes receive traffic ensure incremental deployability protection mechanism existing commercial relationships network entities isps leveraged forcing functions deployment protection infrastructure flow cookie mechanism realizes principle flow cookies liberally borrows ideas capabilities third-party traffic scrubbing third-party scrubbing cookie box situated on-route clients protected web-server network location high incoming bandwidth typically inside protectedserver isp cookie box engages flows clients three-way handshake connections completed handshake forwarded web server subsequent handshake flow cookies functions similar network capabilities cookie box inserts capabilities outgoing packets server capabilities echoed future packets clients tcp timestamp fieldto insertthe capability compatibility web-server deems client misbehaving terminate connection simply request cookie box filter offending flow simple approach offers salient features offloading three-way handshake highbandwidth infrastructure special purpose hardware determine clients source spoofing packets forwarded server carry non-forgeable cookie computed packet header web-servers make effective policy decisions basis addresses enforced network signaling wanted-ness flow implicit response traffic protected server server reply client ack client unable fresh cookie current times filtering enforced in-network approach offers web servers protection bandwidth link cookie box deployed detection illegitimate traffic performed web server server implement flexible meaningful policies service flow cookies operates point deployment easy adopt suffers key limitations attacker overwhelms link cookie box deployed effectively flood server cookie box sinks traffic packet floods avoid filtering routing cookie box alternate isps peering points sruti workshop steps reducing unwanted traffic internet usenix association web server provider peers customer peer peer peer customer peer customer peer figure isps shaded gray gion trust web serv isps enclosed white square trust boundary xample isps trust boundary terminate trust chain traf fic recei peers naturally limitations addressed deplo ying cookie box erse collection netw ork links spread eral isps note deplo yment cookie box acilitated web serv taking adv antage netw ork links isp recursi ely isp isps economic elationship netw ork entities economic relationship pays deli ering traf fic transiti closure economic relationships isps defines gion trust protected serv figure isps trust gion terminate sequence economic relationships trust boundary figure links serv trust boundary natural locations deplo ying cookie box fer highest incoming bandwidth requiring web-serv relationships gue serv stronger clout persuade isp gion trust deplo cookie box greater erage ensure cookie box administered operated correctly fecti trust boundary follo wing properties aggre ate bandwidth boundary links ery high ensures cookie box trust boundary handle high-v olume flooding number routes tra ersing boundary links roughly propor tional bandwidth links pre ents innetw ork hot-spots underpro visioned links managing man flo links boundary ailable filtering capacity present analysis connecti vity graphs internet demonstrates trust boundary stub netw orks today satisfy properties definition isps trust boundary web serv perform tcp handshak subsequent filtering traf fic web serv fecti ely pro vide functionality setting isps lie eral trust boundaries inside figure multihomed web serv seeking protection deplo cookie box netw ork links primary isp edges web serv xpects recei lar fraction traf fic eral gions trust isps coordinate decide perform tcp handshak subsequent filtering web serv present simple 
modification bgp multiple isps ascertain responsibility distrib uted manner flo cookies flo cookies xtension syn cookies middlebox places secure limited lifetime cookie tcp timestamp ery outgoing data pack protected serv flo cookies fers strong protection ainst flooding require modification clients netw ork resistant sourcespoofing require -flo state netw ork unlik approaches common comme cia orld flo cookies meant deplo yed web serv perimeter cookie box handful box enforces flo cookies deplo yed edges protected web serv isp illustrate idealized setup figure section present ervie flo cookies approach flo cookies designed protect services tcp assume protocols uch udp managed means rate limiting aggre ates full details flo cookie protocol design issues analysis found view cookie box protected web serv cooper ate perform follo wing tasks cookie box intercepts syn pack ets destined web serv syn pack source blacklist dropped blacklist syn pack ets box responds syn cookie source address ged web serv cookie computed yed message authentication code sruti workshop steps reducing unwanted traffic internetusenix association connection -tuple syn cookies require state maintenance cookie box run gigabit line speeds step ensures spoofed sources syn floods unwanted connection attempts traverse link cookie box protected website forpackets web serverthat carryan ack flag includes data packets cookie box checks ack sequencenumberis valid syn cookie connection handed web site tcp handoff scheme outgoing packets web server clients client connection request cookie box adds secure non-forgeable flow cookie explained flow cookie computed similar manner syn cookie valid limited amount time minute explain flow cookie echoed back client checked cookie box cookie box implicitly infers web server wishes engage communication end-point marking outgoing acks web server chooses send acks client client unable fresh cookies times flow cookie helps cookie box ensure packets belonging flows accepted server traverse link cookie box web server web server understands accepted usage policy local administration alreadykeeping perflow state outstanding connection position determine client misbehaving web serverdoes receive packets flow things push filters cookie box flow blacklist case cookie box maintains source port revocation list time filters packets inform cookie box stop issuing fresh capabilities client statelessly simply closing connection case client longer receive valid cookies flow current cookie times approach employed filter high-bandwidth malicious flows immediately approach critical situations shut low priority clients overload server determines attacker address address block request cookie box add address block blacklist assume internet routes symmetric as-level ensuring backwards-compatibility backwards-compatible exploit tcp timestamp option place flow cookie step timestamp field packets tcp timestamp option proposed rfcto measure rtts supported major host operating systems rfc option enabled ends sender places timestamp packet subsequent packets receiver echo timestamp common operating systems enable timestamps default exceptions windows windowsxp shown trick windows echoing timestamps packet connection set cookie box negotiates timestamp option client rfcdoes timestamp encoded option field prevent disruption cookie box web server explicitly agree format care web site wishes timestamps measure rtts avoid undesirable interactions protected web servers dissuaded timestamp values rtt calculations requires insignificant modification tcp stack web server network stacks rtt calculations aid timestamps alternate method require modification web server full detail implementation demonstrate flow cookies ability inter-operate existing clients implemented flow cookies software router user-space network development environment tested implementation numerous public web servers tests show flow cookies compatible client oses server software handle fully dynamic interactive sessions static content found flow cookie implementation blacklist lookup effect throughput ourrouterand operateat gigabit speeds micro-benchmarking focus software implementation flow cookies easily implemented hardware tested synthetic flooding attacks found flow cookies offer full protection established flows severe loads full details implementation testing sruti workshop steps reducing unwanted traffic internet usenix association leveraging trust relationships primary limitation flow cookies leverages protection bandwidth high-speed links protected links sink traffic web server require routes introduce network bottlenecks server vulnerable attacks unprotected links troublesome problem cookie-boxes deployed isp cookie box protecting distinct set web servers cookie boxes arrive consensus perform handshake filtering flow section extend flow cookies point-solution generic wide-area service introduce minor modification bgp isps deployed cookies-boxes determine boxes manage handshake filtering destination basis argue viable effective deployment strategy leverage existing client provider relationships trust relationships isps internet today neighboring isps rely contractual agreements slas coordinate mutual exchange traffic agreements involve money changing hands customer-provider contracts faith-based peering relationships argue agreements define trust relationships isps implicitly explicitly trust relationship network network trusts steps preventing packet floods entering network link simplest case isp pays isp global internetconnectivity safe implicitly trusts violation trust detectable lets packet floods result picking alternate provider implicit trust relationships exist today neighboring isps don share customerproviderrelationship mayalsoenterinto explicit trustrelationships peer isps contractually agree mutually cooperate vet packets destined network instances cooperation peer isps traffic engineering purposes observed empirically explicit trust relationships forged customer network non-neighbor isp providing specialized form protection default trust relationships symmetric customer trust provider traffic flow d--e trust relation figure illustration trust relationships end-toend as-level path thing provider assume guarantees customer explicit trust agreements peers symmetric assume trust exists customer-provider relationships peering relationships bgp-based mechanism relationships isps determine completely distributed stateless manner single isp responsible insertingflow cookies filteringpackets illustrate solution source send receiver design routing internet as-level path vector communicate bgp figure isp isp assume isp path vector relationshipsbetween pairs isps downstream trust relationship fora--b b--c c--d d--e ande--r b--c c--d d--e e--r information easy piggy back bgp path vector protocol bgp announce route neighbor appends number announcement simply change announcement trusts neighbor destination prefixes protected similarly advertised bgp announcement lets trust relationship pair neighboring isps a-b encoded binary form means trusts packets received vetted flow cookies means assume trust relations path s--a a--b b--c c--d d--e e--r implicitly assumes flow cookies deployed sruti workshop steps reducing unwanted traffic internetusenix association packet arrives checks notices sequence trust relationships forward path simply forwards packet similarly forward packet receives packet notices continuous trust sequence starting receiver trust upstream neighbor check destination prefix advertised protected isps make inference make minor modifications routing tables cookie boxes assume isp deploys distinct cookie box peering links cookie box similar router routing table difference route cookie box table annotated downstream trust sequence inverse 
trust relationship upstream annotation packets received isp destined denotes trust relationship annotation flow cookie check insertion filtering lets packet based inference isp decides flow cookie insertion check packets packets flow past trust frontier forwarded destination trusted vet packets simply forwards packet similarly trustse accepts packet legitimate trust relationships similarly play deciding filter packets filter packets pushes filters upstream turn pushes filters hit trust boundary edge filters finally installed tierisps install large number filters section filters needed connection attempts attack flows automatically filtered timer cookie expires filterscan storedin larger slowermemoriessince consulted syn packets ips aggregated filters memory pressure exploring trust boundary previously trust relationships isps implicitly define region trust protected server deploy multiple cookie boxes refer boundary region trust boundary isp trust boundary links trust frontier ases trust frontier links ases figure cdf number ases top x-axis links bottom x-axis trust boundaries stub networks stub network packets arriving isp trust boundary packets sources past studies shown isps higher internet isp-hierarchy higher bandwidth links links isp higher capacity implies independent mechanism trust boundary dictates maximum amount aggregate filtering bandwidth server existing trust relationships addition isps higher hierarchy larger number interconnections isps advantage isps trust boundary point deployment filtering access greaterbandwidth isolation multiple links put ideal trust boundary composed multiple large isps tierand tierwith routes distributed boundary links manner proportional link bandwidth explore properties trust boundaries internet today publicly provider-subscriber peering relationship information inferred bgp data analysis assumes trust transfers client provider relationships ends peering links practice peering agreements provisions filtering analysis pessimistic amount filtering bandwidth trust boundary analysis covers trust boundaries stub networks total number distinct ases links trust boundaries stubnetworks figure andin subsequent analysis term link refer collection physical interdomain links neighboring isps stub networks ases boundaries total links stubs links boundary distribution tiers trust sruti workshop steps reducing unwanted traffic internet usenix association percent ases frontier tier tier tiers tiers figure cdfof thepercentof aseson theboundarythatare tier tiers tiers stub network tier tier tier tier figure histogram fraction routes passing boundary isps belonging tiers boundary shown past studies assume links smaller lower-tier isps tier lower bandwidth tier figure cdf plot percentage autonomous systems tier tiers tiers clear boundary largely made tier isps trust boundaries stub networks consist tier isps unsurprising larger tier isps peer heavily ending recursive passing trust distribution tiers boundary routes web servers traverse small isps trust boundary boundary provide nominal protection demonstrate case analyze routes destinations data set stub networks figure histogram percent routes traverse tier trust boundary stub networks expected trust boundaries vast majority routes pass tier links pass tier results suggest cases trust boundary provide effective high-speed filtering bandwidth network nature peering relationships difficult complete study trust boundary properties smaller tieror tierisps engage private peering relationships relationships inferred public bgp data issue neglect analysis level path vector necessarily reflect true forwarding path packet due internal isp policies bgp-based scheme analysis trust boundary hold situations related work discussed related approaches section section elaborate filter-based approaches pushback aitf require identification blocking illegitimate traffic network pushback router attempts identify attack traffic determining congested state finding aggregate describes attack traffic pushing aggregate upstream blocked close source contrast solution lets web server discern unwanted traffic aitf based observation pure filterbased approach pushback requires state core routers aitf decentralizes state pushing filtering rules close source filtering rules determined attack recognition mechanism resistant spoofing flow cookies viewed simplified variant network capabilities contrast capabilities scheme offloads connection negotiation network requires modification routers tcp flow cookies aims partial path protection trusts end communication public web sites capability schemes strive offer complete path protection firebreak proposes anycast redirect traffic filtering portals close source flow cookies conjunction firebreak enforce precise per-flow filtering stateless backwards compatible manner feel viable deployment strategy push filtering target expect deployment edge close source authors suggest virtual nets network filter ddos proposal suggest deployment close victim authors extend work multiple isps filtering points participate flow negotiation schemes vulnerable source spoofing first-packet flooding offer method dynamically determining enforce filtering placement filtering hardware ddos solutions relying deployment security appliances perform number ddos prevention functions offloading three-way handshake syn cookies enforcing per-flow rate limiting millions flows argue endserver responsible distinguishing good bad sruti workshop steps reducing unwanted traffic internetusenix association traffic pushing filtering decisions network addition require per-flow state lowering complexity cost implementation summary ddos flooding attacks target victim incoming bandwidth difficult victim directly control utilization incoming link solutions proposed industry research community tackle problem solutions inaccurate ineffective low-bandwidth floods impossible incrementally deploy require expensive state maintenance paper proposed simple approach flood protection directly addresses drawbacks existing mechanism approach builds current signaling mechanisms tcp three-way handshake past work network capabilities internet trust relationships isp customer-provider relationships outlined flow cookies simple backwardscompatible point-deployable network-level protection mechanism offer high protection bandwidth public web servers flow cookies helps public web servers implement flexible traffic policies high bandwidth network locations minimal additional support network argued protection offered flow cookies enhanced deploying flow cookie boxes isps direct indirect economic relationship web server isps lie webserver region trust presented simple bgpbased mechanism coordinate handshake filtering activities multiple boxes study interesting properties trust regions internet today arbor home page http arbornetworks netscaler syn flood protection http netscaler docs library netscalersyndefense pdf prolexic home page http prolexic tcpha home page http dragon linux-vs dragonfly akella seshan anda shaikh anempiricalevaluationofwide-areainternetbottlenecks ininternetmeasurement conference miami nov andersen mayday distributed filtering internet services usits seattle argyraki cheriton active internet traffic filtering real-time response denial-of-service attacks usenix annual technical conference bernstein syn cookies http syncookies html casado cao akella provos flowcookies bandwidth amplification defend ddos flooding attacks stanford hpng technical report casado mckeown virtual network system proceedings sigcse technical symposium computer science education franics firebreak perimeter defense architecture http cornell people francis firebreak hotnetsfirebreak-v pdf gao inferring autonomous system relationships internet dec greenhalgh handley huici routing tunneling combat dos attacks proc usenix workshop steps reducing unwanted traffic internet july keromytis misra rubenstein sos secure overlay services proceedings ofacm sigcomm lee lui yau admission control dynamic adaptation proportional-delay diffservenabled web server sigmetrics pages york usa acm press mahajan bellovin floyd 
ioannidis paxson shenker controlling high bandwidth aggregatesinthenetwork sigcommcomput commun rev norton internet service providers peering proceedings nanog albuquerque mexico june stone centertrack overlay network tracking dos floods proceedings ninth usenix security symposium august subramanian agarwal rexford katz characterizingthe internet hierarchy multiple vantage points june tadayoshi kohno claffy remote physical device fingerprinting ieee symposium security privacy welsh culler adaptive overload control busy internet servers usits yaar perrig song siff stateless internet flow filter mitigate ddos flooding attacks proceedings ieee security privacy symposium yang wetherall anderson dos-limiting network architecture proc acm sigcomm sruti workshop steps reducing unwanted traffic internet usenix association 
responsiveness dns-based network control jeffrey panga aditya akellaa anees shaikha balachander krishnamurthya srinivasan seshana computer science department network software services labs research carnegie mellon ibm watson research center florham park pittsburgh hawthorne bala research att jeffpang aditya srini cmu aashaikh watson ibm abstract years large web content providers interested improving scalability availability increasingly turned techniques mirroring content distribution isp multihoming domain system dns gained prominent role techniques directs client requests achieve goals scalability availability dns thought offer transparent agile control react quickly isp link failures phenomenon flash crowds paper investigate assumption objective quantifying degree responsiveness expected dns combination web dns access measurements busy web sites large content distribution network characterize behavior end-systems local dns servers terms adherence dns-based controls results suggest dns coarse-grained mechanism poorly suited applications route control require quick response link failures performance degradations propose proactive techniques deployed cooperation large content providers important clients potential improve responsiveness dns-based control categories subject descriptors computer systems organization computer-communication networks network protocols general terms measurement keywords dns time-to-live network control introduction growing popularity internet services applications large content service providers turned number distribution techniques improve scalability availability performance face ever-increasing request rate popular web sites deliver content redundant mirror sites outsourcing delivery alternate servers content distribution network cdn large data centers enterprises rely multihomed connectivity coupled intelligent route control improve resilience network link permission make digital hard copies part work personal classroom granted fee provided copies made distributed profit commercial advantage copies bear notice full citation page copy republish post servers redistribute lists requires prior specific permission fee imc october taormina sicily italy copyright acm failures optimizing performance bandwidth costs common requirement approaches tighter network control client access application cdn mirrored site deployment clients directed servers offer good response time similarly employing route control multiple isp connections directing packets correct provider link crucial extract performance reliability benefits multihoming years domain system dns emerged common approach type network control appeal dns-based techniques arises ubiquity transparency leveraging dns content providers provide late binding controls address returned client resolution operation returned address turn determines server contacted isp inherent approach assumption dnsbased control responds quickly unexpected conditions link failures flash crowds increased congestion responses resolution requests timeto-live ttl determines long response cached client local nameserver setting ttl small seconds forces clients resolve address frequently providing fast response practice complicated behavior wide variety applications dns servers deployed internet applications perform internal dns caching adhere expected behavior implementations local dns server ldns software reported adhere dns ttls imply clients ldnses continue connect failed link access loaded mirror site paper degree responsiveness expected dns-based network control practice base analysis empirical observations client access behavior large web sites hosting major sports events requests wide variety ldnses contacting authoritative dns servers large cdn results show majority clients ldnses honor dns ttls significant fraction clients ldnses collectively ldnses measurements violate ttls large amount excess hours findings suggest mechanisms improve dns responsiveness expect internet services applications continue rely dns network control addition traditional distributed database function propose architectural techniques increase dns agility deployment performanceor availability-sensitive application providers cooperation specific users previous work addressed issues dns-based control focusing context server selection cdns examples include impact small ttls response time effect dns lookups client-perceived response time question accuracy due proximity clients ldnses effects dns cache hit rates small ttls contribution measurement quantification level responsiveness offered dns view important issue continued growth number services vendor products dns control mechanism section provide overview related research dns section description measurement data collection methodology section present observations analysis follow proposals improving responsiveness dns-based control section section summarizes paper related work considerable work dns arena ranging exhaustive characterization local wide-area level examinations mis dns specific applications traffic root dns servers unnecessary traffic characterized caida team examined impact dns caching software load upper levels dns hierarchy authors collect local area traces dns application traffic characterize dns performance caching behavior proposed modifications dns improve web performance include piggybacking http responses dns replies ldnses renew cache entries proactively notion leases arose context web cache coherency reduce staleness caches recent work adaptive leases discusses ways caches avoid constantly poll reduce risk staleness primarily promising flush cached objects lease expiry proactively notified origin server draw idea examine ways web content owner cdn notify cooperating ldns flush caches data collection methodology order measure responsiveness dns-based control ideally observe clients respond dns update name-to-address mapping records domain requires access application logs servers track access patterns clients information timing dns updates measure quickly clients respond dns challenge identify data sources dns update logs application logs dns entries updated collect reasonable set observations clients react dns difficult obtain coordinated data observations specific behavior data sets collectively infer dns responsiveness focus client ldns behavior terms adherence dns ttls approach identify frequency clients ldnses cached dns records ttl access application dns server refer behavior ttl violations violations widespread infer dns techniques network control well-suited situations require fast response hand number violations small suggests dns-based control provide good responsiveness describe characteristics measurement data sets analysis observations large web events data set consists cache logs distributed hosting infrastructure serves content number web sites collected logs large sporting events worldwide audiences held april june july hosted infrastructure event request rate high authoritative servers directed clients set distributed caches minute ttl conclusion event archived updating servers direct clients lower capacity origin servers combine cache access logs administrator log timestamps indicating updates dns made archive event combining access logs cache sites extracted roughly -day long segment event time dns update place ideally traffic caches subside minutes ttl period dns update archive event analysis focus client requests continue arrive cache sites dns updated ttl expires count requests ttl violations classify long ttl expiry arrive caches network location clients originate requests grace time dns update log timestamp account delay updating dns conservative result underestimate number violations note view client requests distinguish violations caused client applications caused noncompliant ldns servers data event extends approximately day ttl expiration count violations day ldns behavior large cdn data set consists measurements servers belonging akamai cdn cdn employs two-level nameserver hierarchy achieve 
fine-grained client redirection load balancing analyzing data set aim characterize effectiveness dns referrals adherence ttls records crucial parts dns-based network control infrastructure data set collect dns request logs requests high-level servers cdn duration day logs address requesting ldns server summary request made requested domain timestamp response requests client ldns high-level servers return referral typically list records low-level cdn servers deemed close requesting ldns servers ldns server sends request low-level servers typically list records ttls typically minutes pick random sample ldns addresses appearing high-level request logs total approximately million ldns chosen track dns requests makes low-level servers returned high-level servers tracked low level request logs time window tracked ideal case ttl low-level record expires ldns make fresh request high-level server check date time total request volume date time total request volume date time total request volume date time total request volume date time total request volume date time total request volume april june july figure traffic volume dns change large web-hosted events bottom row graphs zoom time dns update ttl expiry timestamps x-axis edt ldns continues approach send requests low-level server record holds server expired indicating violation ttl logs collected march limit analysis resolution requests names represent static image content domain names form axx img cdn net incorporating requests cdn names analysis yield values number violating ldnses analysis results section describe observations made web event cdn access measurements analysis results observe extent clients ldnses data sets adhere respond dns ttls draw inferences responsiveness dns-based control observations web events figure show aggregate request volume caches time end events requests grouped -minute intervals top graphs show clear peak occurring end event period constant sustained traffic dns update marked solid line case effect dns change dramatic causing sharp drop requests coming cache locations clients redirected archive servers bottom graphs figure zoom portion trace dns update graphs solid line denotes time update dashed line time minute ttl expires requests arriving ttl expiry considered violation analysis subject grace period update time ttl expiration request volume decreases rapidly roughly april june july events remaining half traffic decays slowly long period discuss detail half client requests shifted quickly remaining requests stale dns entries significant figure plot distributions extent dns ttl violations requests arriving ttl expiration event specific times annotated graph seconds seconds day ttl expiration graph shows bulk violations long hours day fact requests arrive long day access logs extend roughly day past dns update time duration majority violations long dns provide control clients honor ttls cases clients violate ttl small amount effect consistent events figure illustrates effect plots distribution maximum observed ttl violation client makes request dns update client makes requests ttl expires violation graph captures time request client observed traces extend day dns update distribution truncated roughly day similar figure clients violate ttl continue dns entries expire graph shows clients violate ttl hours ldns accesses large cdn figure show cdf length time local dns servers cache records stale ttls duration ttl violation notice random sample ldnses observed high-level server trace exhibit violation record ttl time ttl expiry sec cumulative fraction ttl violations sec april event june event july event min min min day max arrival time ttl expiry sec cumulative fraction ttl violations sec april event june event july event min min min day violations maximum violation figure cdf request arrival time violation dns ttl maximum arrival time event time x-axis logarithmic scale ldnses made request top-level server return log collection result determine duration ttl violation cdf reach y-axis figure show similar cdf violating ldnses constitute ldns servers notice noncompliant ldnses show violation ttls excess hour exhibit violations hours length observations roughly similar made web event dataset figure characterization biased favor ldnses making total requests report ldnses adhering ttls reality analysis depends heavily number frequency requests made ldns order classify violator ldns server consistently violates ttls hour request rate hours low-level trace identified ttl-adhering server address issue plot cdf ttl violation duration top ldnses ranked volume requests generate high-level server logs figures notice figure violate ttls exhibit ttl violations excess hours finally characterized ldnses networkaware clustering nac groups addresses close topologically common administrative control interested noncompliant ldnses small networks addressing dns configuration deployment issues easier larger analysis considers clusters sizes higher fractions non-compliant ldnses collect large list ldnses observed high-level low-level dns logs group nacs bgp tables collected route views project roughly time ldns logs violating ldnses finally classify ldnses violators non-violators ranges prefix collected top requesting ldnses low-level logs primarily access low-level server logs frac servers max ttl violation max ttl violation hours ldns random sample ldns top ldnses frac servers max ttl violation max ttl violation hours ldns random sample ldns top violating ldnses figure cdfs duration ttl violation records ldnses show ldnses observed low-level trace plot violating ldnses figure solid line shows cdf random sample ldnses dashed line shows cdf ldnses made requests top level servers ldns servers violating servers percentage total ldns server subnet size figure relative distribution ldnses left bar violating ldnses bar size nac length nac results characterization shown figure ldnses nacs lengths constitute ldnses violating servers suggesting small clusters higher fraction violators hand ldnses nacs lengths constitute servers violators nacs lengths distribution violators measurements based limited sample suggest relative proportion non-compliant ldnses higher smaller nacs nacs lengths changing operation ldnses smaller networks eliminate substantial number non-responsive local dns servers additional findings natural question arises analysis number violations significant intuition noncompliant dns server implementations primarily responsible violations traced small number misconfigured networks section describe additional analyses questions dns implementations obvious place root ttl violations dns server implementations perform analysis combined list violating ldns servers list ldns addresses gathered earlier measurements dns implementations october results limited berkeley internet domain bind implementations widely nameservers internet found common ldns addresses bind version response addresses belonged ldnses violated ttls observations table list top bind implementations ldnses top implementations violating ldnses table omits count dns error messages returned response version queries notimp refused servfail formerr responses notimp non-bind implementation microsoft windows dns tinydns table single distribution bind large majority violating ldnses prefix length nac bind 
version discovered october address changed march ldnses violating ldnses bind version count bind version count -rel -rel -rel -rel -rel-noesw -rel -rel -rel-noesw -rel -rel table ldns bind versions difficult argue data sets single software implementation responsible ttl violations identifying noncompliant networks performed simple enumeration client networks gain initial insight clients networks primarily responsible observed ttl violations web access data events clustered addresses violating clients class networks clusters ranked unique addresses observed cluster focused identifying networks top violating clusters patterns emerged note approach limited client workload identification top violators subject popularity web events clients cluster interesting observations arose discuss events top violating clusters belonged web crawler popular search engine crawlers continue visit live web pages re-resolving hostnames found cases specific regional networks responsible violating clients june event top clusters belong networks provincial network asia dial-up isp europe notable finding april event large number noncompliant requests generated dial-up broadband subscribers single isp finally found client addresses belonging multiple sites enterprise network top violating clusters event logs examples interesting imply dns ttl violations fact due misconfigurations optimizations specific networks architectural support proactive dns previous observations suggest dns limited ability provide fine-grained network control argue attain network control cooperative settings content application providers deploy dns-based control mechanisms cooperation customers stand benefit customers modify dns infrastructure enable performance enhancements dynamic server selection route control ideally content provider simply set ttl records aggressively advise customers ensure ldns servers client applications obey ttls earlier work shown lowering ttls records manner significantly reduce dns cache hit rates large increase wide-area dns traffic viable option customers promised performance availability return addition simple ttl-based mechanisms achieve additional control cooperative settings establishing out-of-band negotiation channels content service providers customer ldns servers outline approaches employ idea push-based invalidation approach adns ldns servers negotiate band initial exchange dns request response modifying adns server easy control content publisher interested dns-based control customers modify ldns servers accept invalidations adns customer ldns servers act invalidations flushing caches invalidation adns trigger resolution include alternate address ldns communication participating set ldnses belong large high-end customers gain increased availability performance approach clients customer networks reach lightly loaded mirror sites content publisher fetch content faster adaptive leases final approach requires tighter integration adns ldns entails explicit cooperation approach adns partition list ldns servers classes based request frequency importance client base ldns servers customers high-volume class terms traffic revenue generate accept leases periodically renew duration lease adns server support fine-grained invalidations resource records invalidations triggered perceived adns force clients employ address alternately ldns poll adns updates records lease renewal period depend relative importance ldns influenced variety factors expected frequency performance path publisher client lease communicated ldns resource record duration lease set ttl record summary paper degree responsiveness expected dns-based network control techniques server selection cdns link selection multihomed end-networks collect measurements client access behavior large web sites requests ldnses accessing nameservers large cdn results show majority clients ldnses honor dns ttls significant fraction web event clients ldnses measurements adhere dns ttls violate ttls large amount excess hours suggested architectural techniques including proactive invalidation adaptive leases deployed cooperatively application providers customers improve responsiveness dns-based control future work plan conduct active study ldns behavior probes trigger dns lookups gauge adherence ttls intend investigate noncompliance develop evaluate initial architectural techniques acknowledgment grateful roberto prisco akamai bruce maggs akamai cmu herbie pearthree ibm global services assistance obtaining log data study oliver spatscheck michael rabinovich duane wessels anonymous reviers valuable feedback albitz liu dns bind reilly associates cohen kaplan proactive caching dns records addressing performance bottleneck proceedings symposium applications internet january duvvuri shenoy tewari adaptive leases strong consistency mechanism world wide web ieee transactions knowledge data engineering september internet systems consortium isc bind http isc bind jung krishnamurthy rabinovich flash crowds denial service attacks characterization implications cdns web sites international world wide web conference jung sit balakrishnan morris dns performance effectiveness caching ieee acm transactions networking october krishnamurthy liston rabinovich dew dns-enhanced web faster content delivery international world wide web conference budapest hungary krishnamurthy wang network-aware clustering web clients proceedings acm sigcomm stockholm sweden august krishnamurthy wills zhang performance content distribution networks proceedings acm sigcomm internet measurement workshop imw san francisco november mao cranor douglis rabinovich spatscheck wang precise efficient evaluation proximity web clients local dns servers proceedings usenix annual technical conference monterey june north american network operators group nanog mailing list http nanog mailinglist html shaikh tewari agrawal effectiveness dns-based server selection proceedings ieee infocom anchorage april oregon route views project http routeviews wessels fomenkov wow lot packets proceedings passive active measurement workshop pam jolla april wessels fomenkov brownlee claffy measurements laboratory simulations upper dns hierarchy proceedings passive active measurement workshop pam antibes juan-les-pins france april 
scaling properties internet graph aditya akella shuchi chawla arvind kannan srinivasan seshan computer science department carnegie mellon pittsburgh faditya shuchig cmu farvind srinig cmu abstract internet grows size crucial understand speeds links network improve order sustain pressure end-nodes added day speeds links core edges roughly improve moore law improvement structure internet graph routing network necessitate faster improvements speeds key links network paper combination analysis extensive simulations show worst congestion internet fact scales poorly network size number nodes shortest-path routing show surprisingly policy-based routing exacerbate maximum congestion compared shortest-path routing results show crucial identify ways alleviate congestion avoid links perpetually congested end show congestion scaling properties internet graph improved dramatically introducing moderate amounts redundancy graph terms parallel edges pairs adjacent nodes categories subject descriptors computer systems organization computercommunication networks computer-communication networks network architecture design general terms design performance keywords power-law distribution congestion shortest path routing policy routing introduction internet grows size day time progresses end-hosts added edge network correspondingly accommodate end-hosts isps add routers links history shown addition links maintains power law properties internet topology addition end-hosts places greater load network fortunately improvement network technology operates time period expect network links edge core network improve similar performance factor growth traffic time typically follow similar moore law-like technology trends due topology network behavior internet routing increase load links result speed hot-spot links network improve quickly true parts network eventually bottlenecks network poor scaling properties situation adjust routing behavior remove power law nature topology accept end-to-end network performance network improve rapidly individual links hand worst congestion scales network size expect network continue operate paper combination analysis simulation address issue maximum congestion internet scales network size analysis employ simple combinatorial probabilistic arguments give bounds maximum congestion model network evolution based preferential connectivity simple model traffic unit amount flow pair nodes routed shortest path complement analytical results large set detailed simulations computing congestion links network based real synthetically generated as-level topologies simulations investigate impact key factors worst congestion network include routing algorithm employed nodes network bgp policy-driven routing refer policy routing shortest-path routing sophisticated models communication nodes modeling realistic traffic demands factoring higher popularity nodes network alternate degree distributions exponential distribution power law trees evolving preferential connectivity key contribution paper show maximum congestion internet scales poorly growing size internet graph specifically maximum congestion shortest path routing bad exponent depending exponent power law degree distribution graph simulations show policy routing graph results roughly maximum congestion shortest path routing worse realistic nonuniform traffic models considered congestion scaling properties power law graphs worsen substantially show terms maximum congestion power law trees considerably worse power law graphs contrast graphs exponential degree distribution good congestion properties key contribution paper discussion simple guidelines result dramatic improvement congestion scaling properties internet graph show parallel links added adjacent nodes network simple functions degrees minimum degrees maximum congestion resulting graph scales linearly rest paper structured discuss related work section section formalize analytical approach discuss simulation set-up analysis presented section section presents results simulations section discuss implications results network design finally section conclude paper related work past research efforts aimed studying properties large-scale internet-like graphs class studies proposed models graph evolution result power law degree distribution notable examples include power law random graph model aiello bicriteria optimization model fabrikant preferential connectivity model barabasi albert class studies category aimed analyzing properties power law graphs based inferences drawn measurements real data efforts inferences construct realistic generators internet-like graphs theoretical analysis based preferential connectivity model barabasi albert simulations topologies generated synthetically inetthe problem characterizing congestion graphs specifically designing routing schemes minimize congestion studied widely approximation online algorithms worst congestion graph inversely related maximum concurrent flow achieved graph obeying unit edge capacities turn related quantity called cut ratio graph aumann characterize relationship maximum concurrent flow cut ratio okamura give bounds cut ratio special graphs algorithmic approaches problem survey multi-commodity flow relaxation problem find fractional routing good congestion properties fairly good approximation factors achieved problem distributed involve lot book-keeping involve solving large linear programs makes impractical point view routing internet disagreement power law correctly models degree distribution internet graph widely agreed distribution heavy-tailed main results specifically simulation results focus power law distributions hold equally heavy-tailed distributions weibull maximum concurrent flow achieved graph factor log cut ratio number nodes choose approach analyzing congestion achieved widely implemented routing schemes shortest path bgp-policy based routing work bears closest resemblance mihail arguments max-flow min-cut theory paper shows graphs obeying power law degree distribution good expansion properties routing log congestion close optimal log achieved regular expanders addition based simulations run inet-generated topologies paper concludes congestion power law graphs scales log shortest path routing paper shows policy routing results worse congestion work key aspects identify theoretical analysis restrict routing shortest path fact assumes optimal routing algorithm minimizes congestion show fact shortest path routing employed power law graphs exhibit poor scaling properties terms congestion maximum congestion scales confirm detailed simulation experiments addition simulations show policy routing worsen maximum congestion network contrary conclusion evaluations policy routing shortest path routing graphs small number nodes approximately nodes policy routing graphs due dependence real graphs shortest path routing graphs simulations hand graphs nodes finally impact traffic workloads deployments parallel links scaling properties network methodology combinatorial probabilistic arguments simple model network combined extensive simulations understand congestion properties internet graph give precise formulation problem laying key questions seek address analysis describe set-up simulations corroborate extend analytical arguments problem statement unweighted graph representing internet as-as graph denote total degree vertex key aspects pertaining graph degree distribution graph routing algorithm nodes graph communicate traffic demand matrix determining amount traffic pairs nodes graphs give precise definitions aspects turn paper concerned graphs power law degree distribution defined definition unweighted graph power law degree distribution exponent integers number nodes proportional similarly graphs exponential degree distribution number nodes proportional integers henceforth refer graphs power law graphs exponential graphs denote routing scheme graph representing path routing traffic nodes routing schemes paper shortest path routing scheme route nodes shortest path nodes graph multiple shortest paths maximum degree nodes paths pick highest maximum degree tiebreaking rule reflective typical policies employed internet higher 
degree nodes typically larger well-provisioned providers lower degree nodes general primary connection stub networks report results tie-breaking rule results hold qualitatively tie-breaking schemes random choice favoring lower degree nodes policy routing scheme traffic nodes routed bgp-policy classify edges peering edges customer-provider edges ases provider typically ases internet provide transit traffic destined customers implies carry traffic peer peers provider similarly carry traffic providers peers provider rules give rise valley-free routing path sequence customer provider edges peering edge provider customer edges detailed description mechanism reader referred traffic vector vector non-negative terms term signifying amount traffic nodes congestion edge due traffic vector routing scheme sum total amount traffic edge define edge congestion due traffic vector routing scheme maximum congestion edge graph edge-congestion max paper interested quantifying congestion graph power law degree distribution shortest path policy routing schemes due traffic vectors specifically traffic vectors any-any corresponds traffic vector unit traffic pair nodes leaf-leaf order define model classify nodes graph stubs carriers stubs nodes customers words directing customer-provider edges graph customer provider peering edges considered bidirected edges vertices incoming edges ases customers called stubs leaves graph model unit traffic pair stubs graph clout model motivated fact wellplaced sources sources high degree connected high degree neighbors send larger amounts traffic sources case stubs average degree neighbors increasing function previous case traffic refer details nodes stubs paper function ducu stubs simulation set-up simulations serve purposes corroborate theoretical results characterize congestion realistic network models considered analysis simulations run sets graphs set graphs maps internet topology collected month intervals nov april number nodes graph set maximum april set set graphs synthetic power law graphs generated inetin set generate graphs sizes varying nodes simulations metric interest generate slightly graphs nodes report average metric graphs pointed section order implement leaf- leaf clout models communication identify stubs network note degree greater additionally order implement policy routing classify edges peering non-peering edges order real graphs employ relationship inference algorithms gao label edges graphs peering customer-provider edges algorithms global bgp tables infer relationships nodes relationships identify stubs nodes providers node henceforth refer real graphs accurately labeled real graphs alrs labeling edges identifying stubs synthetic graphs inet tricky bgp information refer synthetic graphs labeled algorithms heuristically labeled synthetic graphs hlss algorithms classifying nodes key implementing leaf-toleaf communication edges key implementing policy routing synthetic graphs discuss turn stub identification identify stubs synthetic graphs edge assign provider degree degree notice explicitly identify peering edges edges nodes identical degree bidirectional identify stubs graphs labeled test accuracy stub-identification algorithm real graphs comparing labels produced algorithm true labels alrs compute fraction false positives false negatives results figure show simple algorithm low error rate notice inference algorithms gao error intrinsically labels alrs inaccurate edge classification purpose classifying nodes simply edges graph customer-provider edges simple scheme purposes edge classification results significant error maximum congestion real graphs employing policy routing order improve accuracy labeling edges resort machine learning algorithms varying random seed inet graph generator false positives nodes identified stubs algorithm stubs alr false negatives stubs alr identifies stubs algorithm error rate false positives false negatives max edge congestion number nodes real labels learned labels accuracy stub identification accuracy edge labeling figure accuracy heuristics graph left shows accuracy simple stub identification algorithm graph shows error maximum congestion due machine-learning based edge-classification algorithm employing good machine learning algorithm classification proves tough task huge bias customer-provider edges graphs roughly edges customer-provider edges -nearest neighbor algorithm classifying edges peering non-peering edge unlabeled graph classified peering edge edges similar labeled graph peering edges similarity edges judged based degrees respective end points neighboring vertices measure accuracy procedure applying real graphs comparing classification true labels machine learning algorithm accuracy peering edges accuracy customer-provider edges purposes computing worst congestion graph low accuracy labeling fact shown figure labeling real graphs algorithm results error worst congestion employing policy routing comparison congestion computed alrs importantly growth congestion identical cases report simulation results congestion power law trees exponential topologies comparison power law graphs insight significance density edges graph model interesting generative models power law topologies result exponential distributions fringe cases tree topologies evolve preferential connectivity model generate exponential degree distributions modify inetto generate exponential degree distribution add edges inet usual exponent exponential graphs nodes chosen total number edges exponential graph close power law graph nodes note due lack real data exponential graphs good labeling edges nodes perform experiments policy routing leaf-leaf clout traffic models analytical results section show expected maximum edge congestion power law graph grows route unit flow pairs vertices shortest path perform heuristic hill-climbing estimate exponent minimizes error number edges preferential connectivity generative model barabasi albert completeness give description model preferential connectivity model fixed constant parameter start complete graph nodes call set nodes core graph graph time denoted time step node added network node picks nodes random connects vertex probability divdi picked div degree vertex time total degree nodes time end steps process generate power law degree distribution fact power law graph exponent maximum degree node degree order show lower bound congestion power law graph plan roughly edge highest degree nodes core call edge vertex graph shortest path tree rooted vertex show trees edge constant fraction trees nodes subtree rooted edge lower bound routes connection precisely defined shortest path trees congestion edge sum congestions edge shortest path trees congestion edge trees defined trees total congestion edge note necessarily congested edge graph maximum congestion worse theorem theorem expected maximum edge congestion power law graph exponent grows route unit flow pairs vertices shortest path begin technical lemma distance nodes refers number hops shortest path nodes assume lemma maximum integer vertices lie distance nodes lie distance node core graph node core nodes lie distance proof prove nodes lie distance vertices core neighbors nodes lie distance vertex core graph begin showing nodes lie distance extend nodes distance level denote set nodes distance remove graph vertices level higher remaining graph vertices definition assume vertices level nodes levels number nodes level nodes level residual graph connected nodes level number size neighbor set level case nodes level highest degree nodes graph case minimum degree node level size neighborhood level 
total degree nodes level quantity assumption constant fraction apply technique compute number nodes level number nodes level distance defined lemma denote set nodes distance node core graph lemma jvrj proof theorem parts shows trees edge lemma expected number shortest path trees leaf nodes edge proof tree node essentially breadth tree starting level tree edge contained tree hand nodes depths tree closer loss generality case shortest path break ties favor paths high degree nodes path implies contained tree trees correspond equidistant claim nodes equidistant combined fact constant fraction nodes leaf nodes implies result definition power law degree distribution prove claim observe pick random node graph conditioned fact node lies distance constant probability node lies distance argument fraction nodes number nodes fraction nodes equidistant nodes figure fraction shortest path trees edge congruent lemma show number nodes distance constant fraction number nodes distance nodes distance number lemma lie node picked set distance argument probability node lies distance constant nodes set distance prove tree leaf high congestion lemma shortest path tree leaf node edge expected congestion edge tree proof loss generality closer show degree imply result distance note show nodes lie depth tree note number nodes depth number nodes distance remaining nodes lemma lie depth neighbors hops tree removing edges incident neighbors level tree remain level level move farther putting edges incident back graph conditioned fact stay level tree means node level connect nodes entered graph step ignoring constant fraction nodes uniformly graph remaining nodes levels probability nodes formed edge time entered graph lies size graph varies nodes probability node connects factor easily case definition lemma leaf simulations show values ratio shortest path tree degree original degree number nodes node node figure congestion edge random shortest path tree figure plots ratio degrees graph degrees random shortest path tree probability node mentioned number nodes level constant times number nodes levels expected number nodes levels connect constant fraction expected number nodes levels connect constant fraction total degree result experimental support section report results experiments conducted validate theoretical results obtained hold preferential connectivity model internet-like graphs generated inetunfortunately graphs generated inethave values consistent observed behavior internet decreases time discuss detail section order validate theoretical results observe asymptotic behavior congestion fixed modify inetcode purposes section fixed recalculating reported average multiple runs simulation random seeds generating graphs figure plots fraction nodes equidistant note fraction lies consistent result lemma constant fraction trees case edge figure compares degrees highest degree nodes graph degrees shortest path tree random node find ratio degrees consistently similarly ratio degrees increasing consistent findings lemma finally plot maximum congestion graphs generated inetas function number nodes graph figure note maximum congestion scales roughly corroborates finding theorem simulation results section present results simulation study inet-generated graphs henceforth graphs generated inet alter inet max edge congestion number nodes max link congestion figure maximum congestion function inetgenerated graphs figure plots functions aid comparison chooses depend recall contrast simulation results previous section modified inet code employs show results graphs show results shortestpath routing policy-based routing cases present results any-any communication model leaf-leaf model finally clout model shortest-path routing figure shows maximum congestion power law graphs generated inetas function number nodes any-any model communication trend graph clear maximum congestion internetlike graphs scales worse notice slope maximum congestion curve slightly increasing explained mentioned earlier inetchooses exponent power law degree distribution function number nodes slog notice absolute decreases increases lower bound suggests slope function log-log plot steadily increase fact point expect curve scale roughly worst rate growth congestion figure shows maximum congestion power law trees exponential graphs power law trees generate exponent increasing number nodes tree exponents significantly higher power law graphs notice edge congestion power law trees grows faster compared graphs expected trees fewer edges lower bound maximum congestion holds equally trees satisfying power law degree distributions predicts slope curve trees consistent graph hand notice edge congestion exponential graphs smaller compared power law graphs fact edge congestion exponential graphs linear growth scales explained intuitively recall choose exponent exponential distribution match total number edges n-node power law graph power law empirically determined constants number ases internet november max edge congestion number nodes power law tree exponential congestion normalized rank edges nodes nodes nodes nodes nodes nodes nodes nodes maximum edge congestion distribution edge congestion figure edge congestion shortest path routing any-any communication figure left shows maximum edge congestion figure shows distribution congestion links number links normalized case figure left plots worst congestion exponential graphs preferential connectivity trees max edge congestion number nodes power law tree congestion normalized rank edges nodes nodes nodes nodes nodes nodes nodes nodes maximum edge congestion distribution edge congestion figure edge congestion shortest path routing leaf-leaf communication max edge congestion number nodes max link congestion congestion normalized rank edges nodes nodes nodes nodes nodes nodes nodes nodes maximum edge congestion distribution edge congestion figure edge congestion shortest path routing clout model communication distribution heavier tail compared exponential distribution edges incident low degree nodes low degree vertices exponential graph connected low degree vertices edges incident low degree nodes absorb large amount congestion leading lower congestion edges incident high degree nodes increases degree distribution resulting slow increase congestion figure show congestion links power law graph varying numbers nodes notice higher numbers nodes distribution congestion uneven set graphs leaf-leaf communication model shown figure worst congestion consistently times worst congestion any-any model explicitly shown graph congestion edges plotted figure displays similar trend any-any model distribution uneven number nodes increases results clout model interesting resulting maximum congestion graph scaling worse figure shows maximum congestion scales worse total traffic graph grows roughly any-any model smaller absolute values graphs generated inetfor larger values plausible explanation increasing slope curve graph congestion edges model shown max edge congestion number nodes any-to-any leaf-to-leaf max edge congestion number nodes policy routing any-any leaf-leaf communication clout model figure maximum edge congestion policy-based routing hlss max edge congestion number nodes policy routing shortest-path routing max edge congestion number nodes policy routing shortest-path routing edge congestion synthetic graphs edge congestion real graphs figure comparison edge congestion shortest path policy based routing any-any model figure equally 
interesting compared figure leaf-leaf model figure visual inspection figures reveals unevenness congestion pronounced clout model communication summarize non-uniform traffic demand distribution internet exacerbate poor congestion scaling internet policy-based routing figure shows maximum edge congestion communication models policy based routing any-any leaf-leaf models shown figure maximum edge congestion scales identically shortest path routing compared figure surprisingly clout model congestion policy based routing scales compared shortest-path routing figure compares maximum congestion obtained policy routing shortest path routing notice curves overlapping policy routing slightly worse graph small graph grows larger observation explained policy routing disallows paths general force connections routed longer paths increase traffic network leading higher congestion smaller numbers nodes size graph grows shortest paths result constraints policy-based routing significant impact path lengths graph fact higher numbers nodes policy routing provide congestion properties albeit marginally shortest path routing shortest path routing picks paths high degree nodes fraction paths allowed policy routing involve peering edge case policy routing moves traffic hot-spots partially alleviating problem order verify observation artifact machine learning-based labeling algorithms plot curves alrs figure display trend policy routing starts worse shortest path marginally increases summarize policy routing worsen congestion internet graphs contrary common intuition suggest fact policy routing perform marginally shortest path routing discussion analytical simulation results shown power law nature internet graph maximum congestion network scale poorly mentioned section implies internet grows size uniform scaling capacities links internet graph moore law sustain increasing congestion graph results show high degree nodes typically core internet congested quickly time edges situation enhance scaling properties network change routing algorithm employed nodes alter macroscopic structure graph address issue section edge congestion avg degree nodes figure edge congestion versus average degree nodes incident edge any-any model shortest path routing congestion higher edges high average degree adding parallel network links section examine ways additional links network effect bad scaling maximum congestion specifically model link replaced multiple links pair nodes share traffic load ideally provide sufficient parallel links pair nodes total congestion edge divided equally parallel links worst case grows rate size network number parallel links pair nodes change network grows achieve goal notice change alter degree-structure graph alteration due increased connectivity adjacent nodes require edges nodes adjacent ways network incorporates concept parallel links power law structure graph considers adjacency ases link sprint instance modelled single edge real world sprint ases connected large number places world degree connectivity internet today order guide addition parallel edges adjacent nodes observe clear correlation average degree edge congestion figure plots congestion edge average degree nodes incident shortest path routing inet generated graph nodes form communication any-any figure shows edges incident high degree nodes higher congestion incident lower degree nodes suggests good choice number parallel links substituting edge graph depend degrees nodes edge connects examine ways adding parallel links based observation number links nodes function degrees nodes functions sum degrees nodes product degrees nodes maximum degrees minimum degrees results alternate methods alleviating congestion refer full version paper note routing based original degrees nodes max edge congestion number nodes sum degrees product degrees min degree max degree figure maximum relative congestion shortest path routing any-any model parallel links added graph sum product max functions functions compute maximum relative congestion maximum edges congestion edge divided number parallel links edge show simulation results maximum relative congestion scales shortest path routing power law graphs any-any model communication results shown figure notice surprisingly parallel links added functions maximum relative congestion graph scales linearly implies adding parallelism edges internetlike graphs simple functions ensure scaling link capacities internet moore law maintain uniform levels congestion network avoid potential hot-spots summary paper addressed question worst congestion internet-like graphs scales graph size combination analytical arguments simulations studies show maximum congestion scales poorly internet-like power law graphs simulation results show non-uniform demand distribution nodes exacerbates congestion scaling find surprisingly policy routing worsen congestion scaling power law graphs fact marginally compared shortest-path routing results show current trend growth internet locations network eventually perpetual hot-spots fortunately intuitively simple fix problem adding parallel links adjacent nodes graph simple functions degrees maximum congestion graph scale linearly case links graph grow capacity faster rate bgp tables oregon routeviews project http moat nlanr net data national laboratory applied network research routing data http moat nlanr net routing rawdata aiello chung random evolution massive graphs focs akella chawla kannan seshan scaling properties internet graph technical report cmu-cs- cmu pittsburgh pennsylvania albert barabasi topology evolving networks local events universality physical review letters aumann rabani log approximate min-cut max-flow theorem approximation algorithm siam journal computing barabasi albert emergence scaling random networks science fabrikant koutsoupias papadimitriou heuristically optimized trade-offs paradigm power laws internet icalp faloutsos faloutsos faloutsos power-law relationships internet topology proceedings sigcomm symposium communications architectures protocols gao inferring autonomous system relationships internet ieee acm transactions networking december gkantsidis saberi mihail conductance congestion power law graphs proceedings acm sigmetrics leighton introduction parallel algorithms architectures arrays trees hypercubes morgan kaufmann publishers leonardi on-line network routing online algorithms state art springer medina lakhina matta byers brite approach universal topology generation mascots mitchell machine learning mcgraw-hill companies okamura seymour multicommodity flows planar graphs journal combinatorial theory park lee effectiveness route-based packet filtering distributed dos attack prevention power-law internets proceedings sigcomm symposium communications architectures protocols san diego california august subramanian agarwal rexford katz characterizing internet hierarchy multiple vantage points proceedings ieee infocom june tangmunarunkit govindan jamin shenker willinger network topology generators degree-based structural proceedings sigcomm symposium communications architectures protocols pittsburgh pennsylvania august winick jamin inetinternet topology generator tech rep michigan technical report cse-tr- 
endpoint-based routing strategies improving internet performance resilience aditya akella cmu-cs- september school computer science carnegie mellon pittsburgh thesis committee srinivasan seshan chair bruce maggs hui zhang scott shenker berkeley submitted partial fulfillment requirements degree doctor philosophy copyright aditya akella research sponsored national science foundation grant nos cnsani- anithe army research office contract daad air force research laboratory grant funded generous grant ibm corporation views conclusions contained document author interpreted representing official policies expressed implied sponsoring institution government entity keywords internet routing border gateway protocol performance bottlenecks overlay networks route control congestion moore law internet topology abstract internet access speeds large enterprises educational institutions improved dramatically past years higher-speed connectivity ineffective providing end-users good download performance robustness service interruptions arises due prevalence constrained links spare capacity inside internet service provider isp networks dissertation investigate location latency traffic load characteristics network links limit internet performance well-connected end-networks importantly show end-networks employ clever internet route selection technique called multihoming route control avoid performance bottlenecks obtain internet performance internet-scale measurements conducted akamai content distribution infrastructure show multihoming isps intelligently scheduling transfers isps end-network potentially improve internet round-trip times rtts throughputs reliability compare internet performance reliability route control powerful route selection paradigms overlay routing show rtts transfer speeds multihoming overlay routing multihoming offer perfect resilience overlays show eliminate failures experienced singly-homed end-network describe design performance evaluation route control system deployed large multihomed enterprises show practice simple route control techniques offer web performance optimal performance multihoming finally investigate future internet techniques route control overlay routing provide good end-to-end performance face higher access speeds vastly traffic mix show structure internet power law degree structure isp level routing protocol bgp convert keys portions network persistent bottlenecks modifications isp-level interconnections guarantee good end-to-end performance future internet contributions thesis significantly advance state-of-the-art techniques improving internet performance resilience dissertation highlights important guidelines design inter-domain routing protocols peering architectures nanna amma chandu shuchi iii acknowledgments immensely fortunate pursued carnegie mellon carnegie mellon provided access minds computer science great resources research carnegie mellon takes exceptionally good care students felt home home years spent cmu fun-filled memorable fortunate srinivasan seshan adviser srini gave freedom work topics choice busy schedule shied spending time needed input attention research shaped constant interactions bruce maggs hui zhang anees shaikh bruce instrumental helping gain access akamai data formulating key sub-problems thesis hui helped immensely broaden scope research bringing network perspective anees offered great insight interpreting measurement results fleshing design route control system presented dissertation jeff pang arvind kannan great conducting key measurement experiments simulations analyzing results addition past interactions scott shenker richard karp ion stoica christos papadimitriou peter steenkiste ramesh sitaraman balachander krishnamurty significantly influenced approach research general finally close friends luis von ahn laura dabbish mahesh bandi bunny spicing graduate years contents introduction road-blocks efficient internet performance non-access bottlenecks internet routing protocol bgp problem approach integrated approach optimizing internet performance dissertation outline background approach isp traffic engineering overlay routing commercial route control products overview approach empirical evaluation wide-area internet bottlenecks measurement methodology isp hierarchy choosing traffic sources choosing probe destinations bottleneck identification tool bfind metrics reported results path properties locations bottlenecks bandwidth characterization bottlenecks latency characterization bottlenecks bottlenecks public exchange points measurement caveats summary observations implications critique measurement methodology isps provisioning route selection improved internet performance vii measurement-based analysis multihoming naive multihoming rtt performance measurement dataset measurement results -multihoming rtt performance measurement dataset measurement results -multihoming -multihoming data collection -multihoming improvements unrolling averages impact choice isps resilience path failures active measurements path availability path availability analysis summary observations implications comparison overlay routing multihoming route control terminology latency throughput performance comparing rtts throughputs -multihoming versus -overlays -multihoming versus -overlays -multihoming versus -overlays -multihoming versus -overlays unrolling averages reasons performance differences resilience path failures active measurements path availability path availability analysis measurement caveats summary observations implications practical multihoming route control strategies solution overview monitoring isp links choosing isp directing traffic selected isps implementation details performance monitoring algorithms viii switching isps nat-based inbound route control experimental evaluation experimental set-up experimental results additional design operational issues dns inbound route control common route control practices summary observations implications scaling congestion internet methodology problem statement simulation set-up analytical results experimental support simulation results shortest-path routing policy-based routing shortest path routing variations improving congestion scaling properties adding parallel network links networking modeling congestion scaling analysis caveats summary observation implications conclusions open problems thesis summary contributions properties wide-area bottlenecks benefits multihoming route control comparison overlay routing route control practice congestion scaling bottlenecks lessons longer term future work longer-term measurement analyses explaining diminishing returns global effects multihoming route control bgp models congestion scaling list figures evolution home access speeds show home internet access technologies specifically access speeds adopted show expected adoption dates higher speed home access mbps mbps bgp operation showing propagation bgp reachability routing information isps arrows show propagation routing announcements end-to-end internet flow typical internet flow traverse isps end-to-end overlay routing figure illustrates overlay routing scenario multihoming route control figure illustrates route control scenario end-network isp connections isp hierarchy figure illustrates tiers internet isp hierarchy locations planetlab sources connectivity properties sources destinations located europe shown inset size dots proportional number sites mapped location location connectivity destinations destination location identified planetlab source minimum delay destination table shows composition destination set operation bfind graph queueing delay shown left y-axis instantaneous udp rate shown y-axis bfind identifies hop bottleneck bfind identifies hop bottleneck potentially false positive topology bfind simulations topologies explained detail stands mbps row corresponds location bottleneck link close corresponds middle bfind interaction competing long-lived tcp flows figures plots bandwidth reported bfind topology settings competing long-lived tcp flows bottleneck hops constrained mbps relative prevalence intra-isp bottlenecks graph shows average number bottlenecks kind appearing inside isps classified path type graph shows total number links bottleneck kind appearing paths considered left bar shows average number links shows average number unique links graph shows relative fraction intra-isp bottlenecks links types left bar average path composition links bar relative prevalence peering bottlenecks graph shows average number bottlenecks kind appearing isps classified path type graph shows total number links bottleneck kind appearing 
paths considered left bar shows average number links shows average number unique links graph shows relative fraction peering bottlenecks types left bar average path composition links bar capacity bottleneck links graph corresponds bottlenecks isps graphs show distribution capacity bottlenecks peering links involving tier isps peering links involving tier isps show distributions bottleneck links tiers tiers small number relative prevalence bottlenecks latencies graph shows average number bottlenecks classes latencies classified occurring isps occurring inside isps graph shows actual number links bottleneck kind appearing paths graph shows relative fraction bottleneck links latency types left bar average path composition links bar bottlenecks paths exchange points table left shows relative prevalence bottleneck links exchange points figure shows distribution capacity bottleneck links exchange points multihoming figure shows route control set-up figure shows traditional multihoming set-up xii naive multihoming akamai servers connected isps city download objects customer origin servers order serve clients data set turnaround times averaged hour retrievals origin servers naive -multihoming figure shows -multihoming performance isps city isps ranked performance figure shows diminishing returns -multihoming city relative utilization isps cities boston york graphs show fraction time isps naive -multihoming solutions city utilized optimal schedule -multihoming akamai performance monitors city connected isps download objects -minute intervals servers belonging content providers -multihoming evaluation average benefits shown graph shows median percentile turnaround times isp multihoming relative usage isps optimal schedule shown testbed details cities distribution isp tiers measurement testbed listed geographic location shown area dot proportional number nodes region -multihoming benefits figure plots improvement web turnaround times -multihoming figure plots improvements throughput per-destination performance figures plot absolute improvements rtt throughput performance -multihoming relative -multihoming underlying distributions figure showing median percentile percentile difference source-destination pairs figure plots rtt figure plots throughput pessimistic estimate time day effects figures plotting impact time-of-day figure day-of-week pessimistic figure rtt performance times edt impact sub-optimal choices graph shows expected rtt performance metric random -multihoming option graph shows performance worst -multihoming option choice isps figures show rtt performance isp selection policies san francisco los angeles end-to-end failures distribution availability end-to-end paths multihoming isps -multihoming cases isps city based rtt performance xiii availability comparison comparison availability averaged paths originating cities single isp -multihoming isps chosen based round-trip time performance routing configurations figures show -multihoming -multihoming overlay configurations shown round-trip time performance average rtt performance -multihoming relative -overlay routing tabulated cities graph shows distribution number overlay hops -overlay paths direct path overlay hop benefits -overlays rtt -multihoming relative -overlays shown throughput pessimistic estimate -overlays relative -multihoming shown multihoming versus -overlays rtt -multihoming relative -overlays shown throughput pessimistic -overlays relative -multihoming round-trip time improvement round-trip time -multihoming relative -overlay routing function ofa shown show distribution number overlay hops -overlay paths throughput improvement throughput performance -multihoming relative -overlays cities shown table shows fraction measurements -overlay routing selected indirect end-to-end path case performance destination figure cdf difference rtts overlay path direct path paths measured city similarly figure plots cdf difference throughputs pessimistic estimate underlying distributions figure showing median percentile percentile difference source-destination pairs figure plots rtt figure plots throughput pessimistic estimate propagation congestion scatter plot rtt improvement x-axis propagation time improvement y-axis indirect overlay paths direct paths circuitousness routes figure plotting propagation delay indirect path y-axis multihoming path x-axis xiv availability comparison comparison availability averaged paths originating cities single isp -multihoming -overlays -overlays isps chosen based round-trip time performance impact overlay network size round-trip performance graph shows difference -overlays -multihoming overlay nodes added solution steps figure illustrates main operations enterprise route control system monitoring isp performance passive measurement scheme monitoring isp performance slidingwindow active measurement scheme testbed topology simple test-bed shown emulate route control scenario shown web server load profile average response time request function average client arrival rate server topology figure performance improvement performance metric passive measurement scheme ewma parameter history employed sampling interval graph shows performance individual isps unrolling averages ratio difference response times isp transfers relative passive measurement scheme average client arrival rate case requests route control work isps chosen passive measurement-based route control scheme destinations popularity levels impact history performance achieved relying historical samples varying degrees results passive measurement-based strategy sampling interval active passive measurement performance active measurementbased schemes passive measurement scheme sampling interval impact sampling interval performance sampling intervals passive measurement-based frequencycounts active measurement-based schemes dns responsiveness figure shows traffic volume time dns change left graph shows -day period end event focuses -hour period time dns update accuracy heuristics graph left shows accuracy simple stub identification algorithm graph shows error maximum congestion due machine-learning based edge-classification algorithm model pictorial view graph set simulation support analytical model figure shows fraction shortest path trees edge figure plots ratio degrees random shortest path tree degrees graph maximum edge congestion plotted function inetgenerated graphs figure plots functions aid comparison edge congestion shortest path routing any-any communication figure left shows maximum edge congestion figure shows distribution congestion links number links normalized case figure left plots worst congestion exponential graphs preferential connectivity trees edge congestion shortest path routing leaf-leaf communication figure left shows maximum edge congestion figure shows distribution congestion links normalized edge congestion shortest path routing clout model communication figure left shows maximum edge congestion figure shows distribution congestion links normalized policy-based routing maximum edge congestion policy-based routing hlss policy-based shortest path routing comparison edge congestion shortest path policy based routing any-any model tie-breaking rules shortest-path routing figure plots variations breaking ties shortest path routing degree congestion edge congestion versus average degree nodes incident edge any-any model shortest path routing congestion higher edges high average degree alleviating congestion maximum relative congestion shortest path routing any-any model parallel links added graph sum product max functions xvi list tables approaches optimizing internet performance table shows distinguishing features common approaches circumventing network-level performance bottlenecks overview approach key problems central dissertation show provide citations preliminary conference versions results bandwidth-probing performance bfind table shows configurations topology figure output obtained bfind comparison tcp flow bottleneck hop performance bfind presence similar bottlenecks table shows hops identified bfind bottleneck configurations figure time reach conclusion performance bfind presence slightly bottlenecks table shows hops identified bfind bottleneck configurations figure 
bandwidth hops path chosen slightly higher bfind validation results statistics comparison bfind pathload pipechar properties wide-area internet bottlenecks summary key observations wide-area bottlenecks rank performance ranks isps -multihoming solutions york order added incremental performance improvement availability router classes estimated availability routers links classified tier location border router link benefits multihoming route control summary key observations multihoming xvii throughput performance table shows tcp transfer performance -overlay routing relative -multihoming estimation functions shown fraction measurements -overlay routing selects indirect path city analysis overlay paths classification indirect paths offering improvement rtt performance overlay routing policy compliance breakdown percentile round trip time improvement indirect overlay routes routes conform common inter-domain policies routes valid inter-domain paths exited ases points direct bgp route bgp route multihoming route control overlay routing summary key comparison results characteristics delay traces performance refers delay path analysis performance overheads penalty defined case practical multihoming route control summary key observations route control implementation congestion scaling internet summary key observations scaling properties internet xviii chapter introduction past decade internet access speeds large organizations enterprises data centers universities improved tremendously years ago organizations end-users alike limited kbps network connection speeds technological breakthroughs fiber optic links coupled growing demand bandwidth newer applications fueled rapid improvements endpoint access speeds now-a-days organizations deploy high speed connections mbps ensure robust performance mission critical network applications end-user access speeds improved substantially time-period figure show evolution home access speeds united states market studies predict adoption mbps broadband home connections begin early year fact home users japan south korea enjoy impressive connection speeds order tens mbps access speeds limited internet experience end-users tightly coupled internet connection speeds kbps modem line expected provide inferior download speeds availability dsl link client opens multiple web connections parallel similarly web pages longer load data transfers longer complete mbps home dsl connection connection mbps office environment naturally leads improved access speeds future drastically improve internet experience end-users true lets suppose enterprise upgraded high-speed internet connection mbps mbps gbps informally refer end-networks high-speed internet access well-connected question translates internet access performance end-users well-connected organizations specifically observed download speeds resilience service interruptions improve proportionately higher speed connections offer better-than-reasonable performance resilience unclear future well-connected end-users end-networks bang buck matching performance higher access speeds henceforth figure evolution home access speeds show home internet access technologies specifically access speeds adopted show expected adoption dates higher speed home access mbps mbps context unambiguous term performance collectively refer internet download speeds response times internet transfers resilience service interruptions observed network endpoints connection speed network endpoint grows performance improve proportionately fact highly gbps uplink offer download speeds response times endpoint mbps link discuss arises due prevalence key performance road-blocks bottlenecks limit internet experience well-connected endpoints focus forthcoming discussion rest dissertation endnetworks enterprises universities web server hosting centers term endpoints collectively refer network entities observations proposals make end-networks dissertation extended individual end-hosts road-blocks efficient internet performance key bottlenecks prevent well-connected endpoint realizing performance high-speed access connections general bottlenecks broadly classified categories access non-access bottlenecks category includes performance bottlenecks control network endpoints simple ill-configured software stacks end-hosts internet transfer speeds response times resilience extent intrinsically depend software stacks employed end-hosts past studies identified impact receive buffer size setting endpoint transmission control protocol tcp stacks throughput achieved tcp connections small receive buffer sizes constrain amount data transmitter simultaneously relay receiver illustration older implementations tcp tcp reno resilient packet drops network deployments tcp sack result clients employing tcp reno observe poorer network performance sack clients traffic load network high important feature access bottlenecks administrative control endpoints easily overcome means simple local upgrades updating system software host machines careful configuration sufficiently high speed access links upto-date software perfect configuration performance well-connected well-managed endpoints limited non-access bottlenecks non-access bottlenecks non-access bottlenecks persist irrespective access speeds software upgrades network endpoints essentially bottlenecks arise inefficient design operation management wide-area internet key portions overcome bottlenecks requires coordinated network-wide upgradation management formidable task local improvements key non-access bottlenecks constrained widearea hot-spot links examples include failures critical network-wide services internet domain system dns factors dns failures tend preclude delay start internet transfers discuss factors focus bottlenecks impact ongoing internet transfers internet transfers share network resources raw link capacities router buffers millions flows network volume competing data traffic low major constraint performance data transfer raw capacity network links traverses assuming software limitations raw speeds access links lower links network non-access links performance data transfer limited primarily source destination connection speeds non-access links today carry hundreds megabits data traffic peak hours internet backbone providers non-access links employ variety mechanisms protect links traffic overload unpredictability traffic conflicting traffic management goals competing providers leave keys links network congested head room spare capacity additional traffic simple fix alleviating congestion hotspots add additional capacity approach economically viable selective local improvements link speeds simply push hotspots network locations words performance transfers initiated well-connected endpoints depends critically volume competing traffic non-access link traverse variation traffic volumes time non-access links running close-to-full capacity drive endpoint transfer speeds close force packet drops connections time-out fail general refer non-access links heavy traffic load limit internet performance well-connected endpoints wide-area bottleneck links context clear generic terms non-access bottlenecks wide-area bottlenecks refer wide-area bottleneck links order overcome wide-area bottlenecks obtain satisfactory internet performance endpoints require intrinsic support network traffic overload link network identify link hotspot divert endpoint traffic link manner completely transparent endpoint internet composed thousands links time links spare capacity carry diverted traffic seamless rerouting endpoint traffic plausible practice internet divert endpoint traffic hotspot network locations arise answer question ideally internet support seamless diversion traffic hotspots handled part internet routing protocol internet arises fundamental limitations routing protocol briefly overview internet routing protocol suite examine endpoints circumvent wide-area bottlenecks internet routing protocol bgp data traffic points network traverse routers links internet routing protocol suite determines exact sequence routers links traversed quick overview internet routing protocol internet routing overview internet routing infrastructure composed thousands routers links ownership infrastructure operational management responsibilities distributed independent administrative domains called internet figure bgp operation showing propagation bgp reachability routing information isps arrows show propagation routing announcements service providers isps autonomous systems ases 
inside domain isp runs intradomain routing protocol routers links determine traffic routed domain typically computing routes isps optimize usage routing infrastructure isp route traffic manner link network carries unduly large amount traffic practice commonly referred traffic engineering data traffic traverses multiple domains isps employ border gateway protocol bgp exchange traffic figure illustrates operation bgp isp wishes communicate isp owns internet address block bgp announces reachability address block owns neighbors neighbor turn announces information downstream appending domain number called autonomous system number asn announcement isp announcements propagate network receives announcements isp directly isp bgp path selection mechanisms stipulates prefer route fewer isps announcement route isp announces route downstream isp announcements receives isps number intermediate isps case prefers cost-effective route due commercial arrangements neighbors routing require pay case referred provider contrast customer routing boost revenue result prefers route reach announcements propagate isps manner eventually reaching isp final selection route made data traverse path mentioned domain isps employ traffic engineering mechanisms manage network bgp-based routing internet commonly referred policy routing due explicit support protocol commercial arrangements isps bgp characteristics notice isp-level route selected bgp completely agnostic existence non-access bottlenecks performance availability isp-level path primary goal bgp provide course-grained reachability information honoring economic considerations intermediate isps bgp favor policy-compliant paths fewer ases choice static reflect quality path manner requirement paths policy-compliant arbitrarily inflate resulting long circuitous routes bgp isp exposes believes single route destination neighbors endpoint single isp connection single path destination isp short information propagated isps bgp heavily filtered summarized property fact helps bgp scale thousands networks rise performance inefficiencies discussed problems bgp characteristics bgp imply performance availability problem arises isps path destination end-network live wait bgp selects alternate path destination past research studies shown process fact long time labovitz study re-convergence bgp show bgp minutes recompute propagate routes failure implies bgp lacks flexibility route endpoint traffic network hotspots failures timely effective manner past studies quantified impact rigidity bgp-based routing internet performance availability experienced endpoints feamster show endpoints relying bgp-based routing experience connectivity outages lasting minutes hours savage quantify sub-optimality endpoint transfers speeds web response times arising relying bgp-based routes authors show congestion heavy traffic load bgp paths avoided dynamically selecting alternate non-policy-compliant internet paths result substantially improved transfer speeds response times compared traditional internet routing tangmunarunkit spring highlight crucial inefficiency internet routing adhering traffic exchange policies isps forces paths pairs internet endpoints close times long direct as-the-bird-flies paths short past studies establish bgp routing significantly limits ability wellconnected end-networks obtain good internet performance resilience interruptions leads well-connected network endpoints employ special mechanisms work conjunction internet routing extract optimal performance high-speed internet connections problem approach dissertation complement studies inefficiencies internet performance availability investigation traffic load wide-area links study extent wide-area bottleneck links limit performance data transfers involving well-connected endpoints find significant fraction non-access links carry high volumes traffic leaving spare capacity mbps occasions turn places upper bound speeds transfers initiated well-connected endpoints attain bgp ineffective enabling quick recovery performance problems thesus investigate usefulness mechanisms work conjunction bgp overcome bottlenecks specifically seek answer central question mechanisms well-connected end-networks employ circumvent performance availability problems non-access portion internet improve internet experience mentioned issue partly addressed past research studies approaches require support isps terms cutting-edge routing policies traffic engineering mechanisms special purpose internet-wide infrastructures explicitly bypass bgp-determined routes divert end-network traffic heavily-loaded network hot-spots contrast focus mechanisms require special support network-wide infrastructure modifications bgp common routing policies study mechanisms simply deployed endpoints local networks enterprise access routers inside high-speed home dsl gateways seamlessly integrated existing wide-area internet infrastructure specific mechanism study called multihoming route control involves endnetworking buying internet connections multiple isps serving city located importantly end-network ability intelligently schedule transfers isp connections avoid performance glitches isps arise end-network control isps route traffic control isp carries traffic destination time isps bgp route packets destinations sense multihoming route control require modification current bgp protocol network infrastructure conduct extensive active passive measurements -node internet-wide testbed quantify performance benefits end-networks multihoming route control measurements compare multihoming route control past proposals requiring specialpurpose infrastructures show simple approach fact offers similar performance powerful approaches present implementation multihoming route control deployment multihomed enterprise settings show simple principles regularly monitoring isp performance minimally relying historical performance isps effective helping endpoints realize potential benefits multihoming practice investigate mechanisms multihoming route control effective future internet face growing end-user access speeds higher traffic loads shifting usage patterns study evolutionary patterns internet isp level interconnection show internet structure bgp-style routing render fundamentally incapable supporting good endpoint performance future light observation propose simple rules altering interconnections isps guarantee robust future endpoint performance integrated approach optimizing internet performance optimizing improving internet performance holy grail networking research community decades numerous proposals fine-tuning internet behavior bring internet performance reliability closer engineered systems cars telephone network researchers past approached internet performance optimization problem piece-meal fashion attacking specific facets coming interesting solutions key sub-problems examples past approaches abound studies routing pathologies intra inter-domain traffic engineering proposals modifying improving routing protocol behavior specifically bgp overlay routing contrast past approaches dissertation takes integrated approach problem identify primary poor endpoint performance propose evaluate simple mechanism endpoints control overcome performance glitches compare proposal past well-established approaches optimizing network performance show proposal extremely simple effective complex approaches finally future existing proposals multihoming scheme effective network grows size usage taking systemic view problem analyzing aspects lends observations mechanisms longer shelf life feel owing approach key lessons thesis encouraging richer hop connectivity enabling endpoint control routing performance leaving rest network simple untouched continue apply future internet architectures problem domains wireless home networking dissertation outline rest dissertation organized chapter past approaches optimizing end-to-end performance internet specifically discuss classes mechanisms isp-based third-party infrastructure-based end point-based put contributions dissertation perspective earlier approaches chapter present large-scale measurement study performance bottlenecks wide-area network present classification bottlenecks terms location latency discuss impact end-to-end performance building observations chapter show end-networks employ multihoming route control overcome bottlenecks improve internet performance investigate isps endpoints employ realize optimal performance improvements chapter contrast performance improvements route control past third-party infrastructure-based approaches specifically limited routing flexibility multihoming provide comparable benefits arbitrary flexibility past 
approaches chapter potential benefits route control realized practical deployment scenarios implement evaluate route control mechanisms outline important common route control practices chapter techniques route control continue provide good performance future network specifically investigate impact growth operational trends internet ability support good performance face growing end-user access speeds user applications finally chapter present conclusions discuss issues study chapter background approach optimizing improving internet performance availability hot topic research years proposals made improving endpoint network stacks tcp buffer-size tuning congestion control algorithms improved loss recovery mechanisms approaches improving application-level performance specifically performance internet web servers well-studied strategies accepting incoming connections improving web response time caching client characterization-based web server adaption focus dissertation non-access performance bottlenecks approaches optimizing internet performance face bottlenecks approaches considered research commercial worlds employed widely today general proposals classified broad categories isp-based mechanisms adopted isps cater traffic traversing networks examples include intra-domain inter-domain traffic engineering mechanisms special class mechanisms category includes approaches performance-aware wide-area internet routing special mechanisms require global coordination internet isps internet-wide infrastructure-based approaches involve deployment applicationlevel infrastructure isps infrastructure typically operated managed commercial third-party service provider examples include overlay network-based mechanisms multiple competing overlay service providers deploy individual overlay infrastructures main purpose overlay infrastructure explicitly divert subscriber traffic congested wide-area links unavailable routes end point-based mechanisms simplest require subscriber network buy internet connectivity isps serving city approaches require deployment special devices subscriber networks mechanisms require support isps special internetexample optimizes deploys fine-grained bgp-compliant deployment ease end-to-end manages optimization performance isp-based inter-domain single isp isp traffic engineering neighboring isps co-operation internet-wide overlay routing third-party provider thirdinfrastructure-based party deployment endpoint-based multihoming route endpoint endpoint deploys control unilaterally table approaches optimizing internet performance table shows distinguishing features common approaches circumventing network-level performance bottlenecks wide infrastructures require modification internet widearea protocol bgp examples include route control appliances distinguishing features approaches summarized table discuss approaches detail isp traffic engineering approaches optimizing performance isp networks commonly referred intra-domain traffic engineering long time arpanet employed adaptive routing network setting network routers network made routing choices based current state network arpanet routers maintained information current estimated delays routers forwarded packets path minimum estimated delay modifications made routing protocol incorporating routing metric based joint function hop counts network delays minimize traffic fluctuations due variations network delays key drawback load-sensitive approaches traffic engineering reliance availability fresh information network state compute network routes stale network state network routers avoid common set congested links leading oscillations congestion network links modern day approaches traffic engineering isp networks treat problem network management network routers simply compute routes based static link weights isp network management system turn sets parameters based network-wide view traffic topology precise static link weights set directly proportional distance routers inversely proportional capacity link routers static weights fine-tuned network management system based estimated network conditions directly minimize metrics maximum link utilization track network traffic isp estimates traffic traversing network general traffic matrix describes volume data transmitted pair routers isp network centrality traffic matrices traffic engineering today routers provide support measuring accurately state-of-the-art techniques traffic matrix estimation essentially derive underlying traffic matrix measurements link loads obtained simple network management protocol snmp isp routing configurations fewer routers links isp network router-pairs estimates traffic matrix obtained manner highly error-prone high variability traffic isp networks contributes inaccuracy traffic matrix estimates comprehensive survey traffic matrix estimation techniques related traffic engineering mechanisms found estimating traffic matrix isp employs estimates set links weights route traffic network optimize usage network links routers routing weights set satisfy performance requirements select subscribers isps typically configure link weights networks coarse time-scale large backbone isp schedule daily maintenance network midnight links weights computed re-optimized improve network congestion details intra-domain traffic engineering mechanisms proposals extensions found inter-domain traffic engineering similar techniques employed neighboring isps manage load links share peering links recently received attention research network operator community complete details key challenge inter-domain traffic engineering ensure effective inter-domain traffic management revealing internal network information neighboring networks isps hold internal routing mechanisms topology sacrosanct poorly configured traffic engineering mechanism reveal crucial hints internal policies isp neighbor intra-domain traffic engineering primarily dealt selecting paths based link metrics inter-domain traffic engineering isp commercial arrangements neighboring isps link metrics determine paths effective inter-domain traffic engineering made challenging fact internet wide-area routing protocol bgp convey explicit information quality paths existing approaches inter-domain traffic engineering explore minimal modifications bgp enable support inter-domain traffic engineering due constraints isps adopt latest proposals inter-domain traffic engineering importantly afore-mentioned isp-based mechanisms intraand inter-domain traffic engineering ineffective improving end-to-end internet performance endpoints due additional reasons approaches rely traffic matrix estimation mentioned earlier error-prone conducted daily time-scale techniques responsive perspective endpoints overcome unexpected performance availability problems figure end-to-end internet flow typical internet flow traverse isps end-to-end approaches targeted traffic confined single isp pairs neighboring isps practice traffic internet traverse multiple isps peering locations endto-end typical internet flow shown figure flow traverses multiple isps path distinct pairs neighboring isps commercial arrangements making coordinated traffic exchange isps challenging local performance optimizations performed individual isps improve global end-to-end performance internet traffic recent research studies proposed modifications bgp make cooperative traffic exchange multiple isps easier today nira system advocates incorporating support as-level source-routing bgp end-networks isps greater control exact sequence isps traversed data traffic turn feature makes easier configure inter-domain traffic engineering-friendly routing policies approaches nira require major bgp years widely adopted overlay routing mentioned chapter internet routing support good end-to-end performance resilience isp-based traffic engineering mechanisms effective mentioned previous section address inefficiencies guarantee good end-to-end internet performance researchers advocated deploying special purpose internet-wide infrastructures provide support explicitly diverting subscriber traffic highly congested overlay nodes flaky direct path indirect overlay path figure overlay routing figure illustrates overlay routing scenario network locations special-purpose infrastructures called overlays techniques broadly referred overlay routing mechanisms overlay routing third-party overlay service provider deploys large collection overlay nodes major cities isps internet overlay nodes regularly monitor performance availability paths internet destinations active probes icmp pings passive measurements existing data transfers nodes instantaneous performance availability information turn accessible subscribers overlay service subscriber employ information obtain internet performance subscriber default internet route destination determined bgp offer 
expected performance availability subscriber immediately route traffic alternate path overlay nodes shown figure subscriber effect hands traffic overlay network routes traffic select overlay nodes hop-by-hop manner destination notice route traversed subscriber traffic neighboring overlay nodes overlay path conform bgp policies overlay nodes forming application-level network stitch multiple bgp routes on-the-fly yield performing alternative paths subscribers notice overlays provide end-networks great deal flexibility selecting arbitrary paths internet famous research studies advocating overlay routing detour system resilient overlay network ron testbed detour study savage study impact inefficiencies wide-area routing end-to-end performance terms roundtrip time rtt loss rate throughput observations drawn active measurements public traceroute server nodes compare performance default internet bgp paths potential performance alternate overlay paths work shows large fraction bgp paths measured alternate overlay paths offering throughputs rtts loss rates andersen advocate deploying rons address problems bgp fault recovery times shown order tens minutes cases ron nodes regularly monitor availability paths information dynamically select direct indirect end-to-end paths ron mechanisms shown significantly improve availability end-to-end paths overlay nodes bring failure recovery times seconds addition commercial instantiations overlays improving web download performance proposed recently akamai sureroute regular intervals called sampling intervals akamai sureroute system replicates client data transfers multiple overlay paths systems selects overlay path offering fastest performance client employs path subsequent transfers involving client sampling interval sureroute offered resilience-enhancing service web content providers large enterprise customers natural concern overlays wide-spread deployment usage vast flexibility provided overlays result worse network-wide congestion oscillations traffic past theoretical studies highlighted examples scenarios allowing end-networks arbitrary flexibility routing substantially worsen average performance network internet-like scenarios researchers shown wide-spread deployment overlay routing necessarily result worse performance fact average end-user performance overlay routing significantly achieved traditional routing protocols summarize hurdles wide-spread deployment overlay networks end-networks today subscribe overlays optimizing internet performance end-networks employ overlays small important fraction transfers mission critical financial transactions discuss key drawback overlay-based approaches common feature overlay-based approaches path neighboring overlay nodes bgpcompliant end-to-end path overlay network arbitrarily violate commercial policies isps imagine overlay path consisting sequence isps overlay nodes isps assume isp customer isps larger isps wider global reach smaller regional isp connecting enables reach wide range internet destinations bgp routing policies dictate customer network provide transit traffic provider destined provider network interest customer paying providers provider transit traffic easy overlay path directly violates policy cases violation overlay service provider compensates isp loss revenue explicit payment turn increases subscription usage costs overlay client client network overlay regular high-volume web access importantly unclear high degree flexibility provided overlay networks overcome bgp-driven routes policies fact end network obtained improved internet performance end-networks make lesser routing flexibility achieve reasonable levels internet performance end-networks require support special-purpose infrastructure deployed wide-area internet dissertation direct answers questions explain shortly commercial route control products number vendors recently developed intelligent end-network routing appliances route control mechanisms contrast overlay-based mechanisms require exclusive infrastructure enable alternate routes routing appliances purely end point-based easier deploy advantage limits amount routing flexibility devices provide comparison overlay-based approaches basic premise approaches end-network internet connections multiple isps practice referred multihoming multiple isp connections commercial products multihomed end-network dynamically schedule internet traffic upstream isp links optimizing performance availability devices co-located end-networks edge routers shown figure products work probing performance end-network isp links destinations scheduling traffic isp offer performance availability destination route control appliances subscriber networks avoid performance availability problems isps paths dynamically routing alternate isps notice isp end-network bgp path destination explained chapter effect isp connections multihomed end-network paths destination route control products end-networks make clever choice isp link equivalently bgp path employ obtaining performance availability route control products provide routing flexibility traditional singly-homed bgp-based routing flexibility offered overlay networks dissertation compare relative trade-offs extents flexibility proverio flaky isp path att uunet route control applicance select isp destination switch att figure multihoming route control figure illustrates route control scenario end-network isp connections vided systems study effectively utilize modest amount flexibility provided route control effectively improve internet access performance optimizing performance availability web transactions primary design goal devices provide important benefits route control devices end-networks tune traffic scheduling policies obey specific bandwidth usage limits appliances typically provide subscribers knob trade-off improved performance lower bandwidth usage costs appliances targeted balancing load multiple medium low-speed isp connections multiple dsl links home optimize web download speeds specifically targeted improving responsiveness delay-sensitive internet applications voip detailed study alternate applications route control scope dissertation overview approach performance bottlenecks experienced well-connected endpoints driven word-of-mouth common perception wide-area performance problems confined boundaries neighboring isps internet peering locations isp sufficient incentive manage traffic locations peering points presumed carry high-levels traffic resulting inefficient end-to-end performance step performance bottlenecks current internet chapter step multihoming route control avoiding performance bottlenecks chapter step overlay routing versus multihoming route control chapter step practical multihoming route control strategies chapter step performance scaling future internet chapter table overview approach key problems central dissertation show provide citations preliminary conference versions results issue tackle dissertation investigate verity popular belief step figure specifically seek quantify levels traffic peering locations expose locations wide-area internet potentially limit performance well-connected endpoints location derive characteristics bottlenecks links latencies capacity explore techniques well-connected end-networks employ overcome performance problems subscriber networks beginning employ route control appliances purpose tangible benefits products subscriber networks rely word-of-mouth deciding employ mechanisms moderately source information subscribers accompanying set white papers outline distinguishing features products documents subscriber networks select products basis features supported subscribers turn appliances order understand relative merits situations impossible subscribers internet performance observe specific route control appliance improved exact improvements route control tightly coupled isps subscriber network connects end-networks connection cost cases service level agreements slas offered isps primary yard-sticks determining buy connectivity guidance subscriber networks selecting isps offer expected level performance charging reasonable connectivity fees work seek establish base-line expected performance resilience improvements multihoming route control mechanisms step figure aim investigate end-networks select isps realize potential improvements route control realize goal collect performance availability data selected nodes server infrastructure large content distribution network operated akamai technologies call collection nodes measurement testbed measurement samples obtained small time intervals week-long intervals time helping understand tangible benefits route control 
approach offers important advantages akamai servers deployed major cities world measurement study make observations improvements route control geographic regions world akamai server deployment style servers deployed isps major cities helps understand impact number exact choice isps expected performance improvements measurements span long periods time derive hourly diurnal patterns performance improvements route control information employed fine-tune operation route control appliances measurements contrast improvements route control overlay routing-based mechanisms step figure commercial overlay-based mechanisms offer end-networks viable option obtaining internet performance resilience comparison seeks understand clear benefits overlay-based mechanisms route control simply provide evaluate benefits overlay routing employ nodes testbed intermediate overlay hops overlay testbed size commercial overlay network larger overlay testbeds employed past research studies evaluate powerful form overlay routing combines first-hop route choices multihoming flexibility provided overlay routing hop isp routes enabled form overlay routing subsume routes enabled route control route control offer strictly inferior performance goal understand inferior route control comparison overlay routing multihoming route control present study effectiveness simple route control strategies step figure route control white papers outline techniques believes key effectiveness respective products implement techniques propose alternatives evaluation highlight important drawbacks existing approaches seek outline common practices design operation route control appliances primary goal implementation effort show simple route control schemes develop end-networks significantly improve internet performance practical deployment scenarios secondary goal show performance techniques close maximum benefits route control steps dissertation deal performance improvements internet today step figure asks good internet performance sustained future internet years time internet grow significantly size endpoint access speeds improve orders magnitude killer applications drastically alter traffic mix network goal understand internet fundamentally capable accommodating future case expect techniques proposed route control thesis related mechanisms continue remain effective extracting good internet performance future fundamental properties design evolution internet prevent happening specifically investigate internet interconnection topology routing protocols limit network ability accommodate key time identify guiding principles design evolution network improve ability support robust future performance chapter empirical evaluation wide-area internet bottlenecks widely believed poor internet performance arises primarily constraints edges access portions network narrow-band access links dial-up dsl limit ability applications tap plentiful bandwidth negligible queuing interior network access technology evolves enterprises end-users resources increase capacity internet connections upgrading access links end-networks today deploy access links speeds excess mbps positive impact performance employing higher access speeds insignificant parts network subsequently performance bottlenecks ultimately upgrades edges network simply shift existing bottlenecks hot-spots non-access wide-area portions internet optimize internet access experience end-users end-networks important understand location traffic load links wide-area internet chapter present study location characteristics bottleneck links wide-area internet noted chapter wide-area portion internet composed hundreds isps belonging tiers internet isp hierarchy isps attach peer geographic locations wide-area bottleneck lie inside isp network peering locations technical definition wide-area bottlenecks wide-area bottlenecks wide-area bottleneck link path wellconnected internet endpoints link isp intra-isp link boundary neighboring isps path peering link potentially constrain transfer speed unconstrained tcp flow endpoints unconstrained tcp connection characteristics suffer access bandwidth buffer size limitations sender receiver run sufficiently long period time average transfer speed flow equals average capacity path clarify instantaneous capacity network link raw bandwidth link current traffic volume link instantaneous capacity path minimum capacities links path average capacity simply time-average instantaneous capacity path primary objective devise methodology discovering classifying wide-area bottleneck links location internet isp hierarchy identify size expanse isp bottleneck links belong secondary objective derive important properties bottleneck links property latency bottleneck links typical bottlenecks short link confined city long cross-country links finally derive capacity bottleneck links main challenge characterizing internet bottlenecks measure paths representative typical routes internet avoiding biases due narrow view network probe sites require probes well-connected results based measurements geographically diverse probe sites located primarily high speed access internet measure paths sites carefully chosen set destinations including paths tierisps paths fraction tiertier- tierisps resulting paths total addition identify measure paths passing public internet exchange points order explore common perception public exchanges major source congestion internet challenge lies measuring bottleneck link reporting bandwidth location due control ends path unable leverage existing tools measure bandwidth develop tool bfind measures capacity bandwidth probing technique apply measurement methodology empirically determine locations estimated bandwidth delay non-access bottleneck links results show half paths measured non-access bottleneck link capacity mbps percentage observed paths bottlenecks grows paths destinations smaller isps surprisingly bottlenecks identified roughly equally split intra-isp links peering links isps find low-latency links isps significant probability constraining bandwidth paths public exchanges bottleneck link constrained link appeared exchange point half cases chapter outline measurement methodology details choice paths design validation measurement tool bfind discussed section section present measurement-based characterization wide-area bottleneck links finally section discuss caveats approach summarize key observations chapter analyze implications end-user performance figure isp hierarchy figure illustrates tiers internet isp hierarchy measurement methodology internet today composed interconnected collection autonomous systems ases ases roughly categorized carrier ases isps stub ases end-customer domains goal measure characteristics potential performance bottlenecks wellconnected end-nodes encounter control perform measurement address important issues choosing set sources measurement choosing set probe destinations developing tool identify characterize bottlenecks probed paths cases pay careful attention isps sources destinations connected clarify choice measurement probe sites sufficient diversity isps briefly discuss tier classification isps present details measurement probes destinations measurement isp hierarchy hierarchical classification isps ases tiers defined tier isp approximate indication size global reach isp isps tierof hierarchy sprint large isps upstream isps isps tierhave peering arrangements lower hierarchy tierisps including savvis time warner telecom large national isps peering agreements number isps tierisps tieralso peering relationships generally peer isps isps tiersuch southwestern bell turkish telecomm small regional isps customer isps peer similar small isps finally isps tierfor rockynet customers typically peering relationships tiers isp hierarchy illustrated choosing traffic sources stub ases internet varied size connectivity provider networks large stubs large universities commercial organizations high speed links isps stubs small businesses slower connection core measurements traffic flows set sources control set destinations random chosen measure typical internet paths interested measuring bottlenecks faced well-connected endpoints ensure sources measurements high-speed internet connections large commercial academic organizations endpoints addition ensure sources geographically diverse span isps belonging tiers ensures results biased repeated measurement small 
class bottlenecks links hosts participating planetlab project access large collection internet nodes meet requirements planetlab internet-wide testbed multiple high-end machines located geographically diverse locations machines time performed experiments october located large academic institutions research centers europe note traffic sources primarily universities research labs measure paths nodes measured paths chosen representative typical internet paths opposed paths internet initially chose machine planetlab sites initial candidate experiments generally true academic institutions research labs hosting planetlab machines well-connected upstream isps found machines low-speed local area networks planetlab sites operational outset experiments october identified drawback eliminated machines set sources experiments unique upstream isps locations remaining planetlab sites shown figure specifically figure shows sources connected diverse set isps belonging tiers isp hierarchy univ bologna lancaster univ cambridge source measurement tiertier- tiertier- total unique isps avg isps planetlab source first-hop connectivity planetlab sources figure locations planetlab sources connectivity properties sources destinations located europe shown inset size dots proportional number sites mapped location choosing probe destinations objectives choosing paths measure sources choose set network paths representative typical paths internet traffic explore common impression public network exchanges naps network access points significant bottlenecks choice network paths measure equivalent choosing set destinations wide-area targets probe tools describe rationale techniques choosing test destinations achieve objectives end-to-end data traffic internet flows stub networks measure typical paths select large number stub networks destinations number destinations needed characterize properties representative paths make measurements impractical key features routing structure internet choose smaller set destinations tests traffic originated stub network subsequently traverses multiple intermediate autonomous systems reaching destination stub network definitions hierarchy discussed earlier flows originated typical stub source networks enter tieror higher tier isp flow cross sequence multiple links isps higher-tier upstream isps uphill path end sequence flow cross single peering link peer isps traverse downhill path ases progressively lower tiers final destination stub form routing arising bgp policies referred valley-free routing refer portion path flow excludes links stub network end path access links stub networks transit path non-access bottlenecks lie transit path destination stub network specifically bottleneck flow lie isps uphill downhill portion transit path distinct isps portion transit path measuring paths sources wide variety isps provide representative view bottlenecks sources encounter due large number isps impractical measure paths sources isp networks reachability provided isps arises directly position hierarchy path pass tierisps lower tier isp test paths sources tierases tierisps lesser global reach test paths sources fraction tierisps chosen randomly measure smaller fraction tierand tierisps number isps chose tier presented figure addition choosing target choose target address tests isp choose ispa pick router hops server ispa net case confirm router inside manually inspecting dns router isps routers function network edge chi-edgeinet qwest net backbone slbb -nyc- sprintlink net routers function router inferred names routers adjacent addition double check addresses isp routers path ispa typically change subnet address close web server measure path sources addresses geographic location destinations shown figure destination location identified traffic source delay univ bologna univ cambridge destinations probed mapped closest source tiertier- tiertier- number tested total internet percentage tested composition destination set figure location connectivity destinations destination location identified planetlab source minimum delay destination table shows composition destination set public exchanges isps internet peer number locations world peering arrangements roughly categorized public exchanges naps original nsf exchanges private peering pair isps motivations deployment private peering avoid perceived congestion public exchanges part measurements interested exploring accuracy perception set destinations test paths exchanges select set well-known naps including worldcom mae-east mae-west maecentral sbc ameritech aads paix palo alto nap gather list small low-tier customers attached nap customers typically listed web sites naps customers low tier reasonable likelihood path customers source passes nap multihomed nap isp find small set addresses address block customers reachable traceroute complete bgp table dump oregon route server obtain address space information customers large set public traceroute servers traceroute sources isps trace paths servers addresses identified script automate finding accessing working servers nap select paths nap purpose router dns names determining factor specifically nap dns router path selected paths pick routers one-hop predecessor successor router identified nap collect addresses collection addresses routers potentially destinations measure paths passing naps ensure paths fact traverse nap run traceroutes planetlab sources predecessor successor addresses identified planetlab source record subset addresses traceroute path nap resulting collection addresses destination set planetlab source bottleneck identification tool bfind tool run sources measure bottleneck link selected paths discussed earlier bottleneck link link path bandwidth unconstrained tcp flow minimum tool report bandwidth latency location addresses endpoints bottleneck path describe tool present overview existing tools drawbacks exiting tools development tools estimate bandwidth characteristics internet paths continues active research area complete list tools bprobe nettimer pbm packet-pair mechanisms measure raw bottleneck capacity path tools clink pathchar pchar pipechar characterize hop-by-hop delay raw capacity loss properties internet paths observing transmission behavior sized packets set tools pathload focus capacity path tools require control endpoints measurement destinations routers direct control tools applicable notice link bottleneck necessarily imply link heavily utilized congested treno usies udp packets measure bulk transfer capacity operated single-ended mode sends hop-limited udp packets destination treno emulates tcp congestion control sequence numbers contained icmp error responses probes hop path turn capacity identify bottlenecks path treno consume icmp processing resources probe packet router probed progresses hop-by-hop result high-speed links treno highly intrusive describe design operation bottleneck identification tool bfind addresses drawbacks tools bfind design bfind design motivated tcp property gradually filling capacity based feedback network bfind obtains propagation delay hop destination bfind minimum non-negative measured delays hop estimate propagation delay hop minimum delay samples traceroutes step bfind starts process sends udp traffic low sending rate mbps destination trace process starts running concurrently udp process trace process repeatedly runs traceroutes destination hop-by-hop delays obtained traceroutes combined raw propagation delay information computed initially obtain rough estimates queue lengths path trace process infers queue hop potentially increasing consecutive measurements queuing delay hop greater maximum raw propagation delay hop information computed hop trace process constantly accessible udp process udp process information constantly adjust sending rate feedback trace process increase queues hop udp process increases rate kbps rate change 
occurs feedback event traceroute essentially bfind emulates increase behavior tcp albeit aggressively probing bandwidth hand trace process reports increased delay hop bfind flags hop potential bottleneck traceroutes continue monitoring queues addition udp process sending rate steady current events occur hop continues flagged bfind consecutive measurements trace process threshold number observations made hop hop flagged threshold number times total bfind run pre-defined maximum amount total time seconds trace process reports queue build-up hop implying increasing queues difference delay consecutive routers path negative delay hop assumed transient occurrence cases bfind quits identifies hop responsible tool quitting bottleneck case bfind quits providing reliable conclusion bottlenecks path fourth case bfind continues increase sending rate steady pace search bottleneck trace process observes queues hops source building quits immediately avoid flooding local network hops includes links source stub network limit maximum send rate bfind mbps make bfind occupy local area network capacity identify bottlenecks mbps capacity bfind quits due exceptional conditions report bottlenecks notice bfind identifies bottleneck link path estimates capacity bottleneck equals send rate tool quit identifying bottleneck reliably paths bottlenecks identified bfind outputs lower bound capacity notice respects operation bfind similar tcp vegas rate-based congestion control sending rate modification vegas reasons ensure bottleneck link experiences reasonable amount queuing order definitive conclusion bfind aggressive vegas feedback loop trace process slower vegas obvious drawback design bfind heavy-weight tool sends large amount data makes difficult find large number sites host experiments bfind suitable continuous monitoring bandwidth short duration measurements modifications design bfind addressed issue bfind operation figure illustrates bfind works figure bfind run planet scs nyu nyu -srp cst hcvlny net cable vision corp tieras bfind ramps transmission rate delay hop link at-bb -nyc- -oc appliedtheory net jfk -core atlas algx net begins increase bfind freezes sending rate delay hop increases persistently finally bfind identifies hop bottleneck mbps capacity link raw latency maximum queuing delay observed bottleneck link figure shows potential false-positive run planetlab lcs mit mit amsterdam ripe net ripe tierbfind observes delays hops path increasing short time-scale causing bfind freeze udp send rate delay hop increases steadily starting secs steady increase bfind conclude hop bottleneck similar delay send rate mbps time udp send rate function time hop hop hop hop hop delay send rate mbps time udp send rate function time hop hop hop hop hop figure operation bfind graph queueing delay shown left y-axis instantaneous udp rate shown y-axis bfind identifies hop bottleneck bfind identifies hop bottleneck potentially false positive hops congestion transient dip delay hop secs rule possibility false-positives analysis choices set thresholds bfind number false positives low derive threshold testing combinations yielding minimum estimation error notice false negatives occur bfind path explored free congestion run persistently overloaded times bfind runs secs secs false negatives bfind validation section present simulation experiments nsto address issues bottleneck estimation tool bfind presented section accurately quickly bfind estimate location bottlenecks capacity bottleneck links location path impact speed accuracy presence multiple bottlenecks affect detection bandwidth probing behavior bfind compare tcp flow bottleneck link bfind aggressive tcp bfind compete long-lived tcp cross traffic probing bandwidth bottleneck link bottleneck faced competing tcp flows faced bfind address issues port bfind nswe setup path topologies shown figure chose experiment complicated topologies bfind setting close middle hop hop hop setting single bottleneck setting close middle hop hop hop setting bottlenecks figure topology bfind simulations topologies explained detail stands mbps row corresponds location bottleneck link close corresponds middle probes single path result nodes links topology auxiliary figure path hops hop-by-hop delays observed traceroutes machine cmu amazon capacity bottleneck links path shown italics figure bottleneck path test probing behavior bfind vary location bottleneck link path close middle explained raw capacity mbps referred setting mbps referred setting shown italicized bold font figure location bottleneck link close hop bottleneck link location middle hop bottleneck location hop bottleneck figure pictorially summarizes experiments single bottleneck link path bottleneck locations bandwidth settings topology figure similar bottleneck links setting links identical capacity mbps setting identical capacity mbps location bottlenecks close hops chosen identical bottleneck links middle hops bottlenecks hops bottlenecks topology cross traffic neighboring routers cross traffic consists http sessions nseach configured maximum connections addition cross traffic includes constant rate udp flows default parameters set nscross traffic reverse path neighboring routers similar capacity bottleneck link location capacity mbps setting capacity mbps setting bfind time tcp bfind time tcp output bfind throughput output bfind throughput close middle table bandwidth-probing performance bfind table shows configurations topology figure output obtained bfind comparison tcp flow bottleneck hop capacity bottleneck link location capacity mbps setting capacity mbps setting bfind output time bfind output time close hops middle hops hops table performance bfind presence similar bottlenecks table shows hops identified bfind bottleneck configurations figure time reach conclusion average cross traffic hops similar table show performance bfind experiments figure show bfind correctly identifies bottleneck time detection bandwidth reported bfind addition report average throughput tcp connection bottleneck link tcp connection runs exact conditions cross traffic bfind results show bfind accurately determines bottleneck links capacity values capacity bottleneck link higher time bfind necessarily worse throughput probed bfind roughly similar achieved tcp connection capacity bottleneck link low bfind probes aggressively tcp capacity higher bfind probe aggressively table show results performance bfind presence similar bottlenecks path topology figure results show bfind identifies links bottleneck output non-deterministic investigate bfind ability detect bottlenecks multiple links exist path slightly modified topology figure identical bottlenecks path deliberately set slightly higher capacity setting capacity bottleneck link location capacity mbps setting capacity mbps setting bfind output time bfind output time close hops middle hops hops table performance bfind presence slightly bottlenecks table shows hops identified bfind bottleneck configurations figure bandwidth hops path chosen slightly higher bandwidth reported bfind number flows setting bfind output setting bfind output figure bfind interaction competing long-lived tcp flows figures plots bandwidth reported bfind topology settings competing long-lived tcp flows bottleneck hops constrained mbps bottleneck link hops cases slightly higher capacity mbps setting capacity link chosen mbps results experiments shown table cases bfind correctly identifies hop bottleneck link similar capacity constrained link hop time 
detection necessarily worse show results demonstrating interaction bfind competing long-lived tcp traffic simulations single bottleneck topology figure location mid bottleneck hop eliminated cross traffic hop started long-lived tcp flows routerand routersuch total bandwidth achieved tcp flows mbps point time started bfind router probe capacity bottleneck link hop notice setting bfind report capacity mbps raw capacity mbps setting report mbps figure plot bandwidth reported bfind setting function number tcp flows setting bandwidth reported bfind lower mbps indicating bfind undesirable interactions competing tcp traffic setting bandwidth bfind mbps destination node path length pathload report pipechar report bfind report cmu-pl mbps mbps mbps princeton-pl mbps mbps mbps ku-pl mbps mbps hop mbps hop pittsburgh-node mbps mbps hop mbps hop fnsi net mbps hop mbps hop net mbps hop mbps hop table bfind validation results statistics comparison bfind pathload pipechar long show bfind competes fairly long-lived tcp traffic bfind unfair rtt-proportional fairness sense wide-area tests present results limited set wide-area experiments evaluate bandwidth estimate bottleneck location accuracy bfind validate bandwidth estimate produced bfind compare pathload widelyused bandwidth measurement tool pathload estimates range bandwidth path nodes measurements end path control end-hosts validate bottleneck location estimation bfind compare pipechar operates similarly tools pathchar pchar pipechar outputs path characteristics node arbitrary node internet hop path pipechar computes raw capacity link estimate bandwidth link utilization hop identified bandwidth bottleneck link output pipechar compare link identified bfind compare bandwidth estimates output bfind pipechar experiments perform transfers machine located commercial data center chicago large collection destinations destinations nodes planetlab infrastructure control ends path probing destinations destinations random routers inside isps probing path destinations control destination end path total probe destinations sample results tests presented table machines belong planetlab infrastructure fourth machine located pittsburgh attached source host located chicago area data center hop number bottleneck found shown parentheses note bfind limits maximum sending rate identify bottlenecks high capacity table case secs maximum execution time insufficient bfind probe mbps rest results show bfind consistently outputs location bandwidth pathload pipechar performed initial cross-validation approach checking planetlab sources metro area attached upstream isp identify bottleneck links probing destination addresses selected section los angeles metro area found sources ucsd ucla ucsb isi identify similar bottlenecks paths destinations cases bottlenecks located access network calren paths identical access network metrics reported addition bandwidth latency measurements post-process bfind output report ownership location internet bottlenecks classify bottlenecks based ownership bottlenecks lie isps classify tier owning isp isps classify tiers isps end bottleneck identify isp owning endpoint link whois servers radb ripe routing registries classification based latency bottleneck links classify bottlenecks levels latency low latency medium high rough classification chose classes correspond links pop links connecting smaller cities larger pops long-haul links paths naps classify path categories bottleneck reported bfind bottleneck nap bottleneck interested non-access bottlenecks finally present cumulative distribution capacity bottlenecks category results period weekdays ran bfind source destination sites experiments conducted est weekdays tests identified large number non-access bottleneck links paths path properties describing properties bottleneck links present important characteristics measured paths figures summarize features paths planetlab paths probed bfind completed bottleneck found limit send rate reached paths tierpaths tierpaths tierpaths tiernormalized number bottleneck links tier links tier links tier links tier links paths tierpaths tierpaths tierpaths tiernormalized number links intra-isp bottlenecks intra-isp links paths tierpaths tierpaths tierpaths tierfraction link types relative proportions bottleneck links links figure relative prevalence intra-isp bottlenecks graph shows average number bottlenecks kind appearing inside isps classified path type graph shows total number links bottleneck kind appearing paths considered left bar shows average number links shows average number unique links graph shows relative fraction intra-isp bottlenecks links types left bar average path composition links bar sites classified paths isps tier y-axis plot normalized number links total number links encountered type divided total number paths class path class pair bars left bars graphs show average properties paths bars show average number unique links path class adds measurements number significantly actual link counts factor links sources destinations probed paths double-counted links bias measurements paths tierpaths tierpaths tierpaths tiernormalized number bottleneck links tier -tier tier -tier tier -tier tier -tier tier -tier tier -tier tier -tier tier -tier tier -tier tier -tier paths tierpaths tierpaths tierpaths tiernormalized number links bottlenecks peering links peering links paths tierpaths tierpaths tierpaths tierfraction link types relative proportions bottlenecks links figure relative prevalence peering bottlenecks graph shows average number bottlenecks kind appearing isps classified path type graph shows total number links bottleneck kind appearing paths considered left bar shows average number links shows average number unique links graph shows relative fraction peering bottlenecks types left bar average path composition links bar bottlenecks paths present information unique links describing average path properties note figure shows intra-isp links figure shows peering links characteristics entire paths evident examining figure shows average path planetlab site tierdestinations traversed links inside tierisps tierisp links anda tierlinks figure illustrates location peering links shows paths traversed tierto tierpeering links tierto tierlinks tierto tierlinks tierto tierlinks small number peering links total average path length paths tierisps sum bars hops similar bars tiertier- tierdestinations show breakdown paths clear trend total path length lower tier destinations longer tieraverage length hops tieris tieris tieris important feature number link types make typical paths class expected definition tiers greater diversity hops tiers paths lower tier destinations paths tierdestinations significant proportion types peering intra-isp links summarize find links involving tierisps intra-isp links peering links form significant fractions typical paths measured find typical paths fewer peering links intra-isp links locations bottlenecks figures describe types bottleneck links found paths destinations belonging tiers left bars graphs show probability identified bottleneck link type based observations figure bottleneck links paths tiernetworks consist links inside tierisps time tierlinks time tier links time bottlenecks tierisps cases figure peering links types account bottlenecks tierpaths time tierto tierlinks appearing types peering bottleneck links graphs approximately tierpaths measured bottleneck identify bottlenecks capacity greater mbps figures show breakdown links averaged type path intra-isp peering links comparing heights components left bars indication prevalence type bottleneck link left bar relative appearance paths bar figure appears lower-tier intra-isp links path bottlenecks 
greater proportion appearance paths figure shows tierlinks make bottlenecks tierdestinations account links paths note bars figure show number unique bottlenecks links observed set left bars unique bottlenecks paths tierdestinations figure notice significant difference proportion tierbottleneck links examination discovered planetlab sites connected internet tierisp isp links bottlenecks paths leaving planetlab site generally figure lower-tier intra-isp links bottlenecks frequently expect based appearance links paths similar examination figure reveals details properties bottlenecks peering links figure shows tierto tierpeering links bottlenecks frequently expected proportion paths peering links tiertier- tierisps bottlenecks frequently expected compare proportion tierto tierpeering bottlenecks proportion links path length paths tierand paths tierlooking figures observe additional properties bottleneck links total path lengths hops adding heights bars figures hops links isps bottlenecks paths equally split intra-isp links peering links comparing height bars figures suggests bottleneck link path equally interior isp isps number peering links traversed smaller likelihood bottleneck peering links higher fact bottleneck path equally lie inside isp isps surprising important trend percentage paths identified bottleneck link grows paths lower-tier destinations paths tierdestinations bottlenecks paths tiers percentages note paths tierappear fewer intra-isp bottlenecks paths tierthis peering links traversed tierpaths introduce greater constraint bandwidth summarize found wide-area bottlenecks roughly equally split intra-isp peering links find bottlenecks prevalent networks lower isp hierarchy bandwidth characterization bottlenecks previous section location relative prevalence observed bottleneck links section discuss properties bottlenecks specifically analyze bandwidth bottlenecks identified bfind figure illustrates distribution bandwidth bottleneck links observed parts network cdfs paths traversed mbps bandwidth recall bfind limited measuring bottlenecks mbps due hop network limitations figure shows bottleneck speeds observed intra-isp links tierand tierisp links clear advantage terms bottleneck bandwidth tierisp bottlenecks fact tierbottlenecks cumulative frequency estimate bottleneck bandwidth mbps tier tier tier tier cumulative frequency estimate bottleneck bandwidth mbps tier -tier tier -tier tier -tier tier -tier intra-isp tierpeering cumulative frequency estimate bottleneck bandwidth mbps tier -tier tier -tier tier -tier lower tier peering figure capacity bottleneck links graph corresponds bottlenecks isps graphs show distribution capacity bottlenecks peering links involving tier isps peering links involving tier isps show distributions bottleneck links tiers tiers small number identified offer higher capacity tierbottlenecks surprising result links tierisps hand exhibit limited bandwidth distribution expected figures distribution bottleneck bandwidth peering links tierto tierpeering links constrained indicating links largest network providers provisioned compared links lower-tier networks find surprisingly tierand tierlinks exhibit similar characteristics peering links tiernetworks figure peering links tierand tierare significantly tierto tierlinks figure bottleneck peering links involving networks low hierarchy provide significantly capacity expected illustrated bandwidth distributions tierto tierand tierto tierlinks summary bottlenecks involving tierisps fairly well-provisioned highest capacity found bottlenecks involving tierisps similar bandwidths involving tierisps paths tierpaths tierpaths tierpaths tiernormalized number bottleneck links high lat peering high lat intra-isp med lat peering med lat intra-isp low lat peering low lat intra-isp paths tierpaths tierpaths tierpaths tiernormalized number links bottleneck links links paths tierpaths tierpaths tierpaths tierfraction link types relative proportions bottlenecks links figure relative prevalence bottlenecks latencies graph shows average number bottlenecks classes latencies classified occurring isps occurring inside isps graph shows actual number links bottleneck kind appearing paths graph shows relative fraction bottleneck links latency types left bar average path composition links bar latency characterization bottlenecks section analyze latency bottlenecks explore correlation high-latency links relative likelihood bottlenecks figure similar figures figure shows latency characteristics paths paths tierdestinations average low-latency intra-isp low latency peering medium latency intra-isp medium latency peering high latency intra-isp high latency peering links general path types high proportion low-latency hops intra-isp peering high-latency intra-isp hops indicative single long-haul link average paths measured high latency peering links occur practice planetlab sites isp pop city result link site isp characterized peering link latency exceeds figure illustrate prevalence bottlenecks latency observe high-latency peering links bottlenecks appearance paths observed paths tierdestinations links bottlenecks account links suggests high-latency peering link encountered path bottleneck high latency intra-isp links hand overly bottlenecks bottlenecks hops paths tierin general figure suggests peering links higher likelihood bottlenecks consistent earlier results holds low medium high-latency peering links paths medium latency peering links account significant proportion bottlenecks types paths low-latency peering links paths lower tiers tierand tierhave high likelihood bottlenecks compared paths tierand tierdestinations recall figures lower-tier peering bottlenecks bandwidth summarize find high-latency intra-isp links overly bottlenecks opposite true high-latency peering links find peering links higher likelihood appearing bottlenecks wide-area paths bottlenecks public exchange points present study bottlenecks paths public exchanges figure tested paths public exchange points measured paths bottleneck link bottlenecks exchange point contrast expectation exchange point bottlenecks identified paths interesting probability bottleneck link located exchange contrast figures show type link intra-isp peering responsible larger percentage bottlenecks paths exchange points paths non-access bottlenecks bottlenecks exchange point cumulative frequency estimate bottleneck bandwidth mbps nap links relative prevalence bandwidth distribution figure bottlenecks paths exchange points table left shows relative prevalence bottleneck links exchange points figure shows distribution capacity bottleneck links exchange points measurement caveats summary observations implications key results study summarized table study yields number interesting unexpected findings characteristics wide-area bottleneck links find substantial number bottleneck links isps bottlenecks found located inside isp networks conventional wisdom wide-area bottlenecks confined peering locations economic incentive isps carefully manage load links share neighbors addition observed low latency links isps constrain bandwidth small significant probability observations provide guidance issues choosing access isp optimizing routes network discuss issues context empirical findings discuss caveats measurement methodology critique measurement methodology describe shortcomings approach approximate measurement typical paths choose representative set network paths figure bottlenecks tiers paths tierdestinations comparable bottlenecks exchange points respect non-access bottlenecks equally links isps peering links isps likelihood existence bottleneck increases paths lower tier isps internal links lower tier isps bottlenecks greater frequency presence typical paths high-latency peering links bottlenecks paths high-latency intra-isp links hand overly bottlenecks interior peering bottlenecks tierand tierisps exhibit similar capacity hen bottleneck found paths public internet exchange likelihood bottleneck lying exchange paths high proportion low-latency links interior peering roughly high-latency interior link table properties wide-area internet bottlenecks summary key observations wide-area bottlenecks set paths exhaustive diverse location network connectivity test nodes usa-centric international sources destinations measure international network connectivity route significant impact 
measurements internet route frequently difficult bfind saturate path detect bottleneck similarly multipath routing bfind udp probe traffic traceroutes paths network result bfind detect queuing delays saturating network traffic situations occurred traceroutes tested path reveal multiple routes continuous sampling path traceroute bfind test observe routing problems occurring frequently consistent recent results showing internet paths tend stable hour timescale processing time routers generate traceroute icmp responses impact measurement queuing delay bottlenecks network researchers noted icmp error processing typically router slow processing path takes longer packet forwarding addition routers pace icmp processing order avoid overwhelmed delays reported traceroute artificially inflated recent work shown slow path fast path differences affect traffic measurement tools practice typically observed icmp processing delays order timescales accurate bottleneck detection address allocation skew results rely address reported routers response traceroute probes determine ownership peering arrangements router owned isp allocated address peer isp address space make configuration convenient situations link classification erroneously identify incorrect link hop peering link isps common point-to-point links private peering situations separate address allocations public exchanges eliminate problem reduce occurrence problem significantly finally note results represent empirical snapshot non-access internet bottlenecks focus collecting observations large number paths taking repeated measurements paths extended period approach wider view characteristics locations bottlenecks judge stable persistent locations isps provisioning measurements show clear performance advantage tierisp results show small regional isps tierproviders low-speed connectivity upstream isp irrespective isp size addition networks exhibit performance bottlenecks considered reflection impact economics network provisioning assume isps lower hierarchy inclined over-provision networks typical customer traffic volume require result clear disadvantage tierisp high-speed connectivity trade-offs tierand tiernetworks clear paths tierdestinations larger percentage bottleneck links tierpaths observed tierand tierbottlenecks show similar characteristics terms capacity tierbottlenecks intra-as peering links performing slightly cases explained conjecture tierases virtue higher degree reachability carry larger volume traffic relative capacity compared tierases extending hypothesis conclude stub network desires wide-spread connectivity isp choosing tierisp beneficial choice economically terms performance assuming connectivity tierisps expensive route selection improved internet performance measurements show large fraction internet paths measurements suffer performance bottlenecks internet rich topology numerous alternate paths reasonable amount bandwidth exist arbitrary endpoints remaining paths measured capacity mbps true non-access links irrespective location latency observations chapter naturally lead key question avoid wide-area bottlenecks improve internet performance leveraging existing routing protocols considerable work load-sensitive routing traffic extend ases address question chapters chapter measurement-based analysis multihoming internet constituted hundreds distinct isps large cities world tens isps compete provide internet connectivity options home users businesses alike pricing offered connectivity speeds isps differ crucial aspect performance connectivity provided isps parts internet vary substantially time destination involved choice isp due variations traffic volumes networks neighboring isps networks due traffic engineering isps differ performance offer internet destinations time similarly depending isps internet destinations connected isp versus communicate specific destination mentioned chapter end-network enterprise content provider buys internet connectivity single isp restricted paths provided isp internet destinations general isp bgp path destination isp networks upstream face performance bottlenecks availability problems end-network receive poor download speed response times stay disconnected key internet destinations extended periods time end-network subscribes isps approach popularly referred multihoming enjoys modest improvement number routes destination isp bgp path yielding distinct paths destination end-network intelligently switch isps based time day internet destination best-performing isp transfer approach internet connectivity significantly improve internet performance reliability subscriber networks general refer approach multihoming route control illustrated figure technical definition multihoming route control technique end-network buys connections multiple isps intelligently schedules traffic isp connections improve internet transfer speeds response times reliability multihoming traditionally employed large end-networks achieve coarse-grained route control primary-backup mode figure multihoming figure shows route control set-up figure shows traditional multihoming set-up resilience internet service interruptions set-up multiple isp connections employed primary-backup mode traffic moved isp link failure primary link figure advent expected growth route control devices promises subscribers leverage benefits multihoming route control products leveraged optimize web performance transfer speeds bandwidth availability fine time-scales multiple isp links marking statements tangible benefits end-networks expect products services chapter goal quantify extent subscriber end-networks benefit employing multihoming route control mechanisms focus improvements internet performance reliability conceptually approach network subscriber major metropolitan area evaluate relative benefits choosing upstream isps options assume subscriber control end-toend paths isps provide first-hop connectivity internet subscriber traffic scheduled isps collect analyze datasets step-by-step approach quantify performance benefits route control evaluate improvements internet round-trip time rtt performance form multihoming subscriber coarse-grained control isp links data transmission subscriber single isp traffic hour period refer naive multihoming illustrate rest thesis terms multihoming route control multihoming route control interchangeably improvements rtt performance per-connection control traffic set-up subscriber connections isps refer -multihoming finally analyze general notion -multihoming subscriber multihomed isps city establish baseline assume subscriber employ isps switch performing isp instant evaluating performance increased provide insight incremental benefit additional isps quantify rtt throughput improvements -multihoming addition analyze impact choice isps impact time day day week benefits -multihoming quantify reliability benefits -multihoming collect datasets dataset quantifies availability provided multihoming based active probe measurements dataset show multihoming improves availability internet paths estimates availability internet routers data sets comprise measurements conducted servers monitoring nodes deployed akamai large content distribution service provider servers monitors attached diverse set isps nodes connected single isp multiple akamai servers located major metropolitan areas network performance data collected akamai nodes compare performance isps perspectives multihomed subscribers metropolitan areas order compute potential improvements multihoming route control datasets make key assumptions chapter end-network perfect information performance availability routes isps end-network switch candidate isps destination desired end-network easily control isp link traversed packets destined network refer inbound control key observation measurements average multihoming considerably improve performance reliability end-networks terms performance -multihoming situation rtts improved average metro areas study improvements throughput performance average find strong evidence diminishing incremental performance benefits isps added observe increasing added performance reliability comparing optimal multihoming solution random choice isps find random selection degrades rtt performance suggests careful choice isps key achieving potential benefits multihoming chapter outline illustrate performance improvements naive multihoming section section illustrate improvements per-connection control traffic isp connections -multihoming section study improvements due -multihoming present reliability analysis section finally summarize observations study discuss implications section naive 
multihoming rtt performance section study improvements internet rtt performance subscribers employ naive multihoming ideally realize optimal benefits route control subscriber exercise per-flow control isp link per-byte control theory form control poor interactions current tcp implementations contrast naive multihoming subscriber traffic single isp connection interval time hours irrespective destination end interval subscriber decide isp link upcoming interval measurement dataset analysis naive multihoming passive measurement data collected server nodes deployed akamai cities important feature data collection points connected large variety isps multiple metropolitan areas collection points located connected isp akamai servers single metro area stand-ins multihomed subscriber term multihoming emulation refer procedure dataset employ average http turnaround times requests made akamai servers back origin content provider servers figure requests typically initiated akamai server valid object cached retrieve origin server turn-around time http requests time transfer byte request akamai node receipt byte response origin server turnaround time offers reasonable estimate network delay customer content providers cdn large web servers expect servers well-provisioned observed turnaround time constituted network delay delay due web server turnaround times measure averaged hour requests origin content providers collected data hour five-day periods monday january friday january monday january friday january inclusive cdn servers metro area isp origin servers isp isp isp figure naive multihoming akamai servers connected isps city download objects customer origin servers order serve clients data set turnaround times averaged hour retrievals origin servers measurement results compute performance improvements naive multihoming hour compare average turnaround time achieved isp city isp candidate multihoming option subset isps average ratio hours report minimum normalized performance metric minimum candidate options formally compute performance benefits naive multihoming option consisting isps denoted performance -multihoming option city relative performance isps denotes average turnaround time performance isps set hour average turnaround time performance hour carriers sum numerator hours isps average turnaround time statistics logged data set counts number instances small fraction hours average turnaround time data unavailable networks normalized performance metric rank atlanta boston chicago dallas los angeles york orlando san francisco seattle washington normalized performance metric number providers atlanta boston chicago dallas los angeles york orlando san francisco seattle washington ranks isps naive -multihoming relative benefits figure naive -multihoming figure shows -multihoming performance isps city isps ranked performance figure shows diminishing returns -multihoming city figure plot performance metric isps city ranks isp rank city graph shows week data week similar notice cities isps give significantly performance isp seattle times performance isp cities isps provide similar performance figure apparent cities excess isps san francisco evaluating options -multihoming determine naive multihoming option computationally expensive reduce amount computation evaluating -multihoming options performance top isps city chosen based -multihoming performance negligible impact results analysis showed performance top isps virtually indistinguishable performance isps city results omitted figure show potential performance benefits naive -multihoming week data week results similar notice significantly performance -multihoming locations cities performance benefit substantial due single isp providing performance time los angeles benefit naive -multihoming marginally smaller values cities table shows order isps added -multihoming solution york increasing values isp show -multihoming rank performance notice -multihoming solution necessarily comprise -multihoming options isp rank isps added based contribution -multihoming performance isps employed optimal schedule naive multihoming interested isp contribution performance isp rank -multihoming -multihoming performance performance isp isp isp isp isp isp isp isp table rank performance ranks isps -multihoming solutions york order added incremental performance improvement multihoming factor isp usage isp isp isp isp isp isp isp isp multihoming factor isp usage isp isp isp isp isp isp isp isp boston york figure relative utilization isps cities boston york graphs show fraction time isps naive -multihoming solutions city utilized optimal schedule improvement proportional frequency optimal schedule results cities boston york illustrated figure results show contribution performance proportional usage isp york significant fraction time -multihoming solution figure marginal benefit adding isp -multihoming solution figure isp belonging -multihoming solution utilized small fraction time optimal schedule contributes significantly improving performance isp smaller fraction time isp naive -multihoming solution boston figure contribution isp benefit due -multihoming larger isp summarize naive multihoming substantially improve turnaround time performance subscriber networks find contribution isp improvement proportional optimal schedule finally set isps necessarily include individual isps explore issue section -multihoming rtt performance previous section illustrated naive multihoming improve average rtt performance subscriber network illustrate rtt benefits multihoming analysis highlight maximum performance improvements due multihoming arises key limitations dataset rtt performance data averaged content providers duration hour finer-grained control isp links improve rtt performance multihoming improve transfer speeds significantly provide quick failover datasets analyze benefits multihoming subsequent sections analyze active measurement data collected selected akamai server monitoring nodes address drawbacks section setting end-network isp connections illustrate rtt benefits intelligently controlling isps finer time granularity order minutes refer -multihoming measurement dataset analyze -multihoming collect rtt performance statistics geographically distributed akamai monitoring nodes monitoring nodes located major cities multiple nodes city attached upstream isps shown figure minutes nodes download designated objects directly large number content providers akamai customers attempted download performance monitor logs number statistics including http response code turnaround time request successful size object downloaded total response time errors unsuccessful focus turnaround time defined time transfer byte request akamai node receipt byte response origin server turnaround time offers reasonable estimate network delay collected statistics performance monitors downloads made content providers customers akamai data collected thursday january sunday january inclusive content providers top customers akamai akamai network serves largest number bytes perf monitor metro area isp isp selected content providers figure -multihoming akamai performance monitors city connected isps download objects -minute intervals servers belonging content providers measurement results -multihoming measurements dataset compare performance achieved isp link download relative single isp downloads average ratio downloads content providers report normalized performance metric careful compare transactions performance monitors successfully downloaded object roughly time select cities performance monitors giving locations atlanta chicago dallas york rest cities performance monitor monitor nodes cities measure benefits -multihoming employing respective isps formally computation expressed performance isp relative -multihoming denotes turnaround time transfer initiated time monitor node attached isp retrieve object content provider similarly isps turnaround time transfer city time content provider sum numerator pairs transfer 
logged time atlanta chicago dallas york performance relative -multihoming isp isp atlanta chicago dallas york turn-around time isp -multihoming isp pct pct pct potential benefit variability benefits atlanta chicago dallas york isp usage isp isp relative usage isps figure -multihoming evaluation average benefits shown graph shows median percentile turnaround times isp -multihoming relative usage isps optimal schedule shown content provider isps function simply counts total number pairs notice optimal occurs isps consistently denotes maximum improvement performance multihoming isps -multihoming compared performance isp results performance benefits -multihoming shown figure isps isps cities tierisps cities -multihoming offers performance benefits albeit varying degrees chicago isp optimal performance cities minimum performance benefit -multihoming average figure illustrates absolute rtt improvement median percentile turnaround time note -multihoming uniformly improves maximum turnaround times effect median minimum performance extent improvement varies cities figure shows fraction time isps performance chicago time isps cities roughly equally optimal schedule summarize -multihoming showed fine-grained control isp connections result significant improvements subscriber network isp connections equally optimal schedule traffic -multihoming previous sections provided examples benefits multiple isp connections due limitations datasets number general questions remain unanswered multihoming improve transfers speeds performance improvements depend destination time-of-day day-of-week impact exact choice number isps subscriber performance section address questions comprehensive active measurements rtt throughput performance large testbed consisting nodes belonging server infrastructure akamai cdn similar methodology emulate multihoming scenario selecting nodes metropolitan area singly-homed isp collectively stand-in multihomed network nodes testbed span cities continental averaging nodes city connected commercial isps sizes nodes chosen avoid multiple servers attached isp city list cities tiers isps shown figure tiers isps derived work geographic distribution testbed nodes illustrated figure emulate multihomed networks metropolitan areas isps atlanta bay area boston chicago dallas los angeles york seattle washington describe data collection methodology present key measurement observations order present improvements rtt throughput performance -multihoming explore improvements due multihoming skewed destinations time day day week finally explore impact suboptimal choice isps observed subscriber performance city isps tier atlanta bay area boston chicago columbus dallas denver des moines houston los angeles miami minneapolis york seattle louis tampa washington testbed isps node locations figure testbed details cities distribution isp tiers measurement testbed listed geographic location shown area dot proportional number nodes region data collection draw observations datasets collected testbed data set consists active http downloads small objects measure turnaround times pairs nodes minutes collect turnaround time samples pairs nodes testbed including city data set throughput measurements active downloads objects set nodepairs downloads occur minutes node-pairs throughput simply size transfer divided time receipt bytes response data server source notice reflect steady-state tcp throughput path testbed nodes part akamai production infrastructure limit frequencies all-pairs measurements collected ensure active probes pairs nodes observe similar network conditions scheduled occur interval round-trip time data set minute interval throughput data set ensure individual node involved transfer time probes contend bandwidth source destination network transfers interfere internet testbed nodes located routes probe observations -centric round-trip time data set collected thursday december wednesday december throughput measurements collected thursday tuesday days inclusive -multihoming improvements understand performance benefits -multihoming adopt similar methodology section download compare turnaround time achieved isp city isp candidate multihoming option average ratio transfers testbed machines report minimum normalized performance metric minimum multihoming options compare transactions simultaneous successful transfers isps formally denotes turnaround time transfer testbed node time isps city -multihoming option turnaround time isps set compute rtt performance benefit option normalized performance number providers atlanta bay area boston chicago dallas los angeles york seattle washington normalized performance number providers atlanta bay area boston chicago dallas los angeles york seattle washington turnaround time throughput figure -multihoming benefits figure plots improvement web turnaround times multihoming figure plots improvements throughput sum times transfers occur isps city node number time instances compute throughput benefits similar fashion slight difference definition rtt throughput metrics arises fact interested multihoming provide lower rtts higher transfers speeds figure plot normalized rtt throughput benefits -multihoming function number isps key facts apparent figure average rtt improves dramatically subscriber set isps relative single isp normalized performance metric lowered reflecting average improvement rtts intuitively occurs well-chosen isp potentially double diversity paths destinations improved choice paths helps end networks avoid performance problems single isp paths strong evidence diminishing returns isps marginal benefits additional isps small intuitively occurs fourth isp provide additional diversity well-chosen set isps terms throughput multihoming improves performance relative single isp figure notice diminishing returns performance isps frac destinations diff difference turnaround times atlanta bay area boston chicago dallas los angeles york seattle washington frac destinations diff difference throughputs mbps atlanta bay area boston chicago dallas los angeles york seattle washington turnaround time throughput figure per-destination performance figures plot absolute improvements rtt throughput performance -multihoming relative -multihoming unrolling averages presented averages performance improvements multihoming route control section present underlying distributions performance improvements goal understand averages skewed destinations source city measurement samples multihoming offers significantly performance single isp time-of-day day-of-week effects performance destination figure show distribution average difference -multihoming path path single isp point represents destination cities illustrate subscriber seattle -multihoming improves average rtt destination destinations destinations los angeles improvement due multihoming dramatic destinations improvement average rtt due multihoming key point notice cities exist destinations multihoming offer significantly improved rtt performance figure distribution average throughput difference multihoming path single isp throughput difference mbps destinations note destinations difference excess mbps rtt observations imply transfer speeds destinations substantially higher subscriber multihomed versus statistics figures plot average median percentiles difference rtt throughput -multihoming -multihoming figure median rtt difference fairly small median rtt differences percentile difference higher roughly greater percentile throughput differences figure significant mbps time confraction paths difference difference turnaround times percentile median percentile fraction paths difference difference throughputs mbps percentile median percentile turnaround time throughput figure underlying distributions figure showing median percentile percentile difference source-destination pairs figure plots rtt figure plots throughput pessimistic estimate fraction paths difference difference turnaround times morning noon afternoon evening weekends nights fraction difference turnaround times monday tuesday thursday friday weekend time-of-day effects day-of-week effects figure time day effects figures plotting impact time-of-day figure day-of-week pessimistic figure rtt performance times edt sidering median 
throughput differences significant fraction greater mbps observations suggest multihoming improves performance transfers modest amounts performance small significant fraction improved significantly carefully scheduling traffic isp links time-of-day day-of-week effects effects hourly daily network usage patterns relative performance -multihoming -multihoming expected -multihoming perform worse peak periods figure examine time-of-day effects average difference round-trip times notice rtt performance improvement show correlation time day improvement due careful route selection minimal evenings weekends differences pronounced remaining time-periods examine daily patterns determine differences greater days week figure correlation performance improvements days week significant expected normalized performance number providers atlanta bay area boston chicago dallas los angeles york seattle washington normalized performance number providers atlanta bay area boston chicago dallas los angeles york seattle washington performance random choice performance poor choice figure impact sub-optimal choices graph shows expected rtt performance metric random -multihoming option graph shows performance worst -multihoming option normalized performance number providers optimal random worst top normalized performance number providers optimal random worst top san francisco los angeles figure choice isps figures show rtt performance isp selection policies san francisco los angeles observe improvements inferior weekends improvements days week substantially impact choice isps figure illustrate impact choosing sub-optimal set isps -multihoming solution assume choice isps subscriber isp set transfers comparing figures rtt performance metric due random choice isps higher chicago difference optimal random choices isps substantial higher values figure show performance worst -multihoming option poor choice upstream isps result performance bad optimal choice compare chicago figures multihoming offers potential significant performance benefits crucial carefully choose set isps finally explore relative rtt performance strategies selecting isps figure compares rtt performance metric optimal random worst-case choice multihoming isps subscriber san francisco addition show rtt performance metric case subscriber multihomes top individual isps terms average rtt performance selecting top individual isps perform random choice similar rtt performance optimal choice informed selection isps simply choosing top yield rtt performance average figure show similar set results los angeles figure case choosing top isps yields identical rtt performance optimal choice isps summary find -multihoming substantially improve rtt throughput performance subscriber networks additional benefit employing isp connections isps chosen carefully realize potential benefits view good heuristic subscriber network select top individual isps serving city resilience path failures end networks employing single isp connection paths provided isps maintain connectivity internet destinations result failures inside isps networks inevitably result connectivity disruptions end networks past studies shown failures minutes severely impact end-user internet access experience end-networks vastly improve resilience service interruptions relying multihoming route control monitoring availability paths isps cleverly scheduling traffic isps paths end-network substantially reduce connectivity outages section analyze distinct datasets collected testbed section figure quantify improvements resilience multiple isp connections focus special case subscriber employs fewer isps multihoming active measurements path availability approach perform two-way icmp pings nodes testbed figure ping samples collected node-pairs day period january january probes minute timeout response received ping deemed lost path considered failed consecutive pings minute source destination lost measurements derive failure epochs path epoch begins fraction paths availability availability percentage multihoming -multihoming -multihoming figure end-to-end failures distribution availability end-to-end paths multihoming isps -multihoming cases isps city based rtt performance failed probe times ends successful reply subsequent probe epochs periods time route source destination failed method deriving failure epochs limitations firstly wait consecutive losses detect failures minutes result analysis characterize ability multihoming avoid short failures ping packets dropped due congestion path failure measurements easily determine losses due failures due congestion finally destination reply icmp echo reply messages causing record loss mitigate factor eliminate paths fraction lost probes analysis due reasons path failures identify considered over-estimate number failures lasting minutes longer failure epochs end-to-end path compute availability defined length failure epoch path length measurement interval days total sum failure epochs considered observed downtime path figure show cdf availability paths measured multihoming multihoming employed paths availability shown figure fewer thana paths availability route control multihoming significantly improves availability end-to-end paths shown -multihoming availability distributions -multihoming combinations isps providing rtt performance city route control isps paths originating cities studied availability minimum availability paths higher multihoming paths cities respective destinations experience observable failures day period availability isps availability improved slightly path availability analysis vast majority paths fail short measurement period approach statistics derived previous long-term measurements ascertain availability feamster collected failure data active probes nodes ron testbed approximately seconds months consecutive probes path lost traceroute triggered identify failure appeared router reachable traceroute long lasted routers traceroute data labeled number classified border internal routers subset measurements paths non-dsl nodes collected june march infer failure rates testbed approach drawbacks discuss obtain view longer-term availability benefits route control direct measurements testbed estimate availabilities router classes fraction time correctly forward packets classify routers ron testbed traceroutes tier method role border internal router note inference failure location based router location actual failure link router attached responding router availability estimate computed total time failures attributed routers classa observed total number routers classa observed path day estimate availability router attached link classa words fraction time unavailable aggregate failure time attributed router classa divided total time expect observe router classa path estimates router classes shown table apply availability statistics derived ron data set identified classified routers paths nodes testbed performed traceroute measurements approximately minutes nodes cdn testbed december dec analysis observed path pair nodes dataset included single successful traceroute day assumed active probes route day tier location availability internal border internal border internal border internal border internal border table availability router classes estimated availability routers links classified tier location border router link cases path time router availabilities estimated ron data set estimate availability routes testbed multihoming estimating simultaneous failure probability multiple paths important identify routers shared paths failures paths accurately correlated determining router aliases difficult paths testbed conservatively assumed routers end paths destination identical belonged sequence ases router-level paths destined common node map ases assume routers common reality routers failures routers correlated heuristic identify identical routers paths originating source node assume failures independent aspects approach introduce biases analysis routes ron testbed paths representative routes testbed ensure similarity paths well-connected ron nodes good fraction ron nodes belong home dsl 
users addition observed availabilities router classes ron dataset vary substantially months difference time frames impacted results routers links ron data set fail frequently bias availability router type traceroutes initiated failure detected accurately estimate failure rates individual routers questionable assign failures reachable router traceroute unknown found isps block responses udp probe packets alias resolution tools ally chicago wash los angeles york bay area seattle average availability percentage city multihoming -multihoming figure availability comparison comparison availability averaged paths originating cities single isp -multihoming isps chosen based round-trip time performance router path failed availabilities estimate failures observed router type figure compares average availability multihoming route control paths originating cities destinations testbed expected active measurements average availability paths testbed high direct paths -multihoming improves average availability cities hours availability year availability primarily upper bounded availability routers links immediately destination shared paths converge summary route control improve availability end-networks addition performance failures fully eliminated availability offered route control good practical purposes summary observations implications chapter studied potential improvements internet performance reliability multihoming key observations study outlined table study establishes multihoming route control significantly improve internet rtts throughputs reliability end networks isp connections marginal benefit employing additional isps minimal important make informed choice isps realize potential benefits multihoming good strategy end network multihome top individual isps serving city evaluation multihoming route control assumed network destinations singly-homed restriction observed significant performance improvements cases destination network multihomed destination multihomed source network administratively related branch offices parent organization cases performance experienced end multihoming route control lower internet rtts relative single isp addition multihoming yield higher transfer speeds measurements show substantial fractions transfers major cities internet destinations experience improvement rtts mbps improvement transfer speeds route control terms reliability observe multihoming isps eliminates failures experienced singly-homed network strong evidence diminishing returns improvements internet performance marginal isp connections careful choice isps important realize potential benefits multihoming route control poor uninformed choice isps yield rtts double rtts optimal choice cities study employing top individual isps multihoming roughly performance improvements employing set isps table benefits multihoming route control summary key observations multihoming communicating order heavily optimized co-ordinating choices isps ends connect ends connected set tierisp network paths hops long coordinating choice routes ends decided isp connection data transfer transfer traverse single isp domain avoiding inter-domain policies taking shortest-ip-hop route notice internet routing isp subscriber bgp path destination employing multihoming choosing good set isps end-network enjoys slightly richer selection bgp routes destination route isp destination choose informed manner effect observations chapter shown routing flexibility end-networks improved moderate amounts multihoming route control internet performance reliability significantly improved contributions measurement study multihoming simply summarized improving routing flexibility endpoints moderate amounts internet performance reliability vastly improved chapter flexibility sufficient enabling routing flexibility end-networks overlay networks result superior performance reliability chapter comparison overlay routing multihoming route control typical model enterprise internet access today enterprise buy internet connectivity isp route traffic isp model isp determines enterprise data routed internet destination involved connected isp enterprise isp employs border gateway protocol bgp route traffic destination past analyses bgp highlighted inefficiencies functioning routes enabled bgp yield sub-optimal rtts transfer speeds failures bgp resulting events router malfunction require unacceptably long reconvergence stabilization times aptly limitations conventional internet routing based border gateway protocol bgp held responsible failures poor performance end-to-end internet transfers number studies shown underlying connectivity internet capable providing greater performance resilience endpoints receive studies detour ron demonstrated overlay routing bypass bgp policy-driven routing enables quicker reaction failures improved end-to-end performance approach endpoints route traffic intermediate overlay nodes deployed internet helps endpoints bypass default routes determined bgp avoid performance availability problems routes chapter question overlay routing required make underlying connectivity intelligent selection bgp routes endpoint sufficient specifically chapter compare contrast overlay routing multihoming route control noted previous chapter multihoming route control enables end-networks intelligently control bgp paths provided multiple isps multihoming require improvements underlying bgp protocol goal answer question benefit terms internet performance resilience overlay routing provide multihoming route control benefit small bgp path selection based multihoming inferior held good end-to-end performance reliability achievable operating completely standard internet routing hand overlays yield significantly performance reliability characteristics conclude bgp fundamentally limited situation important develop alternate bypass architectures overlay routing invent wide-area routing protocols extensive active downloads traceroutes akamai cdn servers testbed earlier section compare multihoming route control overlay routing terms key metrics round-trip delay throughput availability measurement results suggest route control employed multihoming offer performance similar overlays terms round-trip delay throughput average round-trip times achieved bgp paths selected ideal route control mechanism isps overlay paths selected ideal overlay routing scheme multihomed isps similarly throughput overlay paths bgp paths show marginal difference rtt performance attributed overlay routing ability select shorter paths difference reduced isps implement cooperative peering policies comparison end-to-end path availability provided approach shows multihoming route control overlay routing significantly improve availability end-to-end paths chapter outline section chapter provide overview approach comparing overlay routing route control section analyze rtt throughput performance differences route control overlay routing reasons differences section contrast end-to-end availability offered schemes section summarizes observations chapter discusses implications results presents limitations study terminology objective understand modest flexibility multihoming coupled route control offer end-to-end performance resilience similar overlay routing order answer question evaluate idealized form multihoming route control driven key assumptions outlined chapter perfect information isp performance lowoverhead shifting traffic isps mechanisms inbound route control ensure fair comparison study similarly agile form overlay routing endpoint timely accurate knowledge performing end-to-end overlay paths frequent active probing overlay link makes select switch overlay path instant size overlay network small nodes frequent probing infeasible larger overlays compare overlay routing route control respect degree flexibility paths end-network general flexibility represented number isps technique end-network route control notion multihoming chapter evaluate performance reliability end-to-end candidate paths induced combination isps overlay routing introduce similar notion -overlays number isps endpoint end-to-end overlay path words simply overlay routing presence isp connections comparing -multihoming -overlays report results based combination isps performance rtt throughput destinations figure illustrates route control overlay configurations clarify terminology chapter shows case conventional bgp routing single default isp -multihoming figure depicts endpoint route control isps -multihoming overlay routing single first-hop 
isp -overlay shown figure figure shows case additional first-hop flexibility -overlay routing configuration comparing overlay routing route control seek answer key questions fraction end-to-end paths overlay routing outperform multihoming route control terms rtt throughput cases extent performance difference reasons performance differences overlay paths violate inter-domain routing policies achieve good end-to-end performance route control achieve path availability rates comparable overlay routing latency throughput performance present results latency throughput performance benefits route control compared overlay routing provide details rtt throughput comparison techniques present key results order compare -multihoming -overlays similar analysis compare benefits -overlay routing relative default paths single isp compare multihoming -overlay routing quantify benefit endsystems greater flexibility choice bgp routes multihoming relative power -overlays contrast -multihoming -overlay routing understand additional benefits gained allowing end-systems arbitrary control end-to-end paths relative multihoming finally examine underlying reasons performance differences end-network isp bgp direct paths -multihomed network route controller single isp bgp routing multihoming isps -multihoming -multihoming overlay paths overlay paths -multihomed overlay routing single isp overlay routing overlay routing -overlay multihoming -overlay figure routing configurations figures show -multihoming -multihoming overlay configurations shown comparing rtts throughputs comparison overlays multihoming based observations drawn rtt throughput datasets earlier section rtt comparison rtt data set minute measurement interval build weighted graph testbed nodes edge weights rtts measured node-pairs floyd algorithm compute shortest paths node-pairs estimate rtt performance -multihoming destination computing minimum rtt estimates direct paths isps city destination node rtt measurements akamai cdn nodes representing isps destination node estimate performance -overlay routing compute shortest paths isps destination node choose minimum rtts paths note prune direct overlay edge graph performing shortest path computation result shortest overlay path nodes direct path chosen bgp comparison limited direct versus indirect paths direct overlay paths contrast comparison past studies direct path indirect path throughput comparison throughput similarly construct weighted directed graph testbed nodes minutes object download frequency edge weights throughputs transfers throughput simply transfer size divided completion time compute throughput performance -multihoming -overlay routing similar rtt performance computation notice computing overlay throughput performance non-trivial complicated problem estimating end-to-end throughput tcp transfer indirect overlay paths approach round-trip time throughput measurements individual overlay hops compute underlying loss rates standard model tcp throughput paths measure observe loss causing transfers remain slow-start phases small connection latency model developed original model tcp throughput accurately characterize short flows lossless transfers model throughput data set measure loss rate median percentile loss rates paths measured sum round-trip times combination loss rates individual hops end-to-end round-trip time loss rate estimates employ model compute end-to-end overlay throughput transfers combine loss rates individual links follow approach combination estimation functions optimistic throughput estimate maximum observed loss individual overlay hop overlay path estimate end-to-end overlay loss rate assumes typical maximum segment size mss transfers bytes initial congestion window size segments initial delayed ack timeout transfer city -multihoming -overlay atlanta bay area boston chicago dallas los angeles york seattle wash average fraction overlay paths hops number overlay hops atlanta bay area boston chicago dallas los angeles york seattle washington -multihoming rtt -overlay path length relative -overlays figure round-trip time performance average rtt performance -multihoming relative -overlay routing tabulated cities graph shows distribution number overlay hops -overlay paths direct path overlay hop tcp sender primarily responsible observed losses pessimistic combination compute end-to-end loss rate sum individual overlay hop loss rates assuming losses link due independent background traffic network due complexity computing arbitrary length throughput-maximizing overlay paths indirect paths comprised overlay hops throughput comparison -multihoming versus -overlays compare performance overlay routing default routes single isp -overlay -multihoming goal confirm observations past overlay routing studies note case -overlays overlay path source node traverse intermediate node including nodes located city source round-trip time performance figure shows rtt performance -multihoming relative -overlay routing performance metric y-axis reflects relative rtt end-to-end loss rate overlay links independent loss rates negligible measurements ignore city pessimistic estimate optimistic estimate throughput metric fraction throughput metric fraction indirect paths indirect paths atlanta bay area boston chicago dallas los angeles york seattle wash average table throughput performance table shows tcp transfer performance -overlay routing relative -multihoming estimation functions shown fraction measurements -overlay routing selects indirect path city -multihoming versus rtt -overlays averaged samples destinations difference metric represents relative advantage -overlay routing -multihoming notice overlay path direct bgp path performance overlays good direct bgp path table overlay routing improve rtts compared direct bgp routes single isp average improvement observations similar show distribution overlay path lengths figure direct bgp path corresponds single overlay hop notice cities overlay path hops measurements majority rtt performance gains overlay networks realized requiring single intermediate hop average path -overlays coincides direct bgp path measurements average y-axis cities throughput performance table show throughput performance -overlays relative -multihoming pessimistic optimistic estimates -overlays achieve higher throughput -multihoming pessimistic estimate optimistic throughput estimate -overlays achieve throughput table show fraction times indirect overlay path obtains throughput direct path throughput estimation function pessimistic throughput estimate average -overlay routing benefits employing indirect path cases optimistic estimate fraction -multihoming relative k-overlays number providers atlanta bay area boston chicago dallas los angeles york seattle washington k-overlays relative -multihoming number providers atlanta bay area boston chicago dallas los angeles york seattle washington relative rtts throughput pessimistic figure benefits -overlays rtt -multihoming relative -overlays shown throughput pessimistic estimate -overlays relative -multihoming shown summarize -overlays offer significantly round-trip time performance -multihoming throughput benefits lower significant large fraction measurements indirect -overlay paths offer rtt performance direct -multihoming paths -multihoming versus -overlays section compare flexibility offered multihoming route control combination overlay routing default routes single isp -overlays -multihoming figure show rtt performance -multihoming relative -overlays function notice -overlay routing achieves rtt performance multihoming notice rtt performance -overlay routing -overlay routing figure similarly compares throughput performance -overlays relative -multihoming pessimistic estimate overlay routing -multihoming -overlay routing benefit marginal cities rtt throughput summary -multihoming -overlay routing offer performance multihoming terms rtt throughput addition -overlay routing achieves significantly performance compared -overlay routing -multihoming versus -overlays sections provide head-to-head comparison multihoming overlay routing section endpoints flexibility multihoming route control compare resulting performance -overlays figure plot performance -multihoming relative -overlay routing compute average ratio 
rtt throughput destination achieved k-multihoming relative -overlay number providers atlanta bay area boston chicago dallas los angeles york seattle washington k-multihoming relative -overlay number providers atlanta bay area boston chicago dallas los angeles york seattle washington relative rtts throughput pessimistic figure multihoming versus -overlays rtt -multihoming relative -overlays shown throughput pessimistic -overlays relative -multihoming technique average paths city destinations cities time instants valid measurement isps city note cities -multihoming isps rtt throughput cities hold fourth isps simply switched difference throughput performance comparison rtt shown figure performance advantage -overlays cities fact cities bay area chicago -multihoming marginally overlay routing number isps increased multihoming provide shorter round-trip times overlays figure shows relative benefits pessimistic throughput estimate multihoming throughput -overlays cities results similar optimistic computation omitted brevity summary performance advantages -overlays vastly reduced eliminated endpoint allowed greater flexibility choice bgp paths multihoming route control implies multihoming hop essential overcome occasional problems access isp -multihoming versus -overlays previous section evaluated -overlay routing overlay paths start single isp source city section overlays additional flexibility permitting initially route isps source city specifically compare performance benefits -multihoming -overlay routing cities average time instants valid measurement isps cases due limitations data collection infrastructure failed download attempts k-multihoming relative k-overlay number providers atlanta bay area boston chicago dallas los angeles york seattle washington fraction overlay paths hops number overlay hops atlanta bay area boston chicago dallas los angeles york seattle washington relative rtts -overlay path length figure round-trip time improvement round-trip time -multihoming relative -overlay routing function shown show distribution number overlay hops -overlay paths case -overlays overlay path originating source node traverse intermediate nodes including located city source notice performance -overlays good -multihoming overlays direct bgp path question advantage overlays provide multihoming employed source round-trip time performance figure shows improvement rtt -multihoming relative -overlays values average overlays provide rtt performance multihoming solution cities study performance gap multihoming overlays significant figure shows distribution number overlay hops paths selected -overlay routing optimized rtt overlay path coincides -multihoming bgp path cases average cities average -axis recall fraction -overlay routing figure isps links choose overlay routing selects higher fraction direct bgp paths opposed choosing greater number indirect paths afforded multihoming throughput performance figure shows throughput performance -multihoming relative -overlays pessimistic throughput estimation function figure multihoming achieves throughput performance overlays performance improves cities throughput performance -multihoming overlay routing figure show fraction measurements indirect -overlay path offers performance direct -multihoming path pessimistic throughput estimate average fraction notice lower percentage -overlays table summarize employed conjunction multihoming overlay routing offers marginal benefits employing multihoming addition -overlay routing selects larger fraction k-multihoming relative k-overlay number providers atlanta bay area boston chicago dallas los angeles york seattle washington city fraction indirect paths atlanta bay area boston chicago dallas los angeles york seattle wash average throughput improvement fraction indirect pessimistic estimate paths -overlay routing figure throughput improvement throughput performance -multihoming relative -overlays cities shown table shows fraction measurements -overlay routing selected indirect end-to-end path case direct bgp-based end-to-end paths compared -overlay routing unrolling averages presented averages performance differences forms overlay routing multihoming route control section focusing -overlays -multihoming present underlying distributions performance differences paths measure goal section understand averages skewed destinations source city measurement samples overlays offer significantly performance multihoming time-of-day day-of-week effects performance destination figure show distribution average difference -multihoming path -overlay path destination nodes testbed origin cities point represents destination cities average rtt differences destinations notice cities difference greater destinations figure distribution average throughput difference -multihoming path -overlay path pessimistic estimate throughput throughput difference mbps destinations note frac destinations diff difference turnaround times atlanta bay area boston chicago dallas los angeles york seattle washington frac destinations diff difference throughputs mbps atlanta bay area boston chicago dallas los angeles york seattle washington difference difference round-trip times throughputs pessimistic figure performance destination figure cdf difference rtts overlay path direct path paths measured city similarly figure plots cdf difference throughputs pessimistic estimate fraction paths difference difference turnaround times percentile median percentile fraction paths difference difference throughputs mbps percentile median percentile round-trip time throughput pessimistic figure underlying distributions figure showing median percentile percentile difference source-destination pairs figure plots rtt figure plots throughput pessimistic estimate destinations difference excess mbps recall figure differences result average relative performance advantage overlays versus statistics figures plot average median percentiles difference rtt pessimistic throughput -multihoming option -overlay paths cities figure median rtt difference fairly small median rtt differences percentile difference marginally higher roughly greater median throughput differences figure small kbps time upper range throughput difference percentile difference significant fraction greater mbps results suggest absolute round-trip throughput differences multihoming overlay routing small part small fraction cases differences significant throughput time-of-day day-of-week effects effects daily weekly network usage patterns relative performance -multihoming -overlays expected route control perform worse peak periods overlay paths greater freedom avoid congested parts network discernible time-of-day effects paths originating specific city terms rtt throughput performance similarly examine weekly patterns determine differences greater days week significant differences rtt throughput omit results brevity lack time-of-day effect relative performance isp network operators patterns account performing traffic engineering summary -overlays offer significantly performance relative -multihoming small fraction transfers city observed dependence time day day week performance gap overlays multihoming reasons performance differences identify performance differences -multihoming overlay routing focus rtt performance case indirect paths primarily improve propagation delay select congested routes direct paths focus best-performing indirect paths violate common inter-domain peering policies propagation delay congestion improvement section understand modest advantage observe overlay routing due primarily ability find shorter lower propagation delay paths bgp policy routing gains avoid congestion network pairwise instantaneous rtt measurements collect include queuing delay component addition base propagation delay performance improvements due primarily routing congestion expect difference propagation delay indirect direct path small similarly propagation difference large attribute performance gain efficiency overlay routing compared bgp choosing shorter end-to-end paths measurements estimate propagation delay path percentile rtt samples path figure show scatter plot rtt improvement x-axis propagation time difference y-axis offered overlay path relative multihoming path graph shows measurements indirect overlay paths offer diff propagation time difference round-trip time figure propagation congestion scatter plot rtt improvement x-axis 
propagation time improvement y-axis indirect overlay paths direct paths improved rtt direct path points line represent cases rtt improvement difference propagation delay points line paths rtt improvement primarily due propagation time paths large rtt improvement points clustered closer line suggesting large improvements due primarily routing congestion found points lie line closer line indicating majority round-trip improvements arise reduction propagation delay contrast savage observe avoiding congestion ability find shorter paths equally responsible improvements overlay routing difference observations due fact internet paths provisioned congested today years ago circuitous contributing inflation end-to-end paths detailed accounts path inflation investigate relative contributions propagation delay congestion improvements focus closely cases indirect overlay paths offer significant improvement direct paths visually points lying line figure table present classification indirect overlay paths offering rtt improvement recall measurement indirect -overlay paths lower rtt direct path section figure paths improved delay table row half lower delay overlay paths propagation delay improvement relative direct paths rtt improvement visually points lie lines figure paths significant improvement performance ability overlay avoid congested links viewed terms overlay paths table column paths form small fraction overlay paths finally propagation delay indirect overlay path versus total fraction lower delay overlay paths fraction fraction lower delay paths overlay paths indirect paths improvement prop delay improvement improvement improvement table analysis overlay paths classification indirect paths offering improvement rtt performance indirect path propagation direct path propagation figure circuitousness routes figure plotting propagation delay indirect path y-axis multihoming path x-axis multihoming path idea ability system avoid overly circuitous paths arising policy routing figure shows scatter plot propagation delay direct path city x-axis propagation delay indirect path y-axis points line cases overlay routing finds shorter paths conventional bgp routing vice versa consistent earlier results majority points lie line overlays find lower propagation delay paths cases direct path shorter line difference generally small summary vast majority rtt performance improvements overlay routing arise ability find shorter end-to-end paths compared direct bgp paths significant improvements stem ability overlay routing avoid congested isp links inter-domain peering policy compliance understand performance gap overlay routes direct bgp routes categorize overlay routes compliance common inter-domain peering policies inter-domain peering policies typically represent business arrangements isps end-to-end overlay paths adhere policies quantify performance gain attributed ignoring isps typically obey key inter-domain policies valley-free routing isps generally provide transit providers peers represents cost prefer customer routing economically preferable isp route traffic customers providers peers peers providers addition spring observed isps obey common peering policies early exit isps offload traffic peers quickly peering point closest source late exit isps cooperatively carry traffic peering points closer destination bgp path selection impacted fact routes shortest hop count section focus indirect overlay paths virtual hop provide end-to-end round-trip time performance direct bgp paths characterize routes identified level paths traceroutes performed testbed period rtt measurements turnaround time measurement matched traceroute occurred minutes traceroutes analysis map addresses traceroute data numbers commercial tool bgp tables multiple vantage points extract origin prefix issue deriving path traceroutes router-level paths actual bgp path due appearance extra number internet exchange point sibling analysis omit improvements overlay routing overlays choosing higher bandwidth paths aspect difficult quantify leave open problem ases identified peers siblings case provide transit traffic administered entity classified peers siblings appeared provide transit direct bgp paths traceroutes manually adjusted pairings related improved overlay paths imprv paths rtt imprv rtt imprv avg avg violates inter-domain policy valley-free routing prefer customer valid inter-domain path as-level path earlier exit similar exits exit diff as-level path longer bgp path len bgp path shorter bgp path unknown table overlay routing policy compliance breakdown percentile round trip time improvement indirect overlay routes routes conform common inter-domain policies routes valid inter-domain paths exited ases points direct bgp route bgp route exchange point ases combine sibling ases identify ascertain policy compliance indirect overlay paths relationships generated authors period measurements as-level overlay path construction ignore ases intermediate overlay nodes non-transit hops connect overlay path segments overlay path source destination composed as-level segments intermediate node located time spent short isp path intermediate ases significant factor end-to-end round-trip difference avoid penalizing overlay paths policy violations artifacts intermediate hop belongs hierarchy table classifies indirect overlay paths policy conformance expected majority indirect paths violated valley-free routing prefer customer policies large fraction overlay paths appeared policy compliant sub-categorize fraction paths examining as-level overlay paths identical as-level direct bgp path overlay path identical characterize exiting earlier direct path remained direct path characterized exiting remained longer rest indirect paths similar direct bgp paths identical as-level overlay paths exited similar direct bgp path suggests cooperation isps terms late exit policies improve performance bgp routes close gap multihoming overlays note as-level overlay paths differed majority length direct path chosen bgp summarize achieving rtt performance direct bgp paths indirect overlay paths violate common inter-domain routing policies observe fraction policycompliant overlay paths realized bgp isps employed cooperative peering policies late exit resilience path failures bgp policy-based routing architecture masks great deal topology path availability information end-networks order respect commercial relationships limit impact local neighboring downstream ases design advantages adversely affect ability end-networks react quickly service interruptions notifications bgp standard mechanisms delayed tens minutes networks employing multihoming route control mitigate problem monitoring paths isp links switching alternate isp failures occur overlay networks provide ability quickly detect route failures frequently probing paths overlay nodes section perform separate preliminary analyses resilience datasets earlier section assess ability mechanisms withstand end-to-end path failures improve availability internet paths chapter approach evaluates availability provided route control based active probe measurements testbed compute end-to-end path availability route control overlays estimated availabilities routers paths aim answer questions multihoming route control similar overlay routing improving end-to-end fault tolerance resilience multihoming reasonable mask failures experienced end network active measurements path availability evaluated ability multihoming improve path availability earlier section noted isps significantly improve availability internet paths chicago wash los angeles york bay area seattle average availability percentage city multihoming -multihoming -overlay -overlay figure availability comparison comparison availability averaged paths originating cities single isp -multihoming -overlays -overlays isps chosen based round-trip time performance paths originating cities studied availability -multihoming employed minimum availability paths 
higher multihoming analysis overlay routing find circumvent failures route control avoid results omitted brevity results marginal improvement route control offers good availability path availability analysis figure compare average availability overlays route control paths originating cities destinations testbed based router failure data presented earlier section overlay routing calculate availability paths overlay hop matter intermediate hops assume path intermediate hops ideal overlay practically unlimited number path choices avoid large number failures middle network earlier availability paths testbed high multihoming improves average availability cities cases overlays slightly higher availability -overlay arbitrary flexibility choosing intermediate hops routers common average overlay paths compared -multihoming case note -overlay path single isp vulnerable access link failures multihoming employed low availability -overlay chicago due chosen isp based rtt performance tier network internal routers lower availability paths exiting isp hops common high chance correlated failures finally -overlay makes routes slightly -overlay excluding chicago router shared paths approaching destination failures router impact overlay paths summary note greater flexibility overlays route control -multihoming achieve estimated availability hours year -overlay measurement caveats summary observations implications section summarize observations made measurements highlight fundamental trade-offs overlay routing multihoming route control difficult assess comment limitations study key observations summarized table expected results show overlay routing provide improved latency throughput reliability multihoming route control difference systems insignificant practical purposes fact multihoming offers lesser flexibility routing overlays multihoming require third-party deployment purely endpoint based mechanism found overlay routing performance gains arise primarily ability find routes physically shorter shorter propagation delay addition reliability advantages stem disposal superset routes standard routing surprise results past studies overlay routing shown advantage large found careful additional routes multihoming end-network significantly reduce advantage overlays performance similar question remains overlays multihoming choice answer factors cost deployment issues future upgrades bgp routing discuss issues addition outline key constraints imposed comparison study cost operation difficult cost implementing route control overlays evaluation case multihoming stub network pay connectivity set isps note isps charge amounts solution cost-effective choice case overlays envision overlay service offerings similar akamai sureroute users overlays multiple hop choices -overlay routing analysis add cost subscribing overlay service base cost isp multihoming overlay single isp -overlays eliminate additional cost analysis shows performance gain reduced significantly isps charge usage cost employing multiple isp connections case -overlays higher lower cost multiple connections case -multihoming overlay routing significantly performs bgp paths single isp improving routing flexibility endpoint allowing isp connections significantly reduces gap bgp-based routing overlay routing rtts multihoming isps employing combination overlay routing multihoming throughput differences marginal overlay path offers higher transfers speeds multihoming path notice multihoming offers similar performance overlay routing implies multihoming hop absolutely essential overcome occasional problems access isp primary reason ability overlay routing offer performance multihoming albeit marginally ability overlays circumvent congestion isp paths multihoming avoid superiority overlay routing reduced isps employed cooperative peering policies cold potato routing multihoming route control offer perfect availability overlay routing multihoming eliminate failures observed singly-homed end networks table multihoming route control overlay routing summary key comparison results deployment operational overhead overlays multihoming unique set deployment performance challenges measurements highlight issues ease deployment routing table expansion routing policy violations ease employment overlay routing requires third-party deploy potentially large overlay network infrastructure building overlays sufficient size distribution achieve significantly improved round-trip throughput performance challenging terms infrastructure bandwidth cost management complexity hand multihoming single endpoint based solution easier deploy end-network perspective routing table expansion due multihoming important overhead multihoming study resulting increase number routing table entries backbone routers isps charge multihomed customers appropriately increased overhead network core making multihoming desirable problem occurs stub network announces address range isps isps limit small advertised address blocks approach makes sense large medium sized stub networks difficult smaller smaller networks techniques based network address translation nat avoid issues routing announcements make intelligent multiple upstream isps discussed chapter violation policies overlay paths concerns overlay routing raises circumvention routing policies instituted intermediate ases commercial endpoint route data well-provisioned academic internet backbone overlay hop nearby individual overlay hop violate policies nearby node allowed transmit data internet end-to-end policy violated analysis quantifies number routing policy violations impact internet routing polices related commercial relationships service providers reasonable expect presence overlay node isp network implies overlay provider isp form business agreement relationship require overlay provider pay additional expenses isp incurs providing transit overlay traffic network providers compensated policy violations limiting negative impact overlay routing future bgp discussed important issues overlays route control today environment considered bgp improve standard internet routing performance relative overlays impact performance availability-based route selection edge network transit ases perform similar route control future exposing superior set paths end networks future direction development protocols as-level source-routing nira stub networks greater control routes limitations comparison finally discussion constraints imposed comparison study observations constrained factors size testbed improvement multihoming number overlay nodes performance difference figure impact overlay network size round-trip performance graph shows difference -overlays -multihoming overlay nodes added coarse granularity performance samples limited analysis resilience discuss issues detail testbed size figure compare average rtt performance -multihoming -overlays function number intermediate overlay nodes graph shows rtt difference -overlay path direct indirect -multihoming path averaged measurements nodes added one-by-one randomly overlay network heuristic adding nodes yield results size overlay increased performance -overlays relative multihoming relative improvement marginal discernible knee graph additional overlay nodes alter observations study favor overlay routing key point notice measurements allowing endpoints flexibility select overlay paths nodes end offer additional benefit choice paths widen gap overlay routing route control higher require larger geographically diverse overlay deployment large overlays suffer key drawbacks expensive deploy manage subscribe incur enormous overhead tracking performance overlay paths number paths probe scales quadratically overlay size practical techniques lowering measurement overhead larger overlays developed granularity performance samples performance samples collected fairly coarse timescales minutes intervals round-trip time minutes throughput result results capture fine-grained performance paths effect overlay routing multihoming route control results capture observable performance differences path selection techniques key reasons conclusions based data collected continuously week-long period fairly large set paths zhang observed steadiness roundtrip time throughput performance order minutes show chapter round-trip times paths testbed intervals minutes expect higher sampling frequency yield significantly 
repair failure detection reliability analysis compare relative ability overlay routing multihoming avoid bgp convergence problems peering link failure affect routing peer isps bgp re-converges multihoming configurations avoid routing failures leave comparison future work key observations comparison study simply summarized circumvent bgp routing achieve good end-to-end resilience performance goals simply realized enabling moderately higher route selection flexibility end networks purely endpoint based mechanisms considered potential benefits multihoming route control studied ideal form multihoming driven simplifying assumptions chapter assumptions overcome practical deployment scenario preserving performance benefits multihoming route control chapter practical multihoming route control strategies past years multihoming increasingly leveraged improving wide-area network performance lowering bandwidth costs optimizing upstream links ensuring resilience service interruptions number products provide route control capabilities large enterprise customers public number advertise address prefixes upstream isps bgp smaller multihomed organizations bgp products variety mechanisms policies route control exact mechanisms employed quantitative benefits mechanisms chapter studied potential performance benefits multihoming route control mechanisms showed performance potentially improve terms rtt terms throughput multiple upstream isps employed chapter showed performance benefits multihoming comparable techniques overlay routing greater routing flexibility end-networks case evaluated ideal form multihoming end-network perfect information performance isps time change routes arbitrarily chapter goal understand benefits realized practical multihoming scenario specifically address question benefits multihoming route control realized practical deployment situations exact mechanisms end-networks employ explore design alternatives realize performance benefits multihoming practice focus enterprise networks multiple isp connections focus primarily mechanisms inbound route control enterprises interested optimizing network performance clients download content internet sink data discuss chapter mechanisms extended multihomed content provider networks source data sink develop variety active passive measurement strategies multihomed enterprises estimate instantaneous performance isp links pick isp transfer evaluate strategies context nat-based implementation control inbound isp link enterprise connections address number practical issues usefulness past history guide choice isp link effects sampling frequency measurement accuracy overhead managing performance information potentially large set target destinations evaluate policies client workloads emulated wide-area network delay characteristics based large set real network delay measurements evaluation proposed schemes -multihomed enterprise network shows active passive measurement-based techniques equally effective extracting performance benefits multiple isps schemes offer improvement web response times web request completion times compared single isp deciding isp select transfer show current sample performance destination isp good estimator near-term performance destination show overhead collecting managing performance information destinations negligible finally conduct initial study mechanisms control isp link external internet clients initiate connections servers hosted enterprise chapter outline section describe enterprise multihoming solution strategies estimating isp performance route control mechanisms section describes implementation detail section discuss experimental set-up results evaluation solution section discusses additional route control design operational issues section summarize common techniques employed commercial route control products related research studies finally section summarizes observations chapter solution overview order realize performance benefits multihoming practice route control solution requires key functions illustrated figure monitoring isp links choosing isp link instant directing traffic isp links discuss functional design discuss actual implementation details section monitoring isp links selecting isp link direct transfer crucial realizing performance benefits multihoming enterprise network perspective choice isp depends time-varying performance isp links destination accessed issues monitoring performance isp links monitor enterprise isp isp isp regularly monitor performance isp links direct traffic isp choose provider isp figure solution steps figure illustrates main operations enterprise route control system enterprise ideally monitor performance content provider sites isp links infeasible large enterprises access content sources simple solution monitor important destinations basis volume requests made enterprise top frequently accessed destinations ensure significant fraction flows experience good performance question monitor common approaches active monitoring passive monitoring active monitoring multihomed enterprise performs out-of-band measurements performance selected destinations isp links measurements simple pings involving icmp echo request tcp syn packets destinations passive measurement mechanisms rely observing performance ongoing transfers in-band destinations observations samples estimating performance isp link order ensure samples isps forcibly direct transfers isps important issue monitoring performance time interval monitoring long interval performance samples implies stale information estimate isp performance result suboptimal choice isp link destination smaller time intervals address issue negative impact active monitoring frequent measurements give rise excessive measurement wasted bandwidth processing overhead destinations interpret traffic security threat passive monitoring frequent sampling connections directed sub-optimal isps obtaining fresh performance samples careful choice interval size important choosing isp component select isp choice made per-destination basis fine time-scales important question historical data isp performance destination determining isp historical performance isp link destination tracked keeping smoothed time-weighted estimate performance exponentially-weighted moving average ewma performance isp reach destination time obtained active passive measurement previous performance sample time ewma metric time constant smaller attaches weight historical samples implies reliance history time isp performance calculated chosen transfer history employed recent performance sample evaluate isps select directing traffic selected isps isp transfer identified traffic destination directed chosen link controlling outbound direction traffic easy well-studied focus inbound route control mechanism inbound control refers selecting isp incoming interface receive data enterprise network primary mechanisms route advertisements addresses connections discuss controls implemented enterprise address block advertise address ranges upstream isps site multihomed isps owns address block site announces parts address block isps distinct sub-block isp depending isp links considered superior traffic destination site source address address block ensures incoming packets connection arrive isp link cases enterprise simply assigned address block upstream isp send outbound packets desired isp ensure isp forwards packets ensuring connection address lies heart route control techniques employed handling connections initiated enterprise connections accepted site external clients discussed initiated connections handling connections initiated enterprise site amounts ensuring remote content provider transmits data enterprise ultimately receives chosen isp inbound control achieved edge router translate source addresses connections initiated network belonging chosen isp address block block simple nat-like mechanisms ensures replies destination arrive isp accepted connections inbound route control connections accepted site enterprise hosts internet servers accessed case inbound control amounts controlling path isp link client forced send request acknowledgment packets web server easy predicting client arrivals forcing server address generally techniques based dns deploying multiple versions web pages achieve inbound control externally initiated connection enterprise version base web page isp link hyperlinks embedded objects page constructed addresses isp arriving clients base 
html page subsequent requests embedded objects arrive selected isp hand essential function dns-based technique provide address interface arriving client preliminary study effectiveness approach discussed section focus rest paper case enterprise-initiated connections implementation details implement multihoming route control functions simple open source web proxy called tinyproxy tinyproxy transparent non-caching forward web proxy manages performance web requests made clients moderate-sized multihomed enterprises present details implementation basic multihoming components tinyproxy sake simplicity assume proxy deployed multihomed end-network isp links fact enterprise route control products enforce outbound route control transmitting packets destination isp traffic destination received performance monitoring algorithms implement active passive measurement mechanisms section monitoring performance upstream isp links passive measurement passive measurement module tracks performance destinations interest sampling isp links web requests initiated clients enterprise basic idea requests sample isp performance destination performance estimate isp older predefined sampling interval module current performance estimates links connection directed link destination module maintains performance hash table keyed destination address domain destination hash table entry holds current estimates performance destination isps timestamp indicating time instant performance destination isp measured updating ewma estimate historical performance notice explicit control hash table maintains performance samples destinations including rarely accessed high overhead measurement connections popular destinations obtaining performance samples maintaining explicit ttls entry flush destinations accessed long period time guarantee manageable measurement overhead ttls require maintaining separate timer entry additional overhead view limit performance sampling connections destined popular sites popularity measured terms aggregate client request counts achieve manner hash entry holds number accesses made destination receiving connection request destination update access count destination exponentially weighted moving average ewma ewma weight chosen access count destination reset accessed long time hour hard threshold monitor performance destinations total number requests exceeds threshold achieve live entries table access counts exceed threshold naive hash table implementation tracking frequency counts elements identifying popular destinations manner hash table sizea time ways tracking top destinations iceberg queries sample-and-hold incur overhead survey related approaches stick approach simplicity implementation show overhead popular hash entries implementation negligible note destination popular isp prev sample dest samp int set isp test initiate connection destination srcip isp test wait destination respond obtain performance sample initiate connection destination srcip defaultip relay connection update destination hash entry incoming connection time isps ips announced isp test represents isp test destination samp int sampling interval defaultip isp addresses noyes figure monitoring isp performance passive measurement scheme approach necessarily limit actual number popular destinations case large number destinations accessed figure shows basic operation passive monitoring scheme enterprise client initiates connection scheme checks destination entry performance hash table labeled popular connection simply relayed isp link chosen random load-balancing fashion entry destination passive scheme scans measurement timestamps isps elapsed time measurement links exceeds predefined sampling interval current connection sample destination isp links order obtain measurement sample isp link passive approach initiates connection destination source address set response return link sampled measures turn-around time connection time transmission byte client http request receipt byte samp int seconds sample elements probe unique destinations incoming connection enqueue destination queue size dequeue active measurement thread figure monitoring isp performance slidingwindow active measurement scheme http response destination passive scheme observed turn-around time performance sample destination entry hash table updated ewma method section remainder web request proceeds proxy relaying data appropriately isp links current measurements sampling interval proxy initiates connection link destination setting source address appropriately action discussed section active measurement similar passive measurement active measurement scheme maintains hash table performance estimates candidate destinations isps active measurement techniques identify destinations monitored frequencycounts passive measurement mechanism scheme track number client requests directed destination seconds sampling interval initiate active probes destinations number requests exceeds fixed threshold slidingwindow scheme maintains window size recently accessed destinations figure window implemented fixed size fifo queue destinations newly initiated connections inserted number elements exceeda oldest window removed everya seconds sampling interval active measurement thread scans window chooses elements random discarding duplicate destinations subset active-measurement scheme measures performance remaining destinations isps active measurements schemes respective advantages disadvantages schemes effectively sample performance destinations accessed relative key differences frequencycounts deterministic works precise set popular destinations slidingwindow hand miss popular destinations sample unpopular destinations frequencycounts simplest form easily track short-term shifts popularity destinations temporarily-popular destinations receive requests exceed threshold force performance sampling slidingwindow hand effectively track small shifts underlying popularity distribution destinations probe operation destination selected active probing active measurement scheme sends probes source addresses isps waits destination respond found large fraction popular web sites filter icmp echo request packets employ tcp-based probing mechanism specifically send tcp syn packet ack bit set port wait rst packet destination elapsed time sample turn-around time performance found sites respond promptly syn ackpackets response received update performance estimates destination isp measurement timestamp update performance estimate ewma response received destination entry performance hash table large positive current measurement sample performance switching isps updating isp entries destination performance hash switch isp offers rtt performance current isp hash entries updated everya seconds passive active measurement schemes choice isp destination frequency nat-based inbound route control inbound route control mechanism based manipulating nat tables web proxy reflect current choice isp iptablespacket filtering facility linux kernel install update nat tables proxy nat rules associate destination addresses isp link source address packets directed destination table translated address announced chosen isp suppose isp selected transfers involving destination addresses announced link isp insert nat rule destination matches packets source defaultip destination translates source address packets notice nat rule blindly translates source packets destined measure performance isp assuming address announced link isp nat translates source address probing isp isp considered destination problem implementation simply construct nat rule translate packets specific source address case defaultip measurement packets belong probes active measurement client connections passive measurement source address isp measured experimental evaluation section describe experimental evaluation design alternatives proposed section include performance passive versus active monitoring schemes sensitivity measurement sampling intervals overhead managing performance information large set destinations focus understanding benefits scheme offers including set parameters result maximum advantage experimental set-up describe testbed setup discuss emulate realistic wide-area network delays discuss key characteristics delay traces employ emulation finally discuss performance metrics compare proposed schemes testbed 
topology simple testbed topology shown figure goal emulate moderatelysized enterprise isp connections client population shown figure node topology runs simple lightweight web server network interface configured aliases alias represents instance web server popular popular enterprise route controller isp isp isp destinations accessed enterprise multihomed enterprise cpd time delay delay client client client client client client testbed topology figure testbed topology simple test-bed shown emulate route control scenario shown node runs instances clients parallel clients make requests web sites inter-arrival times requests single client poisson-distributed seconds notice inter-arrival rate translates average request rate requests server client request destination sampled set zipf distribution exponent evaluation set parameters monitoring schemes passive active average rank destinations probed meaning explicitly track top popular sites experiment object sizes requested client drawn pareto distribution exponent size node topology runs tinyproxy configured internal interface proxy listens connections clients emulated enterprise interface aliases representing addresses announced isp links node delay element running waspnet loadable kernel module providing emulation wide-area network characteristics linux platform modify waspnet enforce packet delays drops bandwidth limits pera source destination ipa pair basis modify support trace-based network delay emulation illustrated figure order recreate realistic network delays clients servers testbed collect set wide area delay measurements akamai content distribution network pick akamai server machines chicago attached unique isp run pings regular intervals akamai servers located cities attached variety isps measurements one-day period dec measurement akamai machines chicago collectively act stand-in multihomed network isp connections akamai servers probed represent destinations contacted end-nodes multihomed network series delay samples akamai sources destination servers inputs waspnet module emulate delays isp links compressing time time-consuming emulate entire day worth delays multiple times test tune parameters proposed scheme work-around choose smaller portion delay traces hours quick analysis delay traces collected shows variation delays probed paths -hour timescale goal understand effective proposals wide range operating conditions important test schemes handle frequent performance underlying network paths mind compress -hour delay traces factor -hour delay traces real inputs waspnet delay module -hour traces performance underlying paths occur roughly times compared full -hour trace characteristics -hour delay traces collected nodes chicago shown table column delay traces emulation ensure delays observed chicago source nodes significantly typical delays experienced well-connected multihomed network located chicago nyc trace trace trace time performance standard deviation time extent performance change standard deviation extent change time performance table characteristics delay traces performance refers delay path major metropolitan area collect similar traces source nodes located cities york los angeles traces collected march statistics traces shown columns table statistics show chicago-based traces experiments roughly characteristics collected cities comparison metric evaluate benefit proposed route control schemes compare response time transfers scheme transfer response time isps employed transfer total number transfers chapter call performance metric normalized response time route control mechanism closera performance scheme computation response times employing isp time terms denominator computed offline manner forcing transfers isps selecting isp offering response time experimental results perform experiments emulab testbed mhz pentium iii machines ram running red hat describe select client workloads response time packet average client arrival rate requests load server figure web server load profile average response time request function average client arrival rate server topology figure evaluation move evaluation route control strategies selecting client workloads figure show average response time client requests completion time request divided size request function average arrival rate clients server requests response time quickly degrades arrival rate requests point increases marginally request rate select points load curve highlighted arrival rates requests evaluate proposed schemes workloads workloads represent stress levels server ensuring overloaded high variability response times overload regimes impact accuracy comparison proposed schemes remainder section focus addressing questions extent route control schemes improve performance multihomed site relative single isp employing historical samples estimating future isp performance active passive measurement schemes compare terms performance improvement offer active measurement schemes slidingwindow frequencycounts works time intervals samples isp performance collected overheads proposed mechanisms incur aggregate performance improvement passive measurement-based schemes shown figure set ewma parameter current measurement samples estimate isp performance select sampling interval figure plots normalized response time metric average client arrival rate requests isp isp isp passive history interval figure performance improvement performance metric passive measurement scheme ewma parameter history employed sampling interval graph shows performance individual isps fraction improvements ratio response times ratio response times fraction improvements difference response times difference response times ratio response times difference response times figure unrolling averages ratio difference response times isp transfers relative passive measurement scheme average client arrival rate case requests performance client workloads addition show performance isps individually performance improvement relative single isp significant heavy workloads end graph light workloads left end graph performance optimal results sampling intervals similar omitted brevity performance improvements active measurement-based schemes similar discussed improvements route control figures illustrate distribution response time improvements offered passive measurement scheme fora sampling interval relative singly-home isp figure isp figure plots cdf ratio response time isp isp isp opt-isp opt-isp opt-isp provider time optimal choice high popularity dest isp chosen high popularity dest isp chosen medium popularity dest isp chosen low popularity dest figure route control work isps chosen passive measurement-based route control scheme destinations popularity levels isp response time passive measurement scheme transfers results specific instance client arrival rate requests server figure similarly plots difference response times client workload notice figure passive measurement scheme improves response time performance transfers figure shows route control scheme improves response times factors large small fraction transfers relative singly-homed similarly figure shows scheme improve response times transfers notice passive measurement-based scheme ends offering sub-optimal performance transfers figure illustrates operation passive measurement-based scheme figure show isps time transfers destinations popular destination moderately popular destination popular destination recall passive measurement-based scheme explicitly tracks performance popular destinations sampling interval client arrival rate requests figure note route popular destination made average moderate popular destinations intervals passive scheme number route depends popularity destinations popular destination higher frequency route figure shows optimal choice isps popular destination function time determined underlying delay traces comparing isps selected scheme cases scheme makes sub-optimal choice employing history estimate performance figure plots performance passive measurement scheme values parametera 
correspond assigning weight current measurement normalized response time metric average client arrival rate requests isp history passive weight passive weight passive weight figure impact history performance achieved relying historical samples varying degrees results passive measurement-based strategy sampling interval normalized response time metric average client arrival rate requests passive sliding windows frequency counts figure active passive measurement performance active measurement-based schemes passive measurement scheme sampling interval sample remaining weight past samples show results sampling interval performance interval sizes similar figure plots performance history employed performance isp notice performance employing history uniformly inferior situations relative employing history fact historical samples serve bring performance close single isp results show estimate isp performance current performance sample estimate near-term performance active passive measurement figure compare performance active measurement based techniques slidingwindow frequencycounts passive measurement approach earlier results showed history improving performance henceforth present results history employed show performance schemes schemes sampling interval note active measurement schemes offer comparable performance workloads selected bring underlying trade-offs schemes figure shows active measurement-based schemes offer normalized response time metric sampling interval seconds rate rate rate rate rate normalized response time metric sampling interval seconds rate rate rate rate rate passive measurement frequencycounts figure impact sampling interval performance sampling intervals passive measurement-based frequencycounts active measurement-based schemes performance passive measurement scheme moderate improvements light workloads slight improvement heavier workloads expected passive scheme existing transfers obtain samples performance potentially sub-optimal isp links frequency performance monitoring figure shows impact measurement frequency aggregate performance passive measurement scheme figure frequencycounts active measurement scheme figure figure notice longer sampling intervals surprisingly offer slightly performance passive measurement understand curve client arrival rate requests client arrival rate requests implies average connections made clients seconds sampling interval order obtain samples fraction destinations isps passive measurement scheme force connections isp links leaves fraction employed measurement routed optimal isp assuming passive measurement yields accurate estimate performance asa increases fraction connections routed optimal path increase resulting marginal improvement performance explains slight downward trend figure time infrequent sampling large values negative impact performance figure plots performance frequencycounts scheme function sampling interval sampling interval suffers performance penalty relative smaller intervals case frequencycounts aggressive sampling interval negative impact connections employed measurement expected routed optimal isps passive active active freqcount slidingwin total performance penalty penalty inaccurate estimation penalty measurement nat table analysis performance overheads penalty defined case performance due increased probing overheads proxy analysis overheads performance results show passive active measurement optimal performance specifically active measurement-based approaches key factors contribute gap accuracy measurement techniques correspondingly accuracy isp choices overhead conducting measurement software overhead making frequent updates nat table enforcing nat rules outgoing packets section analyze contribution factors performance proposed schemes quantify overhead implementation compare performance due choices made route control proxy performance isp choices made offline manner connection recall order compute performance metric evaluated response time isp transfer offline isp link connection independent route control mechanisms terms denominator equation combine offline response time values decisions made proxy estimate performance penalty due incorrect choices independent software overheads difference resulting performance metric performance penalty including overheads implementation show penalties proposed schemes obtained stated table row client arrival rate requests sampling rate table numbers routes change frequently sampling interval everya seconds performance history equivalent sampling updating seconds row show actual performance penalties suffered schemes implementation taking overheads account figure notice large portion penalty contributed inaccuracies measurement isp selection rows identical measurement software overheads result performance penalty difference rows shown row mentioned earlier active measurement-based techniques offer performance results show measurement route control overhead active measurement schemes small suggests commercial route control products prefer employing active measurement-based route control schemes passive schemes additional design operational issues route control mechanisms presented attempt understanding extract good performance multiple isp connections practice number ways improved address important issues isp costs joint optimization performance reliability briefly discuss potential improvements issues handling lost probes implementation active probing schemes send probe collecting performance sample isp link destination pair lost probes due transient congestion timeouts misinterpreted poor performance isp path destination unwanted isp choice destination prevent sending short burst probes isp link destination pair performance reported probes estimate quality isp link weighting account observed losses hybrid passive active measurements accuracy passive measurement improved sending active probes immediately failed passive probe observed connection ends unexpectedly increases confidence failed connection due problem isp link opposed transient effect implementation paths popular destinations explicitly monitored active passive schemes result rely passive observations transfers unpopular destination ensure quick fail-over proxy observes failures connections unpopular destination immediately switch destination default isp remaining isps future transfers balancing performance resilience key function route control products respond quickly isp failures findings study long sampling interval significant performance improvements long interval slows endnetwork reaction path failures smaller sampling intervals offer resilience sampling interval active measurement works cases providing low overhead good performance figure ensuring failover time minute isp pricing structures study ignore issues relating cost isp links isp connections pricing policies charge flat price committed rate purely usage-based pricing charge differently depending destination on-net off-net formal discussion techniques optimizing isp usage costs performance found explicitly optimize bandwidth costs evaluation active passive monitoring utility history central general schemes optimize cost performance algorithms long-lived tcp flows route control schemes update nat entry destination midst ongoing transfer involving destination transfer fail due change source address observe failed connections experiments flows short effect pronounced impact performance long-lived flows address problem delaying updates nat table ongoing large transfers complete increases complexity implementation involves identifying flow lengths checking existence long-lived flows time update force short flows destination traverse sub-optimal isps nat update delayed impact routing table sizes announcing small non-aggregateable address sub-blocks upstream isps section affect size routing tables core network problem overcome multihomed end-networks obtain provider-assigned addresses buying single individual address block end-network simply acquires equal-sized independent address blocks isps address blocks aggregated isps global effects route control important issue potential impact interactions enterprises deploying route control mechanisms effect marginal benefits route control solutions network recent simulation-based study problem qiu shown impact multiple end-networks employing route control single multihoming user minimal equilibrium interactions similarly impact equilibrium singly-homed users negligible positive observations issues 
end-networks reach equilibrium stable equilibrium remain open externally-initiated connections implementation primarily considered handling connections initiated enterprise common current enterprise applications contact content providers route control product handle connections clients enable optimized access servers hosted enterprise network recently route control device vendors introduced features domain system dns resolution requests means direct inbound client traffic desired link describe preliminary measurements usefulness dns-based approaches externally-initiated connections detailed description found dns inbound route control destination address remote client determines isp link connection request responding address client makes request resolve service service inbound link selected key idea dns-based route control similar dns server selection mechanism content distribution networks dns convenient transparent mechanism unclear respond quickly dynamic route control responses resolution requests time-to-live ttl determines long response cached client local server ideally setting ttl small force external clients resolve address frequently providing fast responsiveness practice complicated behavior wide variety applications dns servers deployed internet applications perform internal dns caching adhere expected behavior older implementations dns software reported ignore low ttl values artifacts make difficult predict quickly clients respond communicated dns responses order quantify responsiveness dns practice perform simple analysis client behavior response dns large web event collect logs set web caches served requests content related summer sporting event global audience event request rate high authoritative servers directed clients set caches min ttl event servers updated direct clients lower capacity origin servers ideally traffic caches subside min figure shows aggregate request volume caches time dns change requests gathered -minute intervals one-hour period dns change requests unique client addresses unique subnets number subnets computed clustering client addresses bgp tables obtained figure shows part trace clear peak occurring day event period constant sustained traffic finally sharp drop-off time dns updated figure focuses time date time total request volume date time total request volume -day trace -hour portion figure dns responsiveness figure shows traffic volume time dns change left graph shows -day period end event focuses -hour period time dns update dns update solid line denotes time update dashed line time min ttl expires times request volume decreases remaining traffic decays slowly period hours analysis definitive suggest dns coarse-grained mechanism controlling traffic common route control practices focus chapter improving internet performance enterprise networks route control research studies products considered benefits multihoming route control guo conduct trace-driven experiments evaluate design options commercial multihoming device evaluate ability algorithms balance load multiple broadband-class links provide service similar single higher-bandwidth link authors find effectiveness hash-based link selection hashing packet header fields balancing load comparable load-based selection addition results show managing load connection-level granularity slightly effective per-packet load balancing andersen similarly mechanisms improving reliability web access dsl clients number vendors recently developed dedicated networking appliances software stacks optimizing multihomed connectivity enterprises settings bgp products techniques similar evaluate study focus geared balancing load managing bandwidth costs multiple isp links optimizing performance nat-based control inbound traffic dns influence links external client-initiated connections ensure tracking sessions policy-based routing isp link directions class products services targeted settings bgp employed large data centers campuses products focus outbound control routes suited content providers primarily source data details algorithms commercial products monitor link performance availability generally proprietary information specific mechanisms parameter settings review general approaches enterprise route control products products employ icmp ping tcp active probes continuously monitor health isp links enabling rapid response failure cases hybrid passive active monitoring track link performance connection previously unseen destination initiated enterprise client active probes candidate links sample performance destination connections destinations hand monitored passively update performance samples approach active probing monitoring link availability passive monitoring performance sampling products static rules dictate link reach destinations networks finally products recent research studies suggested race -based isp performance measurements syn packets enterprise clients initiate connections replicated route control device upstream isps source nat link syn-ack arrives server remainder connection route control device sends rst packets slower paths server terminate in-progress connection establishment state choice link cached time subsequent connections arrive short time period trigger race link failure detected easy extend active passive probing techniques presented chapter incorporate race -based performance optimization approach enhance performance improvements route control techniques discussed dissertation summary observations implications goal chapter experimentally evaluate variety practical mechanisms policies realizing performance benefits isp multihoming focused scenario multihomed enterprises leverage multiple isps improve response time performance clients downloading content internet web servers real linux-based route control implementation emulated wide-area network testbed evaluated design alternatives included performance passive versus active monitoring schemes sensitivity measurement sampling intervals techniques manage performance information large set destinations key findings evaluation -multihoming scenario summarized table evaluation shows active passive measurement-based route control schemes offer significant performance benefits practice compared single best-performing isp performance schemes optimal benefits light moderate client workloads performance active measurement schemes experiments show historical performance choose isp link current measurement sample good estimate showed performance penalty collecting managing performance data destinations negligible summarize key contribution route control implementation shows benefits multihoming route control realized practice simple mechanisms active passive probing nat effect showed increasing internet routing flexibility end-networks modest amounts purely end network-based mechanisms substantially improves internet performance shown multihoming route control effectively improve internet performance endpoints network today endpoints employ higher-speed access links internet grows size volume traffic application mix network change drastically observe today important question techniques multihoming route control effective future internet address issue chapter route control schemes describe significantly improve client web response times multihomed site experiments performance proposed route control mechanisms optimal benefits average relying historical samples monitor performance isps ewma detrimental performance current measurement sample good estimator near-term performance isp link passive active measurement-based schemes performance single isp connections approach offers substantially performance light moderate client workloads overhead introduced aggressive performance sampling slightly reduce performance benefit route control schemes sampling interval minute hand offer good performance-overhead trade-offs overhead measurements active measurement schemes frequent updates nat table negligible performance penalties arise inaccuracies measurement estimation techniques dns effective mechanism achieve inbound control requests externally initiated connections table practical multihoming route control summary key observations route control implementation chapter scaling congestion internet internet grows size day time progresses end-hosts added edge network correspondingly accommodate end-hosts isps 
add routers links history shown addition links maintains macroscopic properties internet interconnection isps internet continues follow power law graph structure addition end-hosts time places greater load network fortunately improvement network technology operates time period expect network links edge core network improve similar performance factor typically follow similar moore law-like technology trends due topology network behavior internet routing increase load links network result speed key centrally located hot-spot links network improve quickly true key parts network eventually emerge persistent bottlenecks circumstances routing-based mechanisms longer employed end-networks improve performance route control multihoming paths traverse links tierisps due global reach isps similarly placements overlay nodes overlay paths traverse tiernetworks likelihood happening lower compared route control links belonging backbone carriers emerge hot-spots approach end-networks overcome inevitable hot-spots network poor scaling properties situation drastically adjust internet routing behavior change structure network interconnections isps ensure good future performance hand worst congestion scales network size expect network continue operate routing-based mechanisms continue effective improving endpoint performance chapter perform preliminary study scaling properties internet realistic theoretical models network evolution inter-domain routing seek answer question maximum congestion internet scale network size analysis focuses internet as-level interconnection model network evolution based preferential connectivity simple model traffic unit amount flow pair nodes routed shortest path employ simple combinatorial probabilistic arguments give bounds maximum congestion as-level graph conduct simulations congestion links network based real synthetically generated as-level topologies synthetic traffic matrices simulations investigate impact key factors worst congestion network variants inter-domain routing algorithm alternate traffic matrices finally alternate topologies as-level interconnection key result chapter maximum congestion internet-like graphs scales poorly growing size graph specifically maximum congestion shortest path routing uniform traffic matrices worse exponent depending degree skew power law degree distribution graph simulations show policy routing graph results roughly maximum congestion shortest path routing worse alternate non-uniform traffic models considered congestion scaling properties power law graphs worsen substantially show terms maximum congestion power law trees considerably worse power law graphs contrast graphs exponential degree distribution good congestion properties discuss simple guidelines change isp-level interconnections result dramatic improvement congestion scaling properties internet-like graphs show parallel links added adjacent nodes ases network simple functions degrees number neighboring ases minimum degrees maximum congestion resulting graph scales linearly heuristic adding edges reflects desired amount peering neighboring ases internet order guarantee good congestion scaling properties chapter outline section formalize analytical approach discuss simulation set-up analysis presented section section presents results simulations section discuss implications results network design present mechanisms alleviate poor congestion scaling internet graph section survey past work modeling internet results deriving congestion scaling properties general disagreement power law correctly models degree distribution internet graph widely agreed distribution heavy-tailed main results specifically simulation results focus power law distributions hold equally heavy-tailed distributions weibull graphs finally section summarize key observations chapter present caveats approach methodology give precise formulation problem laying key questions seek address analysis describe simulation set-up corroborating extending analytical arguments problem statement unweighted graph representing internet as-level graph denote total degree vertex key aspects pertaining graph degree distribution graph routing algorithm nodes graph communicate traffic demand matrix determining amount traffic pairs nodes graphs give precise definitions aspects turn concerned graphs power law degree distribution defined definition unweighted graph power law degree distribution exponent integers number nodes proportional similarly graphs exponential degree distribution number nodesa proportional integers henceforth refer graphs power law graphs exponential graphs denote routing scheme graph representing path routing traffic nodesa routing schemes shortest path routing scheme route nodes shortest path nodes graph reflects route selection bgp prefers paths number ases multiple shortest paths maximum degree nodes paths pick highest maximum degree tie-breaking rule reflective typical policies employed internet higher degree nodes typically larger well-provisioned providers lower degree nodes general primary connection disagreement power law correctly models degree distribution as-level graph widely agreed distribution heavy-tailed main results specifically simulation results focus power law distributions hold equally heavy-tailed distributions weibull stub networks section alternate tie-breaking schemes random choice favoring lower degree nodes show tie-breaking rule affect results policy routing scheme traffic nodes routed bgppolicy classify edges peering edges customer-provider edges ases provider commercial relations isps give rise valley-free routing path sequence customer provider edges peering edge provider customer edges key difference policy routing shortest path routing case restricted choosing multiple shortest path routes compliant valley-free routing goal studying forms routing understand commercial policies isps significantly change observations network congestion traffic vector vector non-negative terms term signifying amount traffic nodes anda congestion edge due traffic vector routing scheme sum total amount traffic edge define edge congestion due traffic vector routing scheme maximum congestion edge graph edge-congestiona goal quantify congestion graph power law degree distribution shortest path policy routing schemes due traffic vectors specifically traffic vectors any-any corresponds traffic vector unit traffic pair ases simplistic model amenable analysis baseline comparison complex traffic vectors leaf-leaf order define model classify nodes graph stubs carriers stubs nodes customers words directing customer-provider edges graph customer provider peering edges considered bi-directed edges vertices incoming edges ases customers called stubs leaves graph model unit traffic pair stubs graph sources sinks traffic clout model approximates fact well-placed sources sources high degree connected high degree neighbors transmit larger amounts traffic sources case stubs average degree neighbors increasing function previous case traffic nodes stubs function stubsa sophisticated traffic vectors admittedly choice models internet routing internet traffic matrices unrealistic model real phenomena popularity ases make claims realism models analysis reasons simplicity lack realistic internet-wide traffic traces simulation set-up simulations serve purposes corroborate theoretical results characterize congestion realistic network models considered analysis simulations run sets graphs set graphs maps internet topology collected month intervals nov april number nodes graph set maximum april set set graphs synthetic power law graphs generated inetin set generate graphs sizes varying nodes mentioned earlier order implement leaf-leaf clout models communication identify stubs network note degree greater additionally order implement policy routing classify edges peering nonpeering edges real graphs employ relationship inference algorithms gao label edges graphs peering customer-provider edges algorithms global bgp tables infer relationships nodes relationships identify stubs nodes providers node henceforth refer real graphs accurately labeled real graphs alrs labeling 
edges identifying stubs synthetic graphs inet tricky bgp information refer synthetic graphs labeled algorithms heuristically labeled synthetic graphs hlss algorithms classifying nodes key implementing leaf-to-leaf communication edges key implementing policy routing synthetic graphs discuss stub identification identify stubs synthetic graphs edge assign provider notice explicitly identify peering edges edges nodes identical degree bidirectional identify stubs graphs labeled simulations metric interest generate graphs nodes varying random seed inet graph generator report average metric graphs error rate false positives false negatives max edge congestion number nodes real labels learned labels accuracy stub identification accuracy edge labeling figure accuracy heuristics graph left shows accuracy simple stub identification algorithm graph shows error maximum congestion due machine-learning based edge-classification algorithm test accuracy stub-identification algorithm real graphs comparing labels produced algorithm true labels alrs compute fraction false positives false negatives accuracy results shown figure note simple algorithm low error rate notice inference algorithms gao error intrinsically labels alrs inaccurate edge classification simply edges graph customer-provider edges purposes edge classification specifically results significant error maximum congestion real graphs employing policy routing results omitted brevity order improve accuracy labeling edges resort machine learning algorithms coming good machine learning algorithm classification challenging task huge bias customer-provider edges graphs roughly edges customer-provider edges -nearest neighbor algorithm classifying edges peering non-peering edge unlabeled graph classified peering edge edges similar labeled graph peering edges similarity edges judged based degrees respective end points neighboring vertices measure accuracy procedure applying real graphs comparing classification true labels machine learning algorithm accuracy peering edges accuracy customer-provider edges purposes computing worst congestion graph low accuracy labeling fact shown figure labeling real graphs algorithm results error worst congestion false positives nodes identified stubs algorithm stubs alr false negatives stubs alr identifies stubs algorithm employing policy routing comparison congestion computed alrs importantly trends congestion growth identical cases topologies addition power law graphs study congestion power law trees exponential topologies comparison power law graphs insight significance density edges graph model interesting generative models power law topologies result exponential distributions fringe cases power law tree topologies evolve preferential connectivity model generate exponential topologies modify inetto generate exponential degree distribution add edges inet usual exponent exponential graphs nodes chosen total number edges exponential graph close power law graph nodes note due lack real data exponential graphs good labeling edges nodes perform experiments policy routing leaf-leaf clout traffic models analytical results section show expected maximum edge congestion power law graph specifically congestion edge highest degree nodes grows route unit flow pairs vertices shortest path preferential connectivity generative model barabasi model fixed constant parameter model starts complete graph nodes set nodes called core graph graphs grows time-steps graph time denoted time stepa node added network node picks nodes random connects vertexa probability picked degree vertex timea total degree nodes timea end steps process generate power law degree distribution easy resulting power law graph matter power law graph maximum node degree order show lower bound congestion power law graph plan roughly edge highest degree nodes core call edge vertex graph shortest path tree rooted vertex show expectation trees edge trees expected number nodes subtree rooted edge lower bound routes connection precisely defined shortest path trees congestion edge sum congestions edge shortest path trees shortest path trees congestion employ heuristic hill-climbing estimate exponent minimizes error number edges edge total congestion edge note necessarily congested edge graph maximum congestion worse theorem theorem expected maximum edge congestion power law graph exponent grows route unit flow pairs vertices shortest path distance nodes refers number hops shortest path nodes make technical assumptions assume highest degree nodes graph small numbers assume node graph number nodes distance ofa number nodes distance words centrally graph small refers distance lesser half nodes assumptions justified experimental evidence prior analysis preferential connectivity generative model begin technical lemma lemma maximum integer vertices lie distance nodes lie distance node core graph node core nodes lie distance proof prove nodes lie distance vertices core neighbors nodes lie distance vertex core graph begin showing nodes lie distance extend nodes distance levela denote set nodes distance remove graph vertices level higher remaining graph vertices definition assume vertices level nodes levels implying nodes lie distance number nodes level nodes level residual graph connected nodes level number size neighbor set level case nodes level highest degree nodes graph case minimum degree node level size neighborhood level total degree nodes level figure model pictorial view graph set quantity assumption constant fraction apply technique compute number nodes level number nodes level distance defined lemma denote set nodes distance node core graph figure lemma proof theorem parts shows trees toa edge lemma expected number shortest path trees nodes edge proof tree node essentially breadth tree starting level tree edge contained tree hand nodes depths tree closer loss generality case shortest path froma break ties favor paths high degree nodes path implies contained tree trees correspond equidistant show nodes equidistant implies result observe pick random node graph conditioned fact node lies distance constant probability node lies distance argument congruent lemma show number nodes distance constant fraction number nodes distance nodes distance number lemma lie nodea picked set distance argument probability node lies distance constant nodes set distance prove treea high congestion lemma leta shortest path tree edge expected congestion edge tree proof loss generality closer show degree ina implies result level denote set nodes distance tree distance neighbors lie levels tree note assumption number nodes lying levels tree number nodes distance greater number definition denote set nodes lie levels tree arrived graph step note nodes level higher set constant fraction nodes lie levels tree observe probability node entering graph time step attaches roughly probability increases graph larger larger related removing quarter nodes entering graph consideration fact nodes attach nodes arriving conclude number neighbors arrive step total degree neighbors lie levels tree observation previous paragraph neighbors lie set note node entered graph size graph varied nodes probability node attached varied node roughly equally attach factor degree tree number neighbors lie levels fact constant fraction nodes lie levels tree constant fraction neighbors lie levels tree expectation result fact degree 
fraction nodes number nodes fraction nodes equidistant nodes ratio shortest path tree degree original degree number nodes node node figure simulation support analytical model figure shows fraction shortest path trees edge figure plots ratio degrees random shortest path tree degrees graph max edge congestion number nodes max link congestion figure maximum edge congestion plotted function inetgenerated graphs figure plots functions aid comparison experimental support section report experimental results show theoretical results obtained hold preferential connectivity model internet-like graphs generated inetunfortunately graphs generated inethave values ofa consistent observed properties internet graph decreases time discuss detail subsequent section order validate theoretical results observe asymptotic behavior congestion fixed ofa modify inetcode fixed ofa recalculating reported average multiple runs simulation random seeds generating graphs figure plots fraction nodes equidistant note fraction lies consistent result lemma constant fraction trees case edge figure compares degrees highest degree nodes graph degrees shortest path tree max edge congestion number nodes power law tree exponential congestion normalized rank edges nodes nodes nodes nodes nodes nodes nodes nodes maximum edge congestion distribution edge congestion figure edge congestion shortest path routing any-any communication figure left shows maximum edge congestion figure shows distribution congestion links number links normalized case figure left plots worst congestion exponential graphs preferential connectivity trees random nodea find ratio degrees consistently similarly ratio degrees increasing consistent findings lemma finally plot maximum congestion graphs generated inetas function number nodes graph figure note maximum congestion scales roughly corroborates finding theorem simulation results section present results simulation study inet-generated graphs henceforth graphs generated inet alter inet chooses depend show results shortest-path routing policy-based routing cases present results any-any communication model leaf-leaf model finally clout model shortest-path routing figure shows maximum congestion power law graphs generated inetas function number nodes any-any model communication trend graph clear maximum congestion internet-like power law graphs scales worse notice slope maximum congestion curve slightly increasing explained mentioned earlier inetchooses exponent power law degree distribution function number nodes notice absolute empirically determined constants number ases internet november max edge congestion number nodes power law tree congestion normalized rank edges nodes nodes nodes nodes nodes nodes nodes nodes maximum edge congestion distribution edge congestion figure edge congestion shortest path routing leaf-leaf communication figure left shows maximum edge congestion figure shows distribution congestion links normalized decreases increases lower bound suggests slope function log-log plot steadily increase fact point expect curve scale roughly worst rate growth congestion figure shows maximum congestion power law trees exponential graphs power law trees generate exponent increasing number nodes tree exponents significantly higher power law graphs notice edge congestion power law trees grows faster compared graphs expected trees fewer edges lower bound maximum congestion holds equally trees satisfying power law degree distributions predicts slope curve trees consistent graph hand notice edge congestion exponential graphs smaller compared power law graphs fact edge congestion exponential graphs approximately linear growth explained intuitively recall choose exponent exponential distribution match total number edges -node power law graph power law distribution heavier tail compared exponential distribution edges incident low degree nodes low degree vertices exponential graph connected low degree vertices edges incident low degree nodes absorb large amount congestion leading lower congestion edges incident high degree nodes increases degree distribution resulting slow increase congestion figure show congestion links power law graph notice higher numbers nodes distribution congestion uneven set graphs leaf-leaf communication model shown figure worst congestion consistently abouta times worst congestion any-any model explice max edge congestion number nodes max link congestion congestion normalized rank edges nodes nodes nodes nodes nodes nodes nodes nodes maximum edge congestion distribution edge congestion figure edge congestion shortest path routing clout model communication figure left shows maximum edge congestion figure shows distribution congestion links normalized itly shown graph congestion edges plotted figure displays similar trend any-any model distribution uneven number nodes increases results clout model interesting resulting maximum congestion graph scaling worse figure shows maximum congestion scales worse total traffic graph grows roughly any-any model smaller absolute values graphs generated inetfor larger values reason increasing slope curve graph congestion edges model shown figure equally interesting compared figure leaf-leaf model figure unevenness congestion pronounced clout model communication words nonuniform traffic demand distribution exacerbate poor congestion scaling internet-like graphs policy-based routing figure shows maximum edge congestion communication models policy based routing any-any leaf-leaf models shown figure maximum edge congestion scales identically shortest path routing compared figure surprisingly clout model figure congestion policy based routing scales compared shortest-path routing figure compares maximum congestion obtained policy routing shortest path routing notice curves overlapping policy routing slightly worse graph small graph grows larger observation explained policy routing disallows paths general force connections routed longer paths increase traffic max edge congestion number nodes any-to-any leaf-to-leaf max edge congestion number nodes policy routing any-any leaf-leaf communication clout model figure policy-based routing maximum edge congestion policy-based routing hlss max edge congestion number nodes policy routing shortest-path routing max edge congestion number nodes policy routing shortest-path routing edge congestion synthetic graphs edge congestion real graphs figure policy-based shortest path routing comparison edge congestion shortest path policy based routing any-any model network leading higher congestion smaller graph size size graph grows shortest paths result constraints policy-based routing significant impact path lengths graph fact higher numbers nodes policy routing provide congestion properties albeit marginally shortest path routing shortest path routing picks paths high degree nodes fraction paths allowed policy routing involve peering edge case policy routing moves traffic hot-spots partially alleviating problem reason congestion scaling clout model policy-routing opposed shortest-path routing order verify observation artifact machine learning-based labeling algorithms plot curves alrs figure display trend policy routing starts worse shortest path marginally increases summarize policy routing worsen congestion internet-like graphs contrary common intuition suggest fact policy routing perform marginally max edge congestion number nodes preferring higher degrees preferring lower degrees random shortest paths figure tie-breaking rules shortest-path routing figure plots variations breaking ties shortest path routing shortest path routing shortest path routing variations mentioned section shortest path routing scheme multiple shortest paths nodes pick path higher degree nodes route flow poor congestion properties power law 
graphs result tie breaking rule alternate rule favors low degree nodes perform alleviating congestion high degree nodes order confirm results robust tie-breaking rules performed experiments variants tiebreaking rule favoring paths lower degree nodes choosing random shortest path choice experiments set constant inet compare resulting relations maximum edge congestion number nodes figure depicts noticeable difference types tie-breaking methods holds true leaf-leaf clout models traffic results omitted brevity vertex pairs multiple shortest paths conclude scheme breaking ties favoring paths higher degree nodes skew results improving congestion scaling properties analytical simulation results shown maximum congestion internet-like power law graphs scales poorly graph size results show edges high degree nodes typically peering edges backbone carriers internet core congested quickly time edges situation enhance scaling properties network change routing algorithm employed ases internet bgp-style routing alter intercone edge congestion avg degree nodes figure degree congestion edge congestion versus average degree nodes incident edge any-any model shortest path routing congestion higher edges high average degree nection address issue altering structure internet graph specifically focus mechanisms increasing parallelism edges neighboring nodes internet as-graph adding parallel network links examine ways additional links network effect bad scaling maximum congestion specifically model link replaced multiple links pair nodes share traffic load ideally provide sufficient parallel links pair nodes total congestion edge divided equally parallel links worst case grows rate size network number parallel links pair nodes change network grows achieve goal notice change alter degree-structure graph alteration due increased connectivity adjacent nodes words require edges nodes adjacent fact network level incorporates concept parallel links power law structure graph considers adjacency ases link sprint instance modeled single edge real world sprint ases connected large number places world degree connectivity internet today order guide addition parallel edges adjacent nodes observe clear correlation average degree edge congestion figure plots congestion edge average degree nodes incident show results shortest path routing inet generated graph nodes any-any results alternate methods alleviating congestion refer note routing based original degrees nodes max edge congestion number nodes sum degrees product degrees min degree max degree figure alleviating congestion maximum relative congestion shortest path routing any-any model parallel links added graph sum product max functions communication figure shows edges incident high degree nodes higher congestion incident lower degree nodes suggests good choice number parallel links substituting edge graph depend degrees nodes edge connects examine ways adding parallel links based observation number links nodes function degrees nodes functions sum degrees nodes product degrees nodes maximum degrees minimum degrees compute maximum relative congestion functions maximum edges congestion edge divided number parallel links edge maximum congestion internet graphs models adding edges shown figure notice surprisingly parallel links added functions maximum relative congestion graph scales linearly implies adding parallelism edges internet-like graphs simple functions ensure uniform scaling link capacities based moore law-like technology trends maintain uniform levels congestion network avoid persistent hot-spots networking modeling congestion scaling theoretical studies aimed studying properties large-scale internetlike graphs analyzing congestion scaling properties general graphs section present overview studies studies aiming characterize properties internet-like graphs class proposed models graph evolution result power law degree distribution notable examples include power law random graph model aiello bi-criteria optimization model fabrikant preferential connectivity model barabasi albert class studies category aimed analyzing properties power law graphs based inferences drawn measurements real data primary application class studies construct realistic generators internet-like graphs problem characterizing congestion graphs specifically designing routing schemes minimize congestion studied widely approximation online algorithms worst congestion graph inversely related maximum concurrent flow achieved graph obeying unit edge capacities turn related quantity called cut ratio graph aumann characterize relationship maximum concurrent flow cut ratio maximum concurrent flow achieved graph factor cut ratio number nodes okamura give bounds cut ratio special graphs algorithmic approaches problem survey multi-commodity flow relaxation problem find fractional routing good congestion properties demand pairs nodes split multiple paths fairly good approximation factors achieved problem proposed routing schemes distributed involve lot book-keeping require solving large linear programs makes impractical wide-area internet routing work shares similar goals gksanditis arguments max-flow min-cut theory paper shows graphs obeying power law degree distribution good expansion properties routing witha congestion close optimal achieved regular expanders follow-up paper mihail prove similar results expansion properties graphs generated preferential connectivity model results presented chapter contrast contemporary papers focus specifically commonly-used routing algorithms policy routing shortest path routing show power law graphs exhibit poor scaling properties respect routing algorithms analysis caveats summary observation implications chapter addressed question worst congestion internet-like graphs specifically as-level scales graph size key observations shown table combination analytical arguments simulation experiments showed maximum congestion scales poorly internet-like power law graphs simulation results showed non-uniform demand distribution nodes exacerbates congestion scaling found surprisingly policy routing adjacent ases worsen congestion scaling power law graphs fact marginally compared shortest-path routing note current trend growth internet locations expected maximum congestion internet-like preferential attachment power law graphs unit traffic demands shortest path routing scales number nodes graph non-uniform traffic matrices considered congestion scaling properties worsen significantly policy routing results similar marginally congestion shortest pathbased routing poor congestion scaling properties internet graph fixed simple heuristics alter topology network adding parallel edges adjacent nodes proportion minimum degrees result linear scaling congestion table congestion scaling internet summary key observations scaling properties internet network eventually perpetual hot-spots fortunately intuitively simple fix problem adding parallel links adjacent nodes ases graph simple functions degrees maximum congestion graph scale linearly case capacity links graph grow faster rate fact natural evolution link capacities moore law sufficient accommodate growing traffic demand network discuss important caveats analysis simulations analysis caveats mention results presented chapter hold general power law graphs results simulation-based analytical meant graphs representing internet connectivity level results apply power law random graphs note preferential connectivity model yield graphs similar degree distribution as-level graph clear model accurately captures as-level connectivity dynamics economic considerations peering simulations measured as-level graphs show key observations hold existing graph current dynamics connectivity ases continues hold future expect results hold future as-level graphs analysis extend router-level graphs analyzing router-level topology harder compared as-level graph due reasons topology internet router-level graph existing maps internet router-level 
topology rocketfuel maps considered incomplete ip-level routing modeled easily shortest path routing simple inter-domain policy-based routing require knowledge traffic engineering employed ases internet finally researchers power law graphs resulting probabilistic models power law random graph models approximate router-level connectivity recent work shown models error-prone explicitly technological economic constraints trade-offs router interconnections graphs arising trade-offs referred heuristically optimal topologies analytically-tractable models generating topologies analysis router-level interconnection challenging open problem key results study congestion scaling internet graph simply summarized congestion edges internet graph scale poorly growing size network result end-networks employ routing-based mechanisms route control extract good performance future network simple heuristics adding parallel edges adjacent vertices graph significantly improve congestion scaling properties chapter conclusions open problems chapter outline contributions thesis present questions future consideration thesis summary dissertation sought answer central question routing-based mechanisms well-connected end-networks employ improve internet access experience specifically interested understanding end-networks today required special support internet routing protocol suite routing infrastructure obtain performance answer question short sufficient end-networks simply make clever small number routes destination determined internet routing protocol achieve performance manner end-networks require current routing protocol support special-purpose infrastructures rely purely end point-based mechanisms contributions dissertation makes important contributions foremost contributions analysis benefits multihoming route control implementation evaluation simple practical route control system addition present first-ever characterization performance bottlenecks inside isp networks study impact growth congestion bottlenecks future end-to-end performance present overview contributions properties wide-area bottlenecks key challenge optimizing internet performance well-connected end-networks identify heavily-loaded network links constrain performance years common knowledge wide-area bottleneck links limited folklore bottlenecks widely believed confined edges internet domains peering links link utilization supposedly high dissertation conducted quantitative study characteristics typical wide-area bottleneck links probed large number paths well-connected machines located universities routers inside carrier isps developed suite tools automatically identify characterize bottleneck links paths tools found bottleneck links low bandwidth prevalent wide-area internet inside small regional providers deduced significant correlations likelihood wide-area links appearing bottlenecks latencies links finally observed contrary popular perception wide-area bottlenecks evenly split peering intra-domain links benefits multihoming route control comparison overlay routing constrained bottlenecks exist wide-area internet internet rich topology makes route past studies circumventing wide-area performance bottlenecks advocated overlay routing approach end-points route traffic intermediate overlay nodes deployed internet helps end-points bypass default routes determined internet routing protocol bgp avoid bottlenecks routes contrast believed simpler approach called multihoming route control offer similar performance improvements overlay routing strategy end-network buys connectivity isps intelligently schedules traffic isps idea multihoming route control introduced years ago commercial products routescience sockeye true extent benefits products dissertation quantified potential benefits multihoming route control improving web download performance internet end-points resilience service interruptions internet-scale experiments conducted collaboration akamai technologies showed multihoming isps intelligently scheduling transfers isps end-network potentially improve internet response times transfer speeds availability relative single isp connection showed employing isp connections offers additional benefit isps carefully selected order realize maximum improvements multihoming route control bgp routing-compliant provide route selection flexibility overlay routing internet-scale measurement showed seemingly limited flexibility multihoming route control offers marginally inferior internet performance overlay routing transfer speeds multihoming isps inferior relative overlay routing observation suggests definite hope extracting good performance bgp protocol unnecessary replace bgp protocol altogether route control practice extended work potential benefits route control implementing evaluating multihomed route control system showed practice route control products employ simple design operational principles extract nearly-optimal internet performance multihoming trace-driven emulations enterprise network isp connections showed proposed schemes improve web performance multihomed end-networks compared single isp web performance proposals performance exposed important flaws design current route control appliances showed conventional practice employing historical measurement samples monitor predict isp performance fact result sub-optimal performance congestion scaling bottlenecks observations multihoming showed today routing protocols topology support good internet performance time internet grow size traffic volumes increase time isps upgrade network link capacities accommodate growing traffic load thesis observed improvement link speeds future internet topology routing fact load links network increase faster rate links evolve persistent bottlenecks turn significantly limit future internet performance specifically analyzed simple model routing topology internet autonomous system level as-level showed congestion key links network grow poorly number ases result implies carefully alter internet topology routing guarantee good end-to-end performance future network end large-scale simulations showed small fixes internet as-level interconnections drastically reduce congestion network observed adding parallel edges adjacent ases proportion minimum degrees ensure good internet performance lessons longer term measurement benefits multihoming route control established efficacy technique current internet time key observations study multihoming continue applicable future internet architectures dissertation argues richer first-hop connectivity network end-points irrespective redesign internet future basic principle offer advantages endpoints freedom route traffic isp choice ability optimize specific performance metrics relying isps provide knobs work shows end-to-end performance optimization coupled optimizing behavior routing protocol research problem progress parallel development tools endpoint route control lesson learn nice internet routing protocol performance aware perspective optimizing end-to-end performance protocol provide reasonable choice routes select current bgp protocol effective supporting interface choosing routes bgp suffers pathologies lack security unpredictability slow reconvergence addressed separately quest wide-area routing protocol future future work discuss key issues left open dissertation applicable outline approaches address longer-term measurement analyses study wide-area internet bottlenecks relied measurements collected short timescales derive likelihood links types appearing bottlenecks natural extension investigate persistence bottlenecks time-scales congestion wide-area bottlenecks change similarly observations benefits route control based data collected week-long period complement observations analyses isp performance longer time-scales months year understand choice set isps multihoming change long time periods impact subscriber performance subscription cost explaining diminishing returns section showed benefit multihoming isps informally explained fact fourth isp add limited amount diversity provided well-chosen isps diminishing returns explained formally analyzing hierarchical nature isp interconnections explained section isp hierarchy composed tiers highest tier consists isps vast global reach implies typical end-to-end paths traverse tierisps high likelihood implication paths distinct isps tiers random internet destinations merge tiernetwork greater degree overlap terms number routers isps lesser benefit employing multiple isps model likelihood end-to-end paths overlap extend model explain diminishing returns multihoming global effects multihoming route control mentioned section qiu study interactions multiple route control agents equilibrium authors conclude impact individual route control actions 
global rtt performance minimal assuming equilibrium exists work leaves issues open consideration route controlled traffic attain equilibrium dynamics interactions route control agents converging equilibrium widespread deployment route control result adverse interactions isp traffic engineering making traffic load due single end-network vastly unpredictable isps alter pricing structures response route control order smooth traffic attract customers unclear diminishes benefits route control identified study finally route control widely adopted open debate strategy end-network stay connected single isp adopt route control mention potential negative effects wide-spread deployment route control traffic fluctuations mitigated extent employing third-party route control services internap model third-party providers servicing large metropolitan area buys high-capacity uplinks large isps end-customers buy connectivity service third-party provider hand traffic service provider turn selects uplinks send making choice isp send service provider optimize goals load-balancing isp uplinks minimizing traffic fluctuations single isp link perspective isps approach allowing individual route control endpoints ensures multihomed traffic aggregate metropolitan area behaves predictable smooth fashion comparison overlay service providers route control providers run risk violation policies result easier deploy services cheaper subscribe comparison overlays time comparison endpoint control third-party route control approach limits flexibility endpoints endpoints longer optimize specific performance goals throughput opposed latency endpoints coordinate isp route selection remote destinations common ends branch offices single parent organization allowing party service provider control routing offer inferior performance allowing endpoints full control bgp dissertations showed bgp routes support good performance internet today observed section cooperative inter-domain traffic exchange isps reduce differences route control overlay routing approaches encouraging cooperation neighboring isps ensuring isps reveal internal structure neighbors approaches work pairs neighboring isps interesting open issue understand techniques extended end-to-end paths functional bgp require bgp completely eliminate differences overlay routing bgp-based path selection models congestion scaling analysis scaling congestion internet graph limited interconnections isps unclear isp interconnection graph evolve maintain power law structure large isps acquire merge small large isps future internet isps belong kinds large isps operate backbones current tierisps small isps current tierisps catering home dsl connections interesting study scaling properties alternate interconnections stated section analysis congestion scaling extend internet router-level graph develop simple approximations router-level topology investigate congestion scaling analysis simulations analysis neglects impact technologies content distribution networks cdns serving data locations close end-clients cdns contribute alleviating traffic load key non-access internet links effect modeled analysis forcing path lengths upper-bound small constant bibliography aiello chung random evolution massive graphs proc annual symposium foundations computer science pages akamai technologies content distribution service http akamai akamai technologies edgescape http akamai html services edgescape html akamai technologies sureroute http akamai html services sureroute failover html june akella chawla kannan seshan scaling properties internet graph proc twenty annual acm symposium principles distributed computing boston july akella chawla kannan seshan scaling properties internet graph technical report cmu-cs- cmu pittsburgh pennsylvania akella maggs seshan shaikh sitaraman measurement-based analysis multihoming proc acm sigcomm karlsruhe germany august akella pang maggs seshan shaikh comparison overlay routing multihoming route control proc acm sigcomm portland august akella seshan shaikh empirical evaluation wide-area internet bottlenecks internet measurement conference miami november akella seshan shaikh multihoming performance benefits experimental evaluation practical enterprise strategies proc usenix annual technical conference boston june akella seshan shenker stoica exploring congestion control technical report cmu-cs- cmu pittsburgh pennsylvania june albert barabasi topology evolving networks local events universality physical review letters amini shaikh schulzrinne issues inferring internet topological attributes proceedings spie itcom august andersen balakrishnan kaashoek morris resilient overlay networks proc symposium operating system principles banff canada october andersen balakrishnan kaashoek rao improving web availability clients monet proc networked systems design implementation applegate cohen making intra-domain routing robust changing uncertain traffic demands understanding fundamental tradeoffs proceedings acm sigcomm pittsburgh august aumann rabani approximate min-cut max-flow theorem approximation algorithm siam journal computing awduche chiu elwalid widjaja xiao overview principles internet traffic engineering internet engineering task force rfc fortz rexford thorup traffic engineering traditional routing protocols ieee communications magazine october babcock babu datar motwani widom models issues data stream systems proceedings acm symposium principles database systems pods madison june barabasi albert emergence scaling random networks science bbc news edition full speed ahead japan broadband http news bbc technology stm bgp tables oregon routeviews project http moat nlanr net data bornstein sureroute performance subscription july personal communication brakmo malley peterson tcp vegas techniques congestion detection avoidance proc acm sigcomm august brecht pariag gammo accept strategies improving web server performance proc usenix annual technical conference june caida cooperative association internet data analysis caida tools http caida tools caida tools skitter http caida tools measurement skitter cardwell savage anderson modeling tcp latency proc ieee infocom tel aviv israel march carter crovella measuring bottleneck link speed packet-switched networks performance evaluation october cormen leiserson rivest introduction algorithms mit press chapter downey pathchar estimate internet link characteristics proceedings acm sigcomm cambridge august emulab network emulation testbed http emulab net estan varghese directions traffic measurement accounting proc acm sigcomm pittsburgh august networks big-ip link controller http products bigip linkcontroller fabrikant koutsoupias papadimitriou heuristically optimized trade-offs paradigm power laws internet icalp pages faloutsos faloutsos faloutsos power-law relationships internet topology proc acm sigcomm august fang shivakumar garcia-molina motwani ullman computing iceberg queries efficiently internaational conference large databases vldb york august feamster andersen balakrishnan kaashoek measuring effects internet path faults reactive routing proc acm sigmetrics june feamster borkenhagen rexford guidelines interdomain traffic engineering acm sigcomm computer communication review october fenner flaxman frieze high degree vertices eigenvalues preferential attachment aph random pages gao inferring autonomous system relationships internet ieee acm transactions networking december gao wang extent path inflation routing policies proc ieee globecom pages gkantsidis saberi mihail conductance congestion power law graphs proc acm sigmetrics goldenberg qiu xie yang zhang optimizing cost performance multihoming proc acm sigcomm portland govindan paxson estimating router icmp generation delays proc passive active measurement workshop pam fort collins gunnar johansson telkamp traffic matrix estimation large backbone comparison real data internet measurement conference imc taormina italy october guo chen chiueh experiences building multihoming load balancing system proceedings ieee infocom hong kong march guojun yang crowley agarwal network characterization service ncs proc ieee international symposium high performance distributed computing 
hpdc san francisco august mao steenkiste wang locating internet bottlenecks algorithms measurements implications proc acm sigcomm portland august hyun broido claffy traceroute bgp path incongruities technical report caida california san diego http caida outreach papers asp ietf traffic engineering working group http ietf html charters tewg-charter html internap network services flow control platform http internap iyengar challenger improving web server performance caching dynamic data usenix symposium internet technologies systems jacobson pathchar tool infer characteristics internet paths ftp lbl gov pathchar jain dovrolis pathload measurement tool end-to-end bandwidth proc passive active measurement workshop pam fort collins march jeffrey semke jamshid mahdavi matthew mathis automatic tcp buffer tuning acm sigcomm computer communication review october khanna zinky revised arpanet routing metric proc acm sigcomm pages austin september koutsoupias papadimitriou worst-case equilibria lecture notes computer science krishnamurthy wang network-aware clustering web clients proceedings acm sigcomm stockholm sweden august krishnamurthy wills improving web performance client characterization driven server adaptation proc international world wide web conference labovitz ahuja bose jahanian delayed internet routing convergence ieee acm transactions networking june lai baker nettimer tool measuring bottleneck link bandwidth proc usenix symposium internet technologies systems march leighton introduction parallel algorithms architectures arrays trees hypercubes morgan kaufmann publishers leonardi on-line network routing online algorithms state art pages springer alderson willinger doyle first-principles approach understanding internet router-level topology proc acm sigcomm mah pchar tool measuring internet path characteristics http employees bmah software pchar june mahajan wetherall anderson negotiation-based routing neighboring isps proc networked systems design implementation mao rexford wang katz accurate as-level traceroute tool proc acm sigcomm karlsruhe germany august mathis mahdavi diagnosing internet congestion transport layer performance tool proc inet montreal canada june mathis mahdavi floyd romanow tcp selective acknowledgement options request comments internet engineering task force october mcquillan richer rosen routing algorithm arpanet ieee transactions communications medina lakhina matta byers brite approach universal topology generation mascots mihail papadimitriou saberi connectivity properties internet topology focs pages mitchell machine learning mcgraw-hill companies morissey route optimizers mapping route network computing december http nwc showitem jhtml docid nahum rosu seshan almeida effects wide-area conditions server performance proc acm sigmetrics cambridge june national laboratory applied network research routing data http moat nlanr net routing rawdata nortel networks alteon link optimizer http nortelnetworks products alteon optimizer norton internet service providers peering proceedings nanog albuquerque june nsnetwork simulator http isi nsnam okamura seymour multicommodity flows planar graphs journal combinatorial theory padhye firoiu towsley kurose modeling tcp throughput simple model empirical validation proc acm sigcomm pages vancouver canada september padhye floyd identifying tcp behavior web servers proc acm sigcomm august pang akella krishnamurty seshan shaikh responsiveness dns-based network control internet measurement conference imc taormina italy october park lee effectiveness route-based packet filtering distributed dos attack prevention power-law internets proc acm sigcomm san diego california august paxson end-to-end internet packet dynamics proc acm sigcomm pages september planetlab http planet-lab qiu yang zhang shenker selfish routing internet-like enviroments proc acm sigcomm karlsruhe germany quoitin uhlig pelsser swinnen bonaventure interdomain traffic engineering bgp ieee communications magazine radb whois server whois radb net radware peer director http radware content products rainfinity overview rainconnect http rainfinity products overview pdf rether networks internet service management device http rether ismd htm ripe whois service whois ripe net roughan thorup zhang traffic engineering estimated traffic matrices internet measurement conference miami november roughgarden tardos bad selfish routing ieee symposium foundations computer science pages routescience technologies pathcontrol http routescience products savage collins hoffman snell anderson end-to-end effects internet path selection proceedings acm sigcomm boston september savage detour case informed internet routing transport ieee micro semke mahdavi mathis automatic tcp buffer tuning http psc networking projects auto shaikh tewari agrawal effectiveness dns-based server selection proceedings ieee infocom anchorage april sockeye networks http sockeye spring mahajan anderson quantifying internet path inflation proc acm sigcomm august spring mahajan wetherall measuring isp topologies rocketfuel proc acm sigcomm pittsburgh august stewart bgp inter-domain routing internet addison-wesley stonesoft multi-link technology http stonesoft files products stonegate multi-link technology whitepaper pdf october subramanian agarwal rexford katz characterizing internet hierarchy multiple vantage points proceedings ieee infocom june tangmunarunkit govindan jamin shenker willinger network topology generators degree-based structural proc acm sigcomm pittsburgh pennsylvania august tangmunarunkit govindan shenker internet path inflation due policy routing spie itcom august tao fei gao guerin kurose towsley zhang exploring performance benefits end-to-end path switching international conference network protocols november tinyproxy http tinyproxy sourceforge net november traceroute maintained thomas kernen http traceroute oregon routeviews project http routeviews winick jamin inetinternet topology generator technical report michigan technical report cse-tr- yahoo http bbapply yang nira internet routing architecture proc acm sigcomm workshop future directions network architecture fdna august zhang duffield paxson shenker constancy internet path properties proc acm sigcomm internet measurement workshop imw november zhang paxson shenker stationarity internet path properties routing loss throughput technical report icsi center internet research zhang roughan lund donoho information-theoretic approach traffic matrix estimation proceedings acm sigcomm pittsburgh august 
